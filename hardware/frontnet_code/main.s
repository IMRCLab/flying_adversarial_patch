
/frontnet_port/BUILD/GAP8_V2/GCC_RISCV_PULPOS/main:     file format elf32-littleriscv

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .data_tiny_fc 00000390  00000004  1b000004  00001004  2**2  CONTENTS, ALLOC, LOAD, DATA
  1 .stack        00001038  1b000398  1b000398  00001398  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .vectors      000000a0  1c000000  1c000000  00003000  2**0  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .text         0000c760  1c0000a0  1c0000a0  000030a0  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .init_array   0000003c  1c00c800  1c00c800  0000f800  2**2  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   0000000c  1c00c83c  1c00c83c  0000f83c  2**2  CONTENTS, ALLOC, LOAD, DATA
  6 .init         00000000  1c00c848  1c00c848  00011020  2**0  CONTENTS, ALLOC, LOAD, CODE
  7 .fini         00000000  1c00c848  1c00c848  00011020  2**0  CONTENTS, ALLOC, LOAD, CODE
  8 .preinit_array 00000000  1c00c848  1c00c848  00011020  2**0  CONTENTS, ALLOC, LOAD, DATA
  9 .boot         00000000  1c00c848  1c00c848  00011020  2**0  CONTENTS
 10 .got          00000000  1c00c848  1c00c848  00011020  2**0  CONTENTS, ALLOC, LOAD, DATA
 11 .shbss        00000000  1c00c848  1c00c848  00011020  2**0  CONTENTS
 12 .gnu.offload_funcs 00000000  1c00c848  1c00c848  00011020  2**0  CONTENTS
 13 .gnu.offload_vars 00000000  1c00c848  1c00c848  00011020  2**0  CONTENTS
 14 .rodata       00000a2c  1c00c848  1c00c848  0000f848  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 .data         00000280  1c00d274  1c00d274  00010274  2**2  CONTENTS, ALLOC, LOAD, DATA
 16 .bss          00000470  1c00d4f4  1c00d4f4  000104f4  2**2  ALLOC
 17 .data_tiny_l1 00000018  00000004  1c00d964  00011004  2**2  CONTENTS, ALLOC, LOAD, DATA
 18 .l1cluster_g  00000004  1000001c  1c00d97c  0001101c  2**2  CONTENTS, ALLOC, LOAD, DATA
 19 .bss_l1       00000000  10000020  10000020  00011020  2**0  CONTENTS
 20 .comment      0000001a  00000000  00000000  00011020  2**0  CONTENTS, READONLY
 21 .Pulp_Chip.Info 0000004e  00000000  00000000  0001103a  2**0  CONTENTS, READONLY
 22 .debug_frame  00005d58  00000000  00000000  00011088  2**2  CONTENTS, READONLY, DEBUGGING
 23 .debug_info   00071a21  00000000  00000000  00016de0  2**0  CONTENTS, READONLY, DEBUGGING
 24 .debug_abbrev 0000bc70  00000000  00000000  00088801  2**0  CONTENTS, READONLY, DEBUGGING
 25 .debug_loc    0001e095  00000000  00000000  00094471  2**0  CONTENTS, READONLY, DEBUGGING
 26 .debug_aranges 000015b8  00000000  00000000  000b2508  2**3  CONTENTS, READONLY, DEBUGGING
 27 .debug_ranges 00003f00  00000000  00000000  000b3ac0  2**3  CONTENTS, READONLY, DEBUGGING
 28 .debug_line   0001ed50  00000000  00000000  000b79c0  2**0  CONTENTS, READONLY, DEBUGGING
 29 .debug_str    0000a876  00000000  00000000  000d6710  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000004 l    d  .data_tiny_fc	00000000 .data_tiny_fc
1b000398 l    d  .stack	00000000 .stack
1c000000 l    d  .vectors	00000000 .vectors
1c0000a0 l    d  .text	00000000 .text
1c00c800 l    d  .init_array	00000000 .init_array
1c00c83c l    d  .fini_array	00000000 .fini_array
1c00c848 l    d  .init	00000000 .init
1c00c848 l    d  .fini	00000000 .fini
1c00c848 l    d  .preinit_array	00000000 .preinit_array
1c00c848 l    d  .boot	00000000 .boot
1c00c848 l    d  .got	00000000 .got
1c00c848 l    d  .shbss	00000000 .shbss
1c00c848 l    d  .gnu.offload_funcs	00000000 .gnu.offload_funcs
1c00c848 l    d  .gnu.offload_vars	00000000 .gnu.offload_vars
1c00c848 l    d  .rodata	00000000 .rodata
1c00d274 l    d  .data	00000000 .data
1c00d4f4 l    d  .bss	00000000 .bss
00000004 l    d  .data_tiny_l1	00000000 .data_tiny_l1
1000001c l    d  .l1cluster_g	00000000 .l1cluster_g
10000020 l    d  .bss_l1	00000000 .bss_l1
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .Pulp_Chip.Info	00000000 .Pulp_Chip.Info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    df *ABS*	00000000 bridge.c
1c008de2 l     F .text	0000001c __rt_event_enqueue
1c008dfe l     F .text	00000020 __rt_bridge_check_bridge_req.part.5
1c008e1e l     F .text	00000046 __rt_bridge_wait
00000004 l     O .data_tiny_fc	00000004 __rt_bridge_flash_handle
00000008 l     O .data_tiny_fc	00000004 __rt_bridge_flash_type
0000000c l     O .data_tiny_fc	00000004 __rt_bridge_flash_itf
00000010 l     O .data_tiny_fc	00000004 __rt_bridge_flash_cs
00000014 l     O .data_tiny_fc	00000004 __rt_bridge_eeprom_handle
00000000 l    df *ABS*	00000000 events.c
00000000 l    df *ABS*	00000000 periph-v2.c
00000000 l    df *ABS*	00000000 hyperram-v1.c
1c00a592 l     F .text	00000014 l2_memcpy
1c00a5a6 l     F .text	00000024 rt_event_enqueue
1c00a5ca l     F .text	00000032 pi_task_wait_on.isra.4
1c00a8ba l     F .text	00000046 __pi_hyper_copy_exec
1c00aa1a l     F .text	00000296 __pi_hyper_copy_misaligned
1c00a900 l     F .text	00000056 __pi_hyper_copy
1c00a9c8 l     F .text	00000052 exec_pending_task
1c00acb0 l     F .text	0000009e __pi_hyper_copy_2d
1c00ad8c l     F .text	0000002e __rt_hyper_init
1c00d718 l     O .bss	00000080 __pi_hyper_temp_buffer
1c00d134 l     O .rodata	00000034 __hyper_pad
1c00d8f8 l     O .bss	00000004 __pi_hyper_cluster_reqs_first
1c00d8fc l     O .bss	00000004 __rt_hyper_open_count
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 
1c0000a0 l     F .text	00000002 dory_dma_barrier.constprop.15
1c0000a2 l     F .text	00000010 dory_dma_deallocate
1c0000b2 l     F .text	0000000a mchan_alloc
1c0000bc l     F .text	00000002 dory_dma_allocate
1c0000be l     F .text	0000028e dory_dma_memcpy_async
1c00d8e8 l     O .bss	00000004 current_transfer
1c000352 l     F .text	0000026a dory_dma_memcpy_async.constprop.14
1c0005bc l     F .text	0000026a dory_dma_memcpy_async.constprop.13
1c000826 l     F .text	0000000e pi_cl_team_barrier.lto_priv.16
1c000826 l     F .text	0000000e pi_cl_team_barrier.lto_priv.17
1c000826 l     F .text	0000000e pi_cl_team_barrier.lto_priv.18
1c000826 l     F .text	0000000e pi_cl_team_barrier.lto_priv.19
1c000834 l     F .text	00000004 dory_cores_barrier
1c000838 l     F .text	00000642 pulp_nn_matmul.constprop.6
1c000e80 l     F .text	0000089e pulp_nn_conv_Ho_parallel.constprop.5
1c00171e l     F .text	000004fe BNReluConvolution5
1c001c1c l     F .text	00000580 BNReluConvolution6
1c00219c l     F .text	0000055c BNReluConvolution0
1c0026fc l     F .text	0000056a BNReluConvolution2
1c002c66 l     F .text	000003d6 BNReluConvolution3
1c00303c l     F .text	000003ce BNReluConvolution4
1c00340a l     F .text	000004f2 BNReluConvolution7
1c0038fc l     F .text	00000388 FullyConnected8
1c003c88 l     F .text	00000456 pulp_nn_maxpool.constprop.0
1c0040de l     F .text	000001b6 Pooling1
1c004294 l     F .text	00000c70 network_run_cluster
1c00d8e0 l     O .bss	00000004 L3_weights
1c00d8e4 l     O .bss	00000004 bypass_activations
1c00d8dc l     O .bss	00000004 L3_weights_internal
1c00d8d8 l     O .bss	00000004 L2_input
1c00d8d4 l     O .bss	00000004 L2_output
1c00c848 l     O .rodata	00000024 L3_output_layers
1c00d8cc l     O .bss	00000004 L3_input
1c00d8c8 l     O .bss	00000004 L3_output
1c00c890 l     O .rodata	00000024 allocate_layer
1c00c848 l     O .rodata	00000024 branch_change
1c00d8d0 l     O .bss	00000004 L2_weights
1c00c848 l     O .rodata	00000024 branch_input
1c00c848 l     O .rodata	00000024 branch_output
1c00d8c4 l     O .bss	00000004 activations_input
1c00c890 l     O .rodata	00000024 layer_with_weights
1c00c848 l     O .rodata	00000024 L3_input_layers
1c00c86c l     O .rodata	00000024 check_activations_dimension
1c00c8b4 l     O .rodata	00000024 check_weights_dimension
1c00c8d8 l     O .rodata	00000024 check_activations
1c00c8fc l     O .rodata	00000024 check_weights
1c00c920 l     O .rodata	00000024 out_mult_vector
1c00c944 l     O .rodata	00000024 out_shift_vector
1c00c968 l     O .rodata	00000024 Layers_name
1c00c98c l     O .rodata	00000024 check_activations_out
1c00c9b0 l     O .rodata	00000024 check_activations_out_dimension
1c00c9d4 l     O .rodata	00000024 cumulative_weights_dimension
1c00c9f8 l     O .rodata	00000020 L3_weights_files
1c00d4f8 l     O .bss	00000024 layers_pointers
1c00d51c l     O .bss	0000001c ram_conf
1c00d538 l     O .bss	0000000c ram
1c00d544 l     O .bss	00000080 flashBuffer.lto_priv.20
1c00d5c4 l     O .bss	00000020 L3_weights_size
1c00d5e4 l     O .bss	00000080 flashBuffer.lto_priv.21
00000000 l    df *ABS*	00000000 debug.c
00000000 l    df *ABS*	00000000 utils.c
1c008c02 l     F .text	0000007c __rt_fc_cluster_lock_req
1b000ba0 l     O .stack	00000018 cbsys_first
00000000 l    df *ABS*	00000000 himax.c
00000000 l    df *ABS*	00000000 io.c
1c00afe0 l     F .text	0000000e __rt_io_end_of_flush
1c00afee l     F .text	00000050 __rt_io_uart_wait_req
1c00b03e l     F .text	00000042 __rt_do_putc_host
1c00b080 l     F .text	0000005a __rt_io_start
1c00b0da l     F .text	00000020 rt_event_execute.isra.4.constprop.12
1c00b0fa l     F .text	00000070 __rt_io_lock
1c00b16a l     F .text	00000034 __rt_putc_host_cluster_req
1c00b19e l     F .text	00000070 __rt_io_unlock
1c00b20e l     F .text	000000da __rt_io_uart_flush.constprop.11
1c00b2e8 l     F .text	00000092 __rt_io_uart_wait_pending
1c00b37a l     F .text	00000028 __rt_io_stop
1c00b4e6 l     F .text	000000ac tfp_putc.isra.9
1c00d830 l     O .bss	00000080 __rt_io_event
1b000bbc l     O .stack	00000010 __rt_io_fc_lock
1c00d474 l     O .data	00000080 __rt_putc_host_buffer
1c00d90c l     O .bss	00000004 __rt_io_event_current
1c00d910 l     O .bss	00000004 __rt_io_pending_flush
1c00d914 l     O .bss	00000004 __rt_putc_host_buffer_index
1c00d918 l     O .bss	00000004 _rt_io_uart
00000000 l    df *ABS*	00000000 crt0.o
1c000094 l       .vectors	00000000 __rt_no_irq_handler
00000000 l    df *ABS*	00000000 sched.o
1c004f96 l       .text	00000000 __rt_handle_special_event
1c004f90 l       .text	00000000 __rt_no_first
1c004f92 l       .text	00000000 __rt_common
1c004f94 l       .text	00000000 enqueue_end
1c004ff6 l       .text	00000000 __rt_remote_enqueue_event_loop_cluster
1c005032 l       .text	00000000 __rt_remote_enqueue_event_loop_cluster_continue
1c00501c l       .text	00000000 __rt_cluster_pool_update_end
1c005004 l       .text	00000000 __rt_cluster_pool_update_loop
1c00500c l       .text	00000000 __rt_cluster_pool_update_loop_end
1c005014 l       .text	00000000 __rt_cluster_pool_update_no_current
1c005050 l       .text	00000000 __rt_remote_enqueue_event_loop_next_cluster
00000000 l    df *ABS*	00000000 vectors.o
1c0050ca l       .text	00000000 __rt_call_c_function
00000000 l    df *ABS*	00000000 udma-v2.o
1c0051ba l       .text	00000000 __rt_udma_no_copy
1c005182 l       .text	00000000 repeat_transfer
1c0051d2 l       .text	00000000 handle_special_end
1c00512e l       .text	00000000 resume_after_special_end
1c00516c l       .text	00000000 checkTask
1c005142 l       .text	00000000 __rt_udma_call_enqueue_callback_resume
1c005168 l       .text	00000000 transfer_resume
1c005160 l       .text	00000000 hyper
1c005160 l       .text	00000000 fc_tcdm
1c005160 l       .text	00000000 dual
1c005182 l       .text	00000000 dmaCmd
1c0051aa l       .text	00000000 not_last
1c00521a l       .text	00000000 i2c_step1
1c005236 l       .text	00000000 i2c_step2
1c0051dc l       .text	00000000 spim_step3
1c0051f8 l       .text	00000000 spim_step2
00000000 l    df *ABS*	00000000 soc_event_eu.o
1c00528a l       .text	00000000 __rt_fc_socevents_not_hyper_rx
1c005290 l       .text	00000000 __rt_fc_socevents_not_hyper_tx
1c0052aa l       .text	00000000 __rt_soc_evt_no_udma_channel
1c005318 l       .text	00000000 rtc_event_handler
1c0052d6 l       .text	00000000 __rt_soc_evt_pwm
1c0052ea l       .text	00000000 __rt_soc_evt_store
1c0052fe l       .text	00000000 socevents_set
00000000 l    df *ABS*	00000000 hyperram-v1_asm.o
1c005378 l       .text	00000000 __rt_hyper_handle_copy_end
1c005332 l       .text	00000000 __rt_hyper_repeat_copy
1c005364 l       .text	00000000 __rt_hyper_repeat_copy_not_last
1c00538a l       .text	00000000 __rt_hyper_handle_emu_task
1c0053a4 l       .text	00000000 __rt_hyper_handle_pending_tasks
1c005406 l       .text	00000000 __rt_hyper_repeat_copy_not_last2
00000000 l    df *ABS*	00000000 gpio.o
1c005454 l       .text	00000000 __rt_gpio_handler_end
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 flash.c
00000000 l    df *ABS*	00000000 fs.c
1c0063d8 l     F .text	00000032 pi_task_wait_on.isra.3
00000000 l    df *ABS*	00000000 read_fs.c
1c0064ac l     F .text	00000008 pi_flash_read_async
1c0064b4 l     F .text	0000003e __pi_read_fs_write
1c0064f2 l     F .text	00000010 __pi_read_fs_seek
1c006502 l     F .text	00000040 __pi_read_fs_direct_read_async
1c006542 l     F .text	00000018 __pi_read_fs_copy_async
1c00655a l     F .text	00000018 __pi_read_fs_copy_2d_async
1c006572 l     F .text	00000024 rt_event_enqueue
1c006596 l     F .text	00000038 __pi_fs_free
1c0065ce l     F .text	00000004 __pi_read_fs_unmount
1c0065d2 l     F .text	00000126 __pi_read_fs_open
1c0066f8 l     F .text	00000126 __pi_fs_mount_step
1c00681e l     F .text	0000004e __pi_read_fs_close
1c00686c l     F .text	00000098 __pi_read_fs_mount
1c006904 l     F .text	00000072 __pi_fs_read_cached
1c006a56 l     F .text	00000092 __pi_read_fs_try_read
1c006ae8 l     F .text	00000040 __pi_read_fs_read_async
00000000 l    df *ABS*	00000000 host_fs.c
1c006b4a l     F .text	0000000c __pi_host_fs_mount
1c006b56 l     F .text	00000002 __pi_host_fs_unmount
1c006b58 l     F .text	00000024 rt_event_enqueue
1c006b7c l     F .text	00000006 __pi_host_fs_seek
1c006b82 l     F .text	0000007e __pi_host_fs_copy_2d_async
1c006c00 l     F .text	00000028 __pi_host_fs_write_async
1c006c28 l     F .text	00000024 __pi_host_fs_read_async
1c006c4c l     F .text	00000042 __pi_host_fs_copy_async
1c006c8e l     F .text	00000002 __pi_host_fs_direct_read_async
1c006c90 l     F .text	0000001c __pi_host_fs_close
1c006cac l     F .text	0000005c __pi_host_fs_open
1c00d664 l     O .bss	00000088 bsp_fs_data
00000000 l    df *ABS*	00000000 hyperflash.c
1c006d08 l     F .text	0000001c __rt_event_enqueue
1c006d24 l     F .text	0000000e hyperflash_ioctl
1c006d32 l     F .text	0000000e hyperflash_set_reg_exec
1c006d40 l     F .text	00000040 hyperflash_stall_task
1c006d80 l     F .text	00000088 hyperflash_read_2d_async
1c006fea l     F .text	00000100 hyperflash_handle_pending_task
1c006e08 l     F .text	00000018 hyperflash_copy_2d_async
1c006e20 l     F .text	000000b0 hyperflash_erase_sector_async
1c0075fe l     F .text	00000052 hyperflash_check_erase
1c006ed0 l     F .text	000000a6 hyperflash_erase_chip_async
1c006f76 l     F .text	00000074 hyperflash_read_async
1c00724c l     F .text	0000005c hyperflash_program_async
1c007148 l     F .text	00000054 hyperflash_reg_set_async
1c0070ea l     F .text	0000005e hyperflash_reg_get_async
1c00719c l     F .text	000000b0 hyperflash_program_resume
1c007650 l     F .text	00000050 hyperflash_check_program
1c0072a8 l     F .text	0000001a hyperflash_copy_async
1c0072c2 l     F .text	0000001e hyperflash_close
1c0072e0 l     F .text	0000008e hyperflash_open
1c00736e l     F .text	00000032 pi_task_wait_on.isra.3
1c0073a0 l     F .text	0000002a hyperflash_copy_2d
1c0073ca l     F .text	00000022 hyperflash_erase_sector
1c0073ec l     F .text	00000022 hyperflash_erase_chip
1c00740e l     F .text	00000022 hyperflash_read
1c007430 l     F .text	00000022 hyperflash_reg_get
1c007452 l     F .text	00000022 hyperflash_reg_set
1c007474 l     F .text	00000022 hyperflash_program
1c007496 l     F .text	0000002a hyperflash_copy
1c0074c0 l     F .text	000000aa hyperflash_erase_resume
1c00756a l     F .text	00000042 hyperflash_erase_async
1c0075ac l     F .text	00000022 hyperflash_erase
1c0075ce l     F .text	00000030 hyperflash_get_status_reg
1c00d2c4 l     O .data	00000054 hyperflash_api
00000000 l    df *ABS*	00000000 hyperram.c
1c0076fc l     F .text	00000012 hyperram_copy_2d_async
1c00770e l     F .text	00000010 hyperram_copy_async
1c00771e l     F .text	00000022 hyperram_close
1c007740 l     F .text	00000094 hyperram_open
1c00d318 l     O .data	00000018 hyperram_api
00000000 l    df *ABS*	00000000 ram.c
1c00782a l     F .text	00000070 __pi_ram_cluster_req
1c00789a l     F .text	0000001e __pi_ram_cluster_req_done
00000000 l    df *ABS*	00000000 alloc_extern.c
00000000 l    df *ABS*	00000000 partition.c
00000000 l    df *ABS*	00000000 flash_partition.c
00000000 l    df *ABS*	00000000 md5.c
1c007d6c l     F .text	000008d6 body
00000000 l    df *ABS*	00000000 semihost.c
1c008848 l     F .text	0000000e __internal_semihost
00000000 l    df *ABS*	00000000 ai_deck.c
1c0088de l     F .text	0000003c __bsp_init_pads
1c00d8ec l     O .bss	00000004 __bsp_init_pads_done
00000000 l    df *ABS*	00000000 init.c
1c008958 l     F .text	00000026 cluster_start
1c00c804 l     O .init_array	00000004 ctor_list
1c00c840 l     O .fini_array	00000004 dtor_list
00000000 l    df *ABS*	00000000 irq.c
00000000 l    df *ABS*	00000000 alloc.c
00000000 l    df *ABS*	00000000 time.c
1c009458 l     F .text	00000018 __rt_time_poweroff
1c009470 l     F .text	00000018 __rt_time_poweron
1c00d8f0 l     O .bss	00000004 timer_count
00000000 l    df *ABS*	00000000 time_irq.c
00000000 l    df *ABS*	00000000 freq.c
00000000 l    df *ABS*	00000000 pmu_driver.c
1c009946 l     F .text	00000096 PMU_Control_Maestro.part.0
1c0099dc l     F .text	0000002c SetFllMultDivFactors
1c009a08 l     F .text	00000026 soc_eu_fcEventMask_setEvent
1c00d448 l     O .data	00000007 SystemStateToSCUFastSeq
1c00d460 l     O .data	00000003 ToHWDCDC_Pos
1c00d470 l     O .data	00000004 RetPMUStateToPMUState
00000000 l    df *ABS*	00000000 cluster.c
1c009f28 l     F .text	00000062 __rt_init_cluster_data
1c009f8a l     F .text	00000064 __rt_cluster_init
1c009fee l     F .text	0000012a __rt_cluster_mount_step
00000000 l    df *ABS*	00000000 pulpos_emu.c
1c00a2d4 l     F .text	0000003c __rt_cluster_pulpos_emu_init
1c00d6ec l     O .bss	0000002c __rt_pulpos_emu_global_cluster_task
1c00d8f4 l     O .bss	00000004 __rt_fc_cluster_device
00000000 l    df *ABS*	00000000 cluster_call.c
00000000 l    df *ABS*	00000000 pads-v1.c
00000000 l    df *ABS*	00000000 pads-v1.c
00000000 l    df *ABS*	00000000 alloc_extern.c
00000000 l    df *ABS*	00000000 gpio-v2.c
1c00d798 l     O .bss	00000098 __rt_gpio
00000000 l    df *ABS*	00000000 i2s-v1.c
1c00aed6 l     F .text	00000034 __rt_i2s_resume
1c00af0a l     F .text	0000002a __rt_i2s_setfreq_after
1c00af34 l     F .text	0000002c __rt_i2s_setfreq_before
1c00d900 l     O .bss	00000004 __rt_i2s_first
00000000 l    df *ABS*	00000000 spim-v2.c
1c00d904 l     O .bss	00000008 __rt_spim_open_count
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 prf.c
1c00b754 l     F .text	00000092 _to_x
1c00b7e6 l     F .text	00000020 _rlrshift
1c00b806 l     F .text	00000044 _ldiv5
1c00b84a l     F .text	00000034 _get_digit
00000000 l    df *ABS*	00000000 uart.c
1c00c35a l     F .text	00000024 __rt_uart_setup.isra.5
1c00c37e l     F .text	00000022 __rt_uart_setfreq_after
1c00c3a0 l     F .text	00000042 __rt_uart_wait_tx_done.isra.6
1c00c3e2 l     F .text	0000002c __rt_uart_setfreq_before
1c00c40e l     F .text	00000042 __rt_uart_cluster_req
1c00c450 l     F .text	00000026 soc_eu_fcEventMask_setEvent
1c00d8b0 l     O .bss	00000010 __rt_uart
00000000 l    df *ABS*	00000000 pe-eu-v3.o
1c00c70e l       .text	00000000 __rt_slave_start
1c00c664 l       .text	00000000 __rt_master_event
1c00c678 l       .text	00000000 __rt_master_loop
1c00c668 l       .text	00000000 __rt_push_event_to_fc_retry
1c00c700 l       .text	00000000 __rt_push_event_to_fc_wait
1c00c6f2 l       .text	00000000 __rt_master_sleep
1c00c680 l       .text	00000000 __rt_master_loop_update_next
1c00c6d4 l       .text	00000000 __rt_no_stack_check
1c00c6e0 l       .text	00000000 __rt_master_no_slave_barrier
1c00c6f0 l       .text	00000000 __rt_master_loop_no_slave
1c00c72c l       .text	00000000 __rt_fork_return
1c00c730 l       .text	00000000 __rt_wait_for_dispatch
1c00c746 l       .text	00000000 __rt_other_entry
1c00c740 l       .text	00000000 __rt_fork_entry
1c00c76e l       .text	00000000 __rt_no_stack_check_end
1c00c7e0 l       .text	00000000 __rt_dma_2d_done
1c00c79e l       .text	00000000 __rt_dma_2d_redo
1c00c7a6 l       .text	00000000 __rt_dma_2d_not_last
1c00c7c8 l       .text	00000000 __rt_dma_2d_exit
00000000 l    df *ABS*	00000000 libgcc2.c
1c00a956 g     F .text	00000016 pi_hyper_read_async
1c00b608 g     F .text	00000006 putchar
1c009526 g     F .text	00000004 pi_time_wait_us
1c0063ca g     F .text	0000000c pi_flash_open
00000000 g       *ABS*	00000000 __rt_debug_init_config_trace
00000350 g     O .data_tiny_fc	00000004 __rt_hyper_pending_emu_stride
1c00943a g     F .text	0000000e pi_l2_malloc
1c0077ee g     F .text	0000003c __pi_ram_free_cluster_req
1c008d74 g     F .text	00000038 __rt_fc_cluster_lock
1c009c9e g     F .text	000000a4 InitOneFll
1c009448 g     F .text	00000010 pi_l2_free
00000000 g       *ABS*	00000000 __RT_DEBUG_CONFIG
1c00d938 g     O .bss	00000004 __rt_cluster_tasks
1c008f46 g     F .text	00000022 __rt_bridge_send_notif
1c0090b8 g     F .text	00000076 rt_event_alloc
00000338 g     O .data_tiny_fc	00000001 __rt_hyper_pending_emu_do_memcpy
1c00ad4e g     F .text	00000018 pi_hyper_read_2d_async
1c0088a8 g     F .text	0000001c semihost_write
1c00918e g     F .text	00000064 __rt_event_execute
1c008bb0 g     F .text	00000052 __rt_irq_init
1c009276 g     F .text	00000048 rt_user_alloc
00000310 g     O .data_tiny_fc	00000004 __rt_hyper_pending_hyper_addr
1c00a11e g     F .text	000000d8 pi_cluster_open
1c00b728 g     F .text	0000002c printf
ffffffff g       *ABS*	00000000 pulp__L2
1c0093b6 g     F .text	00000072 __rt_allocs_init
1c00d91c g     O .bss	00000004 __rt_alloc_l1
1c00a118 g     F .text	00000006 pi_cluster_conf_init
ffffffff g       *ABS*	00000000 pulp__PE
1c00a7c4 g     F .text	0000009e pi_hyper_close
1c008b12 g     F .text	0000004c rt_irq_set_handler
00000314 g     O .data_tiny_fc	00000004 __rt_hyper_pending_addr
1c00641c g     F .text	0000002c pi_fs_mount
00000308 g     O .data_tiny_fc	00000004 __rt_hyper_udma_handle
1c009e0c g     F .text	00000044 InitFlls
00000018 g     O .data_tiny_fc	00000004 __rt_first_free
1c007af6 g     F .text	0000000a pi_partition_get_flash_offset
1c00891a g     F .text	00000018 bsp_hyperram_conf_init
00000001 g       *ABS*	00000000 __ACTIVE_FC
1c005ac2 g     F .text	000001fe .hidden __divsf3
1c00933a g     F .text	0000002e rt_free
1c007b02 g     F .text	00000004 pi_partition_table_load
00000400 g       *ABS*	00000000 __rt_cl_slave_stack_size
1c009908 g     F .text	0000003e __rt_freq_init
1c00897e g     F .text	00000168 __rt_init
00000001 g       *ABS*	00000000 __FC
1c009f0c g     F .text	00000012 __rt_fll_init
1b0013d0 g       .stack	00000000 __fc_tcdm_end
1c00adee g     F .text	00000058 rt_extern_alloc_init
1c009044 g     F .text	00000034 __rt_bridge_init
00000018 g     O .data_tiny_l1	00000004 __rt_cluster_nb_active_pe
0000032c g     O .data_tiny_fc	00000004 __rt_hyper_pending_emu_hyper_addr
1c00c800 g       .text	00000000 _etext
0000030c g     O .data_tiny_fc	00000004 __rt_hyper_pending_base
1c00d274 g       .data	00000000 sdata
1c00888c g     F .text	0000001c semihost_read
00000001 g       *ABS*	00000000 __rt_nb_cluster
1c00894a g     F .text	0000000e bsp_hyperflash_open
1c0076a0 g     F .text	00000032 pi_hyperflash_conf_init
1c0079b2 g     F .text	00000052 extern_alloc_init
00000390 g     O .data_tiny_fc	00000004 __rtc_handler
1c00930a g     F .text	00000030 rt_alloc
1c00c334 g     F .text	00000026 __rt_uart_cluster_req_done
1c008ae6 g     F .text	00000028 __rt_deinit
1b000bb8 g     O .stack	00000001 camera_isAwaked
1c004f72 g       .text	00000000 __rt_event_enqueue
1c009502 g     F .text	00000024 rt_time_wait_us
1c00b3fc g     F .text	00000036 memcpy
1c00543e g       .text	00000000 __rt_gpio_handler
1c0050aa g       .text	00000000 __rt_illegal_instr
1c00938c g     F .text	0000002a __rt_alloc_init_l1_for_fc
1c00ad66 g     F .text	0000001a pi_hyper_write_2d_async
1c006486 g     F .text	00000026 pi_fs_write
1c00ade2 g     F .text	0000000c __rt_padframe_init
1c00c848 g       .fini_array	00000000 __DTOR_END__
0000020c g       *ABS*	00000000 __cluster_text_size
1c00532c g       .text	00000000 __rt_hyper_handle_copy
1c00b592 g     F .text	0000002c puts
1c00d360  w    O .data	00000018 __rt_padframe_profiles
00000330 g     O .data_tiny_fc	00000004 __rt_hyper_pending_emu_addr
00000344 g     O .data_tiny_fc	00000004 __rt_hyper_pending_tasks_last
1c009148 g     F .text	00000022 rt_event_get_blocking
1c00d4f8 g       .bss	00000000 _bss_start
1c00d4f4 g       .data	00000000 edata
1c009368 g     F .text	00000024 __rt_alloc_init_l1
1c00d440 g     O .data	00000004 __rt_iodev_uart_baudrate
1c004fd8 g       .text	00000000 __rt_remote_enqueue_event
1c00d450 g     O .data	00000010 PMUState
1c00d274 g       .data	00000000 _sdata
1c00924e g     F .text	00000008 pi_cl_send_task_to_fc
1c0076d2 g     F .text	0000001e hyperram_alloc
10000020 g       .l1cluster_g	00000000 __l1_end
1c0053c4 g       .text	00000000 __rt_hyper_handle_burst
1c0096a8 g     F .text	00000134 rt_periph_copy
1c00b4aa g     F .text	0000003c __rt_putc_uart
1b000398 g     O .stack	00000800 __rt_fc_stack
1c007a04 g     F .text	00000008 extern_alloc_deinit
00000010 g     O .data_tiny_l1	00000004 __rt_dma_last_pending
1c004fa0 g       .text	00000000 __rt_bridge_enqueue_event
1c005d64 g     F .text	00000088 .hidden __extendsfdf2
1c00b87e g     F .text	00000ab6 _prf
10000020 g       .l1cluster_g	00000000 _libgomp_start
1c005794 g     F .text	0000032e .hidden __umoddi3
1c0095b6 g     F .text	000000f2 __rt_timer_handler
1c00d920 g     O .bss	00000004 __rt_alloc_l2
1b0013d0 g       .stack	00000000 stack
1c005458 g     F .text	0000033c .hidden __udivdi3
1c007902 g     F .text	00000042 pi_cl_ram_copy
1c00b6ac g     F .text	0000000a abort
1c006448 g     F .text	00000008 pi_fs_open
1c00912e g     F .text	0000001a rt_event_get
1c00d92c g     O .bss	00000008 __rt_freq_domains
0000001c g       *ABS*	00000000 _l1_preload_size
1c004f70 g       .text	00000000 _init
1c0078b8 g     F .text	0000003e __pi_ram_alloc_cluster_req
1c007a6a g     F .text	0000008c extern_free
1c00d964 g       .bss	00000000 _bss_end
1c007d00 g     F .text	0000006c flash_partition_find_first
1c00d340  w    O .data	00000010 __rt_padframe_hyper
1c008f28 g     F .text	0000001e __rt_bridge_set_available
1c00c770 g       .text	00000000 __rt_dma_2d
1c00c5f4 g       .text	00000000 __rt_pe_start
1c00d928 g     O .bss	00000004 first_delayed
0000038c g     O .data_tiny_fc	00000004 __rt_rtc_init_done
00000008 g       *ABS*	00000000 __NB_ACTIVE_PE
1c00a4f6 g     F .text	0000004a pi_cluster_send_task_to_cl
1c009d42 g     F .text	000000ca __rt_pmu_cluster_power_up
1b000bd0 g       .stack	00000000 stack_start
00000004 g     O .data_tiny_l1	0000000c __rt_cluster_pool
00010000 g       *ABS*	00000000 __L1Cl
1c00c486 g     F .text	0000008e __rt_uart_open
1c00a9a6 g     F .text	00000022 pi_hyper_write
1c008cec g     F .text	00000022 __rt_utils_init
1c00a3fc g     F .text	000000fa pi_cluster_send_task_to_cl_async
1c006976 g     F .text	000000e0 __pi_fs_read
1c00d330  w    O .data	00000010 __rt_padframe_default
1c00b5be g     F .text	0000001a fputc_locked
1c00942e g     F .text	0000000c pi_cl_l1_free
1c006b28 g     F .text	00000022 pi_readfs_conf_init
1c00c514 g     F .text	0000004e rt_uart_close
1c00a664 g     F .text	00000160 pi_hyper_open
1c0092be g     F .text	0000004c rt_user_free
1c006458 g     F .text	00000026 pi_fs_read
1c00c800 g       .init_array	00000000 __CTOR_LIST__
1c00980a g     F .text	00000056 __rt_periph_wait_event
1c0098be g     F .text	0000004a rt_freq_set_and_get
1c0077d4 g     F .text	0000001a pi_hyperram_conf_init
1c008856 g     F .text	00000006 semihost_write0
1c008b5e  w    F .text	00000002 illegal_insn_handler_c
0000033c g     O .data_tiny_fc	00000004 __rt_hyper_pending_emu_task
1c00a228 g     F .text	00000070 __rt_cluster_push_fc_event
00000320 g     O .data_tiny_fc	00000004 __rt_hyper_end_task
1c00c5f4 g       .text	00000000 __cluster_text_start
1c00a98e g     F .text	00000018 pi_hyper_write_async
1c000080 g       .vectors	00000000 _start
1c00a96c g     F .text	00000022 pi_hyper_read
1c009256 g     F .text	00000020 rt_user_alloc_init
00000000 g       *ABS*	00000000 __rt_config
1c008642 g     F .text	00000032 MD5_Init
1c005cc0 g     F .text	000000a4 .hidden __floatsisf
00000334 g     O .data_tiny_fc	00000004 __rt_hyper_pending_emu_size
1c00b3b6 g     F .text	00000020 strncmp
1c00d964 g       .bss	00000000 _l1_preload_start_inL2
1c008d0e g     F .text	00000032 __rt_fc_lock
10000020 g       .l1cluster_g	00000000 __l1_heap_start
1c0090a0 g     F .text	00000018 __rt_wait_event_prepare_blocking
1c008e64 g     F .text	00000078 __rt_bridge_handle_notif
1c0052c2 g       .text	00000000 __rt_soc_evt_no_udma
1000001c g     O .l1cluster_g	00000004 __rt_cluster_fc_task_lock
1c007944 g     F .text	00000036 pi_cl_ram_alloc
00000340 g     O .data_tiny_fc	00000004 __rt_hyper_pending_tasks
1c00916a g     F .text	00000024 rt_event_push
1c008f68 g     F .text	00000022 __rt_bridge_clear_notif
1c0097dc g     F .text	0000002e __rt_periph_get_event
1c007bd8 g     F .text	00000104 flash_partition_table_load
00000014 g     O .data_tiny_l1	00000004 __rt_dma_first_pending
1c00d378 g     O .data	000000c0 __hal_debug_struct
1c00640a g     F .text	00000012 pi_fs_conf_init
1c008710 g     F .text	00000138 MD5_Final
1c00952a g     F .text	0000008c __rt_time_init
1c00a628 g     F .text	0000002c __pi_hyper_pin_reset_settings
00080000 g       *ABS*	00000000 __L2
00000008 g       *ABS*	00000000 __rt_nb_pe
1c004f04 g       .text	00000000 _entry
1c007b06 g     F .text	0000005e pi_partition_find_first
1c0091f2 g     F .text	0000002c __rt_wait_event
1c009e50 g     F .text	000000bc __rt_pmu_init
1c008940 g     F .text	0000000a bsp_hyperflash_conf_init
1c006450 g     F .text	00000008 pi_fs_read_async
1c008b60 g     F .text	00000050 __rt_handle_illegal_instr
1c00b3ec g     F .text	00000010 memset
1c00a862 g     F .text	00000058 __pi_hyper_copy_aligned
1c005dec g     F .text	000005de main
1c009f1e g     F .text	00000002 __rt_fll_deinit
1c005308 g       .text	00000000 udma_event_handler_end
1c00d924 g     O .bss	00000004 __rt_alloc_fc_tcdm
1c00afb2 g     F .text	0000000a __rt_himax_init
1c008dac g     F .text	00000036 __rt_fc_cluster_unlock
00000318 g     O .data_tiny_fc	00000004 __rt_hyper_pending_repeat
1c00b6b6 g     F .text	00000072 __rt_io_init
1c00d350  w    O .data	00000010 __rt_padframe_hyper_gpio
00000000 g       *ABS*	00000000 __FETCH_ALL
1c008932 g     F .text	0000000e bsp_hyperram_open
1c0063d6 g     F .text	00000002 __flash_conf_init
1c00d438 g     O .data	00000004 __rt_platform
1c00c83c g       .init_array	00000000 __CTOR_END__
1c00d274 g     O .data	00000028 __pi_read_fs_api
1c00a5fc g     F .text	0000002c __pi_hyper_pin_settings
1c00b3a2 g     F .text	00000014 strcmp
1c0088d8 g     F .text	00000006 semihost_exit
1c00c83c g       .fini_array	00000000 __DTOR_LIST__
1c009078 g     F .text	00000028 __rt_event_init
000002e0 g     O .data_tiny_fc	00000028 __rt_udma_extra_callback_arg
1c00541a g       .text	00000000 pwm_event_handler
00000348 g     O .data_tiny_fc	00000004 __rt_hyper_pending_emu_size_2d
1c00b60e g     F .text	00000028 _prf_locked
00000000 g       *ABS*	00000000 __USE_UART
1c00ad80 g     F .text	00000008 __rt_hyper_resume_emu_task
1c009bbe g     F .text	000000e0 SetFllFrequency
1c009f20 g     F .text	00000002 __rt_flls_constructor
1c009488 g     F .text	0000007a rt_event_push_delayed
1c004f70 g       .text	00000000 _fini
1c007a0c g     F .text	0000005e extern_alloc
1c00921e g     F .text	0000001a rt_event_wait
1c000090 g       .vectors	00000000 __rt_debug_struct_ptr
1c00ca18 g     O .rodata	00000100 .hidden __clz_tab
00000328 g     O .data_tiny_fc	00000004 __rt_hyper_pending_emu_channel
1c00c74c g       .text	00000000 __rt_set_slave_stack
1c00924c g     F .text	00000002 pi_task_push_delayed_us
1c009428 g     F .text	00000006 pi_cl_l1_malloc
1c00d444 g     O .data	00000004 __rt_fc_stack_size
1c007b64 g     F .text	00000074 flash_partition_table_verify
1c005258 g       .text	00000000 __rt_fc_socevents_handler
000002b8 g     O .data_tiny_fc	00000028 __rt_udma_extra_callback
00000358 g     O .data_tiny_fc	00000034 dev_rtc
1c00647e g     F .text	00000008 pi_fs_write_async
1c00d29c g     O .data	00000028 __pi_host_fs_api
1c00b5d8 g     F .text	00000030 fputc
1c00ae46 g     F .text	0000000a rt_extern_alloc_deinit
1c00a574 g     F .text	0000001e pi_pad_init
1c005064 g       .text	00000000 __rt_call_external_c_function
1c008d40 g     F .text	00000034 __rt_fc_unlock
1c0078f6 g     F .text	0000000c pi_ram_open
00000004 g       .data_tiny_l1	00000000 _l1_preload_start
1c00ae50 g     F .text	00000086 __pi_gpio_handler
000002b0 g     O .data_tiny_fc	00000008 __rt_socevents_status
1c008f8a g     F .text	00000042 __rt_bridge_printf_flush
1c00a654 g     F .text	00000010 pi_hyper_conf_init
1c00d43c g     O .data	00000004 __rt_iodev
0000001c g     O .data_tiny_fc	00000014 __rt_sched
1c000000 g       .vectors	00000000 __irq_vector_base
1c00d4f4 g       .data	00000000 _edata
00000000 g       *ABS*	00000000 __ZERO
1c009860 g     F .text	0000005e __rt_periph_init
1c007b00 g     F .text	00000002 pi_partition_table_free
1c00afce g     F .text	00000012 __rt_spim_init
1c008edc g     F .text	0000004c __rt_bridge_check_connection
1c00a310 g     F .text	00000090 rt_cluster_call
00000800 g       *ABS*	00000000 __rt_stack_size
1c008b0e g     F .text	00000004 pi_open_from_conf
ffffffff g       *ABS*	00000000 pulp__FC
1c00af60 g     F .text	00000052 __rt_i2s_init
00000003 g       *ABS*	00000000 __rt_debug_init_config
1c007cdc g     F .text	00000024 flash_partition_table_free
1c00d93c g     O .bss	00000028 __rt_fc_cluster_data
1c00b636 g     F .text	00000076 exit
1c009238 g     F .text	00000014 __rt_event_sched_init
0000034c g     O .data_tiny_fc	00000004 __rt_hyper_pending_emu_length
1c005118 g       .text	00000000 udma_event_handler
1c00a1f6 g     F .text	00000032 pi_cluster_close
1c00ad88 g     F .text	00000004 __rt_hyper_resume_copy
00000354 g     O .data_tiny_fc	00000004 pwmEventsStatus
1c0088c4 g     F .text	00000014 semihost_seek
1c008cbc g     F .text	00000030 __rt_cbsys_exec
1c00797a g     F .text	00000038 pi_cl_ram_free
0000ffe0 g       .l1cluster_g	00000000 __l1_heap_size
1c009a2e g     F .text	00000090 __rt_pmu_cluster_power_down
0000031c g     O .data_tiny_fc	00000004 __rt_hyper_pending_repeat_size
1b000b98 g     O .stack	00000004 __rt_debug_config_trace
1c00d8c0 g     O .bss	00000004 __rt_iodev_uart_channel
1c0000a0 g       .text	00000000 _stext
1c00d464 g     O .data	00000004 PMURetentionState
ffffffff g       *ABS*	00000000 pulp__L1CL
1c00b3d6 g     F .text	00000016 strlen
1c00adba g     F .text	00000028 rt_padframe_set
1c008886 g     F .text	00000006 semihost_close
1c00a540 g     F .text	00000034 pi_pad_set_function
1c00d934 g     O .bss	00000004 __rt_wakeup_use_fast
00000400 g       *ABS*	00000000 __rt_cl_master_stack_size
1c00b432 g     F .text	0000001a strchr
1c008fcc g     F .text	00000078 __rt_bridge_req_shutdown
1c00c476 g     F .text	00000010 rt_uart_conf_init
1c00c800 g       .text	00000000 __cluster_text_end
1c00c596 g     F .text	0000005c __rt_uart_init
1c00d980 g       *ABS*	00000000 __l2_end
1c00a3a0 g     F .text	0000005c rt_cluster_mount
1c00afbc g     F .text	00000012 __rt_rtc_init
1c00c562 g     F .text	00000034 rt_uart_cluster_write
1c009abe g     F .text	00000100 PMU_set_voltage
1c0076f0 g     F .text	0000000c hyperram_free
1c000098 g       .vectors	00000000 __rt_semihosting_call
1c008674 g     F .text	0000009c MD5_Update
1b000b9c g     O .stack	00000004 __rt_debug_config
1c009f22 g     F .text	00000006 __rt_fll_set_freq
1c008c7e g     F .text	0000003e __rt_cbsys_add
1c00a298 g     F .text	0000003c __rt_cluster_new
1c00b44c g     F .text	0000005e __rt_putc_debug_bridge
1c00c800 g       .text	00000000 _endtext
00000324 g     O .data_tiny_fc	00000004 __rt_hyper_current_task
1c00885c g     F .text	0000002a semihost_open
ffffffff g       *ABS*	00000000 pulp__L1FC
1c00d468 g     O .data	00000008 FllsFrequency
00000030 g     O .data_tiny_fc	00000280 periph_channels



Disassembly of section .vectors:

1c000000 <__irq_vector_base>:


#ifdef ARCHI_CORE_HAS_1_10
  j __rt_illegal_instr
#else
  j __rt_no_irq_handler
1c000000:	0940006f          	j	1c000094 <__rt_no_irq_handler>
#endif

  j __rt_no_irq_handler
1c000004:	0900006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c000008:	08c0006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c00000c:	0880006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c000010:	0840006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c000014:	0800006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c000018:	07c0006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c00001c:	0780006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c000020:	0740006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c000024:	0700006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c000028:	06c0006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c00002c:	0680006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c000030:	0640006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c000034:	0600006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c000038:	05c0006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c00003c:	0580006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c000040:	0540006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c000044:	0500006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c000048:	04c0006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c00004c:	0480006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c000050:	0440006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c000054:	0400006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c000058:	03c0006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c00005c:	0380006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c000060:	0340006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c000064:	0300006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c000068:	02c0006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c00006c:	0280006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c000070:	0240006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c000074:	0200006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c000078:	01c0006f          	j	1c000094 <__rt_no_irq_handler>
  j __rt_no_irq_handler
1c00007c:	0180006f          	j	1c000094 <__rt_no_irq_handler>

1c000080 <_start>:


  .org 0x80
  .global _start
_start:
  jal x0, _entry
1c000080:	6850406f          	j	1c004f04 <_entry>


#ifndef __RT_MODE_BARE

  jal x0, __rt_illegal_instr
1c000084:	0260506f          	j	1c0050aa <__rt_illegal_instr>
	...

1c000090 <__rt_debug_struct_ptr>:
1c000090:	d378                	sw	a4,100(a4)
1c000092:	1c00                	addi	s0,sp,560

1c000094 <__rt_no_irq_handler>:
  .word __hal_debug_struct

#endif

__rt_no_irq_handler:
  j __rt_no_irq_handler
1c000094:	0000006f          	j	1c000094 <__rt_no_irq_handler>

1c000098 <__rt_semihosting_call>:

#endif

  .global __rt_semihosting_call
__rt_semihosting_call:
  ebreak
1c000098:	00100073          	ebreak
  jr          ra
1c00009c:	00008067          	ret

Disassembly of section .text:

1c0000a0 <dory_dma_barrier.constprop.15>:
1c0000a0:	8082                	ret

1c0000a2 <dory_dma_deallocate>:
1c0000a2:	4785                	li	a5,1
1c0000a4:	00204737          	lui	a4,0x204
1c0000a8:	00a79533          	sll	a0,a5,a0
1c0000ac:	40a72223          	sw	a0,1028(a4) # 204404 <__L2+0x184404>
1c0000b0:	8082                	ret

1c0000b2 <mchan_alloc>:
1c0000b2:	002047b7          	lui	a5,0x204
1c0000b6:	4007a503          	lw	a0,1024(a5) # 204400 <__L2+0x184400>
1c0000ba:	8082                	ret

1c0000bc <dory_dma_allocate>:
1c0000bc:	bfdd                	j	1c0000b2 <mchan_alloc>

1c0000be <dory_dma_memcpy_async>:
1c0000be:	01255383          	lhu	t2,18(a0)
1c0000c2:	01455283          	lhu	t0,20(a0)
1c0000c6:	00c55f03          	lhu	t5,12(a0)
1c0000ca:	1141                	addi	sp,sp,-16
1c0000cc:	02538fb3          	mul	t6,t2,t0
1c0000d0:	c426                	sw	s1,8(sp)
1c0000d2:	c622                	sw	s0,12(sp)
1c0000d4:	c24a                	sw	s2,4(sp)
1c0000d6:	c04e                	sw	s3,0(sp)
1c0000d8:	00052803          	lw	a6,0(a0)
1c0000dc:	00452883          	lw	a7,4(a0)
1c0000e0:	00e55483          	lhu	s1,14(a0)
1c0000e4:	01055e83          	lhu	t4,16(a0)
1c0000e8:	4d1c                	lw	a5,24(a0)
1c0000ea:	4d4c                	lw	a1,28(a0)
1c0000ec:	0def8a63          	beq	t6,t5,1c0001c0 <dory_dma_memcpy_async+0x102>
1c0000f0:	0c13a663          	p.beqimm	t2,1,1c0001bc <dory_dma_memcpy_async+0xfe>
1c0000f4:	4518                	lw	a4,8(a0)
1c0000f6:	1c00e6b7          	lui	a3,0x1c00e
1c0000fa:	125e8b63          	beq	t4,t0,1c000230 <dory_dma_memcpy_async+0x172>
1c0000fe:	4609                	li	a2,2
1c000100:	8ec6a423          	sw	a2,-1816(a3) # 1c00d8e8 <current_transfer>
1c000104:	1a172563          	p.beqimm	a4,1,1c0002ae <dory_dma_memcpy_async+0x1f0>
1c000108:	01402473          	csrr	s0,uhartid
1c00010c:	f4543433          	p.bclr	s0,s0,26,5
1c000110:	02940433          	mul	s0,s0,s1
1c000114:	8942                	mv	s2,a6
1c000116:	89c6                	mv	s3,a7
1c000118:	04944433          	p.min	s0,s0,s1
1c00011c:	00940733          	add	a4,s0,s1
1c000120:	049744b3          	p.min	s1,a4,s1
1c000124:	428f0933          	p.mac	s2,t5,s0
1c000128:	428f89b3          	p.mac	s3,t6,s0
1c00012c:	08945263          	ble	s1,s0,1c0001b0 <dory_dma_memcpy_async+0xf2>
1c000130:	01079e13          	slli	t3,a5,0x10
1c000134:	00ff07b7          	lui	a5,0xff0
1c000138:	00fe7e33          	and	t3,t3,a5
1c00013c:	000a07b7          	lui	a5,0xa0
1c000140:	00f2e7b3          	or	a5,t0,a5
1c000144:	4605                	li	a2,1
1c000146:	00fe6e33          	or	t3,t3,a5
1c00014a:	00b61633          	sll	a2,a2,a1
1c00014e:	027e8533          	mul	a0,t4,t2
1c000152:	04038f63          	beqz	t2,1c0001b0 <dory_dma_memcpy_async+0xf2>
1c000156:	fff38793          	addi	a5,t2,-1
1c00015a:	9f76                	add	t5,t5,t4
1c00015c:	00204737          	lui	a4,0x204
1c000160:	40070313          	addi	t1,a4,1024 # 204400 <__L2+0x184400>
1c000164:	40470593          	addi	a1,a4,1028
1c000168:	10000693          	li	a3,256
1c00016c:	43d78f33          	p.mac	t5,a5,t4
1c000170:	40af0f33          	sub	t5,t5,a0
1c000174:	88ce                	mv	a7,s3
1c000176:	884a                	mv	a6,s2
1c000178:	851e                	mv	a0,t2
1c00017a:	015540fb          	lp.setup	x1,a0,1c0001a4 <dory_dma_memcpy_async+0xe6>
1c00017e:	01c32023          	sw	t3,0(t1)
1c000182:	01132023          	sw	a7,0(t1)
1c000186:	01032023          	sw	a6,0(t1)
1c00018a:	419c                	lw	a5,0(a1)
1c00018c:	8ff1                	and	a5,a5,a2
1c00018e:	cb91                	beqz	a5,1c0001a2 <dory_dma_memcpy_async+0xe4>
1c000190:	00d72423          	sw	a3,8(a4)
1c000194:	03c76783          	p.elw	a5,60(a4)
1c000198:	00d72223          	sw	a3,4(a4)
1c00019c:	419c                	lw	a5,0(a1)
1c00019e:	8ff1                	and	a5,a5,a2
1c0001a0:	fbe5                	bnez	a5,1c000190 <dory_dma_memcpy_async+0xd2>
1c0001a2:	9876                	add	a6,a6,t4
1c0001a4:	9896                	add	a7,a7,t0
1c0001a6:	0405                	addi	s0,s0,1
1c0001a8:	99fe                	add	s3,s3,t6
1c0001aa:	997a                	add	s2,s2,t5
1c0001ac:	fc8494e3          	bne	s1,s0,1c000174 <dory_dma_memcpy_async+0xb6>
1c0001b0:	4432                	lw	s0,12(sp)
1c0001b2:	44a2                	lw	s1,8(sp)
1c0001b4:	4912                	lw	s2,4(sp)
1c0001b6:	4982                	lw	s3,0(sp)
1c0001b8:	0141                	addi	sp,sp,16
1c0001ba:	8082                	ret
1c0001bc:	f214bce3          	p.bneimm	s1,1,1c0000f4 <dory_dma_memcpy_async+0x36>
1c0001c0:	4518                	lw	a4,8(a0)
1c0001c2:	1c00e6b7          	lui	a3,0x1c00e
1c0001c6:	8e06a423          	sw	zero,-1816(a3) # 1c00d8e8 <current_transfer>
1c0001ca:	0e172263          	p.beqimm	a4,1,1c0002ae <dory_dma_memcpy_async+0x1f0>
1c0001ce:	01402773          	csrr	a4,uhartid
1c0001d2:	f4573733          	p.bclr	a4,a4,26,5
1c0001d6:	e335                	bnez	a4,1c00023a <dory_dma_memcpy_async+0x17c>
1c0001d8:	03f484b3          	mul	s1,s1,t6
1c0001dc:	00ff0737          	lui	a4,0xff0
1c0001e0:	07c2                	slli	a5,a5,0x10
1c0001e2:	8ff9                	and	a5,a5,a4
1c0001e4:	00204637          	lui	a2,0x204
1c0001e8:	000a06b7          	lui	a3,0xa0
1c0001ec:	40060713          	addi	a4,a2,1024 # 204400 <__L2+0x184400>
1c0001f0:	40460613          	addi	a2,a2,1028
1c0001f4:	8fc5                	or	a5,a5,s1
1c0001f6:	8fd5                	or	a5,a5,a3
1c0001f8:	c31c                	sw	a5,0(a4)
1c0001fa:	01172023          	sw	a7,0(a4) # ff0000 <__L2+0xf70000>
1c0001fe:	01072023          	sw	a6,0(a4)
1c000202:	421c                	lw	a5,0(a2)
1c000204:	40b7d7b3          	sra	a5,a5,a1
1c000208:	fc17b7b3          	p.bclr	a5,a5,30,1
1c00020c:	d3d5                	beqz	a5,1c0001b0 <dory_dma_memcpy_async+0xf2>
1c00020e:	4785                	li	a5,1
1c000210:	00b795b3          	sll	a1,a5,a1
1c000214:	10000693          	li	a3,256
1c000218:	00204737          	lui	a4,0x204
1c00021c:	00d72423          	sw	a3,8(a4) # 204008 <__L2+0x184008>
1c000220:	03c76783          	p.elw	a5,60(a4)
1c000224:	00d72223          	sw	a3,4(a4)
1c000228:	421c                	lw	a5,0(a2)
1c00022a:	8fed                	and	a5,a5,a1
1c00022c:	fbe5                	bnez	a5,1c00021c <dory_dma_memcpy_async+0x15e>
1c00022e:	b749                	j	1c0001b0 <dory_dma_memcpy_async+0xf2>
1c000230:	4605                	li	a2,1
1c000232:	8ec6a423          	sw	a2,-1816(a3) # 9f8e8 <__L2+0x1f8e8>
1c000236:	06172c63          	p.beqimm	a4,1,1c0002ae <dory_dma_memcpy_async+0x1f0>
1c00023a:	01402773          	csrr	a4,uhartid
1c00023e:	f4573733          	p.bclr	a4,a4,26,5
1c000242:	f73d                	bnez	a4,1c0001b0 <dory_dma_memcpy_async+0xf2>
1c000244:	d4b5                	beqz	s1,1c0001b0 <dory_dma_memcpy_async+0xf2>
1c000246:	01079e13          	slli	t3,a5,0x10
1c00024a:	00ff07b7          	lui	a5,0xff0
1c00024e:	00fe7e33          	and	t3,t3,a5
1c000252:	000a07b7          	lui	a5,0xa0
1c000256:	00204737          	lui	a4,0x204
1c00025a:	00ffe7b3          	or	a5,t6,a5
1c00025e:	4605                	li	a2,1
1c000260:	00b61633          	sll	a2,a2,a1
1c000264:	00fe6e33          	or	t3,t3,a5
1c000268:	40070313          	addi	t1,a4,1024 # 204400 <__L2+0x184400>
1c00026c:	40470593          	addi	a1,a4,1028
1c000270:	10000693          	li	a3,256
1c000274:	8526                	mv	a0,s1
1c000276:	015540fb          	lp.setup	x1,a0,1c0002a0 <dory_dma_memcpy_async+0x1e2>
1c00027a:	01c32023          	sw	t3,0(t1)
1c00027e:	01132023          	sw	a7,0(t1)
1c000282:	01032023          	sw	a6,0(t1)
1c000286:	419c                	lw	a5,0(a1)
1c000288:	8ff1                	and	a5,a5,a2
1c00028a:	cb91                	beqz	a5,1c00029e <dory_dma_memcpy_async+0x1e0>
1c00028c:	00d72423          	sw	a3,8(a4)
1c000290:	03c76783          	p.elw	a5,60(a4)
1c000294:	00d72223          	sw	a3,4(a4)
1c000298:	419c                	lw	a5,0(a1)
1c00029a:	8ff1                	and	a5,a5,a2
1c00029c:	fbe5                	bnez	a5,1c00028c <dory_dma_memcpy_async+0x1ce>
1c00029e:	987a                	add	a6,a6,t5
1c0002a0:	98fe                	add	a7,a7,t6
1c0002a2:	4432                	lw	s0,12(sp)
1c0002a4:	44a2                	lw	s1,8(sp)
1c0002a6:	4912                	lw	s2,4(sp)
1c0002a8:	4982                	lw	s3,0(sp)
1c0002aa:	0141                	addi	sp,sp,16
1c0002ac:	8082                	ret
1c0002ae:	01402773          	csrr	a4,uhartid
1c0002b2:	f4573733          	p.bclr	a4,a4,26,5
1c0002b6:	02570733          	mul	a4,a4,t0
1c0002ba:	460d                	li	a2,3
1c0002bc:	8ec6a423          	sw	a2,-1816(a3)
1c0002c0:	8e46                	mv	t3,a7
1c0002c2:	029383b3          	mul	t2,t2,s1
1c0002c6:	04574733          	p.min	a4,a4,t0
1c0002ca:	00e286b3          	add	a3,t0,a4
1c0002ce:	0456c6b3          	p.min	a3,a3,t0
1c0002d2:	01070333          	add	t1,a4,a6
1c0002d6:	42e38e33          	p.mac	t3,t2,a4
1c0002da:	ecd75be3          	ble	a3,a4,1c0001b0 <dory_dma_memcpy_async+0xf2>
1c0002de:	01079893          	slli	a7,a5,0x10
1c0002e2:	00ff07b7          	lui	a5,0xff0
1c0002e6:	00f8f8b3          	and	a7,a7,a5
1c0002ea:	01068533          	add	a0,a3,a6
1c0002ee:	00204737          	lui	a4,0x204
1c0002f2:	c518c8b3          	p.bset	a7,a7,2,17
1c0002f6:	0ec2                	slli	t4,t4,0x10
1c0002f8:	4605                	li	a2,1
1c0002fa:	00b61633          	sll	a2,a2,a1
1c0002fe:	0078e8b3          	or	a7,a7,t2
1c000302:	c00eceb3          	p.bset	t4,t4,0,0
1c000306:	40070813          	addi	a6,a4,1024 # 204400 <__L2+0x184400>
1c00030a:	40470593          	addi	a1,a4,1028
1c00030e:	10000693          	li	a3,256
1c000312:	40650533          	sub	a0,a0,t1
1c000316:	017540fb          	lp.setup	x1,a0,1c000344 <dory_dma_memcpy_async+0x286>
1c00031a:	01182023          	sw	a7,0(a6)
1c00031e:	01c82023          	sw	t3,0(a6)
1c000322:	00682023          	sw	t1,0(a6)
1c000326:	01d82023          	sw	t4,0(a6)
1c00032a:	419c                	lw	a5,0(a1)
1c00032c:	8ff1                	and	a5,a5,a2
1c00032e:	cb91                	beqz	a5,1c000342 <dory_dma_memcpy_async+0x284>
1c000330:	00d72423          	sw	a3,8(a4)
1c000334:	03c76783          	p.elw	a5,60(a4)
1c000338:	00d72223          	sw	a3,4(a4)
1c00033c:	419c                	lw	a5,0(a1)
1c00033e:	8ff1                	and	a5,a5,a2
1c000340:	fbe5                	bnez	a5,1c000330 <dory_dma_memcpy_async+0x272>
1c000342:	9e1e                	add	t3,t3,t2
1c000344:	0305                	addi	t1,t1,1
1c000346:	4432                	lw	s0,12(sp)
1c000348:	44a2                	lw	s1,8(sp)
1c00034a:	4912                	lw	s2,4(sp)
1c00034c:	4982                	lw	s3,0(sp)
1c00034e:	0141                	addi	sp,sp,16
1c000350:	8082                	ret

1c000352 <dory_dma_memcpy_async.constprop.14>:
1c000352:	01255283          	lhu	t0,18(a0)
1c000356:	00c55f83          	lhu	t6,12(a0)
1c00035a:	00052883          	lw	a7,0(a0)
1c00035e:	00529e93          	slli	t4,t0,0x5
1c000362:	00452303          	lw	t1,4(a0)
1c000366:	01055f03          	lhu	t5,16(a0)
1c00036a:	4d1c                	lw	a5,24(a0)
1c00036c:	4d4c                	lw	a1,28(a0)
1c00036e:	4514                	lw	a3,8(a0)
1c000370:	15fe8563          	beq	t4,t6,1c0004ba <dory_dma_memcpy_async.constprop.14+0x168>
1c000374:	02000713          	li	a4,32
1c000378:	0cef0563          	beq	t5,a4,1c000442 <dory_dma_memcpy_async.constprop.14+0xf0>
1c00037c:	1c00e737          	lui	a4,0x1c00e
1c000380:	4609                	li	a2,2
1c000382:	8ec72423          	sw	a2,-1816(a4) # 1c00d8e8 <current_transfer>
1c000386:	1a16a363          	p.beqimm	a3,1,1c00052c <dory_dma_memcpy_async.constprop.14+0x1da>
1c00038a:	01402773          	csrr	a4,uhartid
1c00038e:	f45736b3          	p.bclr	a3,a4,26,5
1c000392:	00169713          	slli	a4,a3,0x1
1c000396:	9736                	add	a4,a4,a3
1c000398:	1141                	addi	sp,sp,-16
1c00039a:	4699                	li	a3,6
1c00039c:	0706                	slli	a4,a4,0x1
1c00039e:	04d743b3          	p.min	t2,a4,a3
1c0003a2:	c622                	sw	s0,12(sp)
1c0003a4:	c426                	sw	s1,8(sp)
1c0003a6:	8446                	mv	s0,a7
1c0003a8:	849a                	mv	s1,t1
1c0003aa:	4695                	li	a3,5
1c0003ac:	427f8433          	p.mac	s0,t6,t2
1c0003b0:	427e84b3          	p.mac	s1,t4,t2
1c0003b4:	08e6c363          	blt	a3,a4,1c00043a <dory_dma_memcpy_async.constprop.14+0xe8>
1c0003b8:	01079e13          	slli	t3,a5,0x10
1c0003bc:	00ff07b7          	lui	a5,0xff0
1c0003c0:	00fe7e33          	and	t3,t3,a5
1c0003c4:	000a07b7          	lui	a5,0xa0
1c0003c8:	02078793          	addi	a5,a5,32 # a0020 <__L2+0x20020>
1c0003cc:	4605                	li	a2,1
1c0003ce:	00fe6e33          	or	t3,t3,a5
1c0003d2:	00b61633          	sll	a2,a2,a1
1c0003d6:	03e28533          	mul	a0,t0,t5
1c0003da:	06028063          	beqz	t0,1c00043a <dory_dma_memcpy_async.constprop.14+0xe8>
1c0003de:	fff28793          	addi	a5,t0,-1
1c0003e2:	9ffa                	add	t6,t6,t5
1c0003e4:	00204737          	lui	a4,0x204
1c0003e8:	40070313          	addi	t1,a4,1024 # 204400 <__L2+0x184400>
1c0003ec:	40470593          	addi	a1,a4,1028
1c0003f0:	10000693          	li	a3,256
1c0003f4:	43e78fb3          	p.mac	t6,a5,t5
1c0003f8:	40af8fb3          	sub	t6,t6,a0
1c0003fc:	88a2                	mv	a7,s0
1c0003fe:	8826                	mv	a6,s1
1c000400:	8516                	mv	a0,t0
1c000402:	016540fb          	lp.setup	x1,a0,1c00042e <dory_dma_memcpy_async.constprop.14+0xdc>
1c000406:	01c32023          	sw	t3,0(t1)
1c00040a:	01032023          	sw	a6,0(t1)
1c00040e:	01132023          	sw	a7,0(t1)
1c000412:	419c                	lw	a5,0(a1)
1c000414:	8ff1                	and	a5,a5,a2
1c000416:	cb91                	beqz	a5,1c00042a <dory_dma_memcpy_async.constprop.14+0xd8>
1c000418:	00d72423          	sw	a3,8(a4)
1c00041c:	03c76783          	p.elw	a5,60(a4)
1c000420:	00d72223          	sw	a3,4(a4)
1c000424:	419c                	lw	a5,0(a1)
1c000426:	8ff1                	and	a5,a5,a2
1c000428:	fbe5                	bnez	a5,1c000418 <dory_dma_memcpy_async.constprop.14+0xc6>
1c00042a:	02080813          	addi	a6,a6,32
1c00042e:	98fa                	add	a7,a7,t5
1c000430:	0385                	addi	t2,t2,1
1c000432:	947e                	add	s0,s0,t6
1c000434:	94f6                	add	s1,s1,t4
1c000436:	fc63b3e3          	p.bneimm	t2,6,1c0003fc <dory_dma_memcpy_async.constprop.14+0xaa>
1c00043a:	4432                	lw	s0,12(sp)
1c00043c:	44a2                	lw	s1,8(sp)
1c00043e:	0141                	addi	sp,sp,16
1c000440:	8082                	ret
1c000442:	1c00e737          	lui	a4,0x1c00e
1c000446:	4605                	li	a2,1
1c000448:	8ec72423          	sw	a2,-1816(a4) # 1c00d8e8 <current_transfer>
1c00044c:	0e16a063          	p.beqimm	a3,1,1c00052c <dory_dma_memcpy_async.constprop.14+0x1da>
1c000450:	01402773          	csrr	a4,uhartid
1c000454:	f4573733          	p.bclr	a4,a4,26,5
1c000458:	e325                	bnez	a4,1c0004b8 <dory_dma_memcpy_async.constprop.14+0x166>
1c00045a:	01079e13          	slli	t3,a5,0x10
1c00045e:	00ff07b7          	lui	a5,0xff0
1c000462:	00fe7e33          	and	t3,t3,a5
1c000466:	000a07b7          	lui	a5,0xa0
1c00046a:	00204737          	lui	a4,0x204
1c00046e:	00fee7b3          	or	a5,t4,a5
1c000472:	4605                	li	a2,1
1c000474:	00b61633          	sll	a2,a2,a1
1c000478:	00fe6e33          	or	t3,t3,a5
1c00047c:	40070813          	addi	a6,a4,1024 # 204400 <__L2+0x184400>
1c000480:	40470593          	addi	a1,a4,1028
1c000484:	10000693          	li	a3,256
1c000488:	4519                	li	a0,6
1c00048a:	015540fb          	lp.setup	x1,a0,1c0004b4 <dory_dma_memcpy_async.constprop.14+0x162>
1c00048e:	01c82023          	sw	t3,0(a6)
1c000492:	00682023          	sw	t1,0(a6)
1c000496:	01182023          	sw	a7,0(a6)
1c00049a:	419c                	lw	a5,0(a1)
1c00049c:	8ff1                	and	a5,a5,a2
1c00049e:	cb91                	beqz	a5,1c0004b2 <dory_dma_memcpy_async.constprop.14+0x160>
1c0004a0:	00d72423          	sw	a3,8(a4)
1c0004a4:	03c76783          	p.elw	a5,60(a4)
1c0004a8:	00d72223          	sw	a3,4(a4)
1c0004ac:	419c                	lw	a5,0(a1)
1c0004ae:	8ff1                	and	a5,a5,a2
1c0004b0:	fbe5                	bnez	a5,1c0004a0 <dory_dma_memcpy_async.constprop.14+0x14e>
1c0004b2:	9376                	add	t1,t1,t4
1c0004b4:	98fe                	add	a7,a7,t6
1c0004b6:	8082                	ret
1c0004b8:	8082                	ret
1c0004ba:	1c00e737          	lui	a4,0x1c00e
1c0004be:	8e072423          	sw	zero,-1816(a4) # 1c00d8e8 <current_transfer>
1c0004c2:	0616a563          	p.beqimm	a3,1,1c00052c <dory_dma_memcpy_async.constprop.14+0x1da>
1c0004c6:	01402773          	csrr	a4,uhartid
1c0004ca:	f4573733          	p.bclr	a4,a4,26,5
1c0004ce:	f349                	bnez	a4,1c000450 <dory_dma_memcpy_async.constprop.14+0xfe>
1c0004d0:	00629713          	slli	a4,t0,0x6
1c0004d4:	00ff06b7          	lui	a3,0xff0
1c0004d8:	07c2                	slli	a5,a5,0x10
1c0004da:	9776                	add	a4,a4,t4
1c0004dc:	0706                	slli	a4,a4,0x1
1c0004de:	8ff5                	and	a5,a5,a3
1c0004e0:	00204637          	lui	a2,0x204
1c0004e4:	8fd9                	or	a5,a5,a4
1c0004e6:	000a06b7          	lui	a3,0xa0
1c0004ea:	40060713          	addi	a4,a2,1024 # 204400 <__L2+0x184400>
1c0004ee:	8fd5                	or	a5,a5,a3
1c0004f0:	c31c                	sw	a5,0(a4)
1c0004f2:	00672023          	sw	t1,0(a4)
1c0004f6:	01172023          	sw	a7,0(a4)
1c0004fa:	40460613          	addi	a2,a2,1028
1c0004fe:	421c                	lw	a5,0(a2)
1c000500:	40b7d7b3          	sra	a5,a5,a1
1c000504:	fc17b7b3          	p.bclr	a5,a5,30,1
1c000508:	dbc5                	beqz	a5,1c0004b8 <dory_dma_memcpy_async.constprop.14+0x166>
1c00050a:	4785                	li	a5,1
1c00050c:	00b795b3          	sll	a1,a5,a1
1c000510:	10000693          	li	a3,256
1c000514:	00204737          	lui	a4,0x204
1c000518:	00d72423          	sw	a3,8(a4) # 204008 <__L2+0x184008>
1c00051c:	03c76783          	p.elw	a5,60(a4)
1c000520:	00d72223          	sw	a3,4(a4)
1c000524:	421c                	lw	a5,0(a2)
1c000526:	8fed                	and	a5,a5,a1
1c000528:	fbe5                	bnez	a5,1c000518 <dory_dma_memcpy_async.constprop.14+0x1c6>
1c00052a:	8082                	ret
1c00052c:	01402573          	csrr	a0,uhartid
1c000530:	468d                	li	a3,3
1c000532:	f4553533          	p.bclr	a0,a0,26,5
1c000536:	8ed72423          	sw	a3,-1816(a4)
1c00053a:	0516                	slli	a0,a0,0x5
1c00053c:	477d                	li	a4,31
1c00053e:	06a74e63          	blt	a4,a0,1c0005ba <dory_dma_memcpy_async.constprop.14+0x268>
1c000542:	00129e13          	slli	t3,t0,0x1
1c000546:	9e16                	add	t3,t3,t0
1c000548:	0e06                	slli	t3,t3,0x1
1c00054a:	01079e93          	slli	t4,a5,0x10
1c00054e:	00ff07b7          	lui	a5,0xff0
1c000552:	00204737          	lui	a4,0x204
1c000556:	00fefeb3          	and	t4,t4,a5
1c00055a:	43c50333          	p.mac	t1,a0,t3
1c00055e:	c51e47b3          	p.bset	a5,t3,2,17
1c000562:	9546                	add	a0,a0,a7
1c000564:	0f42                	slli	t5,t5,0x10
1c000566:	02088893          	addi	a7,a7,32
1c00056a:	4605                	li	a2,1
1c00056c:	00b61633          	sll	a2,a2,a1
1c000570:	00feeeb3          	or	t4,t4,a5
1c000574:	c00f4f33          	p.bset	t5,t5,0,0
1c000578:	40070813          	addi	a6,a4,1024 # 204400 <__L2+0x184400>
1c00057c:	40470593          	addi	a1,a4,1028
1c000580:	10000693          	li	a3,256
1c000584:	40a888b3          	sub	a7,a7,a0
1c000588:	0178c0fb          	lp.setup	x1,a7,1c0005b6 <dory_dma_memcpy_async.constprop.14+0x264>
1c00058c:	01d82023          	sw	t4,0(a6)
1c000590:	00682023          	sw	t1,0(a6)
1c000594:	00a82023          	sw	a0,0(a6)
1c000598:	01e82023          	sw	t5,0(a6)
1c00059c:	419c                	lw	a5,0(a1)
1c00059e:	8ff1                	and	a5,a5,a2
1c0005a0:	cb91                	beqz	a5,1c0005b4 <dory_dma_memcpy_async.constprop.14+0x262>
1c0005a2:	00d72423          	sw	a3,8(a4)
1c0005a6:	03c76783          	p.elw	a5,60(a4)
1c0005aa:	00d72223          	sw	a3,4(a4)
1c0005ae:	419c                	lw	a5,0(a1)
1c0005b0:	8ff1                	and	a5,a5,a2
1c0005b2:	fbe5                	bnez	a5,1c0005a2 <dory_dma_memcpy_async.constprop.14+0x250>
1c0005b4:	9372                	add	t1,t1,t3
1c0005b6:	0505                	addi	a0,a0,1
1c0005b8:	8082                	ret
1c0005ba:	8082                	ret

1c0005bc <dory_dma_memcpy_async.constprop.13>:
1c0005bc:	01255283          	lhu	t0,18(a0)
1c0005c0:	00c55f83          	lhu	t6,12(a0)
1c0005c4:	00052883          	lw	a7,0(a0)
1c0005c8:	00529e93          	slli	t4,t0,0x5
1c0005cc:	00452303          	lw	t1,4(a0)
1c0005d0:	01055f03          	lhu	t5,16(a0)
1c0005d4:	4d1c                	lw	a5,24(a0)
1c0005d6:	4d4c                	lw	a1,28(a0)
1c0005d8:	4514                	lw	a3,8(a0)
1c0005da:	15fe8563          	beq	t4,t6,1c000724 <dory_dma_memcpy_async.constprop.13+0x168>
1c0005de:	02000713          	li	a4,32
1c0005e2:	0cef0563          	beq	t5,a4,1c0006ac <dory_dma_memcpy_async.constprop.13+0xf0>
1c0005e6:	1c00e737          	lui	a4,0x1c00e
1c0005ea:	4609                	li	a2,2
1c0005ec:	8ec72423          	sw	a2,-1816(a4) # 1c00d8e8 <current_transfer>
1c0005f0:	1a16a363          	p.beqimm	a3,1,1c000796 <dory_dma_memcpy_async.constprop.13+0x1da>
1c0005f4:	01402773          	csrr	a4,uhartid
1c0005f8:	f45736b3          	p.bclr	a3,a4,26,5
1c0005fc:	00169713          	slli	a4,a3,0x1
1c000600:	9736                	add	a4,a4,a3
1c000602:	1141                	addi	sp,sp,-16
1c000604:	46b1                	li	a3,12
1c000606:	070a                	slli	a4,a4,0x2
1c000608:	04d743b3          	p.min	t2,a4,a3
1c00060c:	c622                	sw	s0,12(sp)
1c00060e:	c426                	sw	s1,8(sp)
1c000610:	8446                	mv	s0,a7
1c000612:	849a                	mv	s1,t1
1c000614:	46ad                	li	a3,11
1c000616:	427f8433          	p.mac	s0,t6,t2
1c00061a:	427e84b3          	p.mac	s1,t4,t2
1c00061e:	08e6c363          	blt	a3,a4,1c0006a4 <dory_dma_memcpy_async.constprop.13+0xe8>
1c000622:	01079e13          	slli	t3,a5,0x10
1c000626:	00ff07b7          	lui	a5,0xff0
1c00062a:	00fe7e33          	and	t3,t3,a5
1c00062e:	000a07b7          	lui	a5,0xa0
1c000632:	02078793          	addi	a5,a5,32 # a0020 <__L2+0x20020>
1c000636:	4605                	li	a2,1
1c000638:	00fe6e33          	or	t3,t3,a5
1c00063c:	00b61633          	sll	a2,a2,a1
1c000640:	03e28533          	mul	a0,t0,t5
1c000644:	06028063          	beqz	t0,1c0006a4 <dory_dma_memcpy_async.constprop.13+0xe8>
1c000648:	fff28793          	addi	a5,t0,-1
1c00064c:	9ffa                	add	t6,t6,t5
1c00064e:	00204737          	lui	a4,0x204
1c000652:	40070313          	addi	t1,a4,1024 # 204400 <__L2+0x184400>
1c000656:	40470593          	addi	a1,a4,1028
1c00065a:	10000693          	li	a3,256
1c00065e:	43e78fb3          	p.mac	t6,a5,t5
1c000662:	40af8fb3          	sub	t6,t6,a0
1c000666:	88a2                	mv	a7,s0
1c000668:	8826                	mv	a6,s1
1c00066a:	8516                	mv	a0,t0
1c00066c:	016540fb          	lp.setup	x1,a0,1c000698 <dory_dma_memcpy_async.constprop.13+0xdc>
1c000670:	01c32023          	sw	t3,0(t1)
1c000674:	01032023          	sw	a6,0(t1)
1c000678:	01132023          	sw	a7,0(t1)
1c00067c:	419c                	lw	a5,0(a1)
1c00067e:	8ff1                	and	a5,a5,a2
1c000680:	cb91                	beqz	a5,1c000694 <dory_dma_memcpy_async.constprop.13+0xd8>
1c000682:	00d72423          	sw	a3,8(a4)
1c000686:	03c76783          	p.elw	a5,60(a4)
1c00068a:	00d72223          	sw	a3,4(a4)
1c00068e:	419c                	lw	a5,0(a1)
1c000690:	8ff1                	and	a5,a5,a2
1c000692:	fbe5                	bnez	a5,1c000682 <dory_dma_memcpy_async.constprop.13+0xc6>
1c000694:	02080813          	addi	a6,a6,32
1c000698:	98fa                	add	a7,a7,t5
1c00069a:	0385                	addi	t2,t2,1
1c00069c:	947e                	add	s0,s0,t6
1c00069e:	94f6                	add	s1,s1,t4
1c0006a0:	fcc3b3e3          	p.bneimm	t2,12,1c000666 <dory_dma_memcpy_async.constprop.13+0xaa>
1c0006a4:	4432                	lw	s0,12(sp)
1c0006a6:	44a2                	lw	s1,8(sp)
1c0006a8:	0141                	addi	sp,sp,16
1c0006aa:	8082                	ret
1c0006ac:	1c00e737          	lui	a4,0x1c00e
1c0006b0:	4605                	li	a2,1
1c0006b2:	8ec72423          	sw	a2,-1816(a4) # 1c00d8e8 <current_transfer>
1c0006b6:	0e16a063          	p.beqimm	a3,1,1c000796 <dory_dma_memcpy_async.constprop.13+0x1da>
1c0006ba:	01402773          	csrr	a4,uhartid
1c0006be:	f4573733          	p.bclr	a4,a4,26,5
1c0006c2:	e325                	bnez	a4,1c000722 <dory_dma_memcpy_async.constprop.13+0x166>
1c0006c4:	01079e13          	slli	t3,a5,0x10
1c0006c8:	00ff07b7          	lui	a5,0xff0
1c0006cc:	00fe7e33          	and	t3,t3,a5
1c0006d0:	000a07b7          	lui	a5,0xa0
1c0006d4:	00204737          	lui	a4,0x204
1c0006d8:	00fee7b3          	or	a5,t4,a5
1c0006dc:	4605                	li	a2,1
1c0006de:	00b61633          	sll	a2,a2,a1
1c0006e2:	00fe6e33          	or	t3,t3,a5
1c0006e6:	40070813          	addi	a6,a4,1024 # 204400 <__L2+0x184400>
1c0006ea:	40470593          	addi	a1,a4,1028
1c0006ee:	10000693          	li	a3,256
1c0006f2:	4531                	li	a0,12
1c0006f4:	015540fb          	lp.setup	x1,a0,1c00071e <dory_dma_memcpy_async.constprop.13+0x162>
1c0006f8:	01c82023          	sw	t3,0(a6)
1c0006fc:	00682023          	sw	t1,0(a6)
1c000700:	01182023          	sw	a7,0(a6)
1c000704:	419c                	lw	a5,0(a1)
1c000706:	8ff1                	and	a5,a5,a2
1c000708:	cb91                	beqz	a5,1c00071c <dory_dma_memcpy_async.constprop.13+0x160>
1c00070a:	00d72423          	sw	a3,8(a4)
1c00070e:	03c76783          	p.elw	a5,60(a4)
1c000712:	00d72223          	sw	a3,4(a4)
1c000716:	419c                	lw	a5,0(a1)
1c000718:	8ff1                	and	a5,a5,a2
1c00071a:	fbe5                	bnez	a5,1c00070a <dory_dma_memcpy_async.constprop.13+0x14e>
1c00071c:	9376                	add	t1,t1,t4
1c00071e:	98fe                	add	a7,a7,t6
1c000720:	8082                	ret
1c000722:	8082                	ret
1c000724:	1c00e737          	lui	a4,0x1c00e
1c000728:	8e072423          	sw	zero,-1816(a4) # 1c00d8e8 <current_transfer>
1c00072c:	0616a563          	p.beqimm	a3,1,1c000796 <dory_dma_memcpy_async.constprop.13+0x1da>
1c000730:	01402773          	csrr	a4,uhartid
1c000734:	f4573733          	p.bclr	a4,a4,26,5
1c000738:	f349                	bnez	a4,1c0006ba <dory_dma_memcpy_async.constprop.13+0xfe>
1c00073a:	00629713          	slli	a4,t0,0x6
1c00073e:	00ff06b7          	lui	a3,0xff0
1c000742:	07c2                	slli	a5,a5,0x10
1c000744:	9776                	add	a4,a4,t4
1c000746:	070a                	slli	a4,a4,0x2
1c000748:	8ff5                	and	a5,a5,a3
1c00074a:	00204637          	lui	a2,0x204
1c00074e:	8fd9                	or	a5,a5,a4
1c000750:	000a06b7          	lui	a3,0xa0
1c000754:	40060713          	addi	a4,a2,1024 # 204400 <__L2+0x184400>
1c000758:	8fd5                	or	a5,a5,a3
1c00075a:	c31c                	sw	a5,0(a4)
1c00075c:	00672023          	sw	t1,0(a4)
1c000760:	01172023          	sw	a7,0(a4)
1c000764:	40460613          	addi	a2,a2,1028
1c000768:	421c                	lw	a5,0(a2)
1c00076a:	40b7d7b3          	sra	a5,a5,a1
1c00076e:	fc17b7b3          	p.bclr	a5,a5,30,1
1c000772:	dbc5                	beqz	a5,1c000722 <dory_dma_memcpy_async.constprop.13+0x166>
1c000774:	4785                	li	a5,1
1c000776:	00b795b3          	sll	a1,a5,a1
1c00077a:	10000693          	li	a3,256
1c00077e:	00204737          	lui	a4,0x204
1c000782:	00d72423          	sw	a3,8(a4) # 204008 <__L2+0x184008>
1c000786:	03c76783          	p.elw	a5,60(a4)
1c00078a:	00d72223          	sw	a3,4(a4)
1c00078e:	421c                	lw	a5,0(a2)
1c000790:	8fed                	and	a5,a5,a1
1c000792:	fbe5                	bnez	a5,1c000782 <dory_dma_memcpy_async.constprop.13+0x1c6>
1c000794:	8082                	ret
1c000796:	01402573          	csrr	a0,uhartid
1c00079a:	468d                	li	a3,3
1c00079c:	f4553533          	p.bclr	a0,a0,26,5
1c0007a0:	8ed72423          	sw	a3,-1816(a4)
1c0007a4:	0516                	slli	a0,a0,0x5
1c0007a6:	477d                	li	a4,31
1c0007a8:	06a74e63          	blt	a4,a0,1c000824 <dory_dma_memcpy_async.constprop.13+0x268>
1c0007ac:	00129e13          	slli	t3,t0,0x1
1c0007b0:	9e16                	add	t3,t3,t0
1c0007b2:	0e0a                	slli	t3,t3,0x2
1c0007b4:	01079e93          	slli	t4,a5,0x10
1c0007b8:	00ff07b7          	lui	a5,0xff0
1c0007bc:	00204737          	lui	a4,0x204
1c0007c0:	00fefeb3          	and	t4,t4,a5
1c0007c4:	43c50333          	p.mac	t1,a0,t3
1c0007c8:	c51e47b3          	p.bset	a5,t3,2,17
1c0007cc:	9546                	add	a0,a0,a7
1c0007ce:	0f42                	slli	t5,t5,0x10
1c0007d0:	02088893          	addi	a7,a7,32
1c0007d4:	4605                	li	a2,1
1c0007d6:	00b61633          	sll	a2,a2,a1
1c0007da:	00feeeb3          	or	t4,t4,a5
1c0007de:	c00f4f33          	p.bset	t5,t5,0,0
1c0007e2:	40070813          	addi	a6,a4,1024 # 204400 <__L2+0x184400>
1c0007e6:	40470593          	addi	a1,a4,1028
1c0007ea:	10000693          	li	a3,256
1c0007ee:	40a888b3          	sub	a7,a7,a0
1c0007f2:	0178c0fb          	lp.setup	x1,a7,1c000820 <dory_dma_memcpy_async.constprop.13+0x264>
1c0007f6:	01d82023          	sw	t4,0(a6)
1c0007fa:	00682023          	sw	t1,0(a6)
1c0007fe:	00a82023          	sw	a0,0(a6)
1c000802:	01e82023          	sw	t5,0(a6)
1c000806:	419c                	lw	a5,0(a1)
1c000808:	8ff1                	and	a5,a5,a2
1c00080a:	cb91                	beqz	a5,1c00081e <dory_dma_memcpy_async.constprop.13+0x262>
1c00080c:	00d72423          	sw	a3,8(a4)
1c000810:	03c76783          	p.elw	a5,60(a4)
1c000814:	00d72223          	sw	a3,4(a4)
1c000818:	419c                	lw	a5,0(a1)
1c00081a:	8ff1                	and	a5,a5,a2
1c00081c:	fbe5                	bnez	a5,1c00080c <dory_dma_memcpy_async.constprop.13+0x250>
1c00081e:	9372                	add	t1,t1,t3
1c000820:	0505                	addi	a0,a0,1
1c000822:	8082                	ret
1c000824:	8082                	ret

1c000826 <pi_cl_team_barrier.lto_priv.16>:
1c000826:	002047b7          	lui	a5,0x204
1c00082a:	20078793          	addi	a5,a5,512 # 204200 <__L2+0x184200>
1c00082e:	01c7e703          	p.elw	a4,28(a5)
1c000832:	8082                	ret

1c000834 <dory_cores_barrier>:
1c000834:	4501                	li	a0,0
1c000836:	bfc5                	j	1c000826 <pi_cl_team_barrier.lto_priv.16>

1c000838 <pulp_nn_matmul.constprop.6>:
1c000838:	7175                	addi	sp,sp,-144
1c00083a:	00265393          	srli	t2,a2,0x2
1c00083e:	cab2                	sw	a2,84(sp)
1c000840:	fa263633          	p.bclr	a2,a2,29,2
1c000844:	c722                	sw	s0,140(sp)
1c000846:	c526                	sw	s1,136(sp)
1c000848:	c34a                	sw	s2,132(sp)
1c00084a:	c14e                	sw	s3,128(sp)
1c00084c:	ded2                	sw	s4,124(sp)
1c00084e:	dcd6                	sw	s5,120(sp)
1c000850:	dada                	sw	s6,116(sp)
1c000852:	d8de                	sw	s7,112(sp)
1c000854:	d6e2                	sw	s8,108(sp)
1c000856:	d4e6                	sw	s9,104(sp)
1c000858:	d2ea                	sw	s10,100(sp)
1c00085a:	d0ee                	sw	s11,96(sp)
1c00085c:	c49e                	sw	t2,72(sp)
1c00085e:	da2e                	sw	a1,52(sp)
1c000860:	ce36                	sw	a3,28(sp)
1c000862:	ceba                	sw	a4,92(sp)
1c000864:	c6c2                	sw	a6,76(sp)
1c000866:	c8c6                	sw	a7,80(sp)
1c000868:	ccb2                	sw	a2,88(sp)
1c00086a:	3c038963          	beqz	t2,1c000c3c <pulp_nn_matmul.constprop.6+0x404>
1c00086e:	8936                	mv	s2,a3
1c000870:	00191793          	slli	a5,s2,0x1
1c000874:	97ca                	add	a5,a5,s2
1c000876:	fa293633          	p.bclr	a2,s2,29,2
1c00087a:	de3e                	sw	a5,60(sp)
1c00087c:	47da                	lw	a5,148(sp)
1c00087e:	10076cb3          	p.extbs	s9,a4
1c000882:	012583b3          	add	t2,a1,s2
1c000886:	8289                	srli	a3,a3,0x2
1c000888:	d632                	sw	a2,44(sp)
1c00088a:	494a                	lw	s2,144(sp)
1c00088c:	4626                	lw	a2,72(sp)
1c00088e:	00269713          	slli	a4,a3,0x2
1c000892:	020cfd13          	andi	s10,s9,32
1c000896:	d836                	sw	a3,48(sp)
1c000898:	d23a                	sw	a4,36(sp)
1c00089a:	00e586b3          	add	a3,a1,a4
1c00089e:	dc1e                	sw	t2,56(sp)
1c0008a0:	971e                	add	a4,a4,t2
1c0008a2:	ca3e                	sw	a5,20(sp)
1c0008a4:	fffcc393          	not	t2,s9
1c0008a8:	87ea                	mv	a5,s10
1c0008aa:	c2b6                	sw	a3,68(sp)
1c0008ac:	8d66                	mv	s10,s9
1c0008ae:	c0ba                	sw	a4,64(sp)
1c0008b0:	c84a                	sw	s2,16(sp)
1c0008b2:	84c6                	mv	s1,a7
1c0008b4:	8442                	mv	s0,a6
1c0008b6:	d01e                	sw	t2,32(sp)
1c0008b8:	0ff00d93          	li	s11,255
1c0008bc:	d432                	sw	a2,40(sp)
1c0008be:	8c2a                	mv	s8,a0
1c0008c0:	8cbe                	mv	s9,a5
1c0008c2:	46f2                	lw	a3,28(sp)
1c0008c4:	4772                	lw	a4,28(sp)
1c0008c6:	47f2                	lw	a5,28(sp)
1c0008c8:	96e2                	add	a3,a3,s8
1c0008ca:	9736                	add	a4,a4,a3
1c0008cc:	5942                	lw	s2,48(sp)
1c0008ce:	97ba                	add	a5,a5,a4
1c0008d0:	c636                	sw	a3,12(sp)
1c0008d2:	c43a                	sw	a4,8(sp)
1c0008d4:	cc3e                	sw	a5,24(sp)
1c0008d6:	56090f63          	beqz	s2,1c000e54 <pulp_nn_matmul.constprop.6+0x61c>
1c0008da:	83ca                	mv	t2,s2
1c0008dc:	59d2                	lw	s3,52(sp)
1c0008de:	5962                	lw	s2,56(sp)
1c0008e0:	8be2                	mv	s7,s8
1c0008e2:	8b36                	mv	s6,a3
1c0008e4:	8aba                	mv	s5,a4
1c0008e6:	8a3e                	mv	s4,a5
1c0008e8:	4801                	li	a6,0
1c0008ea:	4301                	li	t1,0
1c0008ec:	4e81                	li	t4,0
1c0008ee:	4f81                	li	t6,0
1c0008f0:	4881                	li	a7,0
1c0008f2:	4e01                	li	t3,0
1c0008f4:	4f01                	li	t5,0
1c0008f6:	4281                	li	t0,0
1c0008f8:	01c3c0fb          	lp.setup	x1,t2,1c000930 <pulp_nn_matmul.constprop.6+0xf8>
1c0008fc:	0049a70b          	p.lw	a4,4(s3!)
1c000900:	0049278b          	p.lw	a5,4(s2!)
1c000904:	004ba50b          	p.lw	a0,4(s7!)
1c000908:	004b258b          	p.lw	a1,4(s6!)
1c00090c:	004aa60b          	p.lw	a2,4(s5!)
1c000910:	004a268b          	p.lw	a3,4(s4!)
1c000914:	a8a712d7          	pv.sdotusp.b	t0,a4,a0
1c000918:	a8b71f57          	pv.sdotusp.b	t5,a4,a1
1c00091c:	a8c71e57          	pv.sdotusp.b	t3,a4,a2
1c000920:	a8d718d7          	pv.sdotusp.b	a7,a4,a3
1c000924:	a8a79fd7          	pv.sdotusp.b	t6,a5,a0
1c000928:	a8b79ed7          	pv.sdotusp.b	t4,a5,a1
1c00092c:	a8c79357          	pv.sdotusp.b	t1,a5,a2
1c000930:	a8d79857          	pv.sdotusp.b	a6,a5,a3
1c000934:	5392                	lw	t2,36(sp)
1c000936:	4622                	lw	a2,8(sp)
1c000938:	46e2                	lw	a3,24(sp)
1c00093a:	4532                	lw	a0,12(sp)
1c00093c:	961e                	add	a2,a2,t2
1c00093e:	969e                	add	a3,a3,t2
1c000940:	c432                	sw	a2,8(sp)
1c000942:	cc36                	sw	a3,24(sp)
1c000944:	4616                	lw	a2,68(sp)
1c000946:	4686                	lw	a3,64(sp)
1c000948:	951e                	add	a0,a0,t2
1c00094a:	9c1e                	add	s8,s8,t2
1c00094c:	c62a                	sw	a0,12(sp)
1c00094e:	5732                	lw	a4,44(sp)
1c000950:	c779                	beqz	a4,1c000a1e <pulp_nn_matmul.constprop.6+0x1e6>
1c000952:	47b2                	lw	a5,12(sp)
1c000954:	4722                	lw	a4,8(sp)
1c000956:	000c0903          	lb	s2,0(s8)
1c00095a:	00078383          	lb	t2,0(a5)
1c00095e:	47e2                	lw	a5,24(sp)
1c000960:	00070503          	lb	a0,0(a4)
1c000964:	00064703          	lbu	a4,0(a2)
1c000968:	00078583          	lb	a1,0(a5)
1c00096c:	0006c783          	lbu	a5,0(a3) # a0000 <__L2+0x20000>
1c000970:	42e902b3          	p.mac	t0,s2,a4
1c000974:	43278fb3          	p.mac	t6,a5,s2
1c000978:	5932                	lw	s2,44(sp)
1c00097a:	42e38f33          	p.mac	t5,t2,a4
1c00097e:	42e50e33          	p.mac	t3,a0,a4
1c000982:	42e588b3          	p.mac	a7,a1,a4
1c000986:	42778eb3          	p.mac	t4,a5,t2
1c00098a:	42a78333          	p.mac	t1,a5,a0
1c00098e:	42b78833          	p.mac	a6,a5,a1
1c000992:	4a192f63          	p.beqimm	s2,1,1c000e50 <pulp_nn_matmul.constprop.6+0x618>
1c000996:	4532                	lw	a0,12(sp)
1c000998:	4722                	lw	a4,8(sp)
1c00099a:	47e2                	lw	a5,24(sp)
1c00099c:	00150383          	lb	t2,1(a0)
1c0009a0:	001c0903          	lb	s2,1(s8)
1c0009a4:	00170503          	lb	a0,1(a4)
1c0009a8:	00178583          	lb	a1,1(a5)
1c0009ac:	00164703          	lbu	a4,1(a2)
1c0009b0:	0016c783          	lbu	a5,1(a3)
1c0009b4:	432702b3          	p.mac	t0,a4,s2
1c0009b8:	43278fb3          	p.mac	t6,a5,s2
1c0009bc:	5932                	lw	s2,44(sp)
1c0009be:	42e38f33          	p.mac	t5,t2,a4
1c0009c2:	42a70e33          	p.mac	t3,a4,a0
1c0009c6:	42e588b3          	p.mac	a7,a1,a4
1c0009ca:	42f38eb3          	p.mac	t4,t2,a5
1c0009ce:	42f50333          	p.mac	t1,a0,a5
1c0009d2:	42f58833          	p.mac	a6,a1,a5
1c0009d6:	48292a63          	p.beqimm	s2,2,1c000e6a <pulp_nn_matmul.constprop.6+0x632>
1c0009da:	4922                	lw	s2,8(sp)
1c0009dc:	43b2                	lw	t2,12(sp)
1c0009de:	003c0713          	addi	a4,s8,3
1c0009e2:	00290503          	lb	a0,2(s2)
1c0009e6:	4962                	lw	s2,24(sp)
1c0009e8:	00238583          	lb	a1,2(t2)
1c0009ec:	002c0783          	lb	a5,2(s8)
1c0009f0:	00290383          	lb	t2,2(s2)
1c0009f4:	00264603          	lbu	a2,2(a2)
1c0009f8:	0026c683          	lbu	a3,2(a3)
1c0009fc:	42c782b3          	p.mac	t0,a5,a2
1c000a00:	8c3a                	mv	s8,a4
1c000a02:	42b60f33          	p.mac	t5,a2,a1
1c000a06:	42a60e33          	p.mac	t3,a2,a0
1c000a0a:	427608b3          	p.mac	a7,a2,t2
1c000a0e:	42d78fb3          	p.mac	t6,a5,a3
1c000a12:	42d58eb3          	p.mac	t4,a1,a3
1c000a16:	42d50333          	p.mac	t1,a0,a3
1c000a1a:	42d38833          	p.mac	a6,t2,a3
1c000a1e:	4058                	lw	a4,4(s0)
1c000a20:	4014                	lw	a3,0(s0)
1c000a22:	41f2d613          	srai	a2,t0,0x1f
1c000a26:	408c                	lw	a1,0(s1)
1c000a28:	40c8                	lw	a0,4(s1)
1c000a2a:	02570733          	mul	a4,a4,t0
1c000a2e:	025687b3          	mul	a5,a3,t0
1c000a32:	42c68733          	p.mac	a4,a3,a2
1c000a36:	00b78633          	add	a2,a5,a1
1c000a3a:	00f637b3          	sltu	a5,a2,a5
1c000a3e:	0256b2b3          	mulhu	t0,a3,t0
1c000a42:	92ba                	add	t0,t0,a4
1c000a44:	00a286b3          	add	a3,t0,a0
1c000a48:	97b6                	add	a5,a5,a3
1c000a4a:	3e0c8b63          	beqz	s9,1c000e40 <pulp_nn_matmul.constprop.6+0x608>
1c000a4e:	41a7d633          	sra	a2,a5,s10
1c000a52:	4542                	lw	a0,16(sp)
1c000a54:	15b66633          	p.clipur	a2,a2,s11
1c000a58:	00c50023          	sb	a2,0(a0)
1c000a5c:	405c                	lw	a5,4(s0)
1c000a5e:	4010                	lw	a2,0(s0)
1c000a60:	41ffd713          	srai	a4,t6,0x1f
1c000a64:	03f787b3          	mul	a5,a5,t6
1c000a68:	408c                	lw	a1,0(s1)
1c000a6a:	40c8                	lw	a0,4(s1)
1c000a6c:	03f606b3          	mul	a3,a2,t6
1c000a70:	42e607b3          	p.mac	a5,a2,a4
1c000a74:	00b68733          	add	a4,a3,a1
1c000a78:	00d736b3          	sltu	a3,a4,a3
1c000a7c:	03f63fb3          	mulhu	t6,a2,t6
1c000a80:	9fbe                	add	t6,t6,a5
1c000a82:	00af8633          	add	a2,t6,a0
1c000a86:	96b2                	add	a3,a3,a2
1c000a88:	3a0c8463          	beqz	s9,1c000e30 <pulp_nn_matmul.constprop.6+0x5f8>
1c000a8c:	41a6d733          	sra	a4,a3,s10
1c000a90:	46d2                	lw	a3,20(sp)
1c000a92:	15b76733          	p.clipur	a4,a4,s11
1c000a96:	00e68023          	sb	a4,0(a3)
1c000a9a:	445c                	lw	a5,12(s0)
1c000a9c:	4410                	lw	a2,8(s0)
1c000a9e:	41ff5713          	srai	a4,t5,0x1f
1c000aa2:	03e787b3          	mul	a5,a5,t5
1c000aa6:	448c                	lw	a1,8(s1)
1c000aa8:	44c8                	lw	a0,12(s1)
1c000aaa:	03e606b3          	mul	a3,a2,t5
1c000aae:	42e607b3          	p.mac	a5,a2,a4
1c000ab2:	00b68733          	add	a4,a3,a1
1c000ab6:	00d736b3          	sltu	a3,a4,a3
1c000aba:	03e63f33          	mulhu	t5,a2,t5
1c000abe:	9f3e                	add	t5,t5,a5
1c000ac0:	9f2a                	add	t5,t5,a0
1c000ac2:	96fa                	add	a3,a3,t5
1c000ac4:	340c8e63          	beqz	s9,1c000e20 <pulp_nn_matmul.constprop.6+0x5e8>
1c000ac8:	41a6d733          	sra	a4,a3,s10
1c000acc:	4942                	lw	s2,16(sp)
1c000ace:	15b76733          	p.clipur	a4,a4,s11
1c000ad2:	00e900a3          	sb	a4,1(s2)
1c000ad6:	445c                	lw	a5,12(s0)
1c000ad8:	4410                	lw	a2,8(s0)
1c000ada:	41fed713          	srai	a4,t4,0x1f
1c000ade:	03d787b3          	mul	a5,a5,t4
1c000ae2:	448c                	lw	a1,8(s1)
1c000ae4:	44c8                	lw	a0,12(s1)
1c000ae6:	03d606b3          	mul	a3,a2,t4
1c000aea:	42e607b3          	p.mac	a5,a2,a4
1c000aee:	00b68733          	add	a4,a3,a1
1c000af2:	00d736b3          	sltu	a3,a4,a3
1c000af6:	03d63eb3          	mulhu	t4,a2,t4
1c000afa:	9ebe                	add	t4,t4,a5
1c000afc:	9576                	add	a0,a0,t4
1c000afe:	96aa                	add	a3,a3,a0
1c000b00:	300c8863          	beqz	s9,1c000e10 <pulp_nn_matmul.constprop.6+0x5d8>
1c000b04:	41a6d733          	sra	a4,a3,s10
1c000b08:	4552                	lw	a0,20(sp)
1c000b0a:	15b76733          	p.clipur	a4,a4,s11
1c000b0e:	00e500a3          	sb	a4,1(a0)
1c000b12:	485c                	lw	a5,20(s0)
1c000b14:	4814                	lw	a3,16(s0)
1c000b16:	41fe5613          	srai	a2,t3,0x1f
1c000b1a:	03c787b3          	mul	a5,a5,t3
1c000b1e:	488c                	lw	a1,16(s1)
1c000b20:	48c8                	lw	a0,20(s1)
1c000b22:	03c68733          	mul	a4,a3,t3
1c000b26:	42c687b3          	p.mac	a5,a3,a2
1c000b2a:	95ba                	add	a1,a1,a4
1c000b2c:	00e5b733          	sltu	a4,a1,a4
1c000b30:	03c6be33          	mulhu	t3,a3,t3
1c000b34:	97f2                	add	a5,a5,t3
1c000b36:	953e                	add	a0,a0,a5
1c000b38:	972a                	add	a4,a4,a0
1c000b3a:	2c0c8363          	beqz	s9,1c000e00 <pulp_nn_matmul.constprop.6+0x5c8>
1c000b3e:	41a755b3          	sra	a1,a4,s10
1c000b42:	46c2                	lw	a3,16(sp)
1c000b44:	15b5e5b3          	p.clipur	a1,a1,s11
1c000b48:	00b68123          	sb	a1,2(a3)
1c000b4c:	4858                	lw	a4,20(s0)
1c000b4e:	4810                	lw	a2,16(s0)
1c000b50:	41f35593          	srai	a1,t1,0x1f
1c000b54:	02670733          	mul	a4,a4,t1
1c000b58:	489c                	lw	a5,16(s1)
1c000b5a:	48c8                	lw	a0,20(s1)
1c000b5c:	026606b3          	mul	a3,a2,t1
1c000b60:	42b60733          	p.mac	a4,a2,a1
1c000b64:	97b6                	add	a5,a5,a3
1c000b66:	00d7b6b3          	sltu	a3,a5,a3
1c000b6a:	02663333          	mulhu	t1,a2,t1
1c000b6e:	971a                	add	a4,a4,t1
1c000b70:	953a                	add	a0,a0,a4
1c000b72:	96aa                	add	a3,a3,a0
1c000b74:	260c8e63          	beqz	s9,1c000df0 <pulp_nn_matmul.constprop.6+0x5b8>
1c000b78:	41a6d7b3          	sra	a5,a3,s10
1c000b7c:	4952                	lw	s2,20(sp)
1c000b7e:	15b7e7b3          	p.clipur	a5,a5,s11
1c000b82:	00f90123          	sb	a5,2(s2)
1c000b86:	4c54                	lw	a3,28(s0)
1c000b88:	4c0c                	lw	a1,24(s0)
1c000b8a:	41f8d513          	srai	a0,a7,0x1f
1c000b8e:	031686b3          	mul	a3,a3,a7
1c000b92:	4c98                	lw	a4,24(s1)
1c000b94:	4cd0                	lw	a2,28(s1)
1c000b96:	031587b3          	mul	a5,a1,a7
1c000b9a:	42a586b3          	p.mac	a3,a1,a0
1c000b9e:	973e                	add	a4,a4,a5
1c000ba0:	00f737b3          	sltu	a5,a4,a5
1c000ba4:	0315b8b3          	mulhu	a7,a1,a7
1c000ba8:	98b6                	add	a7,a7,a3
1c000baa:	98b2                	add	a7,a7,a2
1c000bac:	97c6                	add	a5,a5,a7
1c000bae:	220c8963          	beqz	s9,1c000de0 <pulp_nn_matmul.constprop.6+0x5a8>
1c000bb2:	41a7d7b3          	sra	a5,a5,s10
1c000bb6:	4542                	lw	a0,16(sp)
1c000bb8:	15b7e7b3          	p.clipur	a5,a5,s11
1c000bbc:	00f501a3          	sb	a5,3(a0)
1c000bc0:	4c54                	lw	a3,28(s0)
1c000bc2:	47c2                	lw	a5,16(sp)
1c000bc4:	4c0c                	lw	a1,24(s0)
1c000bc6:	030686b3          	mul	a3,a3,a6
1c000bca:	41f85513          	srai	a0,a6,0x1f
1c000bce:	0791                	addi	a5,a5,4
1c000bd0:	c83e                	sw	a5,16(sp)
1c000bd2:	4c98                	lw	a4,24(s1)
1c000bd4:	4cd0                	lw	a2,28(s1)
1c000bd6:	030587b3          	mul	a5,a1,a6
1c000bda:	42a586b3          	p.mac	a3,a1,a0
1c000bde:	973e                	add	a4,a4,a5
1c000be0:	00f737b3          	sltu	a5,a4,a5
1c000be4:	0305b833          	mulhu	a6,a1,a6
1c000be8:	9836                	add	a6,a6,a3
1c000bea:	9832                	add	a6,a6,a2
1c000bec:	97c2                	add	a5,a5,a6
1c000bee:	1e0c8163          	beqz	s9,1c000dd0 <pulp_nn_matmul.constprop.6+0x598>
1c000bf2:	41a7d7b3          	sra	a5,a5,s10
1c000bf6:	43d2                	lw	t2,20(sp)
1c000bf8:	5622                	lw	a2,40(sp)
1c000bfa:	15b7e7b3          	p.clipur	a5,a5,s11
1c000bfe:	5572                	lw	a0,60(sp)
1c000c00:	00f381a3          	sb	a5,3(t2)
1c000c04:	167d                	addi	a2,a2,-1
1c000c06:	0391                	addi	t2,t2,4
1c000c08:	ca1e                	sw	t2,20(sp)
1c000c0a:	d432                	sw	a2,40(sp)
1c000c0c:	02040413          	addi	s0,s0,32
1c000c10:	02048493          	addi	s1,s1,32
1c000c14:	9c2a                	add	s8,s8,a0
1c000c16:	ca0616e3          	bnez	a2,1c0008c2 <pulp_nn_matmul.constprop.6+0x8a>
1c000c1a:	47a6                	lw	a5,72(sp)
1c000c1c:	4936                	lw	s2,76(sp)
1c000c1e:	43c6                	lw	t2,80(sp)
1c000c20:	464a                	lw	a2,144(sp)
1c000c22:	46da                	lw	a3,148(sp)
1c000c24:	00579713          	slli	a4,a5,0x5
1c000c28:	078a                	slli	a5,a5,0x2
1c000c2a:	993a                	add	s2,s2,a4
1c000c2c:	93ba                	add	t2,t2,a4
1c000c2e:	963e                	add	a2,a2,a5
1c000c30:	96be                	add	a3,a3,a5
1c000c32:	8562                	mv	a0,s8
1c000c34:	c6ca                	sw	s2,76(sp)
1c000c36:	c89e                	sw	t2,80(sp)
1c000c38:	c932                	sw	a2,144(sp)
1c000c3a:	cb36                	sw	a3,148(sp)
1c000c3c:	4766                	lw	a4,88(sp)
1c000c3e:	16070763          	beqz	a4,1c000dac <pulp_nn_matmul.constprop.6+0x574>
1c000c42:	47f2                	lw	a5,28(sp)
1c000c44:	53d2                	lw	t2,52(sp)
1c000c46:	4976                	lw	s2,92(sp)
1c000c48:	0027d293          	srli	t0,a5,0x2
1c000c4c:	44ca                	lw	s1,144(sp)
1c000c4e:	5d52                	lw	s10,52(sp)
1c000c50:	4bb6                	lw	s7,76(sp)
1c000c52:	4c46                	lw	s8,80(sp)
1c000c54:	4cda                	lw	s9,148(sp)
1c000c56:	10096fb3          	p.extbs	t6,s2
1c000c5a:	00f389b3          	add	s3,t2,a5
1c000c5e:	00229913          	slli	s2,t0,0x2
1c000c62:	01238b33          	add	s6,t2,s2
1c000c66:	fa27beb3          	p.bclr	t4,a5,29,2
1c000c6a:	01298ab3          	add	s5,s3,s2
1c000c6e:	8f3a                	mv	t5,a4
1c000c70:	020ff413          	andi	s0,t6,32
1c000c74:	ffffca13          	not	s4,t6
1c000c78:	0ff00393          	li	t2,255
1c000c7c:	1e028b63          	beqz	t0,1c000e72 <pulp_nn_matmul.constprop.6+0x63a>
1c000c80:	8e2a                	mv	t3,a0
1c000c82:	836a                	mv	t1,s10
1c000c84:	88ce                	mv	a7,s3
1c000c86:	4601                	li	a2,0
1c000c88:	4581                	li	a1,0
1c000c8a:	8816                	mv	a6,t0
1c000c8c:	00a840fb          	lp.setup	x1,a6,1c000ca0 <pulp_nn_matmul.constprop.6+0x468>
1c000c90:	004e278b          	p.lw	a5,4(t3!)
1c000c94:	0043268b          	p.lw	a3,4(t1!)
1c000c98:	0048a70b          	p.lw	a4,4(a7!)
1c000c9c:	a8f695d7          	pv.sdotusp.b	a1,a3,a5
1c000ca0:	a8f71657          	pv.sdotusp.b	a2,a4,a5
1c000ca4:	954a                	add	a0,a0,s2
1c000ca6:	87d6                	mv	a5,s5
1c000ca8:	875a                	mv	a4,s6
1c000caa:	040e8763          	beqz	t4,1c000cf8 <pulp_nn_matmul.constprop.6+0x4c0>
1c000cae:	00050683          	lb	a3,0(a0)
1c000cb2:	00074883          	lbu	a7,0(a4)
1c000cb6:	0007c803          	lbu	a6,0(a5)
1c000cba:	431685b3          	p.mac	a1,a3,a7
1c000cbe:	43068633          	p.mac	a2,a3,a6
1c000cc2:	1a1ea663          	p.beqimm	t4,1,1c000e6e <pulp_nn_matmul.constprop.6+0x636>
1c000cc6:	00150683          	lb	a3,1(a0)
1c000cca:	00174883          	lbu	a7,1(a4)
1c000cce:	0017c803          	lbu	a6,1(a5)
1c000cd2:	431685b3          	p.mac	a1,a3,a7
1c000cd6:	43068633          	p.mac	a2,a3,a6
1c000cda:	1a2ea163          	p.beqimm	t4,2,1c000e7c <pulp_nn_matmul.constprop.6+0x644>
1c000cde:	00350813          	addi	a6,a0,3
1c000ce2:	00250683          	lb	a3,2(a0)
1c000ce6:	00274703          	lbu	a4,2(a4)
1c000cea:	0027c783          	lbu	a5,2(a5)
1c000cee:	8542                	mv	a0,a6
1c000cf0:	42e685b3          	p.mac	a1,a3,a4
1c000cf4:	42f68633          	p.mac	a2,a3,a5
1c000cf8:	004ba783          	lw	a5,4(s7)
1c000cfc:	000ba883          	lw	a7,0(s7)
1c000d00:	41f5d313          	srai	t1,a1,0x1f
1c000d04:	000c2703          	lw	a4,0(s8)
1c000d08:	004c2803          	lw	a6,4(s8)
1c000d0c:	02b787b3          	mul	a5,a5,a1
1c000d10:	02b886b3          	mul	a3,a7,a1
1c000d14:	426887b3          	p.mac	a5,a7,t1
1c000d18:	9736                	add	a4,a4,a3
1c000d1a:	00d736b3          	sltu	a3,a4,a3
1c000d1e:	02b8b5b3          	mulhu	a1,a7,a1
1c000d22:	95be                	add	a1,a1,a5
1c000d24:	95c2                	add	a1,a1,a6
1c000d26:	96ae                	add	a3,a3,a1
1c000d28:	41f6d5b3          	sra	a1,a3,t6
1c000d2c:	e419                	bnez	s0,1c000d3a <pulp_nn_matmul.constprop.6+0x502>
1c000d2e:	0686                	slli	a3,a3,0x1
1c000d30:	014696b3          	sll	a3,a3,s4
1c000d34:	01f755b3          	srl	a1,a4,t6
1c000d38:	8dd5                	or	a1,a1,a3
1c000d3a:	1475e5b3          	p.clipur	a1,a1,t2
1c000d3e:	00b480ab          	p.sb	a1,1(s1!)
1c000d42:	004ba783          	lw	a5,4(s7)
1c000d46:	000ba583          	lw	a1,0(s7)
1c000d4a:	41f65893          	srai	a7,a2,0x1f
1c000d4e:	02c787b3          	mul	a5,a5,a2
1c000d52:	000c2703          	lw	a4,0(s8)
1c000d56:	004c2803          	lw	a6,4(s8)
1c000d5a:	02c586b3          	mul	a3,a1,a2
1c000d5e:	431587b3          	p.mac	a5,a1,a7
1c000d62:	9736                	add	a4,a4,a3
1c000d64:	00d736b3          	sltu	a3,a4,a3
1c000d68:	02c5b633          	mulhu	a2,a1,a2
1c000d6c:	963e                	add	a2,a2,a5
1c000d6e:	9642                	add	a2,a2,a6
1c000d70:	96b2                	add	a3,a3,a2
1c000d72:	41f6d633          	sra	a2,a3,t6
1c000d76:	e419                	bnez	s0,1c000d84 <pulp_nn_matmul.constprop.6+0x54c>
1c000d78:	0686                	slli	a3,a3,0x1
1c000d7a:	014696b3          	sll	a3,a3,s4
1c000d7e:	01f75633          	srl	a2,a4,t6
1c000d82:	8e55                	or	a2,a2,a3
1c000d84:	14766633          	p.clipur	a2,a2,t2
1c000d88:	1f7d                	addi	t5,t5,-1
1c000d8a:	00cc80ab          	p.sb	a2,1(s9!)
1c000d8e:	100f5f33          	p.exthz	t5,t5
1c000d92:	0ba1                	addi	s7,s7,8
1c000d94:	0c21                	addi	s8,s8,8
1c000d96:	ee0f13e3          	bnez	t5,1c000c7c <pulp_nn_matmul.constprop.6+0x444>
1c000d9a:	4566                	lw	a0,88(sp)
1c000d9c:	464a                	lw	a2,144(sp)
1c000d9e:	fff50793          	addi	a5,a0,-1
1c000da2:	1007d7b3          	p.exthz	a5,a5
1c000da6:	0785                	addi	a5,a5,1
1c000da8:	963e                	add	a2,a2,a5
1c000daa:	c932                	sw	a2,144(sp)
1c000dac:	46ca                	lw	a3,144(sp)
1c000dae:	47d6                	lw	a5,84(sp)
1c000db0:	443a                	lw	s0,140(sp)
1c000db2:	44aa                	lw	s1,136(sp)
1c000db4:	491a                	lw	s2,132(sp)
1c000db6:	498a                	lw	s3,128(sp)
1c000db8:	5a76                	lw	s4,124(sp)
1c000dba:	5ae6                	lw	s5,120(sp)
1c000dbc:	5b56                	lw	s6,116(sp)
1c000dbe:	5bc6                	lw	s7,112(sp)
1c000dc0:	5c36                	lw	s8,108(sp)
1c000dc2:	5ca6                	lw	s9,104(sp)
1c000dc4:	5d16                	lw	s10,100(sp)
1c000dc6:	5d86                	lw	s11,96(sp)
1c000dc8:	00f68533          	add	a0,a3,a5
1c000dcc:	6149                	addi	sp,sp,144
1c000dce:	8082                	ret
1c000dd0:	5902                	lw	s2,32(sp)
1c000dd2:	0786                	slli	a5,a5,0x1
1c000dd4:	012796b3          	sll	a3,a5,s2
1c000dd8:	01a757b3          	srl	a5,a4,s10
1c000ddc:	8fd5                	or	a5,a5,a3
1c000dde:	bd21                	j	1c000bf6 <pulp_nn_matmul.constprop.6+0x3be>
1c000de0:	5382                	lw	t2,32(sp)
1c000de2:	0786                	slli	a5,a5,0x1
1c000de4:	007796b3          	sll	a3,a5,t2
1c000de8:	01a757b3          	srl	a5,a4,s10
1c000dec:	8fd5                	or	a5,a5,a3
1c000dee:	b3e1                	j	1c000bb6 <pulp_nn_matmul.constprop.6+0x37e>
1c000df0:	5702                	lw	a4,32(sp)
1c000df2:	0686                	slli	a3,a3,0x1
1c000df4:	01a7d7b3          	srl	a5,a5,s10
1c000df8:	00e696b3          	sll	a3,a3,a4
1c000dfc:	8fd5                	or	a5,a5,a3
1c000dfe:	bbbd                	j	1c000b7c <pulp_nn_matmul.constprop.6+0x344>
1c000e00:	5602                	lw	a2,32(sp)
1c000e02:	0706                	slli	a4,a4,0x1
1c000e04:	01a5d5b3          	srl	a1,a1,s10
1c000e08:	00c71733          	sll	a4,a4,a2
1c000e0c:	8dd9                	or	a1,a1,a4
1c000e0e:	bb15                	j	1c000b42 <pulp_nn_matmul.constprop.6+0x30a>
1c000e10:	5382                	lw	t2,32(sp)
1c000e12:	0686                	slli	a3,a3,0x1
1c000e14:	01a75733          	srl	a4,a4,s10
1c000e18:	007696b3          	sll	a3,a3,t2
1c000e1c:	8f55                	or	a4,a4,a3
1c000e1e:	b1ed                	j	1c000b08 <pulp_nn_matmul.constprop.6+0x2d0>
1c000e20:	5782                	lw	a5,32(sp)
1c000e22:	0686                	slli	a3,a3,0x1
1c000e24:	01a75733          	srl	a4,a4,s10
1c000e28:	00f696b3          	sll	a3,a3,a5
1c000e2c:	8f55                	or	a4,a4,a3
1c000e2e:	b979                	j	1c000acc <pulp_nn_matmul.constprop.6+0x294>
1c000e30:	5602                	lw	a2,32(sp)
1c000e32:	0686                	slli	a3,a3,0x1
1c000e34:	01a75733          	srl	a4,a4,s10
1c000e38:	00c697b3          	sll	a5,a3,a2
1c000e3c:	8f5d                	or	a4,a4,a5
1c000e3e:	b989                	j	1c000a90 <pulp_nn_matmul.constprop.6+0x258>
1c000e40:	5382                	lw	t2,32(sp)
1c000e42:	0786                	slli	a5,a5,0x1
1c000e44:	01a65633          	srl	a2,a2,s10
1c000e48:	00779733          	sll	a4,a5,t2
1c000e4c:	8e59                	or	a2,a2,a4
1c000e4e:	b111                	j	1c000a52 <pulp_nn_matmul.constprop.6+0x21a>
1c000e50:	0c05                	addi	s8,s8,1
1c000e52:	b6f1                	j	1c000a1e <pulp_nn_matmul.constprop.6+0x1e6>
1c000e54:	4801                	li	a6,0
1c000e56:	4301                	li	t1,0
1c000e58:	4e81                	li	t4,0
1c000e5a:	4f81                	li	t6,0
1c000e5c:	4881                	li	a7,0
1c000e5e:	4e01                	li	t3,0
1c000e60:	4f01                	li	t5,0
1c000e62:	4281                	li	t0,0
1c000e64:	56e2                	lw	a3,56(sp)
1c000e66:	5652                	lw	a2,52(sp)
1c000e68:	b4dd                	j	1c00094e <pulp_nn_matmul.constprop.6+0x116>
1c000e6a:	0c09                	addi	s8,s8,2
1c000e6c:	be4d                	j	1c000a1e <pulp_nn_matmul.constprop.6+0x1e6>
1c000e6e:	0505                	addi	a0,a0,1
1c000e70:	b561                	j	1c000cf8 <pulp_nn_matmul.constprop.6+0x4c0>
1c000e72:	4601                	li	a2,0
1c000e74:	4581                	li	a1,0
1c000e76:	87ce                	mv	a5,s3
1c000e78:	876a                	mv	a4,s10
1c000e7a:	bd05                	j	1c000caa <pulp_nn_matmul.constprop.6+0x472>
1c000e7c:	0509                	addi	a0,a0,2
1c000e7e:	bdad                	j	1c000cf8 <pulp_nn_matmul.constprop.6+0x4c0>

1c000e80 <pulp_nn_conv_Ho_parallel.constprop.5>:
1c000e80:	7131                	addi	sp,sp,-192
1c000e82:	0d015303          	lhu	t1,208(sp)
1c000e86:	0d415f03          	lhu	t5,212(sp)
1c000e8a:	01402e73          	csrr	t3,uhartid
1c000e8e:	f45e3e33          	p.bclr	t3,t3,26,5
1c000e92:	001e1e93          	slli	t4,t3,0x1
1c000e96:	026e0e33          	mul	t3,t3,t1
1c000e9a:	de7a                	sw	t5,60(sp)
1c000e9c:	0d815f03          	lhu	t5,216(sp)
1c000ea0:	d94a                	sw	s2,176(sp)
1c000ea2:	0c815903          	lhu	s2,200(sp)
1c000ea6:	ca7a                	sw	t5,20(sp)
1c000ea8:	0cc15f03          	lhu	t5,204(sp)
1c000eac:	c76e                	sw	s11,140(sp)
1c000eae:	d0be                	sw	a5,96(sp)
1c000eb0:	cc7a                	sw	t5,24(sp)
1c000eb2:	0dc15f03          	lhu	t5,220(sp)
1c000eb6:	046e4db3          	p.min	s11,t3,t1
1c000eba:	032e8eb3          	mul	t4,t4,s2
1c000ebe:	c0fa                	sw	t5,64(sp)
1c000ec0:	01b307b3          	add	a5,t1,s11
1c000ec4:	0e015f03          	lhu	t5,224(sp)
1c000ec8:	0467c7b3          	p.min	a5,a5,t1
1c000ecc:	d552                	sw	s4,168(sp)
1c000ece:	d356                	sw	s5,164(sp)
1c000ed0:	ccb6                	sw	a3,88(sp)
1c000ed2:	ceba                	sw	a4,92(sp)
1c000ed4:	c6be                	sw	a5,76(sp)
1c000ed6:	df06                	sw	ra,188(sp)
1c000ed8:	dd22                	sw	s0,184(sp)
1c000eda:	db26                	sw	s1,180(sp)
1c000edc:	d74e                	sw	s3,172(sp)
1c000ede:	d15a                	sw	s6,160(sp)
1c000ee0:	cf5e                	sw	s7,156(sp)
1c000ee2:	cd62                	sw	s8,152(sp)
1c000ee4:	cb66                	sw	s9,148(sp)
1c000ee6:	c96a                	sw	s10,144(sp)
1c000ee8:	d6c2                	sw	a6,108(sp)
1c000eea:	d2c6                	sw	a7,100(sp)
1c000eec:	0c015a83          	lhu	s5,192(sp)
1c000ef0:	0c415a03          	lhu	s4,196(sp)
1c000ef4:	ce7a                	sw	t5,28(sp)
1c000ef6:	0e815f03          	lhu	t5,232(sp)
1c000efa:	0e415783          	lhu	a5,228(sp)
1c000efe:	0ec15683          	lhu	a3,236(sp)
1c000f02:	d27a                	sw	t5,36(sp)
1c000f04:	4f52                	lw	t5,20(sp)
1c000f06:	03ee8eb3          	mul	t4,t4,t5
1c000f0a:	0f015f03          	lhu	t5,240(sp)
1c000f0e:	d87a                	sw	t5,48(sp)
1c000f10:	0f415f03          	lhu	t5,244(sp)
1c000f14:	d8fa                	sw	t5,112(sp)
1c000f16:	5f72                	lw	t5,60(sp)
1c000f18:	03ed8733          	mul	a4,s11,t5
1c000f1c:	4f06                	lw	t5,64(sp)
1c000f1e:	43ee85b3          	p.mac	a1,t4,t5
1c000f22:	4f62                	lw	t5,24(sp)
1c000f24:	43e70633          	p.mac	a2,a4,t5
1c000f28:	4f36                	lw	t5,76(sp)
1c000f2a:	d42e                	sw	a1,40(sp)
1c000f2c:	dc32                	sw	a2,56(sp)
1c000f2e:	23edd763          	ble	t5,s11,1c00115c <pulp_nn_conv_Ho_parallel.constprop.5+0x2dc>
1c000f32:	4f06                	lw	t5,64(sp)
1c000f34:	40f307b3          	sub	a5,t1,a5
1c000f38:	4352                	lw	t1,20(sp)
1c000f3a:	da3e                	sw	a5,52(sp)
1c000f3c:	001f1713          	slli	a4,t5,0x1
1c000f40:	03e307b3          	mul	a5,t1,t5
1c000f44:	4f62                	lw	t5,24(sp)
1c000f46:	8d2a                	mv	s10,a0
1c000f48:	852e                	mv	a0,a1
1c000f4a:	40df06b3          	sub	a3,t5,a3
1c000f4e:	c4b6                	sw	a3,72(sp)
1c000f50:	00295493          	srli	s1,s2,0x2
1c000f54:	40900633          	neg	a2,s1
1c000f58:	060a                	slli	a2,a2,0x2
1c000f5a:	fa293433          	p.bclr	s0,s2,29,2
1c000f5e:	02690333          	mul	t1,s2,t1
1c000f62:	00249993          	slli	s3,s1,0x2
1c000f66:	c832                	sw	a2,16(sp)
1c000f68:	03270733          	mul	a4,a4,s2
1c000f6c:	00235f13          	srli	t5,t1,0x2
1c000f70:	c29a                	sw	t1,68(sp)
1c000f72:	fa233333          	p.bclr	t1,t1,29,2
1c000f76:	da9a                	sw	t1,116(sp)
1c000f78:	4352                	lw	t1,20(sp)
1c000f7a:	41e006b3          	neg	a3,t5
1c000f7e:	cafa                	sw	t5,84(sp)
1c000f80:	0f0a                	slli	t5,t5,0x2
1c000f82:	d4fa                	sw	t5,104(sp)
1c000f84:	426705b3          	p.mac	a1,a4,t1
1c000f88:	4f06                	lw	t5,64(sp)
1c000f8a:	4316                	lw	t1,68(sp)
1c000f8c:	068a                	slli	a3,a3,0x2
1c000f8e:	dcb6                	sw	a3,120(sp)
1c000f90:	012787db          	p.mac	a5,a5,s2,zero
1c000f94:	d02e                	sw	a1,32(sp)
1c000f96:	026f0f33          	mul	t5,t5,t1
1c000f9a:	1007d7b3          	p.exthz	a5,a5
1c000f9e:	c8be                	sw	a5,80(sp)
1c000fa0:	032a8c33          	mul	s8,s5,s2
1c000fa4:	defa                	sw	t5,124(sp)
1c000fa6:	4f62                	lw	t5,24(sp)
1c000fa8:	0c0f0263          	beqz	t5,1c00106c <pulp_nn_conv_Ho_parallel.constprop.5+0x1ec>
1c000fac:	5f46                	lw	t5,112(sp)
1c000fae:	4372                	lw	t1,28(sp)
1c000fb0:	4b81                	li	s7,0
1c000fb2:	03bf0cb3          	mul	s9,t5,s11
1c000fb6:	4f06                	lw	t5,64(sp)
1c000fb8:	406c8cb3          	sub	s9,s9,t1
1c000fbc:	035c8333          	mul	t1,s9,s5
1c000fc0:	019f0b33          	add	s6,t5,s9
1c000fc4:	d61a                	sw	t1,44(sp)
1c000fc6:	4f72                	lw	t5,28(sp)
1c000fc8:	1bedcb63          	blt	s11,t5,1c00117e <pulp_nn_conv_Ho_parallel.constprop.5+0x2fe>
1c000fcc:	5f52                	lw	t5,52(sp)
1c000fce:	33eddb63          	ble	t5,s11,1c001304 <pulp_nn_conv_Ho_parallel.constprop.5+0x484>
1c000fd2:	5312                	lw	t1,36(sp)
1c000fd4:	5c6bc463          	blt	s7,t1,1c00159c <pulp_nn_conv_Ho_parallel.constprop.5+0x71c>
1c000fd8:	4f26                	lw	t5,72(sp)
1c000fda:	47ebda63          	ble	t5,s7,1c00144e <pulp_nn_conv_Ho_parallel.constprop.5+0x5ce>
1c000fde:	096cd063          	ble	s6,s9,1c00105e <pulp_nn_conv_Ho_parallel.constprop.5+0x1de>
1c000fe2:	5f42                	lw	t5,48(sp)
1c000fe4:	57b2                	lw	a5,44(sp)
1c000fe6:	5326                	lw	t1,104(sp)
1c000fe8:	85ea                	mv	a1,s10
1c000fea:	437f07b3          	p.mac	a5,t5,s7
1c000fee:	00650833          	add	a6,a0,t1
1c000ff2:	5312                	lw	t1,36(sp)
1c000ff4:	5656                	lw	a2,116(sp)
1c000ff6:	5f26                	lw	t5,104(sp)
1c000ff8:	5e66                	lw	t3,120(sp)
1c000ffa:	4e96                	lw	t4,68(sp)
1c000ffc:	419b08b3          	sub	a7,s6,s9
1c001000:	406787b3          	sub	a5,a5,t1
1c001004:	432785b3          	p.mac	a1,a5,s2
1c001008:	4356                	lw	t1,84(sp)
1c00100a:	0278c07b          	lp.setup	x0,a7,1c001058 <pulp_nn_conv_Ho_parallel.constprop.5+0x1d8>
1c00100e:	01c80733          	add	a4,a6,t3
1c001012:	87ae                	mv	a5,a1
1c001014:	02030063          	beqz	t1,1c001034 <pulp_nn_conv_Ho_parallel.constprop.5+0x1b4>
1c001018:	40e807b3          	sub	a5,a6,a4
1c00101c:	17f1                	addi	a5,a5,-4
1c00101e:	8389                	srli	a5,a5,0x2
1c001020:	86ae                	mv	a3,a1
1c001022:	0785                	addi	a5,a5,1
1c001024:	0047c0fb          	lp.setup	x1,a5,1c00102c <pulp_nn_conv_Ho_parallel.constprop.5+0x1ac>
1c001028:	0046af8b          	p.lw	t6,4(a3!)
1c00102c:	01f7222b          	p.sw	t6,4(a4!)
1c001030:	01e587b3          	add	a5,a1,t5
1c001034:	c20d                	beqz	a2,1c001056 <pulp_nn_conv_Ho_parallel.constprop.5+0x1d6>
1c001036:	0007c683          	lbu	a3,0(a5)
1c00103a:	00d70023          	sb	a3,0(a4)
1c00103e:	00162c63          	p.beqimm	a2,1,1c001056 <pulp_nn_conv_Ho_parallel.constprop.5+0x1d6>
1c001042:	0017c683          	lbu	a3,1(a5)
1c001046:	00d700a3          	sb	a3,1(a4)
1c00104a:	00262663          	p.beqimm	a2,2,1c001056 <pulp_nn_conv_Ho_parallel.constprop.5+0x1d6>
1c00104e:	0027c783          	lbu	a5,2(a5)
1c001052:	00f70123          	sb	a5,2(a4)
1c001056:	95e2                	add	a1,a1,s8
1c001058:	9876                	add	a6,a6,t4
1c00105a:	5f76                	lw	t5,124(sp)
1c00105c:	957a                	add	a0,a0,t5
1c00105e:	5f02                	lw	t5,32(sp)
1c001060:	1aaf0a63          	beq	t5,a0,1c001214 <pulp_nn_conv_Ho_parallel.constprop.5+0x394>
1c001064:	4f62                	lw	t5,24(sp)
1c001066:	0b85                	addi	s7,s7,1
1c001068:	f5ebcfe3          	blt	s7,t5,1c000fc6 <pulp_nn_conv_Ho_parallel.constprop.5+0x146>
1c00106c:	4336                	lw	t1,76(sp)
1c00106e:	0d85                	addi	s11,s11,1
1c001070:	f26dcbe3          	blt	s11,t1,1c000fa6 <pulp_nn_conv_Ho_parallel.constprop.5+0x126>
1c001074:	5322                	lw	t1,40(sp)
1c001076:	0ea30363          	beq	t1,a0,1c00115c <pulp_nn_conv_Ho_parallel.constprop.5+0x2dc>
1c00107a:	5f72                	lw	t5,60(sp)
1c00107c:	0e0f0063          	beqz	t5,1c00115c <pulp_nn_conv_Ho_parallel.constprop.5+0x2dc>
1c001080:	859a                	mv	a1,t1
1c001082:	887a                	mv	a6,t5
1c001084:	4316                	lw	t1,68(sp)
1c001086:	4f06                	lw	t5,64(sp)
1c001088:	59e2                	lw	s3,56(sp)
1c00108a:	4466                	lw	s0,88(sp)
1c00108c:	03e30533          	mul	a0,t1,t5
1c001090:	5316                	lw	t1,100(sp)
1c001092:	4f46                	lw	t5,80(sp)
1c001094:	44f6                	lw	s1,92(sp)
1c001096:	5906                	lw	s2,96(sp)
1c001098:	100368b3          	p.extbs	a7,t1
1c00109c:	0208ff93          	andi	t6,a7,32
1c0010a0:	fa2f3333          	p.bclr	t1,t5,29,2
1c0010a4:	0ff00e93          	li	t4,255
1c0010a8:	fff8cf13          	not	t5,a7
1c0010ac:	de251533          	p.extractu	a0,a0,15,2
1c0010b0:	00251293          	slli	t0,a0,0x2
1c0010b4:	00558e33          	add	t3,a1,t0
1c0010b8:	8a2e                	mv	s4,a1
1c0010ba:	0508407b          	lp.setup	x0,a6,1c00115a <pulp_nn_conv_Ho_parallel.constprop.5+0x2da>
1c0010be:	64050363          	beqz	a0,1c001704 <pulp_nn_conv_Ho_parallel.constprop.5+0x884>
1c0010c2:	414e06b3          	sub	a3,t3,s4
1c0010c6:	16f1                	addi	a3,a3,-4
1c0010c8:	8289                	srli	a3,a3,0x2
1c0010ca:	83a2                	mv	t2,s0
1c0010cc:	85d2                	mv	a1,s4
1c0010ce:	4601                	li	a2,0
1c0010d0:	0685                	addi	a3,a3,1
1c0010d2:	0066c0fb          	lp.setup	x1,a3,1c0010de <pulp_nn_conv_Ho_parallel.constprop.5+0x25e>
1c0010d6:	0043a78b          	p.lw	a5,4(t2!)
1c0010da:	0045a70b          	p.lw	a4,4(a1!)
1c0010de:	a8f71657          	pv.sdotusp.b	a2,a4,a5
1c0010e2:	9416                	add	s0,s0,t0
1c0010e4:	87f2                	mv	a5,t3
1c0010e6:	02030b63          	beqz	t1,1c00111c <pulp_nn_conv_Ho_parallel.constprop.5+0x29c>
1c0010ea:	00040683          	lb	a3,0(s0)
1c0010ee:	0007c703          	lbu	a4,0(a5)
1c0010f2:	42e68633          	p.mac	a2,a3,a4
1c0010f6:	60132563          	p.beqimm	t1,1,1c001700 <pulp_nn_conv_Ho_parallel.constprop.5+0x880>
1c0010fa:	00140683          	lb	a3,1(s0)
1c0010fe:	0017c703          	lbu	a4,1(a5)
1c001102:	42e68633          	p.mac	a2,a3,a4
1c001106:	60232263          	p.beqimm	t1,2,1c00170a <pulp_nn_conv_Ho_parallel.constprop.5+0x88a>
1c00110a:	00340713          	addi	a4,s0,3
1c00110e:	00240683          	lb	a3,2(s0)
1c001112:	0027c783          	lbu	a5,2(a5)
1c001116:	843a                	mv	s0,a4
1c001118:	42f68633          	p.mac	a2,a3,a5
1c00111c:	40d4                	lw	a3,4(s1)
1c00111e:	408c                	lw	a1,0(s1)
1c001120:	41f65a93          	srai	s5,a2,0x1f
1c001124:	00092783          	lw	a5,0(s2)
1c001128:	00492383          	lw	t2,4(s2)
1c00112c:	02c686b3          	mul	a3,a3,a2
1c001130:	02c58733          	mul	a4,a1,a2
1c001134:	435586b3          	p.mac	a3,a1,s5
1c001138:	97ba                	add	a5,a5,a4
1c00113a:	00e7b733          	sltu	a4,a5,a4
1c00113e:	02c5b633          	mulhu	a2,a1,a2
1c001142:	96b2                	add	a3,a3,a2
1c001144:	969e                	add	a3,a3,t2
1c001146:	9736                	add	a4,a4,a3
1c001148:	5a0f8563          	beqz	t6,1c0016f2 <pulp_nn_conv_Ho_parallel.constprop.5+0x872>
1c00114c:	411757b3          	sra	a5,a4,a7
1c001150:	15d7e7b3          	p.clipur	a5,a5,t4
1c001154:	00f980ab          	p.sb	a5,1(s3!)
1c001158:	04a1                	addi	s1,s1,8
1c00115a:	0921                	addi	s2,s2,8
1c00115c:	546a                	lw	s0,184(sp)
1c00115e:	50fa                	lw	ra,188(sp)
1c001160:	54da                	lw	s1,180(sp)
1c001162:	594a                	lw	s2,176(sp)
1c001164:	59ba                	lw	s3,172(sp)
1c001166:	5a2a                	lw	s4,168(sp)
1c001168:	5a9a                	lw	s5,164(sp)
1c00116a:	5b0a                	lw	s6,160(sp)
1c00116c:	4bfa                	lw	s7,156(sp)
1c00116e:	4c6a                	lw	s8,152(sp)
1c001170:	4cda                	lw	s9,148(sp)
1c001172:	4d4a                	lw	s10,144(sp)
1c001174:	4dba                	lw	s11,140(sp)
1c001176:	4501                	li	a0,0
1c001178:	6129                	addi	sp,sp,192
1c00117a:	eacff06f          	j	1c000826 <pi_cl_team_barrier.lto_priv.16>
1c00117e:	ef6cd0e3          	ble	s6,s9,1c00105e <pulp_nn_conv_Ho_parallel.constprop.5+0x1de>
1c001182:	5342                	lw	t1,48(sp)
1c001184:	5f12                	lw	t5,36(sp)
1c001186:	8fce                	mv	t6,s3
1c001188:	03730e33          	mul	t3,t1,s7
1c00118c:	5332                	lw	t1,44(sp)
1c00118e:	8866                	mv	a6,s9
1c001190:	41ee0e33          	sub	t3,t3,t5
1c001194:	006e07b3          	add	a5,t3,t1
1c001198:	4352                	lw	t1,20(sp)
1c00119a:	43278fb3          	p.mac	t6,a5,s2
1c00119e:	01c30f33          	add	t5,t1,t3
1c0011a2:	055f42b3          	p.min	t0,t5,s5
1c0011a6:	032303b3          	mul	t2,t1,s2
1c0011aa:	9fea                	add	t6,t6,s10
1c0011ac:	05ee5d63          	ble	t5,t3,1c001206 <pulp_nn_conv_Ho_parallel.constprop.5+0x386>
1c0011b0:	87aa                	mv	a5,a0
1c0011b2:	8772                	mv	a4,t3
1c0011b4:	095e4b63          	blt	t3,s5,1c00124a <pulp_nn_conv_Ho_parallel.constprop.5+0x3ca>
1c0011b8:	00170693          	addi	a3,a4,1
1c0011bc:	40ef0733          	sub	a4,t5,a4
1c0011c0:	10df4463          	blt	t5,a3,1c0012c8 <pulp_nn_conv_Ho_parallel.constprop.5+0x448>
1c0011c4:	800006b7          	lui	a3,0x80000
1c0011c8:	10df0063          	beq	t5,a3,1c0012c8 <pulp_nn_conv_Ho_parallel.constprop.5+0x448>
1c0011cc:	01b7407b          	lp.setup	x0,a4,1c001202 <pulp_nn_conv_Ho_parallel.constprop.5+0x382>
1c0011d0:	863e                	mv	a2,a5
1c0011d2:	86a6                	mv	a3,s1
1c0011d4:	12048463          	beqz	s1,1c0012fc <pulp_nn_conv_Ho_parallel.constprop.5+0x47c>
1c0011d8:	0066c0fb          	lp.setup	x1,a3,1c0011e4 <pulp_nn_conv_Ho_parallel.constprop.5+0x364>
1c0011dc:	000075d7          	pv.add.sci.b	a1,zero,0
1c0011e0:	00b6222b          	p.sw	a1,4(a2!)
1c0011e4:	0001                	nop
1c0011e6:	013786b3          	add	a3,a5,s3
1c0011ea:	c819                	beqz	s0,1c001200 <pulp_nn_conv_Ho_parallel.constprop.5+0x380>
1c0011ec:	00068023          	sb	zero,0(a3) # 80000000 <pulp__FC+0x80000001>
1c0011f0:	00142863          	p.beqimm	s0,1,1c001200 <pulp_nn_conv_Ho_parallel.constprop.5+0x380>
1c0011f4:	000680a3          	sb	zero,1(a3)
1c0011f8:	00242463          	p.beqimm	s0,2,1c001200 <pulp_nn_conv_Ho_parallel.constprop.5+0x380>
1c0011fc:	00068123          	sb	zero,2(a3)
1c001200:	97ca                	add	a5,a5,s2
1c001202:	0001                	nop
1c001204:	951e                	add	a0,a0,t2
1c001206:	0805                	addi	a6,a6,1
1c001208:	9fe2                	add	t6,t6,s8
1c00120a:	fb6811e3          	bne	a6,s6,1c0011ac <pulp_nn_conv_Ho_parallel.constprop.5+0x32c>
1c00120e:	5f02                	lw	t5,32(sp)
1c001210:	e4af1ae3          	bne	t5,a0,1c001064 <pulp_nn_conv_Ho_parallel.constprop.5+0x1e4>
1c001214:	5362                	lw	t1,56(sp)
1c001216:	5f72                	lw	t5,60(sp)
1c001218:	5886                	lw	a7,96(sp)
1c00121a:	4876                	lw	a6,92(sp)
1c00121c:	01e307b3          	add	a5,t1,t5
1c001220:	c23e                	sw	a5,4(sp)
1c001222:	5716                	lw	a4,100(sp)
1c001224:	57b6                	lw	a5,108(sp)
1c001226:	46c6                	lw	a3,80(sp)
1c001228:	55a2                	lw	a1,40(sp)
1c00122a:	4566                	lw	a0,88(sp)
1c00122c:	c01a                	sw	t1,0(sp)
1c00122e:	867a                	mv	a2,t5
1c001230:	e08ff0ef          	jal	ra,1c000838 <pulp_nn_matmul.constprop.6>
1c001234:	4362                	lw	t1,24(sp)
1c001236:	dc2a                	sw	a0,56(sp)
1c001238:	0b85                	addi	s7,s7,1
1c00123a:	5522                	lw	a0,40(sp)
1c00123c:	d86bc5e3          	blt	s7,t1,1c000fc6 <pulp_nn_conv_Ho_parallel.constprop.5+0x146>
1c001240:	4336                	lw	t1,76(sp)
1c001242:	0d85                	addi	s11,s11,1
1c001244:	d66dc1e3          	blt	s11,t1,1c000fa6 <pulp_nn_conv_Ho_parallel.constprop.5+0x126>
1c001248:	b535                	j	1c001074 <pulp_nn_conv_Ho_parallel.constprop.5+0x1f4>
1c00124a:	001e0593          	addi	a1,t3,1
1c00124e:	867e                	mv	a2,t6
1c001250:	41c286b3          	sub	a3,t0,t3
1c001254:	4ab2cd63          	blt	t0,a1,1c00170e <pulp_nn_conv_Ho_parallel.constprop.5+0x88e>
1c001258:	800005b7          	lui	a1,0x80000
1c00125c:	4ab28963          	beq	t0,a1,1c00170e <pulp_nn_conv_Ho_parallel.constprop.5+0x88e>
1c001260:	02b6c07b          	lp.setup	x0,a3,1c0012b6 <pulp_nn_conv_Ho_parallel.constprop.5+0x436>
1c001264:	07487463          	bleu	s4,a6,1c0012cc <pulp_nn_conv_Ho_parallel.constprop.5+0x44c>
1c001268:	06074263          	bltz	a4,1c0012cc <pulp_nn_conv_Ho_parallel.constprop.5+0x44c>
1c00126c:	4342                	lw	t1,16(sp)
1c00126e:	006608b3          	add	a7,a2,t1
1c001272:	85c6                	mv	a1,a7
1c001274:	46048b63          	beqz	s1,1c0016ea <pulp_nn_conv_Ho_parallel.constprop.5+0x86a>
1c001278:	ffc98593          	addi	a1,s3,-4
1c00127c:	8189                	srli	a1,a1,0x2
1c00127e:	833e                	mv	t1,a5
1c001280:	0585                	addi	a1,a1,1
1c001282:	0045c0fb          	lp.setup	x1,a1,1c00128a <pulp_nn_conv_Ho_parallel.constprop.5+0x40a>
1c001286:	0048ae8b          	p.lw	t4,4(a7!)
1c00128a:	01d3222b          	p.sw	t4,4(t1!)
1c00128e:	85b2                	mv	a1,a2
1c001290:	c00d                	beqz	s0,1c0012b2 <pulp_nn_conv_Ho_parallel.constprop.5+0x432>
1c001292:	0005c883          	lbu	a7,0(a1) # 80000000 <pulp__FC+0x80000001>
1c001296:	01130023          	sb	a7,0(t1)
1c00129a:	00142c63          	p.beqimm	s0,1,1c0012b2 <pulp_nn_conv_Ho_parallel.constprop.5+0x432>
1c00129e:	0015c883          	lbu	a7,1(a1)
1c0012a2:	011300a3          	sb	a7,1(t1)
1c0012a6:	00242663          	p.beqimm	s0,2,1c0012b2 <pulp_nn_conv_Ho_parallel.constprop.5+0x432>
1c0012aa:	0025c583          	lbu	a1,2(a1)
1c0012ae:	00b30123          	sb	a1,2(t1)
1c0012b2:	97ca                	add	a5,a5,s2
1c0012b4:	0705                	addi	a4,a4,1
1c0012b6:	964a                	add	a2,a2,s2
1c0012b8:	f5e756e3          	ble	t5,a4,1c001204 <pulp_nn_conv_Ho_parallel.constprop.5+0x384>
1c0012bc:	00170693          	addi	a3,a4,1
1c0012c0:	40ef0733          	sub	a4,t5,a4
1c0012c4:	f0df50e3          	ble	a3,t5,1c0011c4 <pulp_nn_conv_Ho_parallel.constprop.5+0x344>
1c0012c8:	4705                	li	a4,1
1c0012ca:	b709                	j	1c0011cc <pulp_nn_conv_Ho_parallel.constprop.5+0x34c>
1c0012cc:	c895                	beqz	s1,1c001300 <pulp_nn_conv_Ho_parallel.constprop.5+0x480>
1c0012ce:	88be                	mv	a7,a5
1c0012d0:	85a6                	mv	a1,s1
1c0012d2:	0065c0fb          	lp.setup	x1,a1,1c0012de <pulp_nn_conv_Ho_parallel.constprop.5+0x45e>
1c0012d6:	00007357          	pv.add.sci.b	t1,zero,0
1c0012da:	0068a22b          	p.sw	t1,4(a7!)
1c0012de:	0001                	nop
1c0012e0:	013785b3          	add	a1,a5,s3
1c0012e4:	d479                	beqz	s0,1c0012b2 <pulp_nn_conv_Ho_parallel.constprop.5+0x432>
1c0012e6:	00058023          	sb	zero,0(a1)
1c0012ea:	fc1424e3          	p.beqimm	s0,1,1c0012b2 <pulp_nn_conv_Ho_parallel.constprop.5+0x432>
1c0012ee:	000580a3          	sb	zero,1(a1)
1c0012f2:	fc2420e3          	p.beqimm	s0,2,1c0012b2 <pulp_nn_conv_Ho_parallel.constprop.5+0x432>
1c0012f6:	00058123          	sb	zero,2(a1)
1c0012fa:	bf65                	j	1c0012b2 <pulp_nn_conv_Ho_parallel.constprop.5+0x432>
1c0012fc:	86be                	mv	a3,a5
1c0012fe:	b5f5                	j	1c0011ea <pulp_nn_conv_Ho_parallel.constprop.5+0x36a>
1c001300:	85be                	mv	a1,a5
1c001302:	b7cd                	j	1c0012e4 <pulp_nn_conv_Ho_parallel.constprop.5+0x464>
1c001304:	d56cdde3          	ble	s6,s9,1c00105e <pulp_nn_conv_Ho_parallel.constprop.5+0x1de>
1c001308:	5f42                	lw	t5,48(sp)
1c00130a:	5312                	lw	t1,36(sp)
1c00130c:	8fce                	mv	t6,s3
1c00130e:	037f0e33          	mul	t3,t5,s7
1c001312:	5f32                	lw	t5,44(sp)
1c001314:	8866                	mv	a6,s9
1c001316:	406e0e33          	sub	t3,t3,t1
1c00131a:	4352                	lw	t1,20(sp)
1c00131c:	01cf07b3          	add	a5,t5,t3
1c001320:	43278fb3          	p.mac	t6,a5,s2
1c001324:	01c30f33          	add	t5,t1,t3
1c001328:	055f42b3          	p.min	t0,t5,s5
1c00132c:	032303b3          	mul	t2,t1,s2
1c001330:	9fea                	add	t6,t6,s10
1c001332:	05ee5c63          	ble	t5,t3,1c00138a <pulp_nn_conv_Ho_parallel.constprop.5+0x50a>
1c001336:	87aa                	mv	a5,a0
1c001338:	8772                	mv	a4,t3
1c00133a:	055e4f63          	blt	t3,s5,1c001398 <pulp_nn_conv_Ho_parallel.constprop.5+0x518>
1c00133e:	00170693          	addi	a3,a4,1
1c001342:	40ef0733          	sub	a4,t5,a4
1c001346:	0cdf4863          	blt	t5,a3,1c001416 <pulp_nn_conv_Ho_parallel.constprop.5+0x596>
1c00134a:	800006b7          	lui	a3,0x80000
1c00134e:	0cdf0463          	beq	t5,a3,1c001416 <pulp_nn_conv_Ho_parallel.constprop.5+0x596>
1c001352:	01a7407b          	lp.setup	x0,a4,1c001386 <pulp_nn_conv_Ho_parallel.constprop.5+0x506>
1c001356:	863e                	mv	a2,a5
1c001358:	86a6                	mv	a3,s1
1c00135a:	cc8d                	beqz	s1,1c001394 <pulp_nn_conv_Ho_parallel.constprop.5+0x514>
1c00135c:	0066c0fb          	lp.setup	x1,a3,1c001368 <pulp_nn_conv_Ho_parallel.constprop.5+0x4e8>
1c001360:	000075d7          	pv.add.sci.b	a1,zero,0
1c001364:	00b6222b          	p.sw	a1,4(a2!)
1c001368:	0001                	nop
1c00136a:	013786b3          	add	a3,a5,s3
1c00136e:	c819                	beqz	s0,1c001384 <pulp_nn_conv_Ho_parallel.constprop.5+0x504>
1c001370:	00068023          	sb	zero,0(a3) # 80000000 <pulp__FC+0x80000001>
1c001374:	00142863          	p.beqimm	s0,1,1c001384 <pulp_nn_conv_Ho_parallel.constprop.5+0x504>
1c001378:	000680a3          	sb	zero,1(a3)
1c00137c:	00242463          	p.beqimm	s0,2,1c001384 <pulp_nn_conv_Ho_parallel.constprop.5+0x504>
1c001380:	00068123          	sb	zero,2(a3)
1c001384:	97ca                	add	a5,a5,s2
1c001386:	0001                	nop
1c001388:	951e                	add	a0,a0,t2
1c00138a:	0805                	addi	a6,a6,1
1c00138c:	9fe2                	add	t6,t6,s8
1c00138e:	fb6812e3          	bne	a6,s6,1c001332 <pulp_nn_conv_Ho_parallel.constprop.5+0x4b2>
1c001392:	b1f1                	j	1c00105e <pulp_nn_conv_Ho_parallel.constprop.5+0x1de>
1c001394:	86be                	mv	a3,a5
1c001396:	bfe1                	j	1c00136e <pulp_nn_conv_Ho_parallel.constprop.5+0x4ee>
1c001398:	001e0593          	addi	a1,t3,1
1c00139c:	867e                	mv	a2,t6
1c00139e:	41c286b3          	sub	a3,t0,t3
1c0013a2:	36b2c863          	blt	t0,a1,1c001712 <pulp_nn_conv_Ho_parallel.constprop.5+0x892>
1c0013a6:	800005b7          	lui	a1,0x80000
1c0013aa:	36b28463          	beq	t0,a1,1c001712 <pulp_nn_conv_Ho_parallel.constprop.5+0x892>
1c0013ae:	02b6c07b          	lp.setup	x0,a3,1c001404 <pulp_nn_conv_Ho_parallel.constprop.5+0x584>
1c0013b2:	07487463          	bleu	s4,a6,1c00141a <pulp_nn_conv_Ho_parallel.constprop.5+0x59a>
1c0013b6:	06074263          	bltz	a4,1c00141a <pulp_nn_conv_Ho_parallel.constprop.5+0x59a>
1c0013ba:	4342                	lw	t1,16(sp)
1c0013bc:	006608b3          	add	a7,a2,t1
1c0013c0:	85c6                	mv	a1,a7
1c0013c2:	32048663          	beqz	s1,1c0016ee <pulp_nn_conv_Ho_parallel.constprop.5+0x86e>
1c0013c6:	ffc98593          	addi	a1,s3,-4
1c0013ca:	8189                	srli	a1,a1,0x2
1c0013cc:	833e                	mv	t1,a5
1c0013ce:	0585                	addi	a1,a1,1
1c0013d0:	0045c0fb          	lp.setup	x1,a1,1c0013d8 <pulp_nn_conv_Ho_parallel.constprop.5+0x558>
1c0013d4:	0048ae8b          	p.lw	t4,4(a7!)
1c0013d8:	01d3222b          	p.sw	t4,4(t1!)
1c0013dc:	85b2                	mv	a1,a2
1c0013de:	c00d                	beqz	s0,1c001400 <pulp_nn_conv_Ho_parallel.constprop.5+0x580>
1c0013e0:	0005c883          	lbu	a7,0(a1) # 80000000 <pulp__FC+0x80000001>
1c0013e4:	01130023          	sb	a7,0(t1)
1c0013e8:	00142c63          	p.beqimm	s0,1,1c001400 <pulp_nn_conv_Ho_parallel.constprop.5+0x580>
1c0013ec:	0015c883          	lbu	a7,1(a1)
1c0013f0:	011300a3          	sb	a7,1(t1)
1c0013f4:	00242663          	p.beqimm	s0,2,1c001400 <pulp_nn_conv_Ho_parallel.constprop.5+0x580>
1c0013f8:	0025c583          	lbu	a1,2(a1)
1c0013fc:	00b30123          	sb	a1,2(t1)
1c001400:	97ca                	add	a5,a5,s2
1c001402:	0705                	addi	a4,a4,1
1c001404:	964a                	add	a2,a2,s2
1c001406:	f9e751e3          	ble	t5,a4,1c001388 <pulp_nn_conv_Ho_parallel.constprop.5+0x508>
1c00140a:	00170693          	addi	a3,a4,1
1c00140e:	40ef0733          	sub	a4,t5,a4
1c001412:	f2df5ce3          	ble	a3,t5,1c00134a <pulp_nn_conv_Ho_parallel.constprop.5+0x4ca>
1c001416:	4705                	li	a4,1
1c001418:	bf2d                	j	1c001352 <pulp_nn_conv_Ho_parallel.constprop.5+0x4d2>
1c00141a:	c885                	beqz	s1,1c00144a <pulp_nn_conv_Ho_parallel.constprop.5+0x5ca>
1c00141c:	88be                	mv	a7,a5
1c00141e:	85a6                	mv	a1,s1
1c001420:	0065c0fb          	lp.setup	x1,a1,1c00142c <pulp_nn_conv_Ho_parallel.constprop.5+0x5ac>
1c001424:	00007357          	pv.add.sci.b	t1,zero,0
1c001428:	0068a22b          	p.sw	t1,4(a7!)
1c00142c:	0001                	nop
1c00142e:	013785b3          	add	a1,a5,s3
1c001432:	d479                	beqz	s0,1c001400 <pulp_nn_conv_Ho_parallel.constprop.5+0x580>
1c001434:	00058023          	sb	zero,0(a1)
1c001438:	fc1424e3          	p.beqimm	s0,1,1c001400 <pulp_nn_conv_Ho_parallel.constprop.5+0x580>
1c00143c:	000580a3          	sb	zero,1(a1)
1c001440:	fc2420e3          	p.beqimm	s0,2,1c001400 <pulp_nn_conv_Ho_parallel.constprop.5+0x580>
1c001444:	00058123          	sb	zero,2(a1)
1c001448:	bf65                	j	1c001400 <pulp_nn_conv_Ho_parallel.constprop.5+0x580>
1c00144a:	85be                	mv	a1,a5
1c00144c:	b7dd                	j	1c001432 <pulp_nn_conv_Ho_parallel.constprop.5+0x5b2>
1c00144e:	c16cd8e3          	ble	s6,s9,1c00105e <pulp_nn_conv_Ho_parallel.constprop.5+0x1de>
1c001452:	5342                	lw	t1,48(sp)
1c001454:	5fb2                	lw	t6,44(sp)
1c001456:	8f66                	mv	t5,s9
1c001458:	03730e33          	mul	t3,t1,s7
1c00145c:	4352                	lw	t1,20(sp)
1c00145e:	032303b3          	mul	t2,t1,s2
1c001462:	5312                	lw	t1,36(sp)
1c001464:	406e0e33          	sub	t3,t3,t1
1c001468:	4352                	lw	t1,20(sp)
1c00146a:	01c30eb3          	add	t4,t1,t3
1c00146e:	040ec2b3          	p.min	t0,t4,zero
1c001472:	07de5463          	ble	t4,t3,1c0014da <pulp_nn_conv_Ho_parallel.constprop.5+0x65a>
1c001476:	86aa                	mv	a3,a0
1c001478:	8672                	mv	a2,t3
1c00147a:	0a0e4763          	bltz	t3,1c001528 <pulp_nn_conv_Ho_parallel.constprop.5+0x6a8>
1c00147e:	01f60733          	add	a4,a2,t6
1c001482:	886a                	mv	a6,s10
1c001484:	00160793          	addi	a5,a2,1
1c001488:	43270833          	p.mac	a6,a4,s2
1c00148c:	40ce85b3          	sub	a1,t4,a2
1c001490:	0efece63          	blt	t4,a5,1c00158c <pulp_nn_conv_Ho_parallel.constprop.5+0x70c>
1c001494:	800007b7          	lui	a5,0x80000
1c001498:	0efe8a63          	beq	t4,a5,1c00158c <pulp_nn_conv_Ho_parallel.constprop.5+0x70c>
1c00149c:	01d5c07b          	lp.setup	x0,a1,1c0014d6 <pulp_nn_conv_Ho_parallel.constprop.5+0x656>
1c0014a0:	05564263          	blt	a2,s5,1c0014e4 <pulp_nn_conv_Ho_parallel.constprop.5+0x664>
1c0014a4:	8736                	mv	a4,a3
1c0014a6:	87a6                	mv	a5,s1
1c0014a8:	c4f5                	beqz	s1,1c001594 <pulp_nn_conv_Ho_parallel.constprop.5+0x714>
1c0014aa:	0067c0fb          	lp.setup	x1,a5,1c0014b6 <pulp_nn_conv_Ho_parallel.constprop.5+0x636>
1c0014ae:	000078d7          	pv.add.sci.b	a7,zero,0
1c0014b2:	0117222b          	p.sw	a7,4(a4!)
1c0014b6:	0001                	nop
1c0014b8:	013687b3          	add	a5,a3,s3
1c0014bc:	c819                	beqz	s0,1c0014d2 <pulp_nn_conv_Ho_parallel.constprop.5+0x652>
1c0014be:	00078023          	sb	zero,0(a5) # 80000000 <pulp__FC+0x80000001>
1c0014c2:	00142863          	p.beqimm	s0,1,1c0014d2 <pulp_nn_conv_Ho_parallel.constprop.5+0x652>
1c0014c6:	000780a3          	sb	zero,1(a5)
1c0014ca:	00242463          	p.beqimm	s0,2,1c0014d2 <pulp_nn_conv_Ho_parallel.constprop.5+0x652>
1c0014ce:	00078123          	sb	zero,2(a5)
1c0014d2:	96ca                	add	a3,a3,s2
1c0014d4:	0605                	addi	a2,a2,1
1c0014d6:	984a                	add	a6,a6,s2
1c0014d8:	951e                	add	a0,a0,t2
1c0014da:	0f05                	addi	t5,t5,1
1c0014dc:	9fd6                	add	t6,t6,s5
1c0014de:	f96f1ae3          	bne	t5,s6,1c001472 <pulp_nn_conv_Ho_parallel.constprop.5+0x5f2>
1c0014e2:	beb5                	j	1c00105e <pulp_nn_conv_Ho_parallel.constprop.5+0x1de>
1c0014e4:	87c2                	mv	a5,a6
1c0014e6:	c8cd                	beqz	s1,1c001598 <pulp_nn_conv_Ho_parallel.constprop.5+0x718>
1c0014e8:	ffc98793          	addi	a5,s3,-4
1c0014ec:	8389                	srli	a5,a5,0x2
1c0014ee:	88c2                	mv	a7,a6
1c0014f0:	8736                	mv	a4,a3
1c0014f2:	0785                	addi	a5,a5,1
1c0014f4:	0047c0fb          	lp.setup	x1,a5,1c0014fc <pulp_nn_conv_Ho_parallel.constprop.5+0x67c>
1c0014f8:	0048a30b          	p.lw	t1,4(a7!)
1c0014fc:	0067222b          	p.sw	t1,4(a4!)
1c001500:	013807b3          	add	a5,a6,s3
1c001504:	d479                	beqz	s0,1c0014d2 <pulp_nn_conv_Ho_parallel.constprop.5+0x652>
1c001506:	0007c883          	lbu	a7,0(a5)
1c00150a:	01170023          	sb	a7,0(a4)
1c00150e:	fc1422e3          	p.beqimm	s0,1,1c0014d2 <pulp_nn_conv_Ho_parallel.constprop.5+0x652>
1c001512:	0017c883          	lbu	a7,1(a5)
1c001516:	011700a3          	sb	a7,1(a4)
1c00151a:	fa242ce3          	p.beqimm	s0,2,1c0014d2 <pulp_nn_conv_Ho_parallel.constprop.5+0x652>
1c00151e:	0027c783          	lbu	a5,2(a5)
1c001522:	00f70123          	sb	a5,2(a4)
1c001526:	b775                	j	1c0014d2 <pulp_nn_conv_Ho_parallel.constprop.5+0x652>
1c001528:	001e0793          	addi	a5,t3,1
1c00152c:	41c285b3          	sub	a1,t0,t3
1c001530:	1ef2c363          	blt	t0,a5,1c001716 <pulp_nn_conv_Ho_parallel.constprop.5+0x896>
1c001534:	800007b7          	lui	a5,0x80000
1c001538:	1cf28f63          	beq	t0,a5,1c001716 <pulp_nn_conv_Ho_parallel.constprop.5+0x896>
1c00153c:	01a5c07b          	lp.setup	x0,a1,1c001570 <pulp_nn_conv_Ho_parallel.constprop.5+0x6f0>
1c001540:	c8a1                	beqz	s1,1c001590 <pulp_nn_conv_Ho_parallel.constprop.5+0x710>
1c001542:	8736                	mv	a4,a3
1c001544:	87a6                	mv	a5,s1
1c001546:	0067c0fb          	lp.setup	x1,a5,1c001552 <pulp_nn_conv_Ho_parallel.constprop.5+0x6d2>
1c00154a:	00007857          	pv.add.sci.b	a6,zero,0
1c00154e:	0107222b          	p.sw	a6,4(a4!)
1c001552:	0001                	nop
1c001554:	013687b3          	add	a5,a3,s3
1c001558:	c819                	beqz	s0,1c00156e <pulp_nn_conv_Ho_parallel.constprop.5+0x6ee>
1c00155a:	00078023          	sb	zero,0(a5) # 80000000 <pulp__FC+0x80000001>
1c00155e:	00142863          	p.beqimm	s0,1,1c00156e <pulp_nn_conv_Ho_parallel.constprop.5+0x6ee>
1c001562:	000780a3          	sb	zero,1(a5)
1c001566:	00242463          	p.beqimm	s0,2,1c00156e <pulp_nn_conv_Ho_parallel.constprop.5+0x6ee>
1c00156a:	00078123          	sb	zero,2(a5)
1c00156e:	96ca                	add	a3,a3,s2
1c001570:	0605                	addi	a2,a2,1
1c001572:	f7d653e3          	ble	t4,a2,1c0014d8 <pulp_nn_conv_Ho_parallel.constprop.5+0x658>
1c001576:	01f60733          	add	a4,a2,t6
1c00157a:	886a                	mv	a6,s10
1c00157c:	00160793          	addi	a5,a2,1
1c001580:	43270833          	p.mac	a6,a4,s2
1c001584:	40ce85b3          	sub	a1,t4,a2
1c001588:	f0fed6e3          	ble	a5,t4,1c001494 <pulp_nn_conv_Ho_parallel.constprop.5+0x614>
1c00158c:	4585                	li	a1,1
1c00158e:	b739                	j	1c00149c <pulp_nn_conv_Ho_parallel.constprop.5+0x61c>
1c001590:	87b6                	mv	a5,a3
1c001592:	b7d9                	j	1c001558 <pulp_nn_conv_Ho_parallel.constprop.5+0x6d8>
1c001594:	87b6                	mv	a5,a3
1c001596:	b71d                	j	1c0014bc <pulp_nn_conv_Ho_parallel.constprop.5+0x63c>
1c001598:	8736                	mv	a4,a3
1c00159a:	b7ad                	j	1c001504 <pulp_nn_conv_Ho_parallel.constprop.5+0x684>
1c00159c:	ad6cd1e3          	ble	s6,s9,1c00105e <pulp_nn_conv_Ho_parallel.constprop.5+0x1de>
1c0015a0:	5f42                	lw	t5,48(sp)
1c0015a2:	4352                	lw	t1,20(sp)
1c0015a4:	5fb2                	lw	t6,44(sp)
1c0015a6:	037f0e33          	mul	t3,t5,s7
1c0015aa:	8f66                	mv	t5,s9
1c0015ac:	032303b3          	mul	t2,t1,s2
1c0015b0:	5312                	lw	t1,36(sp)
1c0015b2:	406e0e33          	sub	t3,t3,t1
1c0015b6:	4352                	lw	t1,20(sp)
1c0015b8:	01c30eb3          	add	t4,t1,t3
1c0015bc:	040ec2b3          	p.min	t0,t4,zero
1c0015c0:	07de5463          	ble	t4,t3,1c001628 <pulp_nn_conv_Ho_parallel.constprop.5+0x7a8>
1c0015c4:	86aa                	mv	a3,a0
1c0015c6:	8672                	mv	a2,t3
1c0015c8:	0a0e4763          	bltz	t3,1c001676 <pulp_nn_conv_Ho_parallel.constprop.5+0x7f6>
1c0015cc:	01f60733          	add	a4,a2,t6
1c0015d0:	886a                	mv	a6,s10
1c0015d2:	00160793          	addi	a5,a2,1
1c0015d6:	43270833          	p.mac	a6,a4,s2
1c0015da:	40ce85b3          	sub	a1,t4,a2
1c0015de:	0efece63          	blt	t4,a5,1c0016da <pulp_nn_conv_Ho_parallel.constprop.5+0x85a>
1c0015e2:	800007b7          	lui	a5,0x80000
1c0015e6:	0efe8a63          	beq	t4,a5,1c0016da <pulp_nn_conv_Ho_parallel.constprop.5+0x85a>
1c0015ea:	01d5c07b          	lp.setup	x0,a1,1c001624 <pulp_nn_conv_Ho_parallel.constprop.5+0x7a4>
1c0015ee:	05564263          	blt	a2,s5,1c001632 <pulp_nn_conv_Ho_parallel.constprop.5+0x7b2>
1c0015f2:	8736                	mv	a4,a3
1c0015f4:	87a6                	mv	a5,s1
1c0015f6:	c4f5                	beqz	s1,1c0016e2 <pulp_nn_conv_Ho_parallel.constprop.5+0x862>
1c0015f8:	0067c0fb          	lp.setup	x1,a5,1c001604 <pulp_nn_conv_Ho_parallel.constprop.5+0x784>
1c0015fc:	000078d7          	pv.add.sci.b	a7,zero,0
1c001600:	0117222b          	p.sw	a7,4(a4!)
1c001604:	0001                	nop
1c001606:	013687b3          	add	a5,a3,s3
1c00160a:	c819                	beqz	s0,1c001620 <pulp_nn_conv_Ho_parallel.constprop.5+0x7a0>
1c00160c:	00078023          	sb	zero,0(a5) # 80000000 <pulp__FC+0x80000001>
1c001610:	00142863          	p.beqimm	s0,1,1c001620 <pulp_nn_conv_Ho_parallel.constprop.5+0x7a0>
1c001614:	000780a3          	sb	zero,1(a5)
1c001618:	00242463          	p.beqimm	s0,2,1c001620 <pulp_nn_conv_Ho_parallel.constprop.5+0x7a0>
1c00161c:	00078123          	sb	zero,2(a5)
1c001620:	96ca                	add	a3,a3,s2
1c001622:	0605                	addi	a2,a2,1
1c001624:	984a                	add	a6,a6,s2
1c001626:	951e                	add	a0,a0,t2
1c001628:	0f05                	addi	t5,t5,1
1c00162a:	9fd6                	add	t6,t6,s5
1c00162c:	f96f1ae3          	bne	t5,s6,1c0015c0 <pulp_nn_conv_Ho_parallel.constprop.5+0x740>
1c001630:	b43d                	j	1c00105e <pulp_nn_conv_Ho_parallel.constprop.5+0x1de>
1c001632:	87c2                	mv	a5,a6
1c001634:	c8cd                	beqz	s1,1c0016e6 <pulp_nn_conv_Ho_parallel.constprop.5+0x866>
1c001636:	ffc98793          	addi	a5,s3,-4
1c00163a:	8389                	srli	a5,a5,0x2
1c00163c:	88c2                	mv	a7,a6
1c00163e:	8736                	mv	a4,a3
1c001640:	0785                	addi	a5,a5,1
1c001642:	0047c0fb          	lp.setup	x1,a5,1c00164a <pulp_nn_conv_Ho_parallel.constprop.5+0x7ca>
1c001646:	0048a30b          	p.lw	t1,4(a7!)
1c00164a:	0067222b          	p.sw	t1,4(a4!)
1c00164e:	013807b3          	add	a5,a6,s3
1c001652:	d479                	beqz	s0,1c001620 <pulp_nn_conv_Ho_parallel.constprop.5+0x7a0>
1c001654:	0007c883          	lbu	a7,0(a5)
1c001658:	01170023          	sb	a7,0(a4)
1c00165c:	fc1422e3          	p.beqimm	s0,1,1c001620 <pulp_nn_conv_Ho_parallel.constprop.5+0x7a0>
1c001660:	0017c883          	lbu	a7,1(a5)
1c001664:	011700a3          	sb	a7,1(a4)
1c001668:	fa242ce3          	p.beqimm	s0,2,1c001620 <pulp_nn_conv_Ho_parallel.constprop.5+0x7a0>
1c00166c:	0027c783          	lbu	a5,2(a5)
1c001670:	00f70123          	sb	a5,2(a4)
1c001674:	b775                	j	1c001620 <pulp_nn_conv_Ho_parallel.constprop.5+0x7a0>
1c001676:	001e0793          	addi	a5,t3,1
1c00167a:	41c285b3          	sub	a1,t0,t3
1c00167e:	08f2ce63          	blt	t0,a5,1c00171a <pulp_nn_conv_Ho_parallel.constprop.5+0x89a>
1c001682:	800007b7          	lui	a5,0x80000
1c001686:	08f28a63          	beq	t0,a5,1c00171a <pulp_nn_conv_Ho_parallel.constprop.5+0x89a>
1c00168a:	01a5c07b          	lp.setup	x0,a1,1c0016be <pulp_nn_conv_Ho_parallel.constprop.5+0x83e>
1c00168e:	c8a1                	beqz	s1,1c0016de <pulp_nn_conv_Ho_parallel.constprop.5+0x85e>
1c001690:	8736                	mv	a4,a3
1c001692:	87a6                	mv	a5,s1
1c001694:	0067c0fb          	lp.setup	x1,a5,1c0016a0 <pulp_nn_conv_Ho_parallel.constprop.5+0x820>
1c001698:	00007857          	pv.add.sci.b	a6,zero,0
1c00169c:	0107222b          	p.sw	a6,4(a4!)
1c0016a0:	0001                	nop
1c0016a2:	013687b3          	add	a5,a3,s3
1c0016a6:	c819                	beqz	s0,1c0016bc <pulp_nn_conv_Ho_parallel.constprop.5+0x83c>
1c0016a8:	00078023          	sb	zero,0(a5) # 80000000 <pulp__FC+0x80000001>
1c0016ac:	00142863          	p.beqimm	s0,1,1c0016bc <pulp_nn_conv_Ho_parallel.constprop.5+0x83c>
1c0016b0:	000780a3          	sb	zero,1(a5)
1c0016b4:	00242463          	p.beqimm	s0,2,1c0016bc <pulp_nn_conv_Ho_parallel.constprop.5+0x83c>
1c0016b8:	00078123          	sb	zero,2(a5)
1c0016bc:	96ca                	add	a3,a3,s2
1c0016be:	0605                	addi	a2,a2,1
1c0016c0:	f7d653e3          	ble	t4,a2,1c001626 <pulp_nn_conv_Ho_parallel.constprop.5+0x7a6>
1c0016c4:	01f60733          	add	a4,a2,t6
1c0016c8:	886a                	mv	a6,s10
1c0016ca:	00160793          	addi	a5,a2,1
1c0016ce:	43270833          	p.mac	a6,a4,s2
1c0016d2:	40ce85b3          	sub	a1,t4,a2
1c0016d6:	f0fed6e3          	ble	a5,t4,1c0015e2 <pulp_nn_conv_Ho_parallel.constprop.5+0x762>
1c0016da:	4585                	li	a1,1
1c0016dc:	b739                	j	1c0015ea <pulp_nn_conv_Ho_parallel.constprop.5+0x76a>
1c0016de:	87b6                	mv	a5,a3
1c0016e0:	b7d9                	j	1c0016a6 <pulp_nn_conv_Ho_parallel.constprop.5+0x826>
1c0016e2:	87b6                	mv	a5,a3
1c0016e4:	b71d                	j	1c00160a <pulp_nn_conv_Ho_parallel.constprop.5+0x78a>
1c0016e6:	8736                	mv	a4,a3
1c0016e8:	b7ad                	j	1c001652 <pulp_nn_conv_Ho_parallel.constprop.5+0x7d2>
1c0016ea:	833e                	mv	t1,a5
1c0016ec:	b655                	j	1c001290 <pulp_nn_conv_Ho_parallel.constprop.5+0x410>
1c0016ee:	833e                	mv	t1,a5
1c0016f0:	b1fd                	j	1c0013de <pulp_nn_conv_Ho_parallel.constprop.5+0x55e>
1c0016f2:	0706                	slli	a4,a4,0x1
1c0016f4:	01e71733          	sll	a4,a4,t5
1c0016f8:	0117d7b3          	srl	a5,a5,a7
1c0016fc:	8fd9                	or	a5,a5,a4
1c0016fe:	bc89                	j	1c001150 <pulp_nn_conv_Ho_parallel.constprop.5+0x2d0>
1c001700:	0405                	addi	s0,s0,1
1c001702:	bc29                	j	1c00111c <pulp_nn_conv_Ho_parallel.constprop.5+0x29c>
1c001704:	4601                	li	a2,0
1c001706:	87d2                	mv	a5,s4
1c001708:	baf9                	j	1c0010e6 <pulp_nn_conv_Ho_parallel.constprop.5+0x266>
1c00170a:	0409                	addi	s0,s0,2
1c00170c:	bc01                	j	1c00111c <pulp_nn_conv_Ho_parallel.constprop.5+0x29c>
1c00170e:	4685                	li	a3,1
1c001710:	be81                	j	1c001260 <pulp_nn_conv_Ho_parallel.constprop.5+0x3e0>
1c001712:	4685                	li	a3,1
1c001714:	b969                	j	1c0013ae <pulp_nn_conv_Ho_parallel.constprop.5+0x52e>
1c001716:	4585                	li	a1,1
1c001718:	b515                	j	1c00153c <pulp_nn_conv_Ho_parallel.constprop.5+0x6bc>
1c00171a:	4585                	li	a1,1
1c00171c:	b7bd                	j	1c00168a <pulp_nn_conv_Ho_parallel.constprop.5+0x80a>

1c00171e <BNReluConvolution5>:
1c00171e:	7161                	addi	sp,sp,-432
1c001720:	4550                	lw	a2,12(a0)
1c001722:	4954                	lw	a3,20(a0)
1c001724:	1a912223          	sw	s1,420(sp)
1c001728:	1b212023          	sw	s2,416(sp)
1c00172c:	5504                	lw	s1,40(a0)
1c00172e:	02452903          	lw	s2,36(a0)
1c001732:	19812423          	sw	s8,392(sp)
1c001736:	01c52c03          	lw	s8,28(a0)
1c00173a:	4d08                	lw	a0,24(a0)
1c00173c:	1a112623          	sw	ra,428(sp)
1c001740:	1a812423          	sw	s0,424(sp)
1c001744:	19312e23          	sw	s3,412(sp)
1c001748:	19412c23          	sw	s4,408(sp)
1c00174c:	19512a23          	sw	s5,404(sp)
1c001750:	19612823          	sw	s6,400(sp)
1c001754:	19712623          	sw	s7,396(sp)
1c001758:	19912223          	sw	s9,388(sp)
1c00175c:	19a12023          	sw	s10,384(sp)
1c001760:	d4b2                	sw	a2,104(sp)
1c001762:	cab6                	sw	a3,84(sp)
1c001764:	17b12e23          	sw	s11,380(sp)
1c001768:	d6aa                	sw	a0,108(sp)
1c00176a:	953fe0ef          	jal	ra,1c0000bc <dory_dma_allocate>
1c00176e:	14012c23          	sw	zero,344(sp)
1c001772:	14011e23          	sh	zero,348(sp)
1c001776:	16011023          	sh	zero,352(sp)
1c00177a:	4785                	li	a5,1
1c00177c:	14f11f23          	sh	a5,350(sp)
1c001780:	16f11123          	sh	a5,354(sp)
1c001784:	4785                	li	a5,1
1c001786:	16f12423          	sw	a5,360(sp)
1c00178a:	16a12623          	sw	a0,364(sp)
1c00178e:	12012c23          	sw	zero,312(sp)
1c001792:	12011e23          	sh	zero,316(sp)
1c001796:	14011023          	sh	zero,320(sp)
1c00179a:	12f11f23          	sh	a5,318(sp)
1c00179e:	14f11123          	sh	a5,322(sp)
1c0017a2:	14f12423          	sw	a5,328(sp)
1c0017a6:	14a12623          	sw	a0,332(sp)
1c0017aa:	dd82                	sw	zero,248(sp)
1c0017ac:	28000693          	li	a3,640
1c0017b0:	0ed11e23          	sh	a3,252(sp)
1c0017b4:	04000713          	li	a4,64
1c0017b8:	10e11023          	sh	a4,256(sp)
1c0017bc:	10f12423          	sw	a5,264(sp)
1c0017c0:	10a12623          	sw	a0,268(sp)
1c0017c4:	10012c23          	sw	zero,280(sp)
1c0017c8:	24000613          	li	a2,576
1c0017cc:	10c11e23          	sh	a2,284(sp)
1c0017d0:	12e11023          	sh	a4,288(sp)
1c0017d4:	02800613          	li	a2,40
1c0017d8:	10c11f23          	sh	a2,286(sp)
1c0017dc:	4625                	li	a2,9
1c0017de:	12c11123          	sh	a2,290(sp)
1c0017e2:	12f12423          	sw	a5,296(sp)
1c0017e6:	12a12623          	sw	a0,300(sp)
1c0017ea:	cd82                	sw	zero,216(sp)
1c0017ec:	0cd11e23          	sh	a3,220(sp)
1c0017f0:	0ee11023          	sh	a4,224(sp)
1c0017f4:	641d                	lui	s0,0x7
1c0017f6:	d582                	sw	zero,232(sp)
1c0017f8:	96840793          	addi	a5,s0,-1688 # 6968 <__rt_stack_size+0x6168>
1c0017fc:	97e2                	add	a5,a5,s8
1c0017fe:	d2aa                	sw	a0,100(sp)
1c001800:	d7aa                	sw	a0,236(sp)
1c001802:	ccbe                	sw	a5,88(sp)
1c001804:	6b85                	lui	s7,0x1
1c001806:	82eff0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c00180a:	cd0b8693          	addi	a3,s7,-816 # cd0 <__rt_stack_size+0x4d0>
1c00180e:	6799                	lui	a5,0x6
1c001810:	96e2                	add	a3,a3,s8
1c001812:	6d878713          	addi	a4,a5,1752 # 66d8 <__rt_stack_size+0x5ed8>
1c001816:	82040413          	addi	s0,s0,-2016
1c00181a:	04000a93          	li	s5,64
1c00181e:	10095933          	p.exthz	s2,s2
1c001822:	1004d4b3          	p.exthz	s1,s1
1c001826:	c8b6                	sw	a3,80(sp)
1c001828:	9762                	add	a4,a4,s8
1c00182a:	9462                	add	s0,s0,s8
1c00182c:	0b511123          	sh	s5,162(sp)
1c001830:	4699                	li	a3,6
1c001832:	908b8b93          	addi	s7,s7,-1784
1c001836:	ceca                	sw	s2,92(sp)
1c001838:	d0a6                	sw	s1,96(sp)
1c00183a:	c6ba                	sw	a4,76(sp)
1c00183c:	c4a2                	sw	s0,72(sp)
1c00183e:	4901                	li	s2,0
1c001840:	0ad11023          	sh	a3,160(sp)
1c001844:	9be2                	add	s7,s7,s8
1c001846:	4b19                	li	s6,6
1c001848:	4605                	li	a2,1
1c00184a:	4c85                	li	s9,1
1c00184c:	4d05                	li	s10,1
1c00184e:	4981                	li	s3,0
1c001850:	4a05                	li	s4,1
1c001852:	32292163          	p.beqimm	s2,2,1c001b74 <BNReluConvolution5+0x456>
1c001856:	08d11f23          	sh	a3,158(sp)
1c00185a:	0a215683          	lhu	a3,162(sp)
1c00185e:	0a015783          	lhu	a5,160(sp)
1c001862:	09e15703          	lhu	a4,158(sp)
1c001866:	02d787b3          	mul	a5,a5,a3
1c00186a:	02e787b3          	mul	a5,a5,a4
1c00186e:	1007d7b3          	p.exthz	a5,a5
1c001872:	08f11e23          	sh	a5,156(sp)
1c001876:	09511d23          	sh	s5,154(sp)
1c00187a:	df02                	sw	zero,188(sp)
1c00187c:	dd02                	sw	zero,184(sp)
1c00187e:	00090363          	beqz	s2,1c001884 <BNReluConvolution5+0x166>
1c001882:	dd52                	sw	s4,184(sp)
1c001884:	4799                	li	a5,6
1c001886:	d93e                	sw	a5,176(sp)
1c001888:	4711                	li	a4,4
1c00188a:	d73a                	sw	a4,172(sp)
1c00188c:	3219a063          	p.beqimm	s3,1,1c001bac <BNReluConvolution5+0x48e>
1c001890:	02800693          	li	a3,40
1c001894:	db36                	sw	a3,180(sp)
1c001896:	57da                	lw	a5,180(sp)
1c001898:	554a                	lw	a0,176(sp)
1c00189a:	55ba                	lw	a1,172(sp)
1c00189c:	02800713          	li	a4,40
1c0018a0:	02a787b3          	mul	a5,a5,a0
1c0018a4:	02b787b3          	mul	a5,a5,a1
1c0018a8:	d53e                	sw	a5,168(sp)
1c0018aa:	d336                	sw	a3,164(sp)
1c0018ac:	08e11c23          	sh	a4,152(sp)
1c0018b0:	09511b23          	sh	s5,150(sp)
1c0018b4:	09815703          	lhu	a4,152(sp)
1c0018b8:	09615783          	lhu	a5,150(sp)
1c0018bc:	00299413          	slli	s0,s3,0x2
1c0018c0:	944e                	add	s0,s0,s3
1c0018c2:	02e787b3          	mul	a5,a5,a4
1c0018c6:	00291493          	slli	s1,s2,0x2
1c0018ca:	040e                	slli	s0,s0,0x3
1c0018cc:	00379713          	slli	a4,a5,0x3
1c0018d0:	97ba                	add	a5,a5,a4
1c0018d2:	1007d7b3          	p.exthz	a5,a5
1c0018d6:	08f11a23          	sh	a5,148(sp)
1c0018da:	09511923          	sh	s5,146(sp)
1c0018de:	000c9463          	bnez	s9,1c0018e6 <BNReluConvolution5+0x1c8>
1c0018e2:	06c90c63          	beq	s2,a2,1c00195a <BNReluConvolution5+0x23c>
1c0018e6:	56fa                	lw	a3,188(sp)
1c0018e8:	576a                	lw	a4,184(sp)
1c0018ea:	5626                	lw	a2,104(sp)
1c0018ec:	00269793          	slli	a5,a3,0x2
1c0018f0:	97b6                	add	a5,a5,a3
1c0018f2:	079e                	slli	a5,a5,0x7
1c0018f4:	40e48733          	sub	a4,s1,a4
1c0018f8:	40f607b3          	sub	a5,a2,a5
1c0018fc:	071a                	slli	a4,a4,0x6
1c0018fe:	97ba                	add	a5,a5,a4
1c001900:	d9be                	sw	a5,240(sp)
1c001902:	dbe2                	sw	s8,244(sp)
1c001904:	0a015783          	lhu	a5,160(sp)
1c001908:	1888                	addi	a0,sp,112
1c00190a:	1007d7b3          	p.exthz	a5,a5
1c00190e:	0ef11f23          	sh	a5,254(sp)
1c001912:	09e15783          	lhu	a5,158(sp)
1c001916:	1007d7b3          	p.exthz	a5,a5
1c00191a:	10f11123          	sh	a5,258(sp)
1c00191e:	09a15783          	lhu	a5,154(sp)
1c001922:	1007d7b3          	p.exthz	a5,a5
1c001926:	10f11223          	sh	a5,260(sp)
1c00192a:	534e                	lw	t1,240(sp)
1c00192c:	58de                	lw	a7,244(sp)
1c00192e:	586e                	lw	a6,248(sp)
1c001930:	55fe                	lw	a1,252(sp)
1c001932:	10012603          	lw	a2,256(sp)
1c001936:	10412683          	lw	a3,260(sp)
1c00193a:	10812703          	lw	a4,264(sp)
1c00193e:	10c12783          	lw	a5,268(sp)
1c001942:	d89a                	sw	t1,112(sp)
1c001944:	dac6                	sw	a7,116(sp)
1c001946:	dcc2                	sw	a6,120(sp)
1c001948:	deae                	sw	a1,124(sp)
1c00194a:	c132                	sw	a2,128(sp)
1c00194c:	c336                	sw	a3,132(sp)
1c00194e:	c53a                	sw	a4,136(sp)
1c001950:	c73e                	sw	a5,140(sp)
1c001952:	f6cfe0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c001956:	000c9463          	bnez	s9,1c00195e <BNReluConvolution5+0x240>
1c00195a:	11a98e63          	beq	s3,s10,1c001a76 <BNReluConvolution5+0x358>
1c00195e:	56b6                	lw	a3,108(sp)
1c001960:	00341c93          	slli	s9,s0,0x3
1c001964:	9ca2                	add	s9,s9,s0
1c001966:	4746                	lw	a4,80(sp)
1c001968:	0c9a                	slli	s9,s9,0x6
1c00196a:	9cb6                	add	s9,s9,a3
1c00196c:	11912823          	sw	s9,272(sp)
1c001970:	10e12a23          	sw	a4,276(sp)
1c001974:	09815783          	lhu	a5,152(sp)
1c001978:	6619                	lui	a2,0x6
1c00197a:	8c060613          	addi	a2,a2,-1856 # 58c0 <__rt_stack_size+0x50c0>
1c00197e:	1007d7b3          	p.exthz	a5,a5
1c001982:	10f11f23          	sh	a5,286(sp)
1c001986:	09215783          	lhu	a5,146(sp)
1c00198a:	42c99cb3          	p.msu	s9,s3,a2
1c00198e:	1888                	addi	a0,sp,112
1c001990:	1007d7b3          	p.exthz	a5,a5
1c001994:	12f11223          	sh	a5,292(sp)
1c001998:	11012303          	lw	t1,272(sp)
1c00199c:	11412883          	lw	a7,276(sp)
1c0019a0:	11812803          	lw	a6,280(sp)
1c0019a4:	11c12583          	lw	a1,284(sp)
1c0019a8:	12012603          	lw	a2,288(sp)
1c0019ac:	12412683          	lw	a3,292(sp)
1c0019b0:	12812703          	lw	a4,296(sp)
1c0019b4:	12c12783          	lw	a5,300(sp)
1c0019b8:	d89a                	sw	t1,112(sp)
1c0019ba:	dac6                	sw	a7,116(sp)
1c0019bc:	dcc2                	sw	a6,120(sp)
1c0019be:	deae                	sw	a1,124(sp)
1c0019c0:	c132                	sw	a2,128(sp)
1c0019c2:	c336                	sw	a3,132(sp)
1c0019c4:	c53a                	sw	a4,136(sp)
1c0019c6:	c73e                	sw	a5,140(sp)
1c0019c8:	ef6fe0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c0019cc:	4736                	lw	a4,76(sp)
1c0019ce:	66a5                	lui	a3,0x9
1c0019d0:	00dc87b3          	add	a5,s9,a3
1c0019d4:	14f12823          	sw	a5,336(sp)
1c0019d8:	14e12a23          	sw	a4,340(sp)
1c0019dc:	09815783          	lhu	a5,152(sp)
1c0019e0:	1888                	addi	a0,sp,112
1c0019e2:	078e                	slli	a5,a5,0x3
1c0019e4:	1007d7b3          	p.exthz	a5,a5
1c0019e8:	16f11223          	sh	a5,356(sp)
1c0019ec:	15012303          	lw	t1,336(sp)
1c0019f0:	15412883          	lw	a7,340(sp)
1c0019f4:	15812803          	lw	a6,344(sp)
1c0019f8:	15c12583          	lw	a1,348(sp)
1c0019fc:	16012603          	lw	a2,352(sp)
1c001a00:	16412683          	lw	a3,356(sp)
1c001a04:	16812703          	lw	a4,360(sp)
1c001a08:	16c12783          	lw	a5,364(sp)
1c001a0c:	d89a                	sw	t1,112(sp)
1c001a0e:	dac6                	sw	a7,116(sp)
1c001a10:	dcc2                	sw	a6,120(sp)
1c001a12:	deae                	sw	a1,124(sp)
1c001a14:	c132                	sw	a2,128(sp)
1c001a16:	c336                	sw	a3,132(sp)
1c001a18:	c53a                	sw	a4,136(sp)
1c001a1a:	c73e                	sw	a5,140(sp)
1c001a1c:	ea2fe0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c001a20:	67a5                	lui	a5,0x9
1c001a22:	20078793          	addi	a5,a5,512 # 9200 <__rt_stack_size+0x8a00>
1c001a26:	4626                	lw	a2,72(sp)
1c001a28:	9cbe                	add	s9,s9,a5
1c001a2a:	13912823          	sw	s9,304(sp)
1c001a2e:	12c12a23          	sw	a2,308(sp)
1c001a32:	09815783          	lhu	a5,152(sp)
1c001a36:	1888                	addi	a0,sp,112
1c001a38:	078e                	slli	a5,a5,0x3
1c001a3a:	1007d7b3          	p.exthz	a5,a5
1c001a3e:	14f11223          	sh	a5,324(sp)
1c001a42:	13012303          	lw	t1,304(sp)
1c001a46:	13412883          	lw	a7,308(sp)
1c001a4a:	13812803          	lw	a6,312(sp)
1c001a4e:	13c12583          	lw	a1,316(sp)
1c001a52:	14012603          	lw	a2,320(sp)
1c001a56:	14412683          	lw	a3,324(sp)
1c001a5a:	14812703          	lw	a4,328(sp)
1c001a5e:	14c12783          	lw	a5,332(sp)
1c001a62:	d89a                	sw	t1,112(sp)
1c001a64:	dac6                	sw	a7,116(sp)
1c001a66:	dcc2                	sw	a6,120(sp)
1c001a68:	deae                	sw	a1,124(sp)
1c001a6a:	c132                	sw	a2,128(sp)
1c001a6c:	c336                	sw	a3,132(sp)
1c001a6e:	c53a                	sw	a4,136(sp)
1c001a70:	c73e                	sw	a5,140(sp)
1c001a72:	e4cfe0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c001a76:	c782                	sw	zero,204(sp)
1c001a78:	c582                	sw	zero,200(sp)
1c001a7a:	c382                	sw	zero,196(sp)
1c001a7c:	c182                	sw	zero,192(sp)
1c001a7e:	c3d2                	sw	s4,196(sp)
1c001a80:	14091363          	bnez	s2,1c001bc6 <BNReluConvolution5+0x4a8>
1c001a84:	c5d2                	sw	s4,200(sp)
1c001a86:	c1d2                	sw	s4,192(sp)
1c001a88:	dadfe0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c001a8c:	09e15c83          	lhu	s9,158(sp)
1c001a90:	0a015d03          	lhu	s10,160(sp)
1c001a94:	0a215d83          	lhu	s11,162(sp)
1c001a98:	5fba                	lw	t6,172(sp)
1c001a9a:	52ca                	lw	t0,176(sp)
1c001a9c:	53da                	lw	t2,180(sp)
1c001a9e:	431e                	lw	t1,196(sp)
1c001aa0:	4e0e                	lw	t3,192(sp)
1c001aa2:	4eae                	lw	t4,200(sp)
1c001aa4:	4f3e                	lw	t5,204(sp)
1c001aa6:	5886                	lw	a7,96(sp)
1c001aa8:	4876                	lw	a6,92(sp)
1c001aaa:	47a6                	lw	a5,72(sp)
1c001aac:	4736                	lw	a4,76(sp)
1c001aae:	46c6                	lw	a3,80(sp)
1c001ab0:	45e6                	lw	a1,88(sp)
1c001ab2:	408d                	li	ra,3
1c001ab4:	1003d3b3          	p.exthz	t2,t2
1c001ab8:	1002d2b3          	p.exthz	t0,t0
1c001abc:	100fdfb3          	p.exthz	t6,t6
1c001ac0:	100f5f33          	p.exthz	t5,t5
1c001ac4:	100edeb3          	p.exthz	t4,t4
1c001ac8:	100e5e33          	p.exthz	t3,t3
1c001acc:	10035333          	p.exthz	t1,t1
1c001ad0:	865e                	mv	a2,s7
1c001ad2:	8562                	mv	a0,s8
1c001ad4:	c26a                	sw	s10,4(sp)
1c001ad6:	c066                	sw	s9,0(sp)
1c001ad8:	ce06                	sw	ra,28(sp)
1c001ada:	cc06                	sw	ra,24(sp)
1c001adc:	ca1e                	sw	t2,20(sp)
1c001ade:	c816                	sw	t0,16(sp)
1c001ae0:	c67e                	sw	t6,12(sp)
1c001ae2:	d67a                	sw	t5,44(sp)
1c001ae4:	d476                	sw	t4,40(sp)
1c001ae6:	d272                	sw	t3,36(sp)
1c001ae8:	d01a                	sw	t1,32(sp)
1c001aea:	c46e                	sw	s11,8(sp)
1c001aec:	da52                	sw	s4,52(sp)
1c001aee:	d852                	sw	s4,48(sp)
1c001af0:	b90ff0ef          	jal	ra,1c000e80 <pulp_nn_conv_Ho_parallel.constprop.5>
1c001af4:	d41fe0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c001af8:	46d6                	lw	a3,84(sp)
1c001afa:	049a                	slli	s1,s1,0x6
1c001afc:	1888                	addi	a0,sp,112
1c001afe:	9436                	add	s0,s0,a3
1c001b00:	9426                	add	s0,s0,s1
1c001b02:	c9a2                	sw	s0,208(sp)
1c001b04:	cbde                	sw	s7,212(sp)
1c001b06:	57ca                	lw	a5,176(sp)
1c001b08:	00190413          	addi	s0,s2,1
1c001b0c:	1b7d                	addi	s6,s6,-1
1c001b0e:	1007d7b3          	p.exthz	a5,a5
1c001b12:	0cf11f23          	sh	a5,222(sp)
1c001b16:	57ba                	lw	a5,172(sp)
1c001b18:	1007d7b3          	p.exthz	a5,a5
1c001b1c:	0ef11123          	sh	a5,226(sp)
1c001b20:	579a                	lw	a5,164(sp)
1c001b22:	1007d7b3          	p.exthz	a5,a5
1c001b26:	0ef11223          	sh	a5,228(sp)
1c001b2a:	434e                	lw	t1,208(sp)
1c001b2c:	48de                	lw	a7,212(sp)
1c001b2e:	486e                	lw	a6,216(sp)
1c001b30:	45fe                	lw	a1,220(sp)
1c001b32:	560e                	lw	a2,224(sp)
1c001b34:	569e                	lw	a3,228(sp)
1c001b36:	572e                	lw	a4,232(sp)
1c001b38:	57be                	lw	a5,236(sp)
1c001b3a:	d89a                	sw	t1,112(sp)
1c001b3c:	dac6                	sw	a7,116(sp)
1c001b3e:	dcc2                	sw	a6,120(sp)
1c001b40:	deae                	sw	a1,124(sp)
1c001b42:	c132                	sw	a2,128(sp)
1c001b44:	c336                	sw	a3,132(sp)
1c001b46:	c53a                	sw	a4,136(sp)
1c001b48:	c73e                	sw	a5,140(sp)
1c001b4a:	d74fe0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c001b4e:	08342163          	p.beqimm	s0,3,1c001bd0 <BNReluConvolution5+0x4b2>
1c001b52:	ce3fe0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c001b56:	080b0563          	beqz	s6,1c001be0 <BNReluConvolution5+0x4c2>
1c001b5a:	84ce                	mv	s1,s3
1c001b5c:	0b511123          	sh	s5,162(sp)
1c001b60:	4699                	li	a3,6
1c001b62:	864a                	mv	a2,s2
1c001b64:	0ad11023          	sh	a3,160(sp)
1c001b68:	8922                	mv	s2,s0
1c001b6a:	8d4e                	mv	s10,s3
1c001b6c:	4c81                	li	s9,0
1c001b6e:	89a6                	mv	s3,s1
1c001b70:	ce2933e3          	p.bneimm	s2,2,1c001856 <BNReluConvolution5+0x138>
1c001b74:	470d                	li	a4,3
1c001b76:	08e11f23          	sh	a4,158(sp)
1c001b7a:	0a215703          	lhu	a4,162(sp)
1c001b7e:	0a015783          	lhu	a5,160(sp)
1c001b82:	09e15683          	lhu	a3,158(sp)
1c001b86:	02e787b3          	mul	a5,a5,a4
1c001b8a:	4709                	li	a4,2
1c001b8c:	02d787b3          	mul	a5,a5,a3
1c001b90:	1007d7b3          	p.exthz	a5,a5
1c001b94:	08f11e23          	sh	a5,156(sp)
1c001b98:	09511d23          	sh	s5,154(sp)
1c001b9c:	df02                	sw	zero,188(sp)
1c001b9e:	dd02                	sw	zero,184(sp)
1c001ba0:	dd52                	sw	s4,184(sp)
1c001ba2:	4799                	li	a5,6
1c001ba4:	d93e                	sw	a5,176(sp)
1c001ba6:	d73a                	sw	a4,172(sp)
1c001ba8:	ce19b4e3          	p.bneimm	s3,1,1c001890 <BNReluConvolution5+0x172>
1c001bac:	46e1                	li	a3,24
1c001bae:	db36                	sw	a3,180(sp)
1c001bb0:	57da                	lw	a5,180(sp)
1c001bb2:	554a                	lw	a0,176(sp)
1c001bb4:	55ba                	lw	a1,172(sp)
1c001bb6:	4761                	li	a4,24
1c001bb8:	02a787b3          	mul	a5,a5,a0
1c001bbc:	02b787b3          	mul	a5,a5,a1
1c001bc0:	d53e                	sw	a5,168(sp)
1c001bc2:	d336                	sw	a3,164(sp)
1c001bc4:	b1e5                	j	1c0018ac <BNReluConvolution5+0x18e>
1c001bc6:	c1d2                	sw	s4,192(sp)
1c001bc8:	ec2930e3          	p.bneimm	s2,2,1c001a88 <BNReluConvolution5+0x36a>
1c001bcc:	c7d2                	sw	s4,204(sp)
1c001bce:	bd6d                	j	1c001a88 <BNReluConvolution5+0x36a>
1c001bd0:	00198493          	addi	s1,s3,1
1c001bd4:	c61fe0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c001bd8:	000b0463          	beqz	s6,1c001be0 <BNReluConvolution5+0x4c2>
1c001bdc:	4401                	li	s0,0
1c001bde:	bfbd                	j	1c001b5c <BNReluConvolution5+0x43e>
1c001be0:	1a812403          	lw	s0,424(sp)
1c001be4:	5516                	lw	a0,100(sp)
1c001be6:	1ac12083          	lw	ra,428(sp)
1c001bea:	1a412483          	lw	s1,420(sp)
1c001bee:	1a012903          	lw	s2,416(sp)
1c001bf2:	19c12983          	lw	s3,412(sp)
1c001bf6:	19812a03          	lw	s4,408(sp)
1c001bfa:	19412a83          	lw	s5,404(sp)
1c001bfe:	19012b03          	lw	s6,400(sp)
1c001c02:	18c12b83          	lw	s7,396(sp)
1c001c06:	18812c03          	lw	s8,392(sp)
1c001c0a:	18412c83          	lw	s9,388(sp)
1c001c0e:	18012d03          	lw	s10,384(sp)
1c001c12:	17c12d83          	lw	s11,380(sp)
1c001c16:	615d                	addi	sp,sp,432
1c001c18:	c8afe06f          	j	1c0000a2 <dory_dma_deallocate>

1c001c1c <BNReluConvolution6>:
1c001c1c:	7161                	addi	sp,sp,-432
1c001c1e:	4550                	lw	a2,12(a0)
1c001c20:	4954                	lw	a3,20(a0)
1c001c22:	1a912223          	sw	s1,420(sp)
1c001c26:	1b212023          	sw	s2,416(sp)
1c001c2a:	5504                	lw	s1,40(a0)
1c001c2c:	02452903          	lw	s2,36(a0)
1c001c30:	19812423          	sw	s8,392(sp)
1c001c34:	01c52c03          	lw	s8,28(a0)
1c001c38:	4d08                	lw	a0,24(a0)
1c001c3a:	d2b2                	sw	a2,100(sp)
1c001c3c:	1a112623          	sw	ra,428(sp)
1c001c40:	1a812423          	sw	s0,424(sp)
1c001c44:	19312e23          	sw	s3,412(sp)
1c001c48:	19412c23          	sw	s4,408(sp)
1c001c4c:	19512a23          	sw	s5,404(sp)
1c001c50:	19612823          	sw	s6,400(sp)
1c001c54:	19712623          	sw	s7,396(sp)
1c001c58:	19912223          	sw	s9,388(sp)
1c001c5c:	17b12e23          	sw	s11,380(sp)
1c001c60:	cab6                	sw	a3,84(sp)
1c001c62:	19a12023          	sw	s10,384(sp)
1c001c66:	d4aa                	sw	a0,104(sp)
1c001c68:	c54fe0ef          	jal	ra,1c0000bc <dory_dma_allocate>
1c001c6c:	14012c23          	sw	zero,344(sp)
1c001c70:	14011e23          	sh	zero,348(sp)
1c001c74:	16011023          	sh	zero,352(sp)
1c001c78:	4785                	li	a5,1
1c001c7a:	14f11f23          	sh	a5,350(sp)
1c001c7e:	16f11123          	sh	a5,354(sp)
1c001c82:	4785                	li	a5,1
1c001c84:	16f12423          	sw	a5,360(sp)
1c001c88:	16a12623          	sw	a0,364(sp)
1c001c8c:	12012c23          	sw	zero,312(sp)
1c001c90:	12011e23          	sh	zero,316(sp)
1c001c94:	14011023          	sh	zero,320(sp)
1c001c98:	12f11f23          	sh	a5,318(sp)
1c001c9c:	14f11123          	sh	a5,322(sp)
1c001ca0:	14f12423          	sw	a5,328(sp)
1c001ca4:	14a12623          	sw	a0,332(sp)
1c001ca8:	dd82                	sw	zero,248(sp)
1c001caa:	28000713          	li	a4,640
1c001cae:	0ee11e23          	sh	a4,252(sp)
1c001cb2:	04000413          	li	s0,64
1c001cb6:	10811023          	sh	s0,256(sp)
1c001cba:	10f12423          	sw	a5,264(sp)
1c001cbe:	10a12623          	sw	a0,268(sp)
1c001cc2:	10012c23          	sw	zero,280(sp)
1c001cc6:	24000693          	li	a3,576
1c001cca:	10d11e23          	sh	a3,284(sp)
1c001cce:	12811023          	sh	s0,288(sp)
1c001cd2:	02800693          	li	a3,40
1c001cd6:	10d11f23          	sh	a3,286(sp)
1c001cda:	46a5                	li	a3,9
1c001cdc:	12d11123          	sh	a3,290(sp)
1c001ce0:	12f12423          	sw	a5,296(sp)
1c001ce4:	12a12623          	sw	a0,300(sp)
1c001ce8:	cd82                	sw	zero,216(sp)
1c001cea:	0ce11e23          	sh	a4,220(sp)
1c001cee:	08000793          	li	a5,128
1c001cf2:	0ef11023          	sh	a5,224(sp)
1c001cf6:	679d                	lui	a5,0x7
1c001cf8:	d582                	sw	zero,232(sp)
1c001cfa:	92878793          	addi	a5,a5,-1752 # 6928 <__rt_stack_size+0x6128>
1c001cfe:	97e2                	add	a5,a5,s8
1c001d00:	d6aa                	sw	a0,108(sp)
1c001d02:	d7aa                	sw	a0,236(sp)
1c001d04:	ccbe                	sw	a5,88(sp)
1c001d06:	b2ffe0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c001d0a:	6719                	lui	a4,0x6
1c001d0c:	6b85                	lui	s7,0x1
1c001d0e:	7e070793          	addi	a5,a4,2016 # 67e0 <__rt_stack_size+0x5fe0>
1c001d12:	c90b8613          	addi	a2,s7,-880 # c90 <__rt_stack_size+0x490>
1c001d16:	97e2                	add	a5,a5,s8
1c001d18:	69870693          	addi	a3,a4,1688
1c001d1c:	10095933          	p.exthz	s2,s2
1c001d20:	1004d4b3          	p.exthz	s1,s1
1c001d24:	9662                	add	a2,a2,s8
1c001d26:	96e2                	add	a3,a3,s8
1c001d28:	0a811123          	sh	s0,162(sp)
1c001d2c:	c6be                	sw	a5,76(sp)
1c001d2e:	4795                	li	a5,5
1c001d30:	b48b8b93          	addi	s7,s7,-1208
1c001d34:	ceca                	sw	s2,92(sp)
1c001d36:	d0a6                	sw	s1,96(sp)
1c001d38:	c8b2                	sw	a2,80(sp)
1c001d3a:	c4b6                	sw	a3,72(sp)
1c001d3c:	4901                	li	s2,0
1c001d3e:	0af11023          	sh	a5,160(sp)
1c001d42:	9be2                	add	s7,s7,s8
1c001d44:	4ac1                	li	s5,16
1c001d46:	4685                	li	a3,1
1c001d48:	4605                	li	a2,1
1c001d4a:	4d85                	li	s11,1
1c001d4c:	4c85                	li	s9,1
1c001d4e:	4481                	li	s1,0
1c001d50:	4981                	li	s3,0
1c001d52:	04000a13          	li	s4,64
1c001d56:	4b09                	li	s6,2
1c001d58:	34192c63          	p.beqimm	s2,1,1c0020b0 <BNReluConvolution6+0x494>
1c001d5c:	47a5                	li	a5,9
1c001d5e:	08f11f23          	sh	a5,158(sp)
1c001d62:	0a215583          	lhu	a1,162(sp)
1c001d66:	0a015783          	lhu	a5,160(sp)
1c001d6a:	09e15703          	lhu	a4,158(sp)
1c001d6e:	02b787b3          	mul	a5,a5,a1
1c001d72:	02e787b3          	mul	a5,a5,a4
1c001d76:	1007d7b3          	p.exthz	a5,a5
1c001d7a:	08f11e23          	sh	a5,156(sp)
1c001d7e:	09411d23          	sh	s4,154(sp)
1c001d82:	df02                	sw	zero,188(sp)
1c001d84:	dd02                	sw	zero,184(sp)
1c001d86:	3a048f63          	beqz	s1,1c002144 <BNReluConvolution6+0x528>
1c001d8a:	4705                	li	a4,1
1c001d8c:	df3a                	sw	a4,188(sp)
1c001d8e:	3c193463          	p.bneimm	s2,1,1c002156 <BNReluConvolution6+0x53a>
1c001d92:	dd4a                	sw	s2,184(sp)
1c001d94:	3a14be63          	p.bneimm	s1,1,1c002150 <BNReluConvolution6+0x534>
1c001d98:	d926                	sw	s1,176(sp)
1c001d9a:	4785                	li	a5,1
1c001d9c:	d73e                	sw	a5,172(sp)
1c001d9e:	3439a663          	p.beqimm	s3,3,1c0020ea <BNReluConvolution6+0x4ce>
1c001da2:	02800593          	li	a1,40
1c001da6:	db2e                	sw	a1,180(sp)
1c001da8:	57da                	lw	a5,180(sp)
1c001daa:	584a                	lw	a6,176(sp)
1c001dac:	553a                	lw	a0,172(sp)
1c001dae:	02800713          	li	a4,40
1c001db2:	030787b3          	mul	a5,a5,a6
1c001db6:	02a787b3          	mul	a5,a5,a0
1c001dba:	d53e                	sw	a5,168(sp)
1c001dbc:	d32e                	sw	a1,164(sp)
1c001dbe:	08e11c23          	sh	a4,152(sp)
1c001dc2:	09411b23          	sh	s4,150(sp)
1c001dc6:	09815703          	lhu	a4,152(sp)
1c001dca:	09615783          	lhu	a5,150(sp)
1c001dce:	00299413          	slli	s0,s3,0x2
1c001dd2:	944e                	add	s0,s0,s3
1c001dd4:	02e787b3          	mul	a5,a5,a4
1c001dd8:	040e                	slli	s0,s0,0x3
1c001dda:	00379713          	slli	a4,a5,0x3
1c001dde:	97ba                	add	a5,a5,a4
1c001de0:	1007d7b3          	p.exthz	a5,a5
1c001de4:	08f11a23          	sh	a5,148(sp)
1c001de8:	09411923          	sh	s4,146(sp)
1c001dec:	000d9463          	bnez	s11,1c001df4 <BNReluConvolution6+0x1d8>
1c001df0:	35268d63          	beq	a3,s2,1c00214a <BNReluConvolution6+0x52e>
1c001df4:	56fa                	lw	a3,188(sp)
1c001df6:	566a                	lw	a2,184(sp)
1c001df8:	00249713          	slli	a4,s1,0x2
1c001dfc:	00391793          	slli	a5,s2,0x3
1c001e00:	40d706b3          	sub	a3,a4,a3
1c001e04:	8f91                	sub	a5,a5,a2
1c001e06:	5616                	lw	a2,100(sp)
1c001e08:	00269713          	slli	a4,a3,0x2
1c001e0c:	9736                	add	a4,a4,a3
1c001e0e:	079a                	slli	a5,a5,0x6
1c001e10:	071e                	slli	a4,a4,0x7
1c001e12:	97b2                	add	a5,a5,a2
1c001e14:	97ba                	add	a5,a5,a4
1c001e16:	d9be                	sw	a5,240(sp)
1c001e18:	dbe2                	sw	s8,244(sp)
1c001e1a:	0a015783          	lhu	a5,160(sp)
1c001e1e:	1888                	addi	a0,sp,112
1c001e20:	1007d7b3          	p.exthz	a5,a5
1c001e24:	0ef11f23          	sh	a5,254(sp)
1c001e28:	09e15783          	lhu	a5,158(sp)
1c001e2c:	1007d7b3          	p.exthz	a5,a5
1c001e30:	10f11123          	sh	a5,258(sp)
1c001e34:	09a15783          	lhu	a5,154(sp)
1c001e38:	1007d7b3          	p.exthz	a5,a5
1c001e3c:	10f11223          	sh	a5,260(sp)
1c001e40:	534e                	lw	t1,240(sp)
1c001e42:	58de                	lw	a7,244(sp)
1c001e44:	586e                	lw	a6,248(sp)
1c001e46:	55fe                	lw	a1,252(sp)
1c001e48:	10012603          	lw	a2,256(sp)
1c001e4c:	10412683          	lw	a3,260(sp)
1c001e50:	10812703          	lw	a4,264(sp)
1c001e54:	10c12783          	lw	a5,268(sp)
1c001e58:	d89a                	sw	t1,112(sp)
1c001e5a:	dac6                	sw	a7,116(sp)
1c001e5c:	dcc2                	sw	a6,120(sp)
1c001e5e:	deae                	sw	a1,124(sp)
1c001e60:	c132                	sw	a2,128(sp)
1c001e62:	c336                	sw	a3,132(sp)
1c001e64:	c53a                	sw	a4,136(sp)
1c001e66:	c73e                	sw	a5,140(sp)
1c001e68:	a56fe0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c001e6c:	000d9463          	bnez	s11,1c001e74 <BNReluConvolution6+0x258>
1c001e70:	11998e63          	beq	s3,s9,1c001f8c <BNReluConvolution6+0x370>
1c001e74:	56a6                	lw	a3,104(sp)
1c001e76:	00341c93          	slli	s9,s0,0x3
1c001e7a:	9ca2                	add	s9,s9,s0
1c001e7c:	4746                	lw	a4,80(sp)
1c001e7e:	0c9a                	slli	s9,s9,0x6
1c001e80:	9cb6                	add	s9,s9,a3
1c001e82:	11912823          	sw	s9,272(sp)
1c001e86:	10e12a23          	sw	a4,276(sp)
1c001e8a:	09815783          	lhu	a5,152(sp)
1c001e8e:	6619                	lui	a2,0x6
1c001e90:	8c060613          	addi	a2,a2,-1856 # 58c0 <__rt_stack_size+0x50c0>
1c001e94:	1007d7b3          	p.exthz	a5,a5
1c001e98:	10f11f23          	sh	a5,286(sp)
1c001e9c:	09215783          	lhu	a5,146(sp)
1c001ea0:	42c99cb3          	p.msu	s9,s3,a2
1c001ea4:	1888                	addi	a0,sp,112
1c001ea6:	1007d7b3          	p.exthz	a5,a5
1c001eaa:	12f11223          	sh	a5,292(sp)
1c001eae:	11012303          	lw	t1,272(sp)
1c001eb2:	11412883          	lw	a7,276(sp)
1c001eb6:	11812803          	lw	a6,280(sp)
1c001eba:	11c12583          	lw	a1,284(sp)
1c001ebe:	12012603          	lw	a2,288(sp)
1c001ec2:	12412683          	lw	a3,292(sp)
1c001ec6:	12812703          	lw	a4,296(sp)
1c001eca:	12c12783          	lw	a5,300(sp)
1c001ece:	d89a                	sw	t1,112(sp)
1c001ed0:	dac6                	sw	a7,116(sp)
1c001ed2:	dcc2                	sw	a6,120(sp)
1c001ed4:	deae                	sw	a1,124(sp)
1c001ed6:	c132                	sw	a2,128(sp)
1c001ed8:	c336                	sw	a3,132(sp)
1c001eda:	c53a                	sw	a4,136(sp)
1c001edc:	c73e                	sw	a5,140(sp)
1c001ede:	9e0fe0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c001ee2:	4726                	lw	a4,72(sp)
1c001ee4:	66c9                	lui	a3,0x12
1c001ee6:	00dc87b3          	add	a5,s9,a3
1c001eea:	14f12823          	sw	a5,336(sp)
1c001eee:	14e12a23          	sw	a4,340(sp)
1c001ef2:	09815783          	lhu	a5,152(sp)
1c001ef6:	1888                	addi	a0,sp,112
1c001ef8:	078e                	slli	a5,a5,0x3
1c001efa:	1007d7b3          	p.exthz	a5,a5
1c001efe:	16f11223          	sh	a5,356(sp)
1c001f02:	15012303          	lw	t1,336(sp)
1c001f06:	15412883          	lw	a7,340(sp)
1c001f0a:	15812803          	lw	a6,344(sp)
1c001f0e:	15c12583          	lw	a1,348(sp)
1c001f12:	16012603          	lw	a2,352(sp)
1c001f16:	16412683          	lw	a3,356(sp)
1c001f1a:	16812703          	lw	a4,360(sp)
1c001f1e:	16c12783          	lw	a5,364(sp)
1c001f22:	d89a                	sw	t1,112(sp)
1c001f24:	dac6                	sw	a7,116(sp)
1c001f26:	dcc2                	sw	a6,120(sp)
1c001f28:	deae                	sw	a1,124(sp)
1c001f2a:	c132                	sw	a2,128(sp)
1c001f2c:	c336                	sw	a3,132(sp)
1c001f2e:	c53a                	sw	a4,136(sp)
1c001f30:	c73e                	sw	a5,140(sp)
1c001f32:	98cfe0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c001f36:	67c9                	lui	a5,0x12
1c001f38:	40078793          	addi	a5,a5,1024 # 12400 <__L1Cl+0x2400>
1c001f3c:	4636                	lw	a2,76(sp)
1c001f3e:	9cbe                	add	s9,s9,a5
1c001f40:	13912823          	sw	s9,304(sp)
1c001f44:	12c12a23          	sw	a2,308(sp)
1c001f48:	09815783          	lhu	a5,152(sp)
1c001f4c:	1888                	addi	a0,sp,112
1c001f4e:	078e                	slli	a5,a5,0x3
1c001f50:	1007d7b3          	p.exthz	a5,a5
1c001f54:	14f11223          	sh	a5,324(sp)
1c001f58:	13012303          	lw	t1,304(sp)
1c001f5c:	13412883          	lw	a7,308(sp)
1c001f60:	13812803          	lw	a6,312(sp)
1c001f64:	13c12583          	lw	a1,316(sp)
1c001f68:	14012603          	lw	a2,320(sp)
1c001f6c:	14412683          	lw	a3,324(sp)
1c001f70:	14812703          	lw	a4,328(sp)
1c001f74:	14c12783          	lw	a5,332(sp)
1c001f78:	d89a                	sw	t1,112(sp)
1c001f7a:	dac6                	sw	a7,116(sp)
1c001f7c:	dcc2                	sw	a6,120(sp)
1c001f7e:	deae                	sw	a1,124(sp)
1c001f80:	c132                	sw	a2,128(sp)
1c001f82:	c336                	sw	a3,132(sp)
1c001f84:	c53a                	sw	a4,136(sp)
1c001f86:	c73e                	sw	a5,140(sp)
1c001f88:	936fe0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c001f8c:	c782                	sw	zero,204(sp)
1c001f8e:	c582                	sw	zero,200(sp)
1c001f90:	c382                	sw	zero,196(sp)
1c001f92:	c182                	sw	zero,192(sp)
1c001f94:	16049863          	bnez	s1,1c002104 <BNReluConvolution6+0x4e8>
1c001f98:	4685                	li	a3,1
1c001f9a:	c3b6                	sw	a3,196(sp)
1c001f9c:	16091f63          	bnez	s2,1c00211a <BNReluConvolution6+0x4fe>
1c001fa0:	4785                	li	a5,1
1c001fa2:	c5be                	sw	a5,200(sp)
1c001fa4:	891fe0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c001fa8:	09e15c83          	lhu	s9,158(sp)
1c001fac:	0a015d03          	lhu	s10,160(sp)
1c001fb0:	0a215d83          	lhu	s11,162(sp)
1c001fb4:	5fba                	lw	t6,172(sp)
1c001fb6:	52ca                	lw	t0,176(sp)
1c001fb8:	53da                	lw	t2,180(sp)
1c001fba:	431e                	lw	t1,196(sp)
1c001fbc:	4e0e                	lw	t3,192(sp)
1c001fbe:	4eae                	lw	t4,200(sp)
1c001fc0:	4f3e                	lw	t5,204(sp)
1c001fc2:	5886                	lw	a7,96(sp)
1c001fc4:	4876                	lw	a6,92(sp)
1c001fc6:	47b6                	lw	a5,76(sp)
1c001fc8:	4726                	lw	a4,72(sp)
1c001fca:	46c6                	lw	a3,80(sp)
1c001fcc:	45e6                	lw	a1,88(sp)
1c001fce:	408d                	li	ra,3
1c001fd0:	1003d3b3          	p.exthz	t2,t2
1c001fd4:	1002d2b3          	p.exthz	t0,t0
1c001fd8:	100fdfb3          	p.exthz	t6,t6
1c001fdc:	100f5f33          	p.exthz	t5,t5
1c001fe0:	100edeb3          	p.exthz	t4,t4
1c001fe4:	100e5e33          	p.exthz	t3,t3
1c001fe8:	10035333          	p.exthz	t1,t1
1c001fec:	865e                	mv	a2,s7
1c001fee:	8562                	mv	a0,s8
1c001ff0:	c26a                	sw	s10,4(sp)
1c001ff2:	c066                	sw	s9,0(sp)
1c001ff4:	ce06                	sw	ra,28(sp)
1c001ff6:	cc06                	sw	ra,24(sp)
1c001ff8:	ca1e                	sw	t2,20(sp)
1c001ffa:	c816                	sw	t0,16(sp)
1c001ffc:	c67e                	sw	t6,12(sp)
1c001ffe:	d67a                	sw	t5,44(sp)
1c002000:	d476                	sw	t4,40(sp)
1c002002:	d272                	sw	t3,36(sp)
1c002004:	d01a                	sw	t1,32(sp)
1c002006:	c46e                	sw	s11,8(sp)
1c002008:	da5a                	sw	s6,52(sp)
1c00200a:	d85a                	sw	s6,48(sp)
1c00200c:	e75fe0ef          	jal	ra,1c000e80 <pulp_nn_conv_Ho_parallel.constprop.5>
1c002010:	825fe0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c002014:	4656                	lw	a2,84(sp)
1c002016:	00349793          	slli	a5,s1,0x3
1c00201a:	00149713          	slli	a4,s1,0x1
1c00201e:	973e                	add	a4,a4,a5
1c002020:	00c406b3          	add	a3,s0,a2
1c002024:	00991793          	slli	a5,s2,0x9
1c002028:	00d78433          	add	s0,a5,a3
1c00202c:	00771793          	slli	a5,a4,0x7
1c002030:	943e                	add	s0,s0,a5
1c002032:	c9a2                	sw	s0,208(sp)
1c002034:	cbde                	sw	s7,212(sp)
1c002036:	57ca                	lw	a5,176(sp)
1c002038:	1888                	addi	a0,sp,112
1c00203a:	8426                	mv	s0,s1
1c00203c:	1007d7b3          	p.exthz	a5,a5
1c002040:	0cf11f23          	sh	a5,222(sp)
1c002044:	57ba                	lw	a5,172(sp)
1c002046:	4d05                	li	s10,1
1c002048:	1afd                	addi	s5,s5,-1
1c00204a:	1007d7b3          	p.exthz	a5,a5
1c00204e:	0ef11123          	sh	a5,226(sp)
1c002052:	579a                	lw	a5,164(sp)
1c002054:	1007d7b3          	p.exthz	a5,a5
1c002058:	0ef11223          	sh	a5,228(sp)
1c00205c:	434e                	lw	t1,208(sp)
1c00205e:	48de                	lw	a7,212(sp)
1c002060:	486e                	lw	a6,216(sp)
1c002062:	45fe                	lw	a1,220(sp)
1c002064:	560e                	lw	a2,224(sp)
1c002066:	569e                	lw	a3,228(sp)
1c002068:	572e                	lw	a4,232(sp)
1c00206a:	57be                	lw	a5,236(sp)
1c00206c:	d89a                	sw	t1,112(sp)
1c00206e:	dac6                	sw	a7,116(sp)
1c002070:	dcc2                	sw	a6,120(sp)
1c002072:	deae                	sw	a1,124(sp)
1c002074:	c132                	sw	a2,128(sp)
1c002076:	c336                	sw	a3,132(sp)
1c002078:	c53a                	sw	a4,136(sp)
1c00207a:	c73e                	sw	a5,140(sp)
1c00207c:	842fe0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c002080:	0a192063          	p.beqimm	s2,1,1c002120 <BNReluConvolution6+0x504>
1c002084:	fb0fe0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c002088:	0c0a8c63          	beqz	s5,1c002160 <BNReluConvolution6+0x544>
1c00208c:	0b411123          	sh	s4,162(sp)
1c002090:	874e                	mv	a4,s3
1c002092:	4795                	li	a5,5
1c002094:	00143363          	p.bneimm	s0,1,1c00209a <BNReluConvolution6+0x47e>
1c002098:	478d                	li	a5,3
1c00209a:	86ca                	mv	a3,s2
1c00209c:	0af11023          	sh	a5,160(sp)
1c0020a0:	896a                	mv	s2,s10
1c0020a2:	8cce                	mv	s9,s3
1c0020a4:	8626                	mv	a2,s1
1c0020a6:	4d81                	li	s11,0
1c0020a8:	84a2                	mv	s1,s0
1c0020aa:	89ba                	mv	s3,a4
1c0020ac:	ca1938e3          	p.bneimm	s2,1,1c001d5c <BNReluConvolution6+0x140>
1c0020b0:	470d                	li	a4,3
1c0020b2:	08e11f23          	sh	a4,158(sp)
1c0020b6:	0a215583          	lhu	a1,162(sp)
1c0020ba:	0a015783          	lhu	a5,160(sp)
1c0020be:	09e15703          	lhu	a4,158(sp)
1c0020c2:	02b787b3          	mul	a5,a5,a1
1c0020c6:	02e787b3          	mul	a5,a5,a4
1c0020ca:	1007d7b3          	p.exthz	a5,a5
1c0020ce:	08f11e23          	sh	a5,156(sp)
1c0020d2:	09411d23          	sh	s4,154(sp)
1c0020d6:	df02                	sw	zero,188(sp)
1c0020d8:	dd02                	sw	zero,184(sp)
1c0020da:	ca0498e3          	bnez	s1,1c001d8a <BNReluConvolution6+0x16e>
1c0020de:	dd4a                	sw	s2,184(sp)
1c0020e0:	d95a                	sw	s6,176(sp)
1c0020e2:	4785                	li	a5,1
1c0020e4:	d73e                	sw	a5,172(sp)
1c0020e6:	ca39bee3          	p.bneimm	s3,3,1c001da2 <BNReluConvolution6+0x186>
1c0020ea:	45a1                	li	a1,8
1c0020ec:	db2e                	sw	a1,180(sp)
1c0020ee:	57da                	lw	a5,180(sp)
1c0020f0:	584a                	lw	a6,176(sp)
1c0020f2:	553a                	lw	a0,172(sp)
1c0020f4:	4721                	li	a4,8
1c0020f6:	030787b3          	mul	a5,a5,a6
1c0020fa:	02a787b3          	mul	a5,a5,a0
1c0020fe:	d53e                	sw	a5,168(sp)
1c002100:	d32e                	sw	a1,164(sp)
1c002102:	b975                	j	1c001dbe <BNReluConvolution6+0x1a2>
1c002104:	00091863          	bnez	s2,1c002114 <BNReluConvolution6+0x4f8>
1c002108:	4705                	li	a4,1
1c00210a:	c5ba                	sw	a4,200(sp)
1c00210c:	e814bce3          	p.bneimm	s1,1,1c001fa4 <BNReluConvolution6+0x388>
1c002110:	c1a6                	sw	s1,192(sp)
1c002112:	bd49                	j	1c001fa4 <BNReluConvolution6+0x388>
1c002114:	0014b363          	p.bneimm	s1,1,1c00211a <BNReluConvolution6+0x4fe>
1c002118:	c1a6                	sw	s1,192(sp)
1c00211a:	4785                	li	a5,1
1c00211c:	c7be                	sw	a5,204(sp)
1c00211e:	b559                	j	1c001fa4 <BNReluConvolution6+0x388>
1c002120:	00148413          	addi	s0,s1,1
1c002124:	4d01                	li	s10,0
1c002126:	f4243fe3          	p.bneimm	s0,2,1c002084 <BNReluConvolution6+0x468>
1c00212a:	00198713          	addi	a4,s3,1
1c00212e:	c2ba                	sw	a4,68(sp)
1c002130:	f04fe0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c002134:	4716                	lw	a4,68(sp)
1c002136:	020a8563          	beqz	s5,1c002160 <BNReluConvolution6+0x544>
1c00213a:	0b411123          	sh	s4,162(sp)
1c00213e:	4401                	li	s0,0
1c002140:	4795                	li	a5,5
1c002142:	bfa1                	j	1c00209a <BNReluConvolution6+0x47e>
1c002144:	d95a                	sw	s6,176(sp)
1c002146:	4791                	li	a5,4
1c002148:	b991                	j	1c001d9c <BNReluConvolution6+0x180>
1c00214a:	ca9615e3          	bne	a2,s1,1c001df4 <BNReluConvolution6+0x1d8>
1c00214e:	b30d                	j	1c001e70 <BNReluConvolution6+0x254>
1c002150:	d95a                	sw	s6,176(sp)
1c002152:	4785                	li	a5,1
1c002154:	b1a1                	j	1c001d9c <BNReluConvolution6+0x180>
1c002156:	fe14b7e3          	p.bneimm	s1,1,1c002144 <BNReluConvolution6+0x528>
1c00215a:	d926                	sw	s1,176(sp)
1c00215c:	4791                	li	a5,4
1c00215e:	b93d                	j	1c001d9c <BNReluConvolution6+0x180>
1c002160:	1a812403          	lw	s0,424(sp)
1c002164:	5536                	lw	a0,108(sp)
1c002166:	1ac12083          	lw	ra,428(sp)
1c00216a:	1a412483          	lw	s1,420(sp)
1c00216e:	1a012903          	lw	s2,416(sp)
1c002172:	19c12983          	lw	s3,412(sp)
1c002176:	19812a03          	lw	s4,408(sp)
1c00217a:	19412a83          	lw	s5,404(sp)
1c00217e:	19012b03          	lw	s6,400(sp)
1c002182:	18c12b83          	lw	s7,396(sp)
1c002186:	18812c03          	lw	s8,392(sp)
1c00218a:	18412c83          	lw	s9,388(sp)
1c00218e:	18012d03          	lw	s10,384(sp)
1c002192:	17c12d83          	lw	s11,380(sp)
1c002196:	615d                	addi	sp,sp,432
1c002198:	f0bfd06f          	j	1c0000a2 <dory_dma_deallocate>

1c00219c <BNReluConvolution0>:
1c00219c:	00c52f83          	lw	t6,12(a0)
1c0021a0:	7121                	addi	sp,sp,-448
1c0021a2:	1b212823          	sw	s2,432(sp)
1c0021a6:	1b312623          	sw	s3,428(sp)
1c0021aa:	02852903          	lw	s2,40(a0)
1c0021ae:	02452983          	lw	s3,36(a0)
1c0021b2:	19812c23          	sw	s8,408(sp)
1c0021b6:	dcfe                	sw	t6,120(sp)
1c0021b8:	01c52c03          	lw	s8,28(a0)
1c0021bc:	01452f83          	lw	t6,20(a0)
1c0021c0:	4d08                	lw	a0,24(a0)
1c0021c2:	1a112e23          	sw	ra,444(sp)
1c0021c6:	1a812c23          	sw	s0,440(sp)
1c0021ca:	1a912a23          	sw	s1,436(sp)
1c0021ce:	1b412423          	sw	s4,424(sp)
1c0021d2:	1b512223          	sw	s5,420(sp)
1c0021d6:	1b612023          	sw	s6,416(sp)
1c0021da:	19712e23          	sw	s7,412(sp)
1c0021de:	19912a23          	sw	s9,404(sp)
1c0021e2:	19a12823          	sw	s10,400(sp)
1c0021e6:	19b12623          	sw	s11,396(sp)
1c0021ea:	d4fe                	sw	t6,104(sp)
1c0021ec:	deaa                	sw	a0,124(sp)
1c0021ee:	ecffd0ef          	jal	ra,1c0000bc <dory_dma_allocate>
1c0021f2:	16012423          	sw	zero,360(sp)
1c0021f6:	16011623          	sh	zero,364(sp)
1c0021fa:	16011823          	sh	zero,368(sp)
1c0021fe:	4785                	li	a5,1
1c002200:	16f11723          	sh	a5,366(sp)
1c002204:	16f11923          	sh	a5,370(sp)
1c002208:	4405                	li	s0,1
1c00220a:	16812c23          	sw	s0,376(sp)
1c00220e:	16a12e23          	sw	a0,380(sp)
1c002212:	14012423          	sw	zero,328(sp)
1c002216:	14011623          	sh	zero,332(sp)
1c00221a:	14011823          	sh	zero,336(sp)
1c00221e:	14811723          	sh	s0,334(sp)
1c002222:	14811923          	sh	s0,338(sp)
1c002226:	14812c23          	sw	s0,344(sp)
1c00222a:	14a12e23          	sw	a0,348(sp)
1c00222e:	10012423          	sw	zero,264(sp)
1c002232:	0a000793          	li	a5,160
1c002236:	10f11623          	sh	a5,268(sp)
1c00223a:	10811823          	sh	s0,272(sp)
1c00223e:	10812c23          	sw	s0,280(sp)
1c002242:	10a12e23          	sw	a0,284(sp)
1c002246:	12012423          	sw	zero,296(sp)
1c00224a:	47e5                	li	a5,25
1c00224c:	12f11623          	sh	a5,300(sp)
1c002250:	12811823          	sh	s0,304(sp)
1c002254:	02000713          	li	a4,32
1c002258:	12e11723          	sh	a4,302(sp)
1c00225c:	12f11923          	sh	a5,306(sp)
1c002260:	12812c23          	sw	s0,312(sp)
1c002264:	12a12e23          	sw	a0,316(sp)
1c002268:	6785                	lui	a5,0x1
1c00226a:	d582                	sw	zero,232(sp)
1c00226c:	a0078793          	addi	a5,a5,-1536 # a00 <__rt_stack_size+0x200>
1c002270:	0ef11623          	sh	a5,236(sp)
1c002274:	0ee11823          	sh	a4,240(sp)
1c002278:	64a5                	lui	s1,0x9
1c00227a:	dd82                	sw	zero,248(sp)
1c00227c:	dd148793          	addi	a5,s1,-559 # 8dd1 <__rt_stack_size+0x85d1>
1c002280:	97e2                	add	a5,a5,s8
1c002282:	d2aa                	sw	a0,100(sp)
1c002284:	dfaa                	sw	a0,252(sp)
1c002286:	d6be                	sw	a5,108(sp)
1c002288:	dacfe0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c00228c:	bc148793          	addi	a5,s1,-1087
1c002290:	97e2                	add	a5,a5,s8
1c002292:	cebe                	sw	a5,92(sp)
1c002294:	6785                	lui	a5,0x1
1c002296:	09178793          	addi	a5,a5,145 # 1091 <__rt_stack_size+0x891>
1c00229a:	97e2                	add	a5,a5,s8
1c00229c:	89948713          	addi	a4,s1,-1895
1c0022a0:	cc948493          	addi	s1,s1,-823
1c0022a4:	1009d9b3          	p.exthz	s3,s3
1c0022a8:	9762                	add	a4,a4,s8
1c0022aa:	94e2                	add	s1,s1,s8
1c0022ac:	10095933          	p.exthz	s2,s2
1c0022b0:	0a811923          	sh	s0,178(sp)
1c0022b4:	c8be                	sw	a5,80(sp)
1c0022b6:	03300793          	li	a5,51
1c0022ba:	d8ce                	sw	s3,112(sp)
1c0022bc:	4311                	li	t1,4
1c0022be:	cae2                	sw	s8,84(sp)
1c0022c0:	daca                	sw	s2,116(sp)
1c0022c2:	ccba                	sw	a4,88(sp)
1c0022c4:	d0a6                	sw	s1,96(sp)
1c0022c6:	4981                	li	s3,0
1c0022c8:	0af11823          	sh	a5,176(sp)
1c0022cc:	4605                	li	a2,1
1c0022ce:	4585                	li	a1,1
1c0022d0:	4d85                	li	s11,1
1c0022d2:	4d05                	li	s10,1
1c0022d4:	4a81                	li	s5,0
1c0022d6:	4a01                	li	s4,0
1c0022d8:	4b85                	li	s7,1
1c0022da:	4b09                	li	s6,2
1c0022dc:	02000c93          	li	s9,32
1c0022e0:	8c1a                	mv	s8,t1
1c0022e2:	3619a063          	p.beqimm	s3,1,1c002642 <BNReluConvolution0+0x4a6>
1c0022e6:	05300693          	li	a3,83
1c0022ea:	0ad11723          	sh	a3,174(sp)
1c0022ee:	0b215683          	lhu	a3,178(sp)
1c0022f2:	0b015783          	lhu	a5,176(sp)
1c0022f6:	0ae15703          	lhu	a4,174(sp)
1c0022fa:	02d787b3          	mul	a5,a5,a3
1c0022fe:	02e787b3          	mul	a5,a5,a4
1c002302:	1007d7b3          	p.exthz	a5,a5
1c002306:	0af11623          	sh	a5,172(sp)
1c00230a:	0b711523          	sh	s7,170(sp)
1c00230e:	c782                	sw	zero,204(sp)
1c002310:	c582                	sw	zero,200(sp)
1c002312:	000a0363          	beqz	s4,1c002318 <BNReluConvolution0+0x17c>
1c002316:	c7da                	sw	s6,204(sp)
1c002318:	40e1                	li	ra,24
1c00231a:	c186                	sw	ra,192(sp)
1c00231c:	02800693          	li	a3,40
1c002320:	df36                	sw	a3,188(sp)
1c002322:	c3e6                	sw	s9,196(sp)
1c002324:	479e                	lw	a5,196(sp)
1c002326:	468e                	lw	a3,192(sp)
1c002328:	577a                	lw	a4,188(sp)
1c00232a:	005a9913          	slli	s2,s5,0x5
1c00232e:	02d787b3          	mul	a5,a5,a3
1c002332:	02e787b3          	mul	a5,a5,a4
1c002336:	dd3e                	sw	a5,184(sp)
1c002338:	db66                	sw	s9,180(sp)
1c00233a:	0b911423          	sh	s9,168(sp)
1c00233e:	0b711323          	sh	s7,166(sp)
1c002342:	0a815703          	lhu	a4,168(sp)
1c002346:	0a615783          	lhu	a5,166(sp)
1c00234a:	02e787b3          	mul	a5,a5,a4
1c00234e:	00179713          	slli	a4,a5,0x1
1c002352:	973e                	add	a4,a4,a5
1c002354:	070e                	slli	a4,a4,0x3
1c002356:	97ba                	add	a5,a5,a4
1c002358:	1007d7b3          	p.exthz	a5,a5
1c00235c:	0af11223          	sh	a5,164(sp)
1c002360:	0b711123          	sh	s7,162(sp)
1c002364:	000d9463          	bnez	s11,1c00236c <BNReluConvolution0+0x1d0>
1c002368:	39360363          	beq	a2,s3,1c0026ee <BNReluConvolution0+0x552>
1c00236c:	46be                	lw	a3,204(sp)
1c00236e:	001a1413          	slli	s0,s4,0x1
1c002372:	014407b3          	add	a5,s0,s4
1c002376:	462e                	lw	a2,200(sp)
1c002378:	0792                	slli	a5,a5,0x4
1c00237a:	00299493          	slli	s1,s3,0x2
1c00237e:	40d786b3          	sub	a3,a5,a3
1c002382:	5fe6                	lw	t6,120(sp)
1c002384:	01348733          	add	a4,s1,s3
1c002388:	00269793          	slli	a5,a3,0x2
1c00238c:	0712                	slli	a4,a4,0x4
1c00238e:	97b6                	add	a5,a5,a3
1c002390:	8f11                	sub	a4,a4,a2
1c002392:	977e                	add	a4,a4,t6
1c002394:	0796                	slli	a5,a5,0x5
1c002396:	4fd6                	lw	t6,84(sp)
1c002398:	97ba                	add	a5,a5,a4
1c00239a:	10f12023          	sw	a5,256(sp)
1c00239e:	11f12223          	sw	t6,260(sp)
1c0023a2:	0b015783          	lhu	a5,176(sp)
1c0023a6:	0108                	addi	a0,sp,128
1c0023a8:	1007d7b3          	p.exthz	a5,a5
1c0023ac:	10f11723          	sh	a5,270(sp)
1c0023b0:	0ae15783          	lhu	a5,174(sp)
1c0023b4:	1007d7b3          	p.exthz	a5,a5
1c0023b8:	10f11923          	sh	a5,274(sp)
1c0023bc:	0aa15783          	lhu	a5,170(sp)
1c0023c0:	1007d7b3          	p.exthz	a5,a5
1c0023c4:	10f11a23          	sh	a5,276(sp)
1c0023c8:	10012303          	lw	t1,256(sp)
1c0023cc:	10412883          	lw	a7,260(sp)
1c0023d0:	10812803          	lw	a6,264(sp)
1c0023d4:	10c12583          	lw	a1,268(sp)
1c0023d8:	11012603          	lw	a2,272(sp)
1c0023dc:	11412683          	lw	a3,276(sp)
1c0023e0:	11812703          	lw	a4,280(sp)
1c0023e4:	11c12783          	lw	a5,284(sp)
1c0023e8:	c11a                	sw	t1,128(sp)
1c0023ea:	c346                	sw	a7,132(sp)
1c0023ec:	c542                	sw	a6,136(sp)
1c0023ee:	c72e                	sw	a1,140(sp)
1c0023f0:	c932                	sw	a2,144(sp)
1c0023f2:	cb36                	sw	a3,148(sp)
1c0023f4:	cd3a                	sw	a4,152(sp)
1c0023f6:	cf3e                	sw	a5,156(sp)
1c0023f8:	cc7fd0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c0023fc:	000d9463          	bnez	s11,1c002404 <BNReluConvolution0+0x268>
1c002400:	11aa8d63          	beq	s5,s10,1c00251a <BNReluConvolution0+0x37e>
1c002404:	00191d13          	slli	s10,s2,0x1
1c002408:	5ff6                	lw	t6,124(sp)
1c00240a:	9d4a                	add	s10,s10,s2
1c00240c:	0d0e                	slli	s10,s10,0x3
1c00240e:	9d4a                	add	s10,s10,s2
1c002410:	9d7e                	add	s10,s10,t6
1c002412:	4fe6                	lw	t6,88(sp)
1c002414:	13a12023          	sw	s10,288(sp)
1c002418:	0108                	addi	a0,sp,128
1c00241a:	13f12223          	sw	t6,292(sp)
1c00241e:	0a815783          	lhu	a5,168(sp)
1c002422:	1007d7b3          	p.exthz	a5,a5
1c002426:	12f11723          	sh	a5,302(sp)
1c00242a:	0a215783          	lhu	a5,162(sp)
1c00242e:	1007d7b3          	p.exthz	a5,a5
1c002432:	12f11a23          	sh	a5,308(sp)
1c002436:	12012303          	lw	t1,288(sp)
1c00243a:	12412883          	lw	a7,292(sp)
1c00243e:	12812803          	lw	a6,296(sp)
1c002442:	12c12583          	lw	a1,300(sp)
1c002446:	13012603          	lw	a2,304(sp)
1c00244a:	13412683          	lw	a3,308(sp)
1c00244e:	13812703          	lw	a4,312(sp)
1c002452:	13c12783          	lw	a5,316(sp)
1c002456:	c11a                	sw	t1,128(sp)
1c002458:	c346                	sw	a7,132(sp)
1c00245a:	c542                	sw	a6,136(sp)
1c00245c:	c72e                	sw	a1,140(sp)
1c00245e:	c932                	sw	a2,144(sp)
1c002460:	cb36                	sw	a3,148(sp)
1c002462:	cd3a                	sw	a4,152(sp)
1c002464:	cf3e                	sw	a5,156(sp)
1c002466:	c59fd0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c00246a:	004a9793          	slli	a5,s5,0x4
1c00246e:	97d6                	add	a5,a5,s5
1c002470:	0796                	slli	a5,a5,0x5
1c002472:	4ff6                	lw	t6,92(sp)
1c002474:	40fd0d33          	sub	s10,s10,a5
1c002478:	320d0793          	addi	a5,s10,800
1c00247c:	16f12023          	sw	a5,352(sp)
1c002480:	17f12223          	sw	t6,356(sp)
1c002484:	0a815783          	lhu	a5,168(sp)
1c002488:	0108                	addi	a0,sp,128
1c00248a:	420d0d13          	addi	s10,s10,1056
1c00248e:	078e                	slli	a5,a5,0x3
1c002490:	1007d7b3          	p.exthz	a5,a5
1c002494:	16f11a23          	sh	a5,372(sp)
1c002498:	16012303          	lw	t1,352(sp)
1c00249c:	16412883          	lw	a7,356(sp)
1c0024a0:	16812803          	lw	a6,360(sp)
1c0024a4:	16c12583          	lw	a1,364(sp)
1c0024a8:	17012603          	lw	a2,368(sp)
1c0024ac:	17412683          	lw	a3,372(sp)
1c0024b0:	17812703          	lw	a4,376(sp)
1c0024b4:	17c12783          	lw	a5,380(sp)
1c0024b8:	c11a                	sw	t1,128(sp)
1c0024ba:	c346                	sw	a7,132(sp)
1c0024bc:	c542                	sw	a6,136(sp)
1c0024be:	c72e                	sw	a1,140(sp)
1c0024c0:	c932                	sw	a2,144(sp)
1c0024c2:	cb36                	sw	a3,148(sp)
1c0024c4:	cd3a                	sw	a4,152(sp)
1c0024c6:	cf3e                	sw	a5,156(sp)
1c0024c8:	bf7fd0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c0024cc:	5f86                	lw	t6,96(sp)
1c0024ce:	15a12023          	sw	s10,320(sp)
1c0024d2:	0108                	addi	a0,sp,128
1c0024d4:	15f12223          	sw	t6,324(sp)
1c0024d8:	0a815783          	lhu	a5,168(sp)
1c0024dc:	078e                	slli	a5,a5,0x3
1c0024de:	1007d7b3          	p.exthz	a5,a5
1c0024e2:	14f11a23          	sh	a5,340(sp)
1c0024e6:	14012303          	lw	t1,320(sp)
1c0024ea:	14412883          	lw	a7,324(sp)
1c0024ee:	14812803          	lw	a6,328(sp)
1c0024f2:	14c12583          	lw	a1,332(sp)
1c0024f6:	15012603          	lw	a2,336(sp)
1c0024fa:	15412683          	lw	a3,340(sp)
1c0024fe:	15812703          	lw	a4,344(sp)
1c002502:	15c12783          	lw	a5,348(sp)
1c002506:	c11a                	sw	t1,128(sp)
1c002508:	c346                	sw	a7,132(sp)
1c00250a:	c542                	sw	a6,136(sp)
1c00250c:	c72e                	sw	a1,140(sp)
1c00250e:	c932                	sw	a2,144(sp)
1c002510:	cb36                	sw	a3,148(sp)
1c002512:	cd3a                	sw	a4,152(sp)
1c002514:	cf3e                	sw	a5,156(sp)
1c002516:	ba9fd0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c00251a:	cf82                	sw	zero,220(sp)
1c00251c:	cd82                	sw	zero,216(sp)
1c00251e:	cb82                	sw	zero,212(sp)
1c002520:	c982                	sw	zero,208(sp)
1c002522:	140a1b63          	bnez	s4,1c002678 <BNReluConvolution0+0x4dc>
1c002526:	cbda                	sw	s6,212(sp)
1c002528:	16099263          	bnez	s3,1c00268c <BNReluConvolution0+0x4f0>
1c00252c:	cdda                	sw	s6,216(sp)
1c00252e:	b06fe0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c002532:	0ae15083          	lhu	ra,174(sp)
1c002536:	0b015d03          	lhu	s10,176(sp)
1c00253a:	0b215d83          	lhu	s11,178(sp)
1c00253e:	5ffa                	lw	t6,188(sp)
1c002540:	04111023          	sh	ra,64(sp)
1c002544:	428e                	lw	t0,192(sp)
1c002546:	100fdfb3          	p.exthz	t6,t6
1c00254a:	439e                	lw	t2,196(sp)
1c00254c:	435e                	lw	t1,212(sp)
1c00254e:	4e4e                	lw	t3,208(sp)
1c002550:	4eee                	lw	t4,216(sp)
1c002552:	4f7e                	lw	t5,220(sp)
1c002554:	c67e                	sw	t6,12(sp)
1c002556:	04015f83          	lhu	t6,64(sp)
1c00255a:	4095                	li	ra,5
1c00255c:	1003d3b3          	p.exthz	t2,t2
1c002560:	1002d2b3          	p.exthz	t0,t0
1c002564:	58d6                	lw	a7,116(sp)
1c002566:	5846                	lw	a6,112(sp)
1c002568:	5786                	lw	a5,96(sp)
1c00256a:	4776                	lw	a4,92(sp)
1c00256c:	46e6                	lw	a3,88(sp)
1c00256e:	4646                	lw	a2,80(sp)
1c002570:	55b6                	lw	a1,108(sp)
1c002572:	4556                	lw	a0,84(sp)
1c002574:	100f5f33          	p.exthz	t5,t5
1c002578:	100edeb3          	p.exthz	t4,t4
1c00257c:	100e5e33          	p.exthz	t3,t3
1c002580:	10035333          	p.exthz	t1,t1
1c002584:	ce06                	sw	ra,28(sp)
1c002586:	cc06                	sw	ra,24(sp)
1c002588:	ca1e                	sw	t2,20(sp)
1c00258a:	c816                	sw	t0,16(sp)
1c00258c:	c07e                	sw	t6,0(sp)
1c00258e:	d67a                	sw	t5,44(sp)
1c002590:	d476                	sw	t4,40(sp)
1c002592:	c46e                	sw	s11,8(sp)
1c002594:	c26a                	sw	s10,4(sp)
1c002596:	da5a                	sw	s6,52(sp)
1c002598:	d85a                	sw	s6,48(sp)
1c00259a:	d272                	sw	t3,36(sp)
1c00259c:	d01a                	sw	t1,32(sp)
1c00259e:	8e3fe0ef          	jal	ra,1c000e80 <pulp_nn_conv_Ho_parallel.constprop.5>
1c0025a2:	a92fe0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c0025a6:	5fa6                	lw	t6,104(sp)
1c0025a8:	9452                	add	s0,s0,s4
1c0025aa:	00341793          	slli	a5,s0,0x3
1c0025ae:	94ce                	add	s1,s1,s3
1c0025b0:	0416                	slli	s0,s0,0x5
1c0025b2:	04a2                	slli	s1,s1,0x8
1c0025b4:	943e                	add	s0,s0,a5
1c0025b6:	997e                	add	s2,s2,t6
1c0025b8:	9926                	add	s2,s2,s1
1c0025ba:	4fc6                	lw	t6,80(sp)
1c0025bc:	0426                	slli	s0,s0,0x9
1c0025be:	944a                	add	s0,s0,s2
1c0025c0:	d1a2                	sw	s0,224(sp)
1c0025c2:	d3fe                	sw	t6,228(sp)
1c0025c4:	478e                	lw	a5,192(sp)
1c0025c6:	0108                	addi	a0,sp,128
1c0025c8:	8452                	mv	s0,s4
1c0025ca:	1007d7b3          	p.exthz	a5,a5
1c0025ce:	0ef11723          	sh	a5,238(sp)
1c0025d2:	57fa                	lw	a5,188(sp)
1c0025d4:	4485                	li	s1,1
1c0025d6:	1c7d                	addi	s8,s8,-1
1c0025d8:	1007d7b3          	p.exthz	a5,a5
1c0025dc:	0ef11923          	sh	a5,242(sp)
1c0025e0:	57da                	lw	a5,180(sp)
1c0025e2:	1007d7b3          	p.exthz	a5,a5
1c0025e6:	0ef11a23          	sh	a5,244(sp)
1c0025ea:	530e                	lw	t1,224(sp)
1c0025ec:	589e                	lw	a7,228(sp)
1c0025ee:	582e                	lw	a6,232(sp)
1c0025f0:	55be                	lw	a1,236(sp)
1c0025f2:	564e                	lw	a2,240(sp)
1c0025f4:	56de                	lw	a3,244(sp)
1c0025f6:	576e                	lw	a4,248(sp)
1c0025f8:	57fe                	lw	a5,252(sp)
1c0025fa:	c11a                	sw	t1,128(sp)
1c0025fc:	c346                	sw	a7,132(sp)
1c0025fe:	c542                	sw	a6,136(sp)
1c002600:	c72e                	sw	a1,140(sp)
1c002602:	c932                	sw	a2,144(sp)
1c002604:	cb36                	sw	a3,148(sp)
1c002606:	cd3a                	sw	a4,152(sp)
1c002608:	cf3e                	sw	a5,156(sp)
1c00260a:	ab5fd0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c00260e:	0819a163          	p.beqimm	s3,1,1c002690 <BNReluConvolution0+0x4f4>
1c002612:	a22fe0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c002616:	080c0e63          	beqz	s8,1c0026b2 <BNReluConvolution0+0x516>
1c00261a:	0b711923          	sh	s7,178(sp)
1c00261e:	8956                	mv	s2,s5
1c002620:	03200793          	li	a5,50
1c002624:	00142463          	p.beqimm	s0,1,1c00262c <BNReluConvolution0+0x490>
1c002628:	03300793          	li	a5,51
1c00262c:	864e                	mv	a2,s3
1c00262e:	0af11823          	sh	a5,176(sp)
1c002632:	89a6                	mv	s3,s1
1c002634:	8d56                	mv	s10,s5
1c002636:	85d2                	mv	a1,s4
1c002638:	4d81                	li	s11,0
1c00263a:	8aca                	mv	s5,s2
1c00263c:	8a22                	mv	s4,s0
1c00263e:	ca19b4e3          	p.bneimm	s3,1,1c0022e6 <BNReluConvolution0+0x14a>
1c002642:	05200093          	li	ra,82
1c002646:	0a111723          	sh	ra,174(sp)
1c00264a:	0b215683          	lhu	a3,178(sp)
1c00264e:	0b015783          	lhu	a5,176(sp)
1c002652:	0ae15703          	lhu	a4,174(sp)
1c002656:	02d787b3          	mul	a5,a5,a3
1c00265a:	02e787b3          	mul	a5,a5,a4
1c00265e:	1007d7b3          	p.exthz	a5,a5
1c002662:	0af11623          	sh	a5,172(sp)
1c002666:	0b311523          	sh	s3,170(sp)
1c00266a:	c782                	sw	zero,204(sp)
1c00266c:	c582                	sw	zero,200(sp)
1c00266e:	000a0363          	beqz	s4,1c002674 <BNReluConvolution0+0x4d8>
1c002672:	c7da                	sw	s6,204(sp)
1c002674:	c5da                	sw	s6,200(sp)
1c002676:	b14d                	j	1c002318 <BNReluConvolution0+0x17c>
1c002678:	00099763          	bnez	s3,1c002686 <BNReluConvolution0+0x4ea>
1c00267c:	cdda                	sw	s6,216(sp)
1c00267e:	ea1a38e3          	p.bneimm	s4,1,1c00252e <BNReluConvolution0+0x392>
1c002682:	c9da                	sw	s6,208(sp)
1c002684:	b56d                	j	1c00252e <BNReluConvolution0+0x392>
1c002686:	001a3363          	p.bneimm	s4,1,1c00268c <BNReluConvolution0+0x4f0>
1c00268a:	c9da                	sw	s6,208(sp)
1c00268c:	cfda                	sw	s6,220(sp)
1c00268e:	b545                	j	1c00252e <BNReluConvolution0+0x392>
1c002690:	001a0413          	addi	s0,s4,1
1c002694:	4481                	li	s1,0
1c002696:	f6243ee3          	p.bneimm	s0,2,1c002612 <BNReluConvolution0+0x476>
1c00269a:	001a8913          	addi	s2,s5,1
1c00269e:	996fe0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c0026a2:	000c0863          	beqz	s8,1c0026b2 <BNReluConvolution0+0x516>
1c0026a6:	0b311923          	sh	s3,178(sp)
1c0026aa:	4401                	li	s0,0
1c0026ac:	03300793          	li	a5,51
1c0026b0:	bfb5                	j	1c00262c <BNReluConvolution0+0x490>
1c0026b2:	1b812403          	lw	s0,440(sp)
1c0026b6:	5516                	lw	a0,100(sp)
1c0026b8:	1bc12083          	lw	ra,444(sp)
1c0026bc:	1b412483          	lw	s1,436(sp)
1c0026c0:	1b012903          	lw	s2,432(sp)
1c0026c4:	1ac12983          	lw	s3,428(sp)
1c0026c8:	1a812a03          	lw	s4,424(sp)
1c0026cc:	1a412a83          	lw	s5,420(sp)
1c0026d0:	1a012b03          	lw	s6,416(sp)
1c0026d4:	19c12b83          	lw	s7,412(sp)
1c0026d8:	19812c03          	lw	s8,408(sp)
1c0026dc:	19412c83          	lw	s9,404(sp)
1c0026e0:	19012d03          	lw	s10,400(sp)
1c0026e4:	18c12d83          	lw	s11,396(sp)
1c0026e8:	6139                	addi	sp,sp,448
1c0026ea:	9b9fd06f          	j	1c0000a2 <dory_dma_deallocate>
1c0026ee:	c7459fe3          	bne	a1,s4,1c00236c <BNReluConvolution0+0x1d0>
1c0026f2:	001a1413          	slli	s0,s4,0x1
1c0026f6:	00299493          	slli	s1,s3,0x2
1c0026fa:	b319                	j	1c002400 <BNReluConvolution0+0x264>

1c0026fc <BNReluConvolution2>:
1c0026fc:	7161                	addi	sp,sp,-432
1c0026fe:	4550                	lw	a2,12(a0)
1c002700:	4954                	lw	a3,20(a0)
1c002702:	1b212023          	sw	s2,416(sp)
1c002706:	19312e23          	sw	s3,412(sp)
1c00270a:	02852903          	lw	s2,40(a0)
1c00270e:	02452983          	lw	s3,36(a0)
1c002712:	19412c23          	sw	s4,408(sp)
1c002716:	01c52a03          	lw	s4,28(a0)
1c00271a:	4d08                	lw	a0,24(a0)
1c00271c:	d6b2                	sw	a2,108(sp)
1c00271e:	ceb6                	sw	a3,92(sp)
1c002720:	1a112623          	sw	ra,428(sp)
1c002724:	1a812423          	sw	s0,424(sp)
1c002728:	1a912223          	sw	s1,420(sp)
1c00272c:	19512a23          	sw	s5,404(sp)
1c002730:	19612823          	sw	s6,400(sp)
1c002734:	19712623          	sw	s7,396(sp)
1c002738:	19812423          	sw	s8,392(sp)
1c00273c:	19a12023          	sw	s10,384(sp)
1c002740:	19912223          	sw	s9,388(sp)
1c002744:	17b12e23          	sw	s11,380(sp)
1c002748:	caaa                	sw	a0,84(sp)
1c00274a:	973fd0ef          	jal	ra,1c0000bc <dory_dma_allocate>
1c00274e:	14012c23          	sw	zero,344(sp)
1c002752:	14011e23          	sh	zero,348(sp)
1c002756:	16011023          	sh	zero,352(sp)
1c00275a:	4785                	li	a5,1
1c00275c:	14f11f23          	sh	a5,350(sp)
1c002760:	16f11123          	sh	a5,354(sp)
1c002764:	4785                	li	a5,1
1c002766:	16f12423          	sw	a5,360(sp)
1c00276a:	16a12623          	sw	a0,364(sp)
1c00276e:	12012c23          	sw	zero,312(sp)
1c002772:	12011e23          	sh	zero,316(sp)
1c002776:	14011023          	sh	zero,320(sp)
1c00277a:	12f11f23          	sh	a5,318(sp)
1c00277e:	14f11123          	sh	a5,322(sp)
1c002782:	14f12423          	sw	a5,328(sp)
1c002786:	14a12623          	sw	a0,332(sp)
1c00278a:	dd82                	sw	zero,248(sp)
1c00278c:	50000713          	li	a4,1280
1c002790:	0ee11e23          	sh	a4,252(sp)
1c002794:	02000493          	li	s1,32
1c002798:	10911023          	sh	s1,256(sp)
1c00279c:	10f12423          	sw	a5,264(sp)
1c0027a0:	10a12623          	sw	a0,268(sp)
1c0027a4:	10012c23          	sw	zero,280(sp)
1c0027a8:	12000713          	li	a4,288
1c0027ac:	10e11e23          	sh	a4,284(sp)
1c0027b0:	12911023          	sh	s1,288(sp)
1c0027b4:	10911f23          	sh	s1,286(sp)
1c0027b8:	4725                	li	a4,9
1c0027ba:	12e11123          	sh	a4,290(sp)
1c0027be:	12f12423          	sw	a5,296(sp)
1c0027c2:	12a12623          	sw	a0,300(sp)
1c0027c6:	cd82                	sw	zero,216(sp)
1c0027c8:	28000793          	li	a5,640
1c0027cc:	0cf11e23          	sh	a5,220(sp)
1c0027d0:	0e911023          	sh	s1,224(sp)
1c0027d4:	6421                	lui	s0,0x8
1c0027d6:	d582                	sw	zero,232(sp)
1c0027d8:	c4840793          	addi	a5,s0,-952 # 7c48 <__rt_stack_size+0x7448>
1c0027dc:	97d2                	add	a5,a5,s4
1c0027de:	ccaa                	sw	a0,88(sp)
1c0027e0:	d7aa                	sw	a0,236(sp)
1c0027e2:	d0be                	sw	a5,96(sp)
1c0027e4:	850fe0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c0027e8:	6795                	lui	a5,0x5
1c0027ea:	63078793          	addi	a5,a5,1584 # 5630 <__rt_stack_size+0x4e30>
1c0027ee:	a3840693          	addi	a3,s0,-1480
1c0027f2:	97d2                	add	a5,a5,s4
1c0027f4:	b4040413          	addi	s0,s0,-1216
1c0027f8:	1009d9b3          	p.exthz	s3,s3
1c0027fc:	10095933          	p.exthz	s2,s2
1c002800:	0a911123          	sh	s1,162(sp)
1c002804:	c4be                	sw	a5,72(sp)
1c002806:	96d2                	add	a3,a3,s4
1c002808:	9452                	add	s0,s0,s4
1c00280a:	6a91                	lui	s5,0x4
1c00280c:	47c5                	li	a5,17
1c00280e:	d2ce                	sw	s3,100(sp)
1c002810:	d4ca                	sw	s2,104(sp)
1c002812:	628a8a93          	addi	s5,s5,1576 # 4628 <__rt_stack_size+0x3e28>
1c002816:	c8b6                	sw	a3,80(sp)
1c002818:	c6a2                	sw	s0,76(sp)
1c00281a:	4901                	li	s2,0
1c00281c:	0af11023          	sh	a5,160(sp)
1c002820:	9ad2                	add	s5,s5,s4
1c002822:	4b11                	li	s6,4
1c002824:	4605                	li	a2,1
1c002826:	4585                	li	a1,1
1c002828:	4d05                	li	s10,1
1c00282a:	4c05                	li	s8,1
1c00282c:	4481                	li	s1,0
1c00282e:	4981                	li	s3,0
1c002830:	4b85                	li	s7,1
1c002832:	34192b63          	p.beqimm	s2,1,1c002b88 <BNReluConvolution2+0x48c>
1c002836:	02100793          	li	a5,33
1c00283a:	08f11f23          	sh	a5,158(sp)
1c00283e:	0a215683          	lhu	a3,162(sp)
1c002842:	0a015783          	lhu	a5,160(sp)
1c002846:	09e15703          	lhu	a4,158(sp)
1c00284a:	02d787b3          	mul	a5,a5,a3
1c00284e:	02e787b3          	mul	a5,a5,a4
1c002852:	02000713          	li	a4,32
1c002856:	1007d7b3          	p.exthz	a5,a5
1c00285a:	08f11e23          	sh	a5,156(sp)
1c00285e:	08e11d23          	sh	a4,154(sp)
1c002862:	df02                	sw	zero,188(sp)
1c002864:	dd02                	sw	zero,184(sp)
1c002866:	3c048b63          	beqz	s1,1c002c3c <BNReluConvolution2+0x540>
1c00286a:	df5e                	sw	s7,188(sp)
1c00286c:	3e193363          	p.bneimm	s2,1,1c002c52 <BNReluConvolution2+0x556>
1c002870:	dd4a                	sw	s2,184(sp)
1c002872:	3c14bc63          	p.bneimm	s1,1,1c002c4a <BNReluConvolution2+0x54e>
1c002876:	4711                	li	a4,4
1c002878:	d93a                	sw	a4,176(sp)
1c00287a:	4791                	li	a5,4
1c00287c:	d73e                	sw	a5,172(sp)
1c00287e:	02000713          	li	a4,32
1c002882:	db3a                	sw	a4,180(sp)
1c002884:	57da                	lw	a5,180(sp)
1c002886:	554a                	lw	a0,176(sp)
1c002888:	56ba                	lw	a3,172(sp)
1c00288a:	00599413          	slli	s0,s3,0x5
1c00288e:	02a787b3          	mul	a5,a5,a0
1c002892:	02d787b3          	mul	a5,a5,a3
1c002896:	d53e                	sw	a5,168(sp)
1c002898:	d33a                	sw	a4,164(sp)
1c00289a:	08e11c23          	sh	a4,152(sp)
1c00289e:	08e11b23          	sh	a4,150(sp)
1c0028a2:	09815683          	lhu	a3,152(sp)
1c0028a6:	09615783          	lhu	a5,150(sp)
1c0028aa:	02d787b3          	mul	a5,a5,a3
1c0028ae:	00379693          	slli	a3,a5,0x3
1c0028b2:	97b6                	add	a5,a5,a3
1c0028b4:	1007d7b3          	p.exthz	a5,a5
1c0028b8:	08f11a23          	sh	a5,148(sp)
1c0028bc:	08e11923          	sh	a4,146(sp)
1c0028c0:	000d1463          	bnez	s10,1c0028c8 <BNReluConvolution2+0x1cc>
1c0028c4:	38c90063          	beq	s2,a2,1c002c44 <BNReluConvolution2+0x548>
1c0028c8:	56fa                	lw	a3,188(sp)
1c0028ca:	566a                	lw	a2,184(sp)
1c0028cc:	00449713          	slli	a4,s1,0x4
1c0028d0:	00591793          	slli	a5,s2,0x5
1c0028d4:	40d706b3          	sub	a3,a4,a3
1c0028d8:	8f91                	sub	a5,a5,a2
1c0028da:	5636                	lw	a2,108(sp)
1c0028dc:	00269713          	slli	a4,a3,0x2
1c0028e0:	9736                	add	a4,a4,a3
1c0028e2:	0796                	slli	a5,a5,0x5
1c0028e4:	0722                	slli	a4,a4,0x8
1c0028e6:	97b2                	add	a5,a5,a2
1c0028e8:	97ba                	add	a5,a5,a4
1c0028ea:	d9be                	sw	a5,240(sp)
1c0028ec:	dbd2                	sw	s4,244(sp)
1c0028ee:	0a015783          	lhu	a5,160(sp)
1c0028f2:	1888                	addi	a0,sp,112
1c0028f4:	1007d7b3          	p.exthz	a5,a5
1c0028f8:	0ef11f23          	sh	a5,254(sp)
1c0028fc:	09e15783          	lhu	a5,158(sp)
1c002900:	1007d7b3          	p.exthz	a5,a5
1c002904:	10f11123          	sh	a5,258(sp)
1c002908:	09a15783          	lhu	a5,154(sp)
1c00290c:	1007d7b3          	p.exthz	a5,a5
1c002910:	10f11223          	sh	a5,260(sp)
1c002914:	534e                	lw	t1,240(sp)
1c002916:	58de                	lw	a7,244(sp)
1c002918:	586e                	lw	a6,248(sp)
1c00291a:	55fe                	lw	a1,252(sp)
1c00291c:	10012603          	lw	a2,256(sp)
1c002920:	10412683          	lw	a3,260(sp)
1c002924:	10812703          	lw	a4,264(sp)
1c002928:	10c12783          	lw	a5,268(sp)
1c00292c:	d89a                	sw	t1,112(sp)
1c00292e:	dac6                	sw	a7,116(sp)
1c002930:	dcc2                	sw	a6,120(sp)
1c002932:	deae                	sw	a1,124(sp)
1c002934:	c132                	sw	a2,128(sp)
1c002936:	c336                	sw	a3,132(sp)
1c002938:	c53a                	sw	a4,136(sp)
1c00293a:	c73e                	sw	a5,140(sp)
1c00293c:	f82fd0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c002940:	000d1463          	bnez	s10,1c002948 <BNReluConvolution2+0x24c>
1c002944:	11898f63          	beq	s3,s8,1c002a62 <BNReluConvolution2+0x366>
1c002948:	46d6                	lw	a3,84(sp)
1c00294a:	00341793          	slli	a5,s0,0x3
1c00294e:	97a2                	add	a5,a5,s0
1c002950:	4726                	lw	a4,72(sp)
1c002952:	0796                	slli	a5,a5,0x5
1c002954:	97b6                	add	a5,a5,a3
1c002956:	10f12823          	sw	a5,272(sp)
1c00295a:	10e12a23          	sw	a4,276(sp)
1c00295e:	09815783          	lhu	a5,152(sp)
1c002962:	1888                	addi	a0,sp,112
1c002964:	00899c13          	slli	s8,s3,0x8
1c002968:	1007d7b3          	p.exthz	a5,a5
1c00296c:	10f11f23          	sh	a5,286(sp)
1c002970:	09215783          	lhu	a5,146(sp)
1c002974:	1007d7b3          	p.exthz	a5,a5
1c002978:	12f11223          	sh	a5,292(sp)
1c00297c:	11012303          	lw	t1,272(sp)
1c002980:	11412883          	lw	a7,276(sp)
1c002984:	11812803          	lw	a6,280(sp)
1c002988:	11c12583          	lw	a1,284(sp)
1c00298c:	12012603          	lw	a2,288(sp)
1c002990:	12412683          	lw	a3,292(sp)
1c002994:	12812703          	lw	a4,296(sp)
1c002998:	12c12783          	lw	a5,300(sp)
1c00299c:	d89a                	sw	t1,112(sp)
1c00299e:	dac6                	sw	a7,116(sp)
1c0029a0:	dcc2                	sw	a6,120(sp)
1c0029a2:	deae                	sw	a1,124(sp)
1c0029a4:	c132                	sw	a2,128(sp)
1c0029a6:	c336                	sw	a3,132(sp)
1c0029a8:	c53a                	sw	a4,136(sp)
1c0029aa:	c73e                	sw	a5,140(sp)
1c0029ac:	f12fd0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c0029b0:	47d6                	lw	a5,84(sp)
1c0029b2:	6609                	lui	a2,0x2
1c0029b4:	46c6                	lw	a3,80(sp)
1c0029b6:	9c3e                	add	s8,s8,a5
1c0029b8:	40060613          	addi	a2,a2,1024 # 2400 <__rt_stack_size+0x1c00>
1c0029bc:	00cc07b3          	add	a5,s8,a2
1c0029c0:	14f12823          	sw	a5,336(sp)
1c0029c4:	14d12a23          	sw	a3,340(sp)
1c0029c8:	09815783          	lhu	a5,152(sp)
1c0029cc:	1888                	addi	a0,sp,112
1c0029ce:	078e                	slli	a5,a5,0x3
1c0029d0:	1007d7b3          	p.exthz	a5,a5
1c0029d4:	16f11223          	sh	a5,356(sp)
1c0029d8:	15012303          	lw	t1,336(sp)
1c0029dc:	15412883          	lw	a7,340(sp)
1c0029e0:	15812803          	lw	a6,344(sp)
1c0029e4:	15c12583          	lw	a1,348(sp)
1c0029e8:	16012603          	lw	a2,352(sp)
1c0029ec:	16412683          	lw	a3,356(sp)
1c0029f0:	16812703          	lw	a4,360(sp)
1c0029f4:	16c12783          	lw	a5,364(sp)
1c0029f8:	d89a                	sw	t1,112(sp)
1c0029fa:	dac6                	sw	a7,116(sp)
1c0029fc:	dcc2                	sw	a6,120(sp)
1c0029fe:	deae                	sw	a1,124(sp)
1c002a00:	c132                	sw	a2,128(sp)
1c002a02:	c336                	sw	a3,132(sp)
1c002a04:	c53a                	sw	a4,136(sp)
1c002a06:	c73e                	sw	a5,140(sp)
1c002a08:	eb6fd0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c002a0c:	6709                	lui	a4,0x2
1c002a0e:	50070713          	addi	a4,a4,1280 # 2500 <__rt_stack_size+0x1d00>
1c002a12:	47b6                	lw	a5,76(sp)
1c002a14:	9c3a                	add	s8,s8,a4
1c002a16:	13812823          	sw	s8,304(sp)
1c002a1a:	12f12a23          	sw	a5,308(sp)
1c002a1e:	09815783          	lhu	a5,152(sp)
1c002a22:	1888                	addi	a0,sp,112
1c002a24:	078e                	slli	a5,a5,0x3
1c002a26:	1007d7b3          	p.exthz	a5,a5
1c002a2a:	14f11223          	sh	a5,324(sp)
1c002a2e:	13012303          	lw	t1,304(sp)
1c002a32:	13412883          	lw	a7,308(sp)
1c002a36:	13812803          	lw	a6,312(sp)
1c002a3a:	13c12583          	lw	a1,316(sp)
1c002a3e:	14012603          	lw	a2,320(sp)
1c002a42:	14412683          	lw	a3,324(sp)
1c002a46:	14812703          	lw	a4,328(sp)
1c002a4a:	14c12783          	lw	a5,332(sp)
1c002a4e:	d89a                	sw	t1,112(sp)
1c002a50:	dac6                	sw	a7,116(sp)
1c002a52:	dcc2                	sw	a6,120(sp)
1c002a54:	deae                	sw	a1,124(sp)
1c002a56:	c132                	sw	a2,128(sp)
1c002a58:	c336                	sw	a3,132(sp)
1c002a5a:	c53a                	sw	a4,136(sp)
1c002a5c:	c73e                	sw	a5,140(sp)
1c002a5e:	e60fd0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c002a62:	c782                	sw	zero,204(sp)
1c002a64:	c582                	sw	zero,200(sp)
1c002a66:	c382                	sw	zero,196(sp)
1c002a68:	c182                	sw	zero,192(sp)
1c002a6a:	14049d63          	bnez	s1,1c002bc4 <BNReluConvolution2+0x4c8>
1c002a6e:	c3de                	sw	s7,196(sp)
1c002a70:	18091663          	bnez	s2,1c002bfc <BNReluConvolution2+0x500>
1c002a74:	c5de                	sw	s7,200(sp)
1c002a76:	dbffd0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c002a7a:	09e15c83          	lhu	s9,158(sp)
1c002a7e:	0a015d03          	lhu	s10,160(sp)
1c002a82:	0a215d83          	lhu	s11,162(sp)
1c002a86:	5fba                	lw	t6,172(sp)
1c002a88:	52ca                	lw	t0,176(sp)
1c002a8a:	53da                	lw	t2,180(sp)
1c002a8c:	431e                	lw	t1,196(sp)
1c002a8e:	4e0e                	lw	t3,192(sp)
1c002a90:	4eae                	lw	t4,200(sp)
1c002a92:	4f3e                	lw	t5,204(sp)
1c002a94:	58a6                	lw	a7,104(sp)
1c002a96:	5816                	lw	a6,100(sp)
1c002a98:	47b6                	lw	a5,76(sp)
1c002a9a:	4746                	lw	a4,80(sp)
1c002a9c:	46a6                	lw	a3,72(sp)
1c002a9e:	5586                	lw	a1,96(sp)
1c002aa0:	4089                	li	ra,2
1c002aa2:	1003d3b3          	p.exthz	t2,t2
1c002aa6:	1002d2b3          	p.exthz	t0,t0
1c002aaa:	100fdfb3          	p.exthz	t6,t6
1c002aae:	100f5f33          	p.exthz	t5,t5
1c002ab2:	100edeb3          	p.exthz	t4,t4
1c002ab6:	100e5e33          	p.exthz	t3,t3
1c002aba:	10035333          	p.exthz	t1,t1
1c002abe:	8656                	mv	a2,s5
1c002ac0:	8552                	mv	a0,s4
1c002ac2:	4c0d                	li	s8,3
1c002ac4:	c066                	sw	s9,0(sp)
1c002ac6:	c26a                	sw	s10,4(sp)
1c002ac8:	ca1e                	sw	t2,20(sp)
1c002aca:	c816                	sw	t0,16(sp)
1c002acc:	c67e                	sw	t6,12(sp)
1c002ace:	da06                	sw	ra,52(sp)
1c002ad0:	d806                	sw	ra,48(sp)
1c002ad2:	d67a                	sw	t5,44(sp)
1c002ad4:	d476                	sw	t4,40(sp)
1c002ad6:	d272                	sw	t3,36(sp)
1c002ad8:	d01a                	sw	t1,32(sp)
1c002ada:	ce62                	sw	s8,28(sp)
1c002adc:	cc62                	sw	s8,24(sp)
1c002ade:	c46e                	sw	s11,8(sp)
1c002ae0:	ba0fe0ef          	jal	ra,1c000e80 <pulp_nn_conv_Ho_parallel.constprop.5>
1c002ae4:	d51fd0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c002ae8:	4676                	lw	a2,92(sp)
1c002aea:	00549793          	slli	a5,s1,0x5
1c002aee:	00349713          	slli	a4,s1,0x3
1c002af2:	973e                	add	a4,a4,a5
1c002af4:	00c406b3          	add	a3,s0,a2
1c002af8:	00991793          	slli	a5,s2,0x9
1c002afc:	00d78433          	add	s0,a5,a3
1c002b00:	00771793          	slli	a5,a4,0x7
1c002b04:	943e                	add	s0,s0,a5
1c002b06:	c9a2                	sw	s0,208(sp)
1c002b08:	cbd6                	sw	s5,212(sp)
1c002b0a:	57ca                	lw	a5,176(sp)
1c002b0c:	1888                	addi	a0,sp,112
1c002b0e:	8426                	mv	s0,s1
1c002b10:	1007d7b3          	p.exthz	a5,a5
1c002b14:	0cf11f23          	sh	a5,222(sp)
1c002b18:	57ba                	lw	a5,172(sp)
1c002b1a:	4c85                	li	s9,1
1c002b1c:	1b7d                	addi	s6,s6,-1
1c002b1e:	1007d7b3          	p.exthz	a5,a5
1c002b22:	0ef11123          	sh	a5,226(sp)
1c002b26:	579a                	lw	a5,164(sp)
1c002b28:	1007d7b3          	p.exthz	a5,a5
1c002b2c:	0ef11223          	sh	a5,228(sp)
1c002b30:	434e                	lw	t1,208(sp)
1c002b32:	48de                	lw	a7,212(sp)
1c002b34:	486e                	lw	a6,216(sp)
1c002b36:	45fe                	lw	a1,220(sp)
1c002b38:	560e                	lw	a2,224(sp)
1c002b3a:	569e                	lw	a3,228(sp)
1c002b3c:	572e                	lw	a4,232(sp)
1c002b3e:	57be                	lw	a5,236(sp)
1c002b40:	d89a                	sw	t1,112(sp)
1c002b42:	dac6                	sw	a7,116(sp)
1c002b44:	dcc2                	sw	a6,120(sp)
1c002b46:	deae                	sw	a1,124(sp)
1c002b48:	c132                	sw	a2,128(sp)
1c002b4a:	c336                	sw	a3,132(sp)
1c002b4c:	c53a                	sw	a4,136(sp)
1c002b4e:	c73e                	sw	a5,140(sp)
1c002b50:	d6efd0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c002b54:	06192f63          	p.beqimm	s2,1,1c002bd2 <BNReluConvolution2+0x4d6>
1c002b58:	cddfd0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c002b5c:	0a0b0263          	beqz	s6,1c002c00 <BNReluConvolution2+0x504>
1c002b60:	02000693          	li	a3,32
1c002b64:	0ad11123          	sh	a3,162(sp)
1c002b68:	8dce                	mv	s11,s3
1c002b6a:	47a5                	li	a5,9
1c002b6c:	00142363          	p.beqimm	s0,1,1c002b72 <BNReluConvolution2+0x476>
1c002b70:	47c5                	li	a5,17
1c002b72:	864a                	mv	a2,s2
1c002b74:	0af11023          	sh	a5,160(sp)
1c002b78:	8966                	mv	s2,s9
1c002b7a:	8c4e                	mv	s8,s3
1c002b7c:	85a6                	mv	a1,s1
1c002b7e:	4d01                	li	s10,0
1c002b80:	84a2                	mv	s1,s0
1c002b82:	89ee                	mv	s3,s11
1c002b84:	ca1939e3          	p.bneimm	s2,1,1c002836 <BNReluConvolution2+0x13a>
1c002b88:	4725                	li	a4,9
1c002b8a:	08e11f23          	sh	a4,158(sp)
1c002b8e:	0a215683          	lhu	a3,162(sp)
1c002b92:	0a015783          	lhu	a5,160(sp)
1c002b96:	09e15703          	lhu	a4,158(sp)
1c002b9a:	02d787b3          	mul	a5,a5,a3
1c002b9e:	02e787b3          	mul	a5,a5,a4
1c002ba2:	1007d7b3          	p.exthz	a5,a5
1c002ba6:	08f11e23          	sh	a5,156(sp)
1c002baa:	02000793          	li	a5,32
1c002bae:	08f11d23          	sh	a5,154(sp)
1c002bb2:	df02                	sw	zero,188(sp)
1c002bb4:	dd02                	sw	zero,184(sp)
1c002bb6:	ca049ae3          	bnez	s1,1c00286a <BNReluConvolution2+0x16e>
1c002bba:	47a1                	li	a5,8
1c002bbc:	dd4a                	sw	s2,184(sp)
1c002bbe:	d93e                	sw	a5,176(sp)
1c002bc0:	4791                	li	a5,4
1c002bc2:	b96d                	j	1c00287c <BNReluConvolution2+0x180>
1c002bc4:	02091963          	bnez	s2,1c002bf6 <BNReluConvolution2+0x4fa>
1c002bc8:	c5de                	sw	s7,200(sp)
1c002bca:	ea14b6e3          	p.bneimm	s1,1,1c002a76 <BNReluConvolution2+0x37a>
1c002bce:	c1a6                	sw	s1,192(sp)
1c002bd0:	b55d                	j	1c002a76 <BNReluConvolution2+0x37a>
1c002bd2:	00148413          	addi	s0,s1,1
1c002bd6:	4c81                	li	s9,0
1c002bd8:	f82430e3          	p.bneimm	s0,2,1c002b58 <BNReluConvolution2+0x45c>
1c002bdc:	00198d93          	addi	s11,s3,1
1c002be0:	c55fd0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c002be4:	000b0e63          	beqz	s6,1c002c00 <BNReluConvolution2+0x504>
1c002be8:	02000693          	li	a3,32
1c002bec:	0ad11123          	sh	a3,162(sp)
1c002bf0:	4401                	li	s0,0
1c002bf2:	47c5                	li	a5,17
1c002bf4:	bfbd                	j	1c002b72 <BNReluConvolution2+0x476>
1c002bf6:	0014b363          	p.bneimm	s1,1,1c002bfc <BNReluConvolution2+0x500>
1c002bfa:	c1a6                	sw	s1,192(sp)
1c002bfc:	c7de                	sw	s7,204(sp)
1c002bfe:	bda5                	j	1c002a76 <BNReluConvolution2+0x37a>
1c002c00:	1a812403          	lw	s0,424(sp)
1c002c04:	4566                	lw	a0,88(sp)
1c002c06:	1ac12083          	lw	ra,428(sp)
1c002c0a:	1a412483          	lw	s1,420(sp)
1c002c0e:	1a012903          	lw	s2,416(sp)
1c002c12:	19c12983          	lw	s3,412(sp)
1c002c16:	19812a03          	lw	s4,408(sp)
1c002c1a:	19412a83          	lw	s5,404(sp)
1c002c1e:	19012b03          	lw	s6,400(sp)
1c002c22:	18c12b83          	lw	s7,396(sp)
1c002c26:	18812c03          	lw	s8,392(sp)
1c002c2a:	18412c83          	lw	s9,388(sp)
1c002c2e:	18012d03          	lw	s10,384(sp)
1c002c32:	17c12d83          	lw	s11,380(sp)
1c002c36:	615d                	addi	sp,sp,432
1c002c38:	c6afd06f          	j	1c0000a2 <dory_dma_deallocate>
1c002c3c:	47a1                	li	a5,8
1c002c3e:	d93e                	sw	a5,176(sp)
1c002c40:	47c1                	li	a5,16
1c002c42:	b92d                	j	1c00287c <BNReluConvolution2+0x180>
1c002c44:	c8b492e3          	bne	s1,a1,1c0028c8 <BNReluConvolution2+0x1cc>
1c002c48:	b9f5                	j	1c002944 <BNReluConvolution2+0x248>
1c002c4a:	46a1                	li	a3,8
1c002c4c:	d936                	sw	a3,176(sp)
1c002c4e:	4791                	li	a5,4
1c002c50:	b135                	j	1c00287c <BNReluConvolution2+0x180>
1c002c52:	0014b663          	p.bneimm	s1,1,1c002c5e <BNReluConvolution2+0x562>
1c002c56:	4691                	li	a3,4
1c002c58:	d936                	sw	a3,176(sp)
1c002c5a:	47c1                	li	a5,16
1c002c5c:	b105                	j	1c00287c <BNReluConvolution2+0x180>
1c002c5e:	4721                	li	a4,8
1c002c60:	d93a                	sw	a4,176(sp)
1c002c62:	47c1                	li	a5,16
1c002c64:	b921                	j	1c00287c <BNReluConvolution2+0x180>

1c002c66 <BNReluConvolution3>:
1c002c66:	7165                	addi	sp,sp,-400
1c002c68:	18112623          	sw	ra,396(sp)
1c002c6c:	18812423          	sw	s0,392(sp)
1c002c70:	18912223          	sw	s1,388(sp)
1c002c74:	19212023          	sw	s2,384(sp)
1c002c78:	17312e23          	sw	s3,380(sp)
1c002c7c:	17412c23          	sw	s4,376(sp)
1c002c80:	17512a23          	sw	s5,372(sp)
1c002c84:	17612823          	sw	s6,368(sp)
1c002c88:	17712623          	sw	s7,364(sp)
1c002c8c:	17812423          	sw	s8,360(sp)
1c002c90:	17912223          	sw	s9,356(sp)
1c002c94:	17a12023          	sw	s10,352(sp)
1c002c98:	15b12e23          	sw	s11,348(sp)
1c002c9c:	01c52903          	lw	s2,28(a0)
1c002ca0:	01852a03          	lw	s4,24(a0)
1c002ca4:	00c52d03          	lw	s10,12(a0)
1c002ca8:	01452b03          	lw	s6,20(a0)
1c002cac:	02452c03          	lw	s8,36(a0)
1c002cb0:	02852c83          	lw	s9,40(a0)
1c002cb4:	c08fd0ef          	jal	ra,1c0000bc <dory_dma_allocate>
1c002cb8:	12012c23          	sw	zero,312(sp)
1c002cbc:	12011e23          	sh	zero,316(sp)
1c002cc0:	14011023          	sh	zero,320(sp)
1c002cc4:	4785                	li	a5,1
1c002cc6:	12f11f23          	sh	a5,318(sp)
1c002cca:	14f11123          	sh	a5,322(sp)
1c002cce:	4405                	li	s0,1
1c002cd0:	14812423          	sw	s0,328(sp)
1c002cd4:	14a12623          	sw	a0,332(sp)
1c002cd8:	10012c23          	sw	zero,280(sp)
1c002cdc:	10011e23          	sh	zero,284(sp)
1c002ce0:	12011023          	sh	zero,288(sp)
1c002ce4:	10811f23          	sh	s0,286(sp)
1c002ce8:	12811123          	sh	s0,290(sp)
1c002cec:	12812423          	sw	s0,296(sp)
1c002cf0:	12a12623          	sw	a0,300(sp)
1c002cf4:	cd82                	sw	zero,216(sp)
1c002cf6:	28000793          	li	a5,640
1c002cfa:	0cf11e23          	sh	a5,220(sp)
1c002cfe:	02000b93          	li	s7,32
1c002d02:	0f711023          	sh	s7,224(sp)
1c002d06:	d5a2                	sw	s0,232(sp)
1c002d08:	d7aa                	sw	a0,236(sp)
1c002d0a:	dd82                	sw	zero,248(sp)
1c002d0c:	12000713          	li	a4,288
1c002d10:	0ee11e23          	sh	a4,252(sp)
1c002d14:	11711023          	sh	s7,256(sp)
1c002d18:	0f711f23          	sh	s7,254(sp)
1c002d1c:	4725                	li	a4,9
1c002d1e:	10e11123          	sh	a4,258(sp)
1c002d22:	10812423          	sw	s0,264(sp)
1c002d26:	10a12623          	sw	a0,268(sp)
1c002d2a:	dd02                	sw	zero,184(sp)
1c002d2c:	0af11e23          	sh	a5,188(sp)
1c002d30:	0d711023          	sh	s7,192(sp)
1c002d34:	c582                	sw	zero,200(sp)
1c002d36:	8aaa                	mv	s5,a0
1c002d38:	c7aa                	sw	a0,204(sp)
1c002d3a:	afbfd0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c002d3e:	47b1                	li	a5,12
1c002d40:	09711123          	sh	s7,130(sp)
1c002d44:	08f11023          	sh	a5,128(sp)
1c002d48:	47d1                	li	a5,20
1c002d4a:	06f11f23          	sh	a5,126(sp)
1c002d4e:	08215783          	lhu	a5,130(sp)
1c002d52:	08015703          	lhu	a4,128(sp)
1c002d56:	07e15683          	lhu	a3,126(sp)
1c002d5a:	0888                	addi	a0,sp,80
1c002d5c:	02f70733          	mul	a4,a4,a5
1c002d60:	02000793          	li	a5,32
1c002d64:	6489                	lui	s1,0x2
1c002d66:	6999                	lui	s3,0x6
1c002d68:	02d70733          	mul	a4,a4,a3
1c002d6c:	10075733          	p.exthz	a4,a4
1c002d70:	06e11e23          	sh	a4,124(sp)
1c002d74:	07711d23          	sh	s7,122(sp)
1c002d78:	cf02                	sw	zero,156(sp)
1c002d7a:	cd02                	sw	zero,152(sp)
1c002d7c:	4731                	li	a4,12
1c002d7e:	c93a                	sw	a4,144(sp)
1c002d80:	4751                	li	a4,20
1c002d82:	c73a                	sw	a4,140(sp)
1c002d84:	cb3e                	sw	a5,148(sp)
1c002d86:	475a                	lw	a4,148(sp)
1c002d88:	464a                	lw	a2,144(sp)
1c002d8a:	46ba                	lw	a3,140(sp)
1c002d8c:	6b91                	lui	s7,0x4
1c002d8e:	02c70733          	mul	a4,a4,a2
1c002d92:	c10b8b93          	addi	s7,s7,-1008 # 3c10 <__rt_stack_size+0x3410>
1c002d96:	9bca                	add	s7,s7,s2
1c002d98:	02d70733          	mul	a4,a4,a3
1c002d9c:	c53a                	sw	a4,136(sp)
1c002d9e:	c33e                	sw	a5,132(sp)
1c002da0:	06f11c23          	sh	a5,120(sp)
1c002da4:	06f11b23          	sh	a5,118(sp)
1c002da8:	07815683          	lhu	a3,120(sp)
1c002dac:	07615703          	lhu	a4,118(sp)
1c002db0:	02d70733          	mul	a4,a4,a3
1c002db4:	00371693          	slli	a3,a4,0x3
1c002db8:	9736                	add	a4,a4,a3
1c002dba:	10075733          	p.exthz	a4,a4
1c002dbe:	06e11a23          	sh	a4,116(sp)
1c002dc2:	06f11923          	sh	a5,114(sp)
1c002dc6:	46fa                	lw	a3,156(sp)
1c002dc8:	47ea                	lw	a5,152(sp)
1c002dca:	00269713          	slli	a4,a3,0x2
1c002dce:	9736                	add	a4,a4,a3
1c002dd0:	40f007b3          	neg	a5,a5
1c002dd4:	071e                	slli	a4,a4,0x7
1c002dd6:	0796                	slli	a5,a5,0x5
1c002dd8:	8f99                	sub	a5,a5,a4
1c002dda:	97ea                	add	a5,a5,s10
1c002ddc:	c9be                	sw	a5,208(sp)
1c002dde:	cbca                	sw	s2,212(sp)
1c002de0:	08015783          	lhu	a5,128(sp)
1c002de4:	1007d7b3          	p.exthz	a5,a5
1c002de8:	0cf11f23          	sh	a5,222(sp)
1c002dec:	07e15783          	lhu	a5,126(sp)
1c002df0:	1007d7b3          	p.exthz	a5,a5
1c002df4:	0ef11123          	sh	a5,226(sp)
1c002df8:	07a15783          	lhu	a5,122(sp)
1c002dfc:	1007d7b3          	p.exthz	a5,a5
1c002e00:	0ef11223          	sh	a5,228(sp)
1c002e04:	434e                	lw	t1,208(sp)
1c002e06:	48de                	lw	a7,212(sp)
1c002e08:	486e                	lw	a6,216(sp)
1c002e0a:	45fe                	lw	a1,220(sp)
1c002e0c:	560e                	lw	a2,224(sp)
1c002e0e:	569e                	lw	a3,228(sp)
1c002e10:	572e                	lw	a4,232(sp)
1c002e12:	57be                	lw	a5,236(sp)
1c002e14:	c89a                	sw	t1,80(sp)
1c002e16:	cac6                	sw	a7,84(sp)
1c002e18:	ccc2                	sw	a6,88(sp)
1c002e1a:	ceae                	sw	a1,92(sp)
1c002e1c:	d0b2                	sw	a2,96(sp)
1c002e1e:	d2b6                	sw	a3,100(sp)
1c002e20:	d4ba                	sw	a4,104(sp)
1c002e22:	d6be                	sw	a5,108(sp)
1c002e24:	a9afd0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c002e28:	d9d2                	sw	s4,240(sp)
1c002e2a:	dbde                	sw	s7,244(sp)
1c002e2c:	07815783          	lhu	a5,120(sp)
1c002e30:	0888                	addi	a0,sp,80
1c002e32:	1007d7b3          	p.exthz	a5,a5
1c002e36:	0ef11f23          	sh	a5,254(sp)
1c002e3a:	07215783          	lhu	a5,114(sp)
1c002e3e:	1007d7b3          	p.exthz	a5,a5
1c002e42:	10f11223          	sh	a5,260(sp)
1c002e46:	534e                	lw	t1,240(sp)
1c002e48:	58de                	lw	a7,244(sp)
1c002e4a:	586e                	lw	a6,248(sp)
1c002e4c:	55fe                	lw	a1,252(sp)
1c002e4e:	10012603          	lw	a2,256(sp)
1c002e52:	10412683          	lw	a3,260(sp)
1c002e56:	10812703          	lw	a4,264(sp)
1c002e5a:	10c12783          	lw	a5,268(sp)
1c002e5e:	c89a                	sw	t1,80(sp)
1c002e60:	cac6                	sw	a7,84(sp)
1c002e62:	ccc2                	sw	a6,88(sp)
1c002e64:	ceae                	sw	a1,92(sp)
1c002e66:	d0b2                	sw	a2,96(sp)
1c002e68:	d2b6                	sw	a3,100(sp)
1c002e6a:	d4ba                	sw	a4,104(sp)
1c002e6c:	d6be                	sw	a5,108(sp)
1c002e6e:	a50fd0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c002e72:	40048793          	addi	a5,s1,1024 # 2400 <__rt_stack_size+0x1c00>
1c002e76:	97d2                	add	a5,a5,s4
1c002e78:	01898713          	addi	a4,s3,24 # 6018 <__rt_stack_size+0x5818>
1c002e7c:	12f12823          	sw	a5,304(sp)
1c002e80:	974a                	add	a4,a4,s2
1c002e82:	12e12a23          	sw	a4,308(sp)
1c002e86:	07815783          	lhu	a5,120(sp)
1c002e8a:	0888                	addi	a0,sp,80
1c002e8c:	c4ba                	sw	a4,72(sp)
1c002e8e:	078e                	slli	a5,a5,0x3
1c002e90:	1007d7b3          	p.exthz	a5,a5
1c002e94:	14f11223          	sh	a5,324(sp)
1c002e98:	13012e03          	lw	t3,304(sp)
1c002e9c:	13412303          	lw	t1,308(sp)
1c002ea0:	13812883          	lw	a7,312(sp)
1c002ea4:	13c12803          	lw	a6,316(sp)
1c002ea8:	14012583          	lw	a1,320(sp)
1c002eac:	14412603          	lw	a2,324(sp)
1c002eb0:	14812683          	lw	a3,328(sp)
1c002eb4:	14c12783          	lw	a5,332(sp)
1c002eb8:	c8f2                	sw	t3,80(sp)
1c002eba:	ca9a                	sw	t1,84(sp)
1c002ebc:	ccc6                	sw	a7,88(sp)
1c002ebe:	cec2                	sw	a6,92(sp)
1c002ec0:	d0ae                	sw	a1,96(sp)
1c002ec2:	d2b2                	sw	a2,100(sp)
1c002ec4:	d4b6                	sw	a3,104(sp)
1c002ec6:	d6be                	sw	a5,108(sp)
1c002ec8:	9f6fd0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c002ecc:	50048793          	addi	a5,s1,1280
1c002ed0:	9a3e                	add	s4,s4,a5
1c002ed2:	12098793          	addi	a5,s3,288
1c002ed6:	11412823          	sw	s4,272(sp)
1c002eda:	97ca                	add	a5,a5,s2
1c002edc:	10f12a23          	sw	a5,276(sp)
1c002ee0:	07815683          	lhu	a3,120(sp)
1c002ee4:	0888                	addi	a0,sp,80
1c002ee6:	c6be                	sw	a5,76(sp)
1c002ee8:	068e                	slli	a3,a3,0x3
1c002eea:	1006d6b3          	p.exthz	a3,a3
1c002eee:	12d11223          	sh	a3,292(sp)
1c002ef2:	11012e83          	lw	t4,272(sp)
1c002ef6:	11412e03          	lw	t3,276(sp)
1c002efa:	11812303          	lw	t1,280(sp)
1c002efe:	11c12883          	lw	a7,284(sp)
1c002f02:	12012803          	lw	a6,288(sp)
1c002f06:	12412583          	lw	a1,292(sp)
1c002f0a:	12812603          	lw	a2,296(sp)
1c002f0e:	12c12683          	lw	a3,300(sp)
1c002f12:	c8f6                	sw	t4,80(sp)
1c002f14:	caf2                	sw	t3,84(sp)
1c002f16:	cc9a                	sw	t1,88(sp)
1c002f18:	cec6                	sw	a7,92(sp)
1c002f1a:	d0c2                	sw	a6,96(sp)
1c002f1c:	d2ae                	sw	a1,100(sp)
1c002f1e:	d4b2                	sw	a2,104(sp)
1c002f20:	d6b6                	sw	a3,108(sp)
1c002f22:	99cfd0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c002f26:	d702                	sw	zero,172(sp)
1c002f28:	d502                	sw	zero,168(sp)
1c002f2a:	d302                	sw	zero,164(sp)
1c002f2c:	d102                	sw	zero,160(sp)
1c002f2e:	d322                	sw	s0,164(sp)
1c002f30:	d522                	sw	s0,168(sp)
1c002f32:	d122                	sw	s0,160(sp)
1c002f34:	e0848493          	addi	s1,s1,-504
1c002f38:	d722                	sw	s0,172(sp)
1c002f3a:	94ca                	add	s1,s1,s2
1c002f3c:	8f9fd0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c002f40:	07e15083          	lhu	ra,126(sp)
1c002f44:	08015d03          	lhu	s10,128(sp)
1c002f48:	08215d83          	lhu	s11,130(sp)
1c002f4c:	4fba                	lw	t6,140(sp)
1c002f4e:	42ca                	lw	t0,144(sp)
1c002f50:	43da                	lw	t2,148(sp)
1c002f52:	531a                	lw	t1,164(sp)
1c002f54:	5e0a                	lw	t3,160(sp)
1c002f56:	5eaa                	lw	t4,168(sp)
1c002f58:	5f3a                	lw	t5,172(sp)
1c002f5a:	47b6                	lw	a5,76(sp)
1c002f5c:	4726                	lw	a4,72(sp)
1c002f5e:	1003d3b3          	p.exthz	t2,t2
1c002f62:	1002d2b3          	p.exthz	t0,t0
1c002f66:	100fdfb3          	p.exthz	t6,t6
1c002f6a:	22898593          	addi	a1,s3,552
1c002f6e:	c006                	sw	ra,0(sp)
1c002f70:	100f5f33          	p.exthz	t5,t5
1c002f74:	100edeb3          	p.exthz	t4,t4
1c002f78:	100e5e33          	p.exthz	t3,t3
1c002f7c:	ca1e                	sw	t2,20(sp)
1c002f7e:	c816                	sw	t0,16(sp)
1c002f80:	c67e                	sw	t6,12(sp)
1c002f82:	100cd8b3          	p.exthz	a7,s9
1c002f86:	100c5833          	p.exthz	a6,s8
1c002f8a:	86de                	mv	a3,s7
1c002f8c:	8626                	mv	a2,s1
1c002f8e:	95ca                	add	a1,a1,s2
1c002f90:	854a                	mv	a0,s2
1c002f92:	10035333          	p.exthz	t1,t1
1c002f96:	4a0d                	li	s4,3
1c002f98:	c46e                	sw	s11,8(sp)
1c002f9a:	c26a                	sw	s10,4(sp)
1c002f9c:	d67a                	sw	t5,44(sp)
1c002f9e:	d476                	sw	t4,40(sp)
1c002fa0:	d272                	sw	t3,36(sp)
1c002fa2:	d01a                	sw	t1,32(sp)
1c002fa4:	ce52                	sw	s4,28(sp)
1c002fa6:	cc52                	sw	s4,24(sp)
1c002fa8:	da22                	sw	s0,52(sp)
1c002faa:	d822                	sw	s0,48(sp)
1c002fac:	ed5fd0ef          	jal	ra,1c000e80 <pulp_nn_conv_Ho_parallel.constprop.5>
1c002fb0:	885fd0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c002fb4:	d95a                	sw	s6,176(sp)
1c002fb6:	db26                	sw	s1,180(sp)
1c002fb8:	47ca                	lw	a5,144(sp)
1c002fba:	0888                	addi	a0,sp,80
1c002fbc:	1007d7b3          	p.exthz	a5,a5
1c002fc0:	0af11f23          	sh	a5,190(sp)
1c002fc4:	47ba                	lw	a5,140(sp)
1c002fc6:	1007d7b3          	p.exthz	a5,a5
1c002fca:	0cf11123          	sh	a5,194(sp)
1c002fce:	479a                	lw	a5,132(sp)
1c002fd0:	1007d7b3          	p.exthz	a5,a5
1c002fd4:	0cf11223          	sh	a5,196(sp)
1c002fd8:	534a                	lw	t1,176(sp)
1c002fda:	58da                	lw	a7,180(sp)
1c002fdc:	586a                	lw	a6,184(sp)
1c002fde:	55fa                	lw	a1,188(sp)
1c002fe0:	460e                	lw	a2,192(sp)
1c002fe2:	469e                	lw	a3,196(sp)
1c002fe4:	472e                	lw	a4,200(sp)
1c002fe6:	47be                	lw	a5,204(sp)
1c002fe8:	c89a                	sw	t1,80(sp)
1c002fea:	cac6                	sw	a7,84(sp)
1c002fec:	ccc2                	sw	a6,88(sp)
1c002fee:	ceae                	sw	a1,92(sp)
1c002ff0:	d0b2                	sw	a2,96(sp)
1c002ff2:	d2b6                	sw	a3,100(sp)
1c002ff4:	d4ba                	sw	a4,104(sp)
1c002ff6:	d6be                	sw	a5,108(sp)
1c002ff8:	8c6fd0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c002ffc:	839fd0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c003000:	18812403          	lw	s0,392(sp)
1c003004:	18c12083          	lw	ra,396(sp)
1c003008:	18412483          	lw	s1,388(sp)
1c00300c:	18012903          	lw	s2,384(sp)
1c003010:	17c12983          	lw	s3,380(sp)
1c003014:	17812a03          	lw	s4,376(sp)
1c003018:	17012b03          	lw	s6,368(sp)
1c00301c:	16c12b83          	lw	s7,364(sp)
1c003020:	16812c03          	lw	s8,360(sp)
1c003024:	16412c83          	lw	s9,356(sp)
1c003028:	16012d03          	lw	s10,352(sp)
1c00302c:	15c12d83          	lw	s11,348(sp)
1c003030:	8556                	mv	a0,s5
1c003032:	17412a83          	lw	s5,372(sp)
1c003036:	6159                	addi	sp,sp,400
1c003038:	86afd06f          	j	1c0000a2 <dory_dma_deallocate>

1c00303c <BNReluConvolution4>:
1c00303c:	7109                	addi	sp,sp,-384
1c00303e:	16112e23          	sw	ra,380(sp)
1c003042:	16812c23          	sw	s0,376(sp)
1c003046:	16912a23          	sw	s1,372(sp)
1c00304a:	17212823          	sw	s2,368(sp)
1c00304e:	17312623          	sw	s3,364(sp)
1c003052:	17412423          	sw	s4,360(sp)
1c003056:	17512223          	sw	s5,356(sp)
1c00305a:	17612023          	sw	s6,352(sp)
1c00305e:	15712e23          	sw	s7,348(sp)
1c003062:	15812c23          	sw	s8,344(sp)
1c003066:	15912a23          	sw	s9,340(sp)
1c00306a:	15a12823          	sw	s10,336(sp)
1c00306e:	15b12623          	sw	s11,332(sp)
1c003072:	4d44                	lw	s1,28(a0)
1c003074:	01852983          	lw	s3,24(a0)
1c003078:	00c52d03          	lw	s10,12(a0)
1c00307c:	01452b03          	lw	s6,20(a0)
1c003080:	02452c03          	lw	s8,36(a0)
1c003084:	02852c83          	lw	s9,40(a0)
1c003088:	834fd0ef          	jal	ra,1c0000bc <dory_dma_allocate>
1c00308c:	12012423          	sw	zero,296(sp)
1c003090:	12011623          	sh	zero,300(sp)
1c003094:	12011823          	sh	zero,304(sp)
1c003098:	4785                	li	a5,1
1c00309a:	12f11723          	sh	a5,302(sp)
1c00309e:	12f11923          	sh	a5,306(sp)
1c0030a2:	4405                	li	s0,1
1c0030a4:	12812c23          	sw	s0,312(sp)
1c0030a8:	12a12e23          	sw	a0,316(sp)
1c0030ac:	10012423          	sw	zero,264(sp)
1c0030b0:	10011623          	sh	zero,268(sp)
1c0030b4:	10011823          	sh	zero,272(sp)
1c0030b8:	10811723          	sh	s0,270(sp)
1c0030bc:	10811923          	sh	s0,274(sp)
1c0030c0:	10812c23          	sw	s0,280(sp)
1c0030c4:	10a12e23          	sw	a0,284(sp)
1c0030c8:	c582                	sw	zero,200(sp)
1c0030ca:	28000713          	li	a4,640
1c0030ce:	0ce11623          	sh	a4,204(sp)
1c0030d2:	02000b93          	li	s7,32
1c0030d6:	0d711823          	sh	s7,208(sp)
1c0030da:	cda2                	sw	s0,216(sp)
1c0030dc:	cfaa                	sw	a0,220(sp)
1c0030de:	d582                	sw	zero,232(sp)
1c0030e0:	12000793          	li	a5,288
1c0030e4:	0ef11623          	sh	a5,236(sp)
1c0030e8:	0f711823          	sh	s7,240(sp)
1c0030ec:	04000793          	li	a5,64
1c0030f0:	0ef11723          	sh	a5,238(sp)
1c0030f4:	46a5                	li	a3,9
1c0030f6:	0ed11923          	sh	a3,242(sp)
1c0030fa:	dda2                	sw	s0,248(sp)
1c0030fc:	dfaa                	sw	a0,252(sp)
1c0030fe:	d502                	sw	zero,168(sp)
1c003100:	0ae11623          	sh	a4,172(sp)
1c003104:	0af11823          	sh	a5,176(sp)
1c003108:	dd02                	sw	zero,184(sp)
1c00310a:	8aaa                	mv	s5,a0
1c00310c:	df2a                	sw	a0,188(sp)
1c00310e:	f26fd0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c003112:	47b1                	li	a5,12
1c003114:	07711923          	sh	s7,114(sp)
1c003118:	06f11823          	sh	a5,112(sp)
1c00311c:	47d1                	li	a5,20
1c00311e:	06f11723          	sh	a5,110(sp)
1c003122:	07215683          	lhu	a3,114(sp)
1c003126:	07015703          	lhu	a4,112(sp)
1c00312a:	06e15783          	lhu	a5,110(sp)
1c00312e:	0088                	addi	a0,sp,64
1c003130:	02d70733          	mul	a4,a4,a3
1c003134:	04000693          	li	a3,64
1c003138:	6a15                	lui	s4,0x5
1c00313a:	691d                	lui	s2,0x7
1c00313c:	02f70733          	mul	a4,a4,a5
1c003140:	4799                	li	a5,6
1c003142:	10075733          	p.exthz	a4,a4
1c003146:	06e11623          	sh	a4,108(sp)
1c00314a:	07711523          	sh	s7,106(sp)
1c00314e:	c702                	sw	zero,140(sp)
1c003150:	c502                	sw	zero,136(sp)
1c003152:	c13e                	sw	a5,128(sp)
1c003154:	47a9                	li	a5,10
1c003156:	debe                	sw	a5,124(sp)
1c003158:	c336                	sw	a3,132(sp)
1c00315a:	479a                	lw	a5,132(sp)
1c00315c:	460a                	lw	a2,128(sp)
1c00315e:	5776                	lw	a4,124(sp)
1c003160:	02c787b3          	mul	a5,a5,a2
1c003164:	02e787b3          	mul	a5,a5,a4
1c003168:	dcbe                	sw	a5,120(sp)
1c00316a:	dab6                	sw	a3,116(sp)
1c00316c:	06d11423          	sh	a3,104(sp)
1c003170:	07711323          	sh	s7,102(sp)
1c003174:	06815783          	lhu	a5,104(sp)
1c003178:	06615703          	lhu	a4,102(sp)
1c00317c:	02f70733          	mul	a4,a4,a5
1c003180:	00371793          	slli	a5,a4,0x3
1c003184:	973e                	add	a4,a4,a5
1c003186:	10075733          	p.exthz	a4,a4
1c00318a:	06e11223          	sh	a4,100(sp)
1c00318e:	07711123          	sh	s7,98(sp)
1c003192:	46ba                	lw	a3,140(sp)
1c003194:	47aa                	lw	a5,136(sp)
1c003196:	6b8d                	lui	s7,0x3
1c003198:	00269713          	slli	a4,a3,0x2
1c00319c:	9736                	add	a4,a4,a3
1c00319e:	40f007b3          	neg	a5,a5
1c0031a2:	071e                	slli	a4,a4,0x7
1c0031a4:	0796                	slli	a5,a5,0x5
1c0031a6:	8f99                	sub	a5,a5,a4
1c0031a8:	97ea                	add	a5,a5,s10
1c0031aa:	c1be                	sw	a5,192(sp)
1c0031ac:	c3a6                	sw	s1,196(sp)
1c0031ae:	07015783          	lhu	a5,112(sp)
1c0031b2:	d10b8b93          	addi	s7,s7,-752 # 2d10 <__rt_stack_size+0x2510>
1c0031b6:	9ba6                	add	s7,s7,s1
1c0031b8:	1007d7b3          	p.exthz	a5,a5
1c0031bc:	0cf11723          	sh	a5,206(sp)
1c0031c0:	06e15783          	lhu	a5,110(sp)
1c0031c4:	51890d13          	addi	s10,s2,1304 # 7518 <__rt_stack_size+0x6d18>
1c0031c8:	9d26                	add	s10,s10,s1
1c0031ca:	1007d7b3          	p.exthz	a5,a5
1c0031ce:	0cf11923          	sh	a5,210(sp)
1c0031d2:	06a15783          	lhu	a5,106(sp)
1c0031d6:	72090913          	addi	s2,s2,1824
1c0031da:	9926                	add	s2,s2,s1
1c0031dc:	1007d7b3          	p.exthz	a5,a5
1c0031e0:	0cf11a23          	sh	a5,212(sp)
1c0031e4:	430e                	lw	t1,192(sp)
1c0031e6:	489e                	lw	a7,196(sp)
1c0031e8:	482e                	lw	a6,200(sp)
1c0031ea:	45be                	lw	a1,204(sp)
1c0031ec:	464e                	lw	a2,208(sp)
1c0031ee:	46de                	lw	a3,212(sp)
1c0031f0:	476e                	lw	a4,216(sp)
1c0031f2:	47fe                	lw	a5,220(sp)
1c0031f4:	c09a                	sw	t1,64(sp)
1c0031f6:	c2c6                	sw	a7,68(sp)
1c0031f8:	c4c2                	sw	a6,72(sp)
1c0031fa:	c6ae                	sw	a1,76(sp)
1c0031fc:	c8b2                	sw	a2,80(sp)
1c0031fe:	cab6                	sw	a3,84(sp)
1c003200:	ccba                	sw	a4,88(sp)
1c003202:	cebe                	sw	a5,92(sp)
1c003204:	ebbfc0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c003208:	d1ce                	sw	s3,224(sp)
1c00320a:	d3de                	sw	s7,228(sp)
1c00320c:	06815783          	lhu	a5,104(sp)
1c003210:	0088                	addi	a0,sp,64
1c003212:	1007d7b3          	p.exthz	a5,a5
1c003216:	0ef11723          	sh	a5,238(sp)
1c00321a:	06215783          	lhu	a5,98(sp)
1c00321e:	1007d7b3          	p.exthz	a5,a5
1c003222:	0ef11a23          	sh	a5,244(sp)
1c003226:	530e                	lw	t1,224(sp)
1c003228:	589e                	lw	a7,228(sp)
1c00322a:	582e                	lw	a6,232(sp)
1c00322c:	55be                	lw	a1,236(sp)
1c00322e:	564e                	lw	a2,240(sp)
1c003230:	56de                	lw	a3,244(sp)
1c003232:	576e                	lw	a4,248(sp)
1c003234:	57fe                	lw	a5,252(sp)
1c003236:	c09a                	sw	t1,64(sp)
1c003238:	c2c6                	sw	a7,68(sp)
1c00323a:	c4c2                	sw	a6,72(sp)
1c00323c:	c6ae                	sw	a1,76(sp)
1c00323e:	c8b2                	sw	a2,80(sp)
1c003240:	cab6                	sw	a3,84(sp)
1c003242:	ccba                	sw	a4,88(sp)
1c003244:	cebe                	sw	a5,92(sp)
1c003246:	e79fc0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c00324a:	800a0793          	addi	a5,s4,-2048 # 4800 <__rt_stack_size+0x4000>
1c00324e:	97ce                	add	a5,a5,s3
1c003250:	12f12023          	sw	a5,288(sp)
1c003254:	13a12223          	sw	s10,292(sp)
1c003258:	06815783          	lhu	a5,104(sp)
1c00325c:	a00a0a13          	addi	s4,s4,-1536
1c003260:	0088                	addi	a0,sp,64
1c003262:	078e                	slli	a5,a5,0x3
1c003264:	1007d7b3          	p.exthz	a5,a5
1c003268:	12f11a23          	sh	a5,308(sp)
1c00326c:	12012303          	lw	t1,288(sp)
1c003270:	12412883          	lw	a7,292(sp)
1c003274:	12812803          	lw	a6,296(sp)
1c003278:	12c12583          	lw	a1,300(sp)
1c00327c:	13012603          	lw	a2,304(sp)
1c003280:	13412683          	lw	a3,308(sp)
1c003284:	13812703          	lw	a4,312(sp)
1c003288:	13c12783          	lw	a5,316(sp)
1c00328c:	c09a                	sw	t1,64(sp)
1c00328e:	c2c6                	sw	a7,68(sp)
1c003290:	c4c2                	sw	a6,72(sp)
1c003292:	c6ae                	sw	a1,76(sp)
1c003294:	c8b2                	sw	a2,80(sp)
1c003296:	cab6                	sw	a3,84(sp)
1c003298:	ccba                	sw	a4,88(sp)
1c00329a:	99d2                	add	s3,s3,s4
1c00329c:	cebe                	sw	a5,92(sp)
1c00329e:	e21fc0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c0032a2:	11312023          	sw	s3,256(sp)
1c0032a6:	11212223          	sw	s2,260(sp)
1c0032aa:	06815783          	lhu	a5,104(sp)
1c0032ae:	0088                	addi	a0,sp,64
1c0032b0:	6989                	lui	s3,0x2
1c0032b2:	078e                	slli	a5,a5,0x3
1c0032b4:	1007d7b3          	p.exthz	a5,a5
1c0032b8:	10f11a23          	sh	a5,276(sp)
1c0032bc:	10012303          	lw	t1,256(sp)
1c0032c0:	10412883          	lw	a7,260(sp)
1c0032c4:	10812803          	lw	a6,264(sp)
1c0032c8:	10c12583          	lw	a1,268(sp)
1c0032cc:	11012603          	lw	a2,272(sp)
1c0032d0:	11412683          	lw	a3,276(sp)
1c0032d4:	11812703          	lw	a4,280(sp)
1c0032d8:	11c12783          	lw	a5,284(sp)
1c0032dc:	c09a                	sw	t1,64(sp)
1c0032de:	c2c6                	sw	a7,68(sp)
1c0032e0:	c4c2                	sw	a6,72(sp)
1c0032e2:	c6ae                	sw	a1,76(sp)
1c0032e4:	c8b2                	sw	a2,80(sp)
1c0032e6:	cab6                	sw	a3,84(sp)
1c0032e8:	ccba                	sw	a4,88(sp)
1c0032ea:	cebe                	sw	a5,92(sp)
1c0032ec:	dd3fc0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c0032f0:	cf02                	sw	zero,156(sp)
1c0032f2:	cd02                	sw	zero,152(sp)
1c0032f4:	cb02                	sw	zero,148(sp)
1c0032f6:	c902                	sw	zero,144(sp)
1c0032f8:	cb22                	sw	s0,148(sp)
1c0032fa:	cd22                	sw	s0,152(sp)
1c0032fc:	c922                	sw	s0,144(sp)
1c0032fe:	e0898993          	addi	s3,s3,-504 # 1e08 <__rt_stack_size+0x1608>
1c003302:	cf22                	sw	s0,156(sp)
1c003304:	99a6                	add	s3,s3,s1
1c003306:	d2efd0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c00330a:	06e15383          	lhu	t2,110(sp)
1c00330e:	07015403          	lhu	s0,112(sp)
1c003312:	07215a03          	lhu	s4,114(sp)
1c003316:	5ef6                	lw	t4,124(sp)
1c003318:	4f0a                	lw	t5,128(sp)
1c00331a:	4f9a                	lw	t6,132(sp)
1c00331c:	435a                	lw	t1,148(sp)
1c00331e:	4e4a                	lw	t3,144(sp)
1c003320:	40ea                	lw	ra,152(sp)
1c003322:	4dfa                	lw	s11,156(sp)
1c003324:	65a1                	lui	a1,0x8
1c003326:	428d                	li	t0,3
1c003328:	100fdfb3          	p.exthz	t6,t6
1c00332c:	100f5f33          	p.exthz	t5,t5
1c003330:	100edeb3          	p.exthz	t4,t4
1c003334:	92858593          	addi	a1,a1,-1752 # 7928 <__rt_stack_size+0x7128>
1c003338:	100e5e33          	p.exthz	t3,t3
1c00333c:	ce16                	sw	t0,28(sp)
1c00333e:	cc16                	sw	t0,24(sp)
1c003340:	ca7e                	sw	t6,20(sp)
1c003342:	c87a                	sw	t5,16(sp)
1c003344:	c676                	sw	t4,12(sp)
1c003346:	c01e                	sw	t2,0(sp)
1c003348:	100cd8b3          	p.exthz	a7,s9
1c00334c:	100c5833          	p.exthz	a6,s8
1c003350:	87ca                	mv	a5,s2
1c003352:	876a                	mv	a4,s10
1c003354:	86de                	mv	a3,s7
1c003356:	864e                	mv	a2,s3
1c003358:	95a6                	add	a1,a1,s1
1c00335a:	8526                	mv	a0,s1
1c00335c:	10035333          	p.exthz	t1,t1
1c003360:	1000d4b3          	p.exthz	s1,ra
1c003364:	4b89                	li	s7,2
1c003366:	100dd933          	p.exthz	s2,s11
1c00336a:	c452                	sw	s4,8(sp)
1c00336c:	c222                	sw	s0,4(sp)
1c00336e:	d272                	sw	t3,36(sp)
1c003370:	d01a                	sw	t1,32(sp)
1c003372:	da5e                	sw	s7,52(sp)
1c003374:	d85e                	sw	s7,48(sp)
1c003376:	d64a                	sw	s2,44(sp)
1c003378:	d426                	sw	s1,40(sp)
1c00337a:	b07fd0ef          	jal	ra,1c000e80 <pulp_nn_conv_Ho_parallel.constprop.5>
1c00337e:	cb6fd0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c003382:	d15a                	sw	s6,160(sp)
1c003384:	d34e                	sw	s3,164(sp)
1c003386:	478a                	lw	a5,128(sp)
1c003388:	0088                	addi	a0,sp,64
1c00338a:	1007d7b3          	p.exthz	a5,a5
1c00338e:	0af11723          	sh	a5,174(sp)
1c003392:	57f6                	lw	a5,124(sp)
1c003394:	1007d7b3          	p.exthz	a5,a5
1c003398:	0af11923          	sh	a5,178(sp)
1c00339c:	57d6                	lw	a5,116(sp)
1c00339e:	1007d7b3          	p.exthz	a5,a5
1c0033a2:	0af11a23          	sh	a5,180(sp)
1c0033a6:	530a                	lw	t1,160(sp)
1c0033a8:	589a                	lw	a7,164(sp)
1c0033aa:	582a                	lw	a6,168(sp)
1c0033ac:	55ba                	lw	a1,172(sp)
1c0033ae:	564a                	lw	a2,176(sp)
1c0033b0:	56da                	lw	a3,180(sp)
1c0033b2:	576a                	lw	a4,184(sp)
1c0033b4:	57fa                	lw	a5,188(sp)
1c0033b6:	c09a                	sw	t1,64(sp)
1c0033b8:	c2c6                	sw	a7,68(sp)
1c0033ba:	c4c2                	sw	a6,72(sp)
1c0033bc:	c6ae                	sw	a1,76(sp)
1c0033be:	c8b2                	sw	a2,80(sp)
1c0033c0:	cab6                	sw	a3,84(sp)
1c0033c2:	ccba                	sw	a4,88(sp)
1c0033c4:	cebe                	sw	a5,92(sp)
1c0033c6:	cf9fc0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c0033ca:	c6afd0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c0033ce:	17812403          	lw	s0,376(sp)
1c0033d2:	17c12083          	lw	ra,380(sp)
1c0033d6:	17412483          	lw	s1,372(sp)
1c0033da:	17012903          	lw	s2,368(sp)
1c0033de:	16c12983          	lw	s3,364(sp)
1c0033e2:	16812a03          	lw	s4,360(sp)
1c0033e6:	16012b03          	lw	s6,352(sp)
1c0033ea:	15c12b83          	lw	s7,348(sp)
1c0033ee:	15812c03          	lw	s8,344(sp)
1c0033f2:	15412c83          	lw	s9,340(sp)
1c0033f6:	15012d03          	lw	s10,336(sp)
1c0033fa:	14c12d83          	lw	s11,332(sp)
1c0033fe:	8556                	mv	a0,s5
1c003400:	16412a83          	lw	s5,356(sp)
1c003404:	6119                	addi	sp,sp,384
1c003406:	c9dfc06f          	j	1c0000a2 <dory_dma_deallocate>

1c00340a <BNReluConvolution7>:
1c00340a:	7161                	addi	sp,sp,-432
1c00340c:	4550                	lw	a2,12(a0)
1c00340e:	4954                	lw	a3,20(a0)
1c003410:	1a912223          	sw	s1,420(sp)
1c003414:	1b212023          	sw	s2,416(sp)
1c003418:	5504                	lw	s1,40(a0)
1c00341a:	02452903          	lw	s2,36(a0)
1c00341e:	19912223          	sw	s9,388(sp)
1c003422:	01c52c83          	lw	s9,28(a0)
1c003426:	4d08                	lw	a0,24(a0)
1c003428:	1a112623          	sw	ra,428(sp)
1c00342c:	1a812423          	sw	s0,424(sp)
1c003430:	19312e23          	sw	s3,412(sp)
1c003434:	19412c23          	sw	s4,408(sp)
1c003438:	19512a23          	sw	s5,404(sp)
1c00343c:	19612823          	sw	s6,400(sp)
1c003440:	19712623          	sw	s7,396(sp)
1c003444:	19812423          	sw	s8,392(sp)
1c003448:	19a12023          	sw	s10,384(sp)
1c00344c:	17b12e23          	sw	s11,380(sp)
1c003450:	d2b2                	sw	a2,100(sp)
1c003452:	cab6                	sw	a3,84(sp)
1c003454:	d4aa                	sw	a0,104(sp)
1c003456:	c67fc0ef          	jal	ra,1c0000bc <dory_dma_allocate>
1c00345a:	14012c23          	sw	zero,344(sp)
1c00345e:	14011e23          	sh	zero,348(sp)
1c003462:	16011023          	sh	zero,352(sp)
1c003466:	4785                	li	a5,1
1c003468:	14f11f23          	sh	a5,350(sp)
1c00346c:	16f11123          	sh	a5,354(sp)
1c003470:	4785                	li	a5,1
1c003472:	16f12423          	sw	a5,360(sp)
1c003476:	16a12623          	sw	a0,364(sp)
1c00347a:	12012c23          	sw	zero,312(sp)
1c00347e:	12011e23          	sh	zero,316(sp)
1c003482:	14011023          	sh	zero,320(sp)
1c003486:	12f11f23          	sh	a5,318(sp)
1c00348a:	14f11123          	sh	a5,322(sp)
1c00348e:	14f12423          	sw	a5,328(sp)
1c003492:	14a12623          	sw	a0,332(sp)
1c003496:	dd82                	sw	zero,248(sp)
1c003498:	28000693          	li	a3,640
1c00349c:	0ed11e23          	sh	a3,252(sp)
1c0034a0:	08000713          	li	a4,128
1c0034a4:	10e11023          	sh	a4,256(sp)
1c0034a8:	10f12423          	sw	a5,264(sp)
1c0034ac:	10a12623          	sw	a0,268(sp)
1c0034b0:	10012c23          	sw	zero,280(sp)
1c0034b4:	48000613          	li	a2,1152
1c0034b8:	10c11e23          	sh	a2,284(sp)
1c0034bc:	12e11023          	sh	a4,288(sp)
1c0034c0:	4631                	li	a2,12
1c0034c2:	10c11f23          	sh	a2,286(sp)
1c0034c6:	4625                	li	a2,9
1c0034c8:	12c11123          	sh	a2,290(sp)
1c0034cc:	12f12423          	sw	a5,296(sp)
1c0034d0:	12a12623          	sw	a0,300(sp)
1c0034d4:	cd82                	sw	zero,216(sp)
1c0034d6:	0cd11e23          	sh	a3,220(sp)
1c0034da:	0ee11023          	sh	a4,224(sp)
1c0034de:	6411                	lui	s0,0x4
1c0034e0:	d582                	sw	zero,232(sp)
1c0034e2:	d3040793          	addi	a5,s0,-720 # 3d30 <__rt_stack_size+0x3530>
1c0034e6:	97e6                	add	a5,a5,s9
1c0034e8:	d6aa                	sw	a0,108(sp)
1c0034ea:	d7aa                	sw	a0,236(sp)
1c0034ec:	ccbe                	sw	a5,88(sp)
1c0034ee:	b46fd0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c0034f2:	c6040793          	addi	a5,s0,-928
1c0034f6:	08000a93          	li	s5,128
1c0034fa:	cc840413          	addi	s0,s0,-824
1c0034fe:	10095933          	p.exthz	s2,s2
1c003502:	1004d4b3          	p.exthz	s1,s1
1c003506:	658c8693          	addi	a3,s9,1624
1c00350a:	97e6                	add	a5,a5,s9
1c00350c:	9466                	add	s0,s0,s9
1c00350e:	0b511123          	sh	s5,162(sp)
1c003512:	470d                	li	a4,3
1c003514:	ceca                	sw	s2,92(sp)
1c003516:	d0a6                	sw	s1,96(sp)
1c003518:	c8b6                	sw	a3,80(sp)
1c00351a:	c6be                	sw	a5,76(sp)
1c00351c:	c4a2                	sw	s0,72(sp)
1c00351e:	4901                	li	s2,0
1c003520:	0ae11023          	sh	a4,160(sp)
1c003524:	608c8c13          	addi	s8,s9,1544
1c003528:	02100b93          	li	s7,33
1c00352c:	4605                	li	a2,1
1c00352e:	4d05                	li	s10,1
1c003530:	4d85                	li	s11,1
1c003532:	4981                	li	s3,0
1c003534:	4a05                	li	s4,1
1c003536:	4b0d                	li	s6,3
1c003538:	32292063          	p.beqimm	s2,2,1c003858 <BNReluConvolution7+0x44e>
1c00353c:	4791                	li	a5,4
1c00353e:	08f11f23          	sh	a5,158(sp)
1c003542:	0a215683          	lhu	a3,162(sp)
1c003546:	0a015783          	lhu	a5,160(sp)
1c00354a:	09e15703          	lhu	a4,158(sp)
1c00354e:	02d787b3          	mul	a5,a5,a3
1c003552:	02e787b3          	mul	a5,a5,a4
1c003556:	1007d7b3          	p.exthz	a5,a5
1c00355a:	08f11e23          	sh	a5,156(sp)
1c00355e:	09511d23          	sh	s5,154(sp)
1c003562:	df02                	sw	zero,188(sp)
1c003564:	dd02                	sw	zero,184(sp)
1c003566:	00090363          	beqz	s2,1c00356c <BNReluConvolution7+0x162>
1c00356a:	dd52                	sw	s4,184(sp)
1c00356c:	d95a                	sw	s6,176(sp)
1c00356e:	4709                	li	a4,2
1c003570:	d73a                	sw	a4,172(sp)
1c003572:	30a9ad63          	p.beqimm	s3,10,1c00388c <BNReluConvolution7+0x482>
1c003576:	46b1                	li	a3,12
1c003578:	db36                	sw	a3,180(sp)
1c00357a:	57da                	lw	a5,180(sp)
1c00357c:	554a                	lw	a0,176(sp)
1c00357e:	55ba                	lw	a1,172(sp)
1c003580:	4731                	li	a4,12
1c003582:	02a787b3          	mul	a5,a5,a0
1c003586:	02b787b3          	mul	a5,a5,a1
1c00358a:	d53e                	sw	a5,168(sp)
1c00358c:	d336                	sw	a3,164(sp)
1c00358e:	08e11c23          	sh	a4,152(sp)
1c003592:	09511b23          	sh	s5,150(sp)
1c003596:	09815703          	lhu	a4,152(sp)
1c00359a:	09615783          	lhu	a5,150(sp)
1c00359e:	00199413          	slli	s0,s3,0x1
1c0035a2:	944e                	add	s0,s0,s3
1c0035a4:	02e787b3          	mul	a5,a5,a4
1c0035a8:	00191493          	slli	s1,s2,0x1
1c0035ac:	040a                	slli	s0,s0,0x2
1c0035ae:	00379713          	slli	a4,a5,0x3
1c0035b2:	97ba                	add	a5,a5,a4
1c0035b4:	1007d7b3          	p.exthz	a5,a5
1c0035b8:	08f11a23          	sh	a5,148(sp)
1c0035bc:	09511923          	sh	s5,146(sp)
1c0035c0:	000d1463          	bnez	s10,1c0035c8 <BNReluConvolution7+0x1be>
1c0035c4:	06c90c63          	beq	s2,a2,1c00363c <BNReluConvolution7+0x232>
1c0035c8:	56fa                	lw	a3,188(sp)
1c0035ca:	576a                	lw	a4,184(sp)
1c0035cc:	5616                	lw	a2,100(sp)
1c0035ce:	00269793          	slli	a5,a3,0x2
1c0035d2:	97b6                	add	a5,a5,a3
1c0035d4:	079e                	slli	a5,a5,0x7
1c0035d6:	40e48733          	sub	a4,s1,a4
1c0035da:	40f607b3          	sub	a5,a2,a5
1c0035de:	071e                	slli	a4,a4,0x7
1c0035e0:	97ba                	add	a5,a5,a4
1c0035e2:	d9be                	sw	a5,240(sp)
1c0035e4:	dbe6                	sw	s9,244(sp)
1c0035e6:	0a015783          	lhu	a5,160(sp)
1c0035ea:	1888                	addi	a0,sp,112
1c0035ec:	1007d7b3          	p.exthz	a5,a5
1c0035f0:	0ef11f23          	sh	a5,254(sp)
1c0035f4:	09e15783          	lhu	a5,158(sp)
1c0035f8:	1007d7b3          	p.exthz	a5,a5
1c0035fc:	10f11123          	sh	a5,258(sp)
1c003600:	09a15783          	lhu	a5,154(sp)
1c003604:	1007d7b3          	p.exthz	a5,a5
1c003608:	10f11223          	sh	a5,260(sp)
1c00360c:	534e                	lw	t1,240(sp)
1c00360e:	58de                	lw	a7,244(sp)
1c003610:	586e                	lw	a6,248(sp)
1c003612:	55fe                	lw	a1,252(sp)
1c003614:	10012603          	lw	a2,256(sp)
1c003618:	10412683          	lw	a3,260(sp)
1c00361c:	10812703          	lw	a4,264(sp)
1c003620:	10c12783          	lw	a5,268(sp)
1c003624:	d89a                	sw	t1,112(sp)
1c003626:	dac6                	sw	a7,116(sp)
1c003628:	dcc2                	sw	a6,120(sp)
1c00362a:	deae                	sw	a1,124(sp)
1c00362c:	c132                	sw	a2,128(sp)
1c00362e:	c336                	sw	a3,132(sp)
1c003630:	c53a                	sw	a4,136(sp)
1c003632:	c73e                	sw	a5,140(sp)
1c003634:	a8bfc0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c003638:	000d1463          	bnez	s10,1c003640 <BNReluConvolution7+0x236>
1c00363c:	13b98063          	beq	s3,s11,1c00375c <BNReluConvolution7+0x352>
1c003640:	56a6                	lw	a3,104(sp)
1c003642:	00341d13          	slli	s10,s0,0x3
1c003646:	9d22                	add	s10,s10,s0
1c003648:	4746                	lw	a4,80(sp)
1c00364a:	0d1e                	slli	s10,s10,0x7
1c00364c:	9d36                	add	s10,s10,a3
1c00364e:	11a12823          	sw	s10,272(sp)
1c003652:	10e12a23          	sw	a4,276(sp)
1c003656:	09815783          	lhu	a5,152(sp)
1c00365a:	660d                	lui	a2,0x3
1c00365c:	5a060613          	addi	a2,a2,1440 # 35a0 <__rt_stack_size+0x2da0>
1c003660:	1007d7b3          	p.exthz	a5,a5
1c003664:	10f11f23          	sh	a5,286(sp)
1c003668:	09215783          	lhu	a5,146(sp)
1c00366c:	42c99d33          	p.msu	s10,s3,a2
1c003670:	1888                	addi	a0,sp,112
1c003672:	1007d7b3          	p.exthz	a5,a5
1c003676:	12f11223          	sh	a5,292(sp)
1c00367a:	11012303          	lw	t1,272(sp)
1c00367e:	11412883          	lw	a7,276(sp)
1c003682:	11812803          	lw	a6,280(sp)
1c003686:	11c12583          	lw	a1,284(sp)
1c00368a:	12012603          	lw	a2,288(sp)
1c00368e:	12412683          	lw	a3,292(sp)
1c003692:	12812703          	lw	a4,296(sp)
1c003696:	12c12783          	lw	a5,300(sp)
1c00369a:	d89a                	sw	t1,112(sp)
1c00369c:	dac6                	sw	a7,116(sp)
1c00369e:	dcc2                	sw	a6,120(sp)
1c0036a0:	deae                	sw	a1,124(sp)
1c0036a2:	c132                	sw	a2,128(sp)
1c0036a4:	c336                	sw	a3,132(sp)
1c0036a6:	c53a                	sw	a4,136(sp)
1c0036a8:	c73e                	sw	a5,140(sp)
1c0036aa:	a15fc0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c0036ae:	4736                	lw	a4,76(sp)
1c0036b0:	000246b7          	lui	a3,0x24
1c0036b4:	00dd07b3          	add	a5,s10,a3
1c0036b8:	14f12823          	sw	a5,336(sp)
1c0036bc:	14e12a23          	sw	a4,340(sp)
1c0036c0:	09815783          	lhu	a5,152(sp)
1c0036c4:	1888                	addi	a0,sp,112
1c0036c6:	078e                	slli	a5,a5,0x3
1c0036c8:	1007d7b3          	p.exthz	a5,a5
1c0036cc:	16f11223          	sh	a5,356(sp)
1c0036d0:	15012303          	lw	t1,336(sp)
1c0036d4:	15412883          	lw	a7,340(sp)
1c0036d8:	15812803          	lw	a6,344(sp)
1c0036dc:	15c12583          	lw	a1,348(sp)
1c0036e0:	16012603          	lw	a2,352(sp)
1c0036e4:	16412683          	lw	a3,356(sp)
1c0036e8:	16812703          	lw	a4,360(sp)
1c0036ec:	16c12783          	lw	a5,364(sp)
1c0036f0:	d89a                	sw	t1,112(sp)
1c0036f2:	dac6                	sw	a7,116(sp)
1c0036f4:	dcc2                	sw	a6,120(sp)
1c0036f6:	deae                	sw	a1,124(sp)
1c0036f8:	c132                	sw	a2,128(sp)
1c0036fa:	c336                	sw	a3,132(sp)
1c0036fc:	c53a                	sw	a4,136(sp)
1c0036fe:	c73e                	sw	a5,140(sp)
1c003700:	9bffc0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c003704:	000247b7          	lui	a5,0x24
1c003708:	40078793          	addi	a5,a5,1024 # 24400 <__L1Cl+0x14400>
1c00370c:	4626                	lw	a2,72(sp)
1c00370e:	9d3e                	add	s10,s10,a5
1c003710:	13a12823          	sw	s10,304(sp)
1c003714:	12c12a23          	sw	a2,308(sp)
1c003718:	09815783          	lhu	a5,152(sp)
1c00371c:	1888                	addi	a0,sp,112
1c00371e:	078e                	slli	a5,a5,0x3
1c003720:	1007d7b3          	p.exthz	a5,a5
1c003724:	14f11223          	sh	a5,324(sp)
1c003728:	13012303          	lw	t1,304(sp)
1c00372c:	13412883          	lw	a7,308(sp)
1c003730:	13812803          	lw	a6,312(sp)
1c003734:	13c12583          	lw	a1,316(sp)
1c003738:	14012603          	lw	a2,320(sp)
1c00373c:	14412683          	lw	a3,324(sp)
1c003740:	14812703          	lw	a4,328(sp)
1c003744:	14c12783          	lw	a5,332(sp)
1c003748:	d89a                	sw	t1,112(sp)
1c00374a:	dac6                	sw	a7,116(sp)
1c00374c:	dcc2                	sw	a6,120(sp)
1c00374e:	deae                	sw	a1,124(sp)
1c003750:	c132                	sw	a2,128(sp)
1c003752:	c336                	sw	a3,132(sp)
1c003754:	c53a                	sw	a4,136(sp)
1c003756:	c73e                	sw	a5,140(sp)
1c003758:	967fc0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c00375c:	c782                	sw	zero,204(sp)
1c00375e:	c582                	sw	zero,200(sp)
1c003760:	c382                	sw	zero,196(sp)
1c003762:	c182                	sw	zero,192(sp)
1c003764:	c3d2                	sw	s4,196(sp)
1c003766:	14091063          	bnez	s2,1c0038a6 <BNReluConvolution7+0x49c>
1c00376a:	c5d2                	sw	s4,200(sp)
1c00376c:	c1d2                	sw	s4,192(sp)
1c00376e:	8c6fd0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c003772:	09e15083          	lhu	ra,158(sp)
1c003776:	0a015d03          	lhu	s10,160(sp)
1c00377a:	0a215d83          	lhu	s11,162(sp)
1c00377e:	5fba                	lw	t6,172(sp)
1c003780:	52ca                	lw	t0,176(sp)
1c003782:	53da                	lw	t2,180(sp)
1c003784:	431e                	lw	t1,196(sp)
1c003786:	4e0e                	lw	t3,192(sp)
1c003788:	4eae                	lw	t4,200(sp)
1c00378a:	4f3e                	lw	t5,204(sp)
1c00378c:	5886                	lw	a7,96(sp)
1c00378e:	4876                	lw	a6,92(sp)
1c003790:	47a6                	lw	a5,72(sp)
1c003792:	4736                	lw	a4,76(sp)
1c003794:	46c6                	lw	a3,80(sp)
1c003796:	45e6                	lw	a1,88(sp)
1c003798:	1003d3b3          	p.exthz	t2,t2
1c00379c:	1002d2b3          	p.exthz	t0,t0
1c0037a0:	100fdfb3          	p.exthz	t6,t6
1c0037a4:	100f5f33          	p.exthz	t5,t5
1c0037a8:	100edeb3          	p.exthz	t4,t4
1c0037ac:	100e5e33          	p.exthz	t3,t3
1c0037b0:	10035333          	p.exthz	t1,t1
1c0037b4:	8662                	mv	a2,s8
1c0037b6:	8566                	mv	a0,s9
1c0037b8:	c006                	sw	ra,0(sp)
1c0037ba:	c26a                	sw	s10,4(sp)
1c0037bc:	ca1e                	sw	t2,20(sp)
1c0037be:	c816                	sw	t0,16(sp)
1c0037c0:	c67e                	sw	t6,12(sp)
1c0037c2:	d67a                	sw	t5,44(sp)
1c0037c4:	d476                	sw	t4,40(sp)
1c0037c6:	d272                	sw	t3,36(sp)
1c0037c8:	d01a                	sw	t1,32(sp)
1c0037ca:	ce5a                	sw	s6,28(sp)
1c0037cc:	cc5a                	sw	s6,24(sp)
1c0037ce:	c46e                	sw	s11,8(sp)
1c0037d0:	da52                	sw	s4,52(sp)
1c0037d2:	d852                	sw	s4,48(sp)
1c0037d4:	eacfd0ef          	jal	ra,1c000e80 <pulp_nn_conv_Ho_parallel.constprop.5>
1c0037d8:	85cfd0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c0037dc:	46d6                	lw	a3,84(sp)
1c0037de:	049e                	slli	s1,s1,0x7
1c0037e0:	1888                	addi	a0,sp,112
1c0037e2:	9436                	add	s0,s0,a3
1c0037e4:	9426                	add	s0,s0,s1
1c0037e6:	c9a2                	sw	s0,208(sp)
1c0037e8:	cbe2                	sw	s8,212(sp)
1c0037ea:	57ca                	lw	a5,176(sp)
1c0037ec:	00190413          	addi	s0,s2,1
1c0037f0:	1bfd                	addi	s7,s7,-1
1c0037f2:	1007d7b3          	p.exthz	a5,a5
1c0037f6:	0cf11f23          	sh	a5,222(sp)
1c0037fa:	57ba                	lw	a5,172(sp)
1c0037fc:	1007d7b3          	p.exthz	a5,a5
1c003800:	0ef11123          	sh	a5,226(sp)
1c003804:	579a                	lw	a5,164(sp)
1c003806:	1007d7b3          	p.exthz	a5,a5
1c00380a:	0ef11223          	sh	a5,228(sp)
1c00380e:	434e                	lw	t1,208(sp)
1c003810:	48de                	lw	a7,212(sp)
1c003812:	486e                	lw	a6,216(sp)
1c003814:	45fe                	lw	a1,220(sp)
1c003816:	560e                	lw	a2,224(sp)
1c003818:	569e                	lw	a3,228(sp)
1c00381a:	572e                	lw	a4,232(sp)
1c00381c:	57be                	lw	a5,236(sp)
1c00381e:	d89a                	sw	t1,112(sp)
1c003820:	dac6                	sw	a7,116(sp)
1c003822:	dcc2                	sw	a6,120(sp)
1c003824:	deae                	sw	a1,124(sp)
1c003826:	c132                	sw	a2,128(sp)
1c003828:	c336                	sw	a3,132(sp)
1c00382a:	c53a                	sw	a4,136(sp)
1c00382c:	c73e                	sw	a5,140(sp)
1c00382e:	891fc0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c003832:	06342f63          	p.beqimm	s0,3,1c0038b0 <BNReluConvolution7+0x4a6>
1c003836:	ffffc0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c00383a:	080b8363          	beqz	s7,1c0038c0 <BNReluConvolution7+0x4b6>
1c00383e:	84ce                	mv	s1,s3
1c003840:	0b511123          	sh	s5,162(sp)
1c003844:	470d                	li	a4,3
1c003846:	864a                	mv	a2,s2
1c003848:	0ae11023          	sh	a4,160(sp)
1c00384c:	8922                	mv	s2,s0
1c00384e:	8dce                	mv	s11,s3
1c003850:	4d01                	li	s10,0
1c003852:	89a6                	mv	s3,s1
1c003854:	ce2934e3          	p.bneimm	s2,2,1c00353c <BNReluConvolution7+0x132>
1c003858:	09211f23          	sh	s2,158(sp)
1c00385c:	0a215583          	lhu	a1,162(sp)
1c003860:	0a015783          	lhu	a5,160(sp)
1c003864:	09e15683          	lhu	a3,158(sp)
1c003868:	4705                	li	a4,1
1c00386a:	02b787b3          	mul	a5,a5,a1
1c00386e:	02d787b3          	mul	a5,a5,a3
1c003872:	1007d7b3          	p.exthz	a5,a5
1c003876:	08f11e23          	sh	a5,156(sp)
1c00387a:	09511d23          	sh	s5,154(sp)
1c00387e:	df02                	sw	zero,188(sp)
1c003880:	dd02                	sw	zero,184(sp)
1c003882:	dd52                	sw	s4,184(sp)
1c003884:	d95a                	sw	s6,176(sp)
1c003886:	d73a                	sw	a4,172(sp)
1c003888:	cea9b7e3          	p.bneimm	s3,10,1c003576 <BNReluConvolution7+0x16c>
1c00388c:	46a1                	li	a3,8
1c00388e:	db36                	sw	a3,180(sp)
1c003890:	57da                	lw	a5,180(sp)
1c003892:	554a                	lw	a0,176(sp)
1c003894:	55ba                	lw	a1,172(sp)
1c003896:	4721                	li	a4,8
1c003898:	02a787b3          	mul	a5,a5,a0
1c00389c:	02b787b3          	mul	a5,a5,a1
1c0038a0:	d53e                	sw	a5,168(sp)
1c0038a2:	d336                	sw	a3,164(sp)
1c0038a4:	b1ed                	j	1c00358e <BNReluConvolution7+0x184>
1c0038a6:	c1d2                	sw	s4,192(sp)
1c0038a8:	ec2933e3          	p.bneimm	s2,2,1c00376e <BNReluConvolution7+0x364>
1c0038ac:	c7d2                	sw	s4,204(sp)
1c0038ae:	b5c1                	j	1c00376e <BNReluConvolution7+0x364>
1c0038b0:	00198493          	addi	s1,s3,1
1c0038b4:	f81fc0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c0038b8:	000b8463          	beqz	s7,1c0038c0 <BNReluConvolution7+0x4b6>
1c0038bc:	4401                	li	s0,0
1c0038be:	b749                	j	1c003840 <BNReluConvolution7+0x436>
1c0038c0:	1a812403          	lw	s0,424(sp)
1c0038c4:	5536                	lw	a0,108(sp)
1c0038c6:	1ac12083          	lw	ra,428(sp)
1c0038ca:	1a412483          	lw	s1,420(sp)
1c0038ce:	1a012903          	lw	s2,416(sp)
1c0038d2:	19c12983          	lw	s3,412(sp)
1c0038d6:	19812a03          	lw	s4,408(sp)
1c0038da:	19412a83          	lw	s5,404(sp)
1c0038de:	19012b03          	lw	s6,400(sp)
1c0038e2:	18c12b83          	lw	s7,396(sp)
1c0038e6:	18812c03          	lw	s8,392(sp)
1c0038ea:	18412c83          	lw	s9,388(sp)
1c0038ee:	18012d03          	lw	s10,384(sp)
1c0038f2:	17c12d83          	lw	s11,380(sp)
1c0038f6:	615d                	addi	sp,sp,432
1c0038f8:	faafc06f          	j	1c0000a2 <dory_dma_deallocate>

1c0038fc <FullyConnected8>:
1c0038fc:	714d                	addi	sp,sp,-336
1c0038fe:	14112623          	sw	ra,332(sp)
1c003902:	14812423          	sw	s0,328(sp)
1c003906:	14912223          	sw	s1,324(sp)
1c00390a:	15212023          	sw	s2,320(sp)
1c00390e:	13312e23          	sw	s3,316(sp)
1c003912:	13412c23          	sw	s4,312(sp)
1c003916:	13512a23          	sw	s5,308(sp)
1c00391a:	01c52a03          	lw	s4,28(a0)
1c00391e:	13612823          	sw	s6,304(sp)
1c003922:	13712623          	sw	s7,300(sp)
1c003926:	01852b03          	lw	s6,24(a0)
1c00392a:	13812423          	sw	s8,296(sp)
1c00392e:	01452903          	lw	s2,20(a0)
1c003932:	00c52c03          	lw	s8,12(a0)
1c003936:	f86fc0ef          	jal	ra,1c0000bc <dory_dma_allocate>
1c00393a:	d482                	sw	zero,104(sp)
1c00393c:	06011623          	sh	zero,108(sp)
1c003940:	06011823          	sh	zero,112(sp)
1c003944:	4985                	li	s3,1
1c003946:	dcce                	sw	s3,120(sp)
1c003948:	deaa                	sw	a0,124(sp)
1c00394a:	10012423          	sw	zero,264(sp)
1c00394e:	10011623          	sh	zero,268(sp)
1c003952:	10011823          	sh	zero,272(sp)
1c003956:	11311723          	sh	s3,270(sp)
1c00395a:	11311923          	sh	s3,274(sp)
1c00395e:	11312c23          	sw	s3,280(sp)
1c003962:	10a12e23          	sw	a0,284(sp)
1c003966:	d582                	sw	zero,232(sp)
1c003968:	0e011623          	sh	zero,236(sp)
1c00396c:	0e011823          	sh	zero,240(sp)
1c003970:	0f311723          	sh	s3,238(sp)
1c003974:	0f311923          	sh	s3,242(sp)
1c003978:	ddce                	sw	s3,248(sp)
1c00397a:	dfaa                	sw	a0,252(sp)
1c00397c:	d502                	sw	zero,168(sp)
1c00397e:	78000b93          	li	s7,1920
1c003982:	0b711623          	sh	s7,172(sp)
1c003986:	0b711823          	sh	s7,176(sp)
1c00398a:	dd4e                	sw	s3,184(sp)
1c00398c:	df2a                	sw	a0,188(sp)
1c00398e:	c582                	sw	zero,200(sp)
1c003990:	0d711623          	sh	s7,204(sp)
1c003994:	0d711823          	sh	s7,208(sp)
1c003998:	4791                	li	a5,4
1c00399a:	0cf11723          	sh	a5,206(sp)
1c00399e:	0d311923          	sh	s3,210(sp)
1c0039a2:	cdce                	sw	s3,216(sp)
1c0039a4:	cfaa                	sw	a0,220(sp)
1c0039a6:	47c1                	li	a5,16
1c0039a8:	c502                	sw	zero,136(sp)
1c0039aa:	08f11623          	sh	a5,140(sp)
1c0039ae:	6709                	lui	a4,0x2
1c0039b0:	08f11823          	sh	a5,144(sp)
1c0039b4:	cd02                	sw	zero,152(sp)
1c0039b6:	e0070693          	addi	a3,a4,-512 # 1e00 <__rt_stack_size+0x1600>
1c0039ba:	cf2a                	sw	a0,156(sp)
1c0039bc:	96da                	add	a3,a3,s6
1c0039be:	5b870713          	addi	a4,a4,1464
1c0039c2:	d0b6                	sw	a3,96(sp)
1c0039c4:	9752                	add	a4,a4,s4
1c0039c6:	d2ba                	sw	a4,100(sp)
1c0039c8:	07311723          	sh	s3,110(sp)
1c0039cc:	07311923          	sh	s3,114(sp)
1c0039d0:	06f11a23          	sh	a5,116(sp)
1c0039d4:	5886                	lw	a7,96(sp)
1c0039d6:	5816                	lw	a6,100(sp)
1c0039d8:	8aaa                	mv	s5,a0
1c0039da:	5526                	lw	a0,104(sp)
1c0039dc:	55b6                	lw	a1,108(sp)
1c0039de:	5646                	lw	a2,112(sp)
1c0039e0:	56d6                	lw	a3,116(sp)
1c0039e2:	5766                	lw	a4,120(sp)
1c0039e4:	57f6                	lw	a5,124(sp)
1c0039e6:	c046                	sw	a7,0(sp)
1c0039e8:	c242                	sw	a6,4(sp)
1c0039ea:	c42a                	sw	a0,8(sp)
1c0039ec:	c62e                	sw	a1,12(sp)
1c0039ee:	c832                	sw	a2,16(sp)
1c0039f0:	ca36                	sw	a3,20(sp)
1c0039f2:	cc3a                	sw	a4,24(sp)
1c0039f4:	850a                	mv	a0,sp
1c0039f6:	ce3e                	sw	a5,28(sp)
1c0039f8:	ec6fc0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c0039fc:	e39fc0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c003a00:	03711923          	sh	s7,50(sp)
1c003a04:	03311823          	sh	s3,48(sp)
1c003a08:	03311723          	sh	s3,46(sp)
1c003a0c:	03215603          	lhu	a2,50(sp)
1c003a10:	03015703          	lhu	a4,48(sp)
1c003a14:	02e15683          	lhu	a3,46(sp)
1c003a18:	4791                	li	a5,4
1c003a1a:	02c70733          	mul	a4,a4,a2
1c003a1e:	850a                	mv	a0,sp
1c003a20:	7a0a0413          	addi	s0,s4,1952
1c003a24:	788a0493          	addi	s1,s4,1928
1c003a28:	02d70733          	mul	a4,a4,a3
1c003a2c:	10075733          	p.exthz	a4,a4
1c003a30:	02e11623          	sh	a4,44(sp)
1c003a34:	03711523          	sh	s7,42(sp)
1c003a38:	c682                	sw	zero,76(sp)
1c003a3a:	c482                	sw	zero,72(sp)
1c003a3c:	c0ce                	sw	s3,64(sp)
1c003a3e:	de4e                	sw	s3,60(sp)
1c003a40:	c2be                	sw	a5,68(sp)
1c003a42:	4716                	lw	a4,68(sp)
1c003a44:	4606                	lw	a2,64(sp)
1c003a46:	56f2                	lw	a3,60(sp)
1c003a48:	02c70733          	mul	a4,a4,a2
1c003a4c:	02d70733          	mul	a4,a4,a3
1c003a50:	070a                	slli	a4,a4,0x2
1c003a52:	dc3a                	sw	a4,56(sp)
1c003a54:	4741                	li	a4,16
1c003a56:	da3a                	sw	a4,52(sp)
1c003a58:	02f11423          	sh	a5,40(sp)
1c003a5c:	03711323          	sh	s7,38(sp)
1c003a60:	02815783          	lhu	a5,40(sp)
1c003a64:	02615703          	lhu	a4,38(sp)
1c003a68:	02f70733          	mul	a4,a4,a5
1c003a6c:	10075733          	p.exthz	a4,a4
1c003a70:	02e11223          	sh	a4,36(sp)
1c003a74:	03711123          	sh	s7,34(sp)
1c003a78:	4736                	lw	a4,76(sp)
1c003a7a:	47a6                	lw	a5,72(sp)
1c003a7c:	00471613          	slli	a2,a4,0x4
1c003a80:	00479693          	slli	a3,a5,0x4
1c003a84:	8f11                	sub	a4,a4,a2
1c003a86:	8f95                	sub	a5,a5,a3
1c003a88:	97ba                	add	a5,a5,a4
1c003a8a:	079e                	slli	a5,a5,0x7
1c003a8c:	97e2                	add	a5,a5,s8
1c003a8e:	d13e                	sw	a5,160(sp)
1c003a90:	d352                	sw	s4,164(sp)
1c003a92:	03015783          	lhu	a5,48(sp)
1c003a96:	1007d7b3          	p.exthz	a5,a5
1c003a9a:	0af11723          	sh	a5,174(sp)
1c003a9e:	02e15783          	lhu	a5,46(sp)
1c003aa2:	1007d7b3          	p.exthz	a5,a5
1c003aa6:	0af11923          	sh	a5,178(sp)
1c003aaa:	02a15783          	lhu	a5,42(sp)
1c003aae:	1007d7b3          	p.exthz	a5,a5
1c003ab2:	0af11a23          	sh	a5,180(sp)
1c003ab6:	530a                	lw	t1,160(sp)
1c003ab8:	589a                	lw	a7,164(sp)
1c003aba:	582a                	lw	a6,168(sp)
1c003abc:	55ba                	lw	a1,172(sp)
1c003abe:	564a                	lw	a2,176(sp)
1c003ac0:	56da                	lw	a3,180(sp)
1c003ac2:	576a                	lw	a4,184(sp)
1c003ac4:	57fa                	lw	a5,188(sp)
1c003ac6:	c01a                	sw	t1,0(sp)
1c003ac8:	c246                	sw	a7,4(sp)
1c003aca:	c442                	sw	a6,8(sp)
1c003acc:	c62e                	sw	a1,12(sp)
1c003ace:	c832                	sw	a2,16(sp)
1c003ad0:	ca36                	sw	a3,20(sp)
1c003ad2:	cc3a                	sw	a4,24(sp)
1c003ad4:	ce3e                	sw	a5,28(sp)
1c003ad6:	de8fc0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c003ada:	c1da                	sw	s6,192(sp)
1c003adc:	c3a2                	sw	s0,196(sp)
1c003ade:	02815783          	lhu	a5,40(sp)
1c003ae2:	850a                	mv	a0,sp
1c003ae4:	1007d7b3          	p.exthz	a5,a5
1c003ae8:	0cf11723          	sh	a5,206(sp)
1c003aec:	02215783          	lhu	a5,34(sp)
1c003af0:	1007d7b3          	p.exthz	a5,a5
1c003af4:	0cf11a23          	sh	a5,212(sp)
1c003af8:	430e                	lw	t1,192(sp)
1c003afa:	489e                	lw	a7,196(sp)
1c003afc:	482e                	lw	a6,200(sp)
1c003afe:	45be                	lw	a1,204(sp)
1c003b00:	464e                	lw	a2,208(sp)
1c003b02:	46de                	lw	a3,212(sp)
1c003b04:	476e                	lw	a4,216(sp)
1c003b06:	47fe                	lw	a5,220(sp)
1c003b08:	c01a                	sw	t1,0(sp)
1c003b0a:	c246                	sw	a7,4(sp)
1c003b0c:	c442                	sw	a6,8(sp)
1c003b0e:	c62e                	sw	a1,12(sp)
1c003b10:	c832                	sw	a2,16(sp)
1c003b12:	ca36                	sw	a3,20(sp)
1c003b14:	cc3a                	sw	a4,24(sp)
1c003b16:	ce3e                	sw	a5,28(sp)
1c003b18:	da6fc0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c003b1c:	ce82                	sw	zero,92(sp)
1c003b1e:	cc82                	sw	zero,88(sp)
1c003b20:	ca82                	sw	zero,84(sp)
1c003b22:	c882                	sw	zero,80(sp)
1c003b24:	ca82                	sw	zero,84(sp)
1c003b26:	cc82                	sw	zero,88(sp)
1c003b28:	c882                	sw	zero,80(sp)
1c003b2a:	ce82                	sw	zero,92(sp)
1c003b2c:	d09fc0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c003b30:	03215e03          	lhu	t3,50(sp)
1c003b34:	4716                	lw	a4,68(sp)
1c003b36:	014028f3          	csrr	a7,uhartid
1c003b3a:	f458b8b3          	p.bclr	a7,a7,26,5
1c003b3e:	10075733          	p.exthz	a4,a4
1c003b42:	02e888b3          	mul	a7,a7,a4
1c003b46:	04e8c7b3          	p.min	a5,a7,a4
1c003b4a:	00f708b3          	add	a7,a4,a5
1c003b4e:	00279f93          	slli	t6,a5,0x2
1c003b52:	04e8c733          	p.min	a4,a7,a4
1c003b56:	01f48333          	add	t1,s1,t6
1c003b5a:	0ae7d263          	ble	a4,a5,1c003bfe <FullyConnected8+0x302>
1c003b5e:	100e5e33          	p.exthz	t3,t3
1c003b62:	02fe06b3          	mul	a3,t3,a5
1c003b66:	002e5f13          	srli	t5,t3,0x2
1c003b6a:	9fd2                	add	t6,t6,s4
1c003b6c:	002f1393          	slli	t2,t5,0x2
1c003b70:	72f9                	lui	t0,0xffffe
1c003b72:	86000513          	li	a0,-1952
1c003b76:	fa2e3eb3          	p.bclr	t4,t3,29,2
1c003b7a:	406f8fb3          	sub	t6,t6,t1
1c003b7e:	007a09b3          	add	s3,s4,t2
1c003b82:	a4828293          	addi	t0,t0,-1464 # ffffda48 <pulp__FC+0xffffda49>
1c003b86:	00d40833          	add	a6,s0,a3
1c003b8a:	8d15                	sub	a0,a0,a3
1c003b8c:	6409                	lui	s0,0x2
1c003b8e:	40f708b3          	sub	a7,a4,a5
1c003b92:	0348c07b          	lp.setup	x0,a7,1c003bfa <FullyConnected8+0x2fe>
1c003b96:	4581                	li	a1,0
1c003b98:	005a0763          	beq	s4,t0,1c003ba6 <FullyConnected8+0x2aa>
1c003b9c:	01f307b3          	add	a5,t1,t6
1c003ba0:	97a2                	add	a5,a5,s0
1c003ba2:	5b87a583          	lw	a1,1464(a5)
1c003ba6:	86c2                	mv	a3,a6
1c003ba8:	0c0f0e63          	beqz	t5,1c003c84 <FullyConnected8+0x388>
1c003bac:	867a                	mv	a2,t5
1c003bae:	006640fb          	lp.setup	x1,a2,1c003bba <FullyConnected8+0x2be>
1c003bb2:	20a6f703          	p.lw	a4,a0(a3)
1c003bb6:	0046a78b          	p.lw	a5,4(a3!) # 24004 <__L1Cl+0x14004>
1c003bba:	a8f715d7          	pv.sdotusp.b	a1,a4,a5
1c003bbe:	007806b3          	add	a3,a6,t2
1c003bc2:	87ce                	mv	a5,s3
1c003bc4:	020e8863          	beqz	t4,1c003bf4 <FullyConnected8+0x2f8>
1c003bc8:	0007c603          	lbu	a2,0(a5)
1c003bcc:	00068703          	lb	a4,0(a3)
1c003bd0:	80e615db          	p.macs	a1,a2,a4
1c003bd4:	021ea063          	p.beqimm	t4,1,1c003bf4 <FullyConnected8+0x2f8>
1c003bd8:	0017c603          	lbu	a2,1(a5)
1c003bdc:	00168703          	lb	a4,1(a3)
1c003be0:	80e615db          	p.macs	a1,a2,a4
1c003be4:	002ea863          	p.beqimm	t4,2,1c003bf4 <FullyConnected8+0x2f8>
1c003be8:	0027c703          	lbu	a4,2(a5)
1c003bec:	00268783          	lb	a5,2(a3)
1c003bf0:	80f715db          	p.macs	a1,a4,a5
1c003bf4:	00b3222b          	p.sw	a1,4(t1!)
1c003bf8:	9872                	add	a6,a6,t3
1c003bfa:	41c50533          	sub	a0,a0,t3
1c003bfe:	4501                	li	a0,0
1c003c00:	c27fc0ef          	jal	ra,1c000826 <pi_cl_team_barrier.lto_priv.16>
1c003c04:	c31fc0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c003c08:	c14a                	sw	s2,128(sp)
1c003c0a:	c326                	sw	s1,132(sp)
1c003c0c:	4786                	lw	a5,64(sp)
1c003c0e:	850a                	mv	a0,sp
1c003c10:	1007d7b3          	p.exthz	a5,a5
1c003c14:	08f11723          	sh	a5,142(sp)
1c003c18:	57f2                	lw	a5,60(sp)
1c003c1a:	1007d7b3          	p.exthz	a5,a5
1c003c1e:	08f11923          	sh	a5,146(sp)
1c003c22:	57d2                	lw	a5,52(sp)
1c003c24:	1007d7b3          	p.exthz	a5,a5
1c003c28:	08f11a23          	sh	a5,148(sp)
1c003c2c:	430a                	lw	t1,128(sp)
1c003c2e:	489a                	lw	a7,132(sp)
1c003c30:	482a                	lw	a6,136(sp)
1c003c32:	45ba                	lw	a1,140(sp)
1c003c34:	464a                	lw	a2,144(sp)
1c003c36:	46da                	lw	a3,148(sp)
1c003c38:	476a                	lw	a4,152(sp)
1c003c3a:	47fa                	lw	a5,156(sp)
1c003c3c:	c01a                	sw	t1,0(sp)
1c003c3e:	c246                	sw	a7,4(sp)
1c003c40:	c442                	sw	a6,8(sp)
1c003c42:	c62e                	sw	a1,12(sp)
1c003c44:	c832                	sw	a2,16(sp)
1c003c46:	ca36                	sw	a3,20(sp)
1c003c48:	cc3a                	sw	a4,24(sp)
1c003c4a:	ce3e                	sw	a5,28(sp)
1c003c4c:	c72fc0ef          	jal	ra,1c0000be <dory_dma_memcpy_async>
1c003c50:	be5fc0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c003c54:	14812403          	lw	s0,328(sp)
1c003c58:	14c12083          	lw	ra,332(sp)
1c003c5c:	14412483          	lw	s1,324(sp)
1c003c60:	14012903          	lw	s2,320(sp)
1c003c64:	13c12983          	lw	s3,316(sp)
1c003c68:	13812a03          	lw	s4,312(sp)
1c003c6c:	13012b03          	lw	s6,304(sp)
1c003c70:	12c12b83          	lw	s7,300(sp)
1c003c74:	12812c03          	lw	s8,296(sp)
1c003c78:	8556                	mv	a0,s5
1c003c7a:	13412a83          	lw	s5,308(sp)
1c003c7e:	6171                	addi	sp,sp,336
1c003c80:	c22fc06f          	j	1c0000a2 <dory_dma_deallocate>
1c003c84:	87d2                	mv	a5,s4
1c003c86:	bf3d                	j	1c003bc4 <FullyConnected8+0x2c8>

1c003c88 <pulp_nn_maxpool.constprop.0>:
1c003c88:	7179                	addi	sp,sp,-48
1c003c8a:	4731                	li	a4,12
1c003c8c:	d226                	sw	s1,36(sp)
1c003c8e:	014024f3          	csrr	s1,uhartid
1c003c92:	f454b4b3          	p.bclr	s1,s1,26,5
1c003c96:	02e487b3          	mul	a5,s1,a4
1c003c9a:	c65e                	sw	s7,12(sp)
1c003c9c:	d422                	sw	s0,40(sp)
1c003c9e:	d04a                	sw	s2,32(sp)
1c003ca0:	cc52                	sw	s4,24(sp)
1c003ca2:	ca56                	sw	s5,20(sp)
1c003ca4:	8a2e                	mv	s4,a1
1c003ca6:	d606                	sw	ra,44(sp)
1c003ca8:	ce4e                	sw	s3,28(sp)
1c003caa:	c85a                	sw	s6,16(sp)
1c003cac:	04e7c7b3          	p.min	a5,a5,a4
1c003cb0:	00c78b93          	addi	s7,a5,12
1c003cb4:	c462                	sw	s8,8(sp)
1c003cb6:	c266                	sw	s9,4(sp)
1c003cb8:	04ebcbb3          	p.min	s7,s7,a4
1c003cbc:	1007c5b3          	p.exths	a1,a5
1c003cc0:	842a                	mv	s0,a0
1c003cc2:	8932                	mv	s2,a2
1c003cc4:	8ab6                	mv	s5,a3
1c003cc6:	2175d163          	ble	s7,a1,1c003ec8 <pulp_nn_maxpool.constprop.0+0x240>
1c003cca:	00561c13          	slli	s8,a2,0x5
1c003cce:	02000093          	li	ra,32
1c003cd2:	fffa8613          	addi	a2,s5,-1
1c003cd6:	00158b13          	addi	s6,a1,1
1c003cda:	10065633          	p.exthz	a2,a2
1c003cde:	89a2                	mv	s3,s0
1c003ce0:	100ac7b3          	p.exths	a5,s5
1c003ce4:	02b905b3          	mul	a1,s2,a1
1c003ce8:	4681                	li	a3,0
1c003cea:	4801                	li	a6,0
1c003cec:	0605                	addi	a2,a2,1
1c003cee:	436c09b3          	p.mac	s3,s8,s6
1c003cf2:	3ef05063          	blez	a5,1c0040d2 <pulp_nn_maxpool.constprop.0+0x44a>
1c003cf6:	0e46407b          	lp.setup	x0,a2,1c003ebe <pulp_nn_maxpool.constprop.0+0x236>
1c003cfa:	010588b3          	add	a7,a1,a6
1c003cfe:	00589793          	slli	a5,a7,0x5
1c003d02:	00f40733          	add	a4,s0,a5
1c003d06:	00181313          	slli	t1,a6,0x1
1c003d0a:	853a                	mv	a0,a4
1c003d0c:	00034663          	bltz	t1,1c003d18 <pulp_nn_maxpool.constprop.0+0x90>
1c003d10:	01088533          	add	a0,a7,a6
1c003d14:	0516                	slli	a0,a0,0x5
1c003d16:	9522                	add	a0,a0,s0
1c003d18:	00230e13          	addi	t3,t1,2
1c003d1c:	834e                	mv	t1,s3
1c003d1e:	012e5763          	ble	s2,t3,1c003d2c <pulp_nn_maxpool.constprop.0+0xa4>
1c003d22:	9846                	add	a6,a6,a7
1c003d24:	0809                	addi	a6,a6,2
1c003d26:	0816                	slli	a6,a6,0x5
1c003d28:	01040333          	add	t1,s0,a6
1c003d2c:	00478813          	addi	a6,a5,4
1c003d30:	9822                	add	a6,a6,s0
1c003d32:	04a83833          	p.sletu	a6,a6,a0
1c003d36:	0ff87813          	andi	a6,a6,255
1c003d3a:	00081a63          	bnez	a6,1c003d4e <pulp_nn_maxpool.constprop.0+0xc6>
1c003d3e:	00450813          	addi	a6,a0,4
1c003d42:	04e83833          	p.sletu	a6,a6,a4
1c003d46:	0ff87813          	andi	a6,a6,255
1c003d4a:	34080563          	beqz	a6,1c004094 <pulp_nn_maxpool.constprop.0+0x40c>
1c003d4e:	40a008b3          	neg	a7,a0
1c003d52:	fa28b8b3          	p.bclr	a7,a7,29,2
1c003d56:	32088263          	beqz	a7,1c00407a <pulp_nn_maxpool.constprop.0+0x3f2>
1c003d5a:	00054803          	lbu	a6,0(a0)
1c003d5e:	01070023          	sb	a6,0(a4)
1c003d62:	3018a963          	p.beqimm	a7,1,1c004074 <pulp_nn_maxpool.constprop.0+0x3ec>
1c003d66:	00154803          	lbu	a6,1(a0)
1c003d6a:	010700a3          	sb	a6,1(a4)
1c003d6e:	3438b063          	p.bneimm	a7,3,1c0040ae <pulp_nn_maxpool.constprop.0+0x426>
1c003d72:	00254803          	lbu	a6,2(a0)
1c003d76:	4ef5                	li	t4,29
1c003d78:	4e0d                	li	t3,3
1c003d7a:	01070123          	sb	a6,2(a4)
1c003d7e:	01150833          	add	a6,a0,a7
1c003d82:	00482f0b          	p.lw	t5,4(a6!)
1c003d86:	97c6                	add	a5,a5,a7
1c003d88:	97a2                	add	a5,a5,s0
1c003d8a:	01e7a22b          	p.sw	t5,4(a5!)
1c003d8e:	411088b3          	sub	a7,ra,a7
1c003d92:	4f1d                	li	t5,7
1c003d94:	00082f83          	lw	t6,0(a6)
1c003d98:	01f7a023          	sw	t6,0(a5)
1c003d9c:	00482f83          	lw	t6,4(a6)
1c003da0:	01f7a223          	sw	t6,4(a5)
1c003da4:	00882f83          	lw	t6,8(a6)
1c003da8:	01f7a423          	sw	t6,8(a5)
1c003dac:	00c82f83          	lw	t6,12(a6)
1c003db0:	01f7a623          	sw	t6,12(a5)
1c003db4:	01082f83          	lw	t6,16(a6)
1c003db8:	01f7a823          	sw	t6,16(a5)
1c003dbc:	01482f83          	lw	t6,20(a6)
1c003dc0:	01f7aa23          	sw	t6,20(a5)
1c003dc4:	2e8f3863          	p.bneimm	t5,8,1c0040b4 <pulp_nn_maxpool.constprop.0+0x42c>
1c003dc8:	01882f03          	lw	t5,24(a6)
1c003dcc:	020e0813          	addi	a6,t3,32
1c003dd0:	fe0e8e13          	addi	t3,t4,-32
1c003dd4:	01e7ac23          	sw	t5,24(a5)
1c003dd8:	02050793          	addi	a5,a0,32
1c003ddc:	02188d63          	beq	a7,ra,1c003e16 <pulp_nn_maxpool.constprop.0+0x18e>
1c003de0:	010507b3          	add	a5,a0,a6
1c003de4:	0007c883          	lbu	a7,0(a5)
1c003de8:	00180793          	addi	a5,a6,1
1c003dec:	01174823          	p.sb	a7,a6(a4)
1c003df0:	2a1e2c63          	p.beqimm	t3,1,1c0040a8 <pulp_nn_maxpool.constprop.0+0x420>
1c003df4:	00f508b3          	add	a7,a0,a5
1c003df8:	0008c883          	lbu	a7,0(a7)
1c003dfc:	0809                	addi	a6,a6,2
1c003dfe:	011747a3          	p.sb	a7,a5(a4)
1c003e02:	2a2e2363          	p.beqimm	t3,2,1c0040a8 <pulp_nn_maxpool.constprop.0+0x420>
1c003e06:	010507b3          	add	a5,a0,a6
1c003e0a:	0007c883          	lbu	a7,0(a5)
1c003e0e:	02050793          	addi	a5,a0,32
1c003e12:	01174823          	p.sb	a7,a6(a4)
1c003e16:	0a67f163          	bleu	t1,a5,1c003eb8 <pulp_nn_maxpool.constprop.0+0x230>
1c003e1a:	fff7c513          	not	a0,a5
1c003e1e:	8aa3255b          	p.addun	a0,t1,a0,5
1c003e22:	01f30c93          	addi	s9,t1,31
1c003e26:	02078393          	addi	t2,a5,32
1c003e2a:	00072283          	lw	t0,0(a4)
1c003e2e:	00472803          	lw	a6,4(a4)
1c003e32:	00872883          	lw	a7,8(a4)
1c003e36:	00c72303          	lw	t1,12(a4)
1c003e3a:	01072e03          	lw	t3,16(a4)
1c003e3e:	01472e83          	lw	t4,20(a4)
1c003e42:	01872f03          	lw	t5,24(a4)
1c003e46:	01c72f83          	lw	t6,28(a4)
1c003e4a:	0505                	addi	a0,a0,1
1c003e4c:	287ce563          	bltu	s9,t2,1c0040d6 <pulp_nn_maxpool.constprop.0+0x44e>
1c003e50:	032540fb          	lp.setup	x1,a0,1c003eb4 <pulp_nn_maxpool.constprop.0+0x22c>
1c003e54:	0007a383          	lw	t2,0(a5)
1c003e58:	02078793          	addi	a5,a5,32
1c003e5c:	387292d7          	pv.maxu.b	t0,t0,t2
1c003e60:	00572023          	sw	t0,0(a4)
1c003e64:	fe47a383          	lw	t2,-28(a5)
1c003e68:	38781857          	pv.maxu.b	a6,a6,t2
1c003e6c:	01072223          	sw	a6,4(a4)
1c003e70:	fe87a383          	lw	t2,-24(a5)
1c003e74:	387898d7          	pv.maxu.b	a7,a7,t2
1c003e78:	01172423          	sw	a7,8(a4)
1c003e7c:	fec7a383          	lw	t2,-20(a5)
1c003e80:	38731357          	pv.maxu.b	t1,t1,t2
1c003e84:	00672623          	sw	t1,12(a4)
1c003e88:	ff07a383          	lw	t2,-16(a5)
1c003e8c:	387e1e57          	pv.maxu.b	t3,t3,t2
1c003e90:	01c72823          	sw	t3,16(a4)
1c003e94:	ff47a383          	lw	t2,-12(a5)
1c003e98:	387e9ed7          	pv.maxu.b	t4,t4,t2
1c003e9c:	01d72a23          	sw	t4,20(a4)
1c003ea0:	ff87a383          	lw	t2,-8(a5)
1c003ea4:	387f1f57          	pv.maxu.b	t5,t5,t2
1c003ea8:	01e72c23          	sw	t5,24(a4)
1c003eac:	ffc7a383          	lw	t2,-4(a5)
1c003eb0:	387f9fd7          	pv.maxu.b	t6,t6,t2
1c003eb4:	01f72e23          	sw	t6,28(a4)
1c003eb8:	0685                	addi	a3,a3,1
1c003eba:	1006c6b3          	p.exths	a3,a3
1c003ebe:	8836                	mv	a6,a3
1c003ec0:	100b45b3          	p.exths	a1,s6
1c003ec4:	e175c7e3          	blt	a1,s7,1c003cd2 <pulp_nn_maxpool.constprop.0+0x4a>
1c003ec8:	4501                	li	a0,0
1c003eca:	95dfc0ef          	jal	ra,1c000826 <pi_cl_team_barrier.lto_priv.16>
1c003ece:	4799                	li	a5,6
1c003ed0:	02f48333          	mul	t1,s1,a5
1c003ed4:	00630f13          	addi	t5,t1,6
1c003ed8:	04ff4f33          	p.min	t5,t5,a5
1c003edc:	10034333          	p.exths	t1,t1
1c003ee0:	17e35b63          	ble	t5,t1,1c004056 <pulp_nn_maxpool.constprop.0+0x3ce>
1c003ee4:	005a9293          	slli	t0,s5,0x5
1c003ee8:	1002deb3          	p.exthz	t4,t0
1c003eec:	002ede93          	srli	t4,t4,0x2
1c003ef0:	00191f93          	slli	t6,s2,0x1
1c003ef4:	1efd                	addi	t4,t4,-1
1c003ef6:	9fca                	add	t6,t6,s2
1c003ef8:	100edeb3          	p.exthz	t4,t4
1c003efc:	0f9e                	slli	t6,t6,0x7
1c003efe:	0e8a                	slli	t4,t4,0x2
1c003f00:	9fa2                	add	t6,t6,s0
1c003f02:	00591893          	slli	a7,s2,0x5
1c003f06:	0e91                	addi	t4,t4,4
1c003f08:	026a8733          	mul	a4,s5,t1
1c003f0c:	00131793          	slli	a5,t1,0x1
1c003f10:	8622                	mv	a2,s0
1c003f12:	0716                	slli	a4,a4,0x5
1c003f14:	00ea0e33          	add	t3,s4,a4
1c003f18:	00034663          	bltz	t1,1c003f24 <pulp_nn_maxpool.constprop.0+0x29c>
1c003f1c:	03278633          	mul	a2,a5,s2
1c003f20:	0616                	slli	a2,a2,0x5
1c003f22:	9622                	add	a2,a2,s0
1c003f24:	0789                	addi	a5,a5,2
1c003f26:	887e                	mv	a6,t6
1c003f28:	00c7a763          	p.beqimm	a5,12,1c003f36 <pulp_nn_maxpool.constprop.0+0x2ae>
1c003f2c:	032787b3          	mul	a5,a5,s2
1c003f30:	00579813          	slli	a6,a5,0x5
1c003f34:	9822                	add	a6,a6,s0
1c003f36:	00470793          	addi	a5,a4,4
1c003f3a:	97d2                	add	a5,a5,s4
1c003f3c:	04c7b7b3          	p.sletu	a5,a5,a2
1c003f40:	0ff7f793          	andi	a5,a5,255
1c003f44:	eb89                	bnez	a5,1c003f56 <pulp_nn_maxpool.constprop.0+0x2ce>
1c003f46:	00460793          	addi	a5,a2,4
1c003f4a:	05c7b7b3          	p.sletu	a5,a5,t3
1c003f4e:	0ff7f793          	andi	a5,a5,255
1c003f52:	16078663          	beqz	a5,1c0040be <pulp_nn_maxpool.constprop.0+0x436>
1c003f56:	40c007b3          	neg	a5,a2
1c003f5a:	fa27b7b3          	p.bclr	a5,a5,29,2
1c003f5e:	4501                	li	a0,0
1c003f60:	c785                	beqz	a5,1c003f88 <pulp_nn_maxpool.constprop.0+0x300>
1c003f62:	00064683          	lbu	a3,0(a2)
1c003f66:	4505                	li	a0,1
1c003f68:	00de0023          	sb	a3,0(t3)
1c003f6c:	0017ae63          	p.beqimm	a5,1,1c003f88 <pulp_nn_maxpool.constprop.0+0x300>
1c003f70:	00164683          	lbu	a3,1(a2)
1c003f74:	4509                	li	a0,2
1c003f76:	00de00a3          	sb	a3,1(t3)
1c003f7a:	0037b763          	p.bneimm	a5,3,1c003f88 <pulp_nn_maxpool.constprop.0+0x300>
1c003f7e:	00264683          	lbu	a3,2(a2)
1c003f82:	450d                	li	a0,3
1c003f84:	00de0123          	sb	a3,2(t3)
1c003f88:	40f283b3          	sub	t2,t0,a5
1c003f8c:	00f706b3          	add	a3,a4,a5
1c003f90:	0023d713          	srli	a4,t2,0x2
1c003f94:	96d2                	add	a3,a3,s4
1c003f96:	97b2                	add	a5,a5,a2
1c003f98:	14070163          	beqz	a4,1c0040da <pulp_nn_maxpool.constprop.0+0x452>
1c003f9c:	004740fb          	lp.setup	x1,a4,1c003fa4 <pulp_nn_maxpool.constprop.0+0x31c>
1c003fa0:	0047a58b          	p.lw	a1,4(a5!)
1c003fa4:	00b6a22b          	p.sw	a1,4(a3!)
1c003fa8:	c203b733          	p.bclr	a4,t2,1,0
1c003fac:	00a707b3          	add	a5,a4,a0
1c003fb0:	06770963          	beq	a4,t2,1c004022 <pulp_nn_maxpool.constprop.0+0x39a>
1c003fb4:	00f60733          	add	a4,a2,a5
1c003fb8:	00074683          	lbu	a3,0(a4)
1c003fbc:	00178713          	addi	a4,a5,1
1c003fc0:	00de47a3          	p.sb	a3,a5(t3)
1c003fc4:	04575f63          	ble	t0,a4,1c004022 <pulp_nn_maxpool.constprop.0+0x39a>
1c003fc8:	00e606b3          	add	a3,a2,a4
1c003fcc:	0006c583          	lbu	a1,0(a3)
1c003fd0:	00278693          	addi	a3,a5,2
1c003fd4:	00be4723          	p.sb	a1,a4(t3)
1c003fd8:	0456d563          	ble	t0,a3,1c004022 <pulp_nn_maxpool.constprop.0+0x39a>
1c003fdc:	00d60733          	add	a4,a2,a3
1c003fe0:	00074703          	lbu	a4,0(a4)
1c003fe4:	00378593          	addi	a1,a5,3
1c003fe8:	00ee46a3          	p.sb	a4,a3(t3)
1c003fec:	0255db63          	ble	t0,a1,1c004022 <pulp_nn_maxpool.constprop.0+0x39a>
1c003ff0:	00b60733          	add	a4,a2,a1
1c003ff4:	00074683          	lbu	a3,0(a4)
1c003ff8:	00478713          	addi	a4,a5,4
1c003ffc:	00de45a3          	p.sb	a3,a1(t3)
1c004000:	02575163          	ble	t0,a4,1c004022 <pulp_nn_maxpool.constprop.0+0x39a>
1c004004:	00e606b3          	add	a3,a2,a4
1c004008:	0006c683          	lbu	a3,0(a3)
1c00400c:	0795                	addi	a5,a5,5
1c00400e:	00de4723          	p.sb	a3,a4(t3)
1c004012:	0057d863          	ble	t0,a5,1c004022 <pulp_nn_maxpool.constprop.0+0x39a>
1c004016:	00f60733          	add	a4,a2,a5
1c00401a:	00074703          	lbu	a4,0(a4)
1c00401e:	00ee47a3          	p.sb	a4,a5(t3)
1c004022:	9646                	add	a2,a2,a7
1c004024:	03067463          	bleu	a6,a2,1c00404c <pulp_nn_maxpool.constprop.0+0x3c4>
1c004028:	ffce8713          	addi	a4,t4,-4
1c00402c:	8309                	srli	a4,a4,0x2
1c00402e:	86f2                	mv	a3,t3
1c004030:	85b2                	mv	a1,a2
1c004032:	0705                	addi	a4,a4,1
1c004034:	007740fb          	lp.setup	x1,a4,1c004042 <pulp_nn_maxpool.constprop.0+0x3ba>
1c004038:	429c                	lw	a5,0(a3)
1c00403a:	0045a50b          	p.lw	a0,4(a1!)
1c00403e:	38a797d7          	pv.maxu.b	a5,a5,a0
1c004042:	00f6a22b          	p.sw	a5,4(a3!)
1c004046:	9646                	add	a2,a2,a7
1c004048:	ff0660e3          	bltu	a2,a6,1c004028 <pulp_nn_maxpool.constprop.0+0x3a0>
1c00404c:	0305                	addi	t1,t1,1
1c00404e:	10034333          	p.exths	t1,t1
1c004052:	ebe34be3          	blt	t1,t5,1c003f08 <pulp_nn_maxpool.constprop.0+0x280>
1c004056:	5422                	lw	s0,40(sp)
1c004058:	50b2                	lw	ra,44(sp)
1c00405a:	5492                	lw	s1,36(sp)
1c00405c:	5902                	lw	s2,32(sp)
1c00405e:	49f2                	lw	s3,28(sp)
1c004060:	4a62                	lw	s4,24(sp)
1c004062:	4ad2                	lw	s5,20(sp)
1c004064:	4b42                	lw	s6,16(sp)
1c004066:	4bb2                	lw	s7,12(sp)
1c004068:	4c22                	lw	s8,8(sp)
1c00406a:	4c92                	lw	s9,4(sp)
1c00406c:	4501                	li	a0,0
1c00406e:	6145                	addi	sp,sp,48
1c004070:	fb6fc06f          	j	1c000826 <pi_cl_team_barrier.lto_priv.16>
1c004074:	4efd                	li	t4,31
1c004076:	4e05                	li	t3,1
1c004078:	b319                	j	1c003d7e <pulp_nn_maxpool.constprop.0+0xf6>
1c00407a:	882a                	mv	a6,a0
1c00407c:	0048288b          	p.lw	a7,4(a6!)
1c004080:	87ba                	mv	a5,a4
1c004082:	4f21                	li	t5,8
1c004084:	0117a22b          	p.sw	a7,4(a5!)
1c004088:	02000e93          	li	t4,32
1c00408c:	02000893          	li	a7,32
1c004090:	4e01                	li	t3,0
1c004092:	b309                	j	1c003d94 <pulp_nn_maxpool.constprop.0+0x10c>
1c004094:	88ba                	mv	a7,a4
1c004096:	02050793          	addi	a5,a0,32
1c00409a:	020250fb          	lp.setupi	x1,32,1c0040a2 <pulp_nn_maxpool.constprop.0+0x41a>
1c00409e:	00154e0b          	p.lbu	t3,1(a0!)
1c0040a2:	01c880ab          	p.sb	t3,1(a7!)
1c0040a6:	bb85                	j	1c003e16 <pulp_nn_maxpool.constprop.0+0x18e>
1c0040a8:	02050793          	addi	a5,a0,32
1c0040ac:	b3ad                	j	1c003e16 <pulp_nn_maxpool.constprop.0+0x18e>
1c0040ae:	4ef9                	li	t4,30
1c0040b0:	4e09                	li	t3,2
1c0040b2:	b1f1                	j	1c003d7e <pulp_nn_maxpool.constprop.0+0xf6>
1c0040b4:	01ce0813          	addi	a6,t3,28
1c0040b8:	fe4e8e13          	addi	t3,t4,-28
1c0040bc:	b315                	j	1c003de0 <pulp_nn_maxpool.constprop.0+0x158>
1c0040be:	86b2                	mv	a3,a2
1c0040c0:	8772                	mv	a4,t3
1c0040c2:	8796                	mv	a5,t0
1c0040c4:	0047c0fb          	lp.setup	x1,a5,1c0040cc <pulp_nn_maxpool.constprop.0+0x444>
1c0040c8:	0016c58b          	p.lbu	a1,1(a3!)
1c0040cc:	00b700ab          	p.sb	a1,1(a4!)
1c0040d0:	bf89                	j	1c004022 <pulp_nn_maxpool.constprop.0+0x39a>
1c0040d2:	4605                	li	a2,1
1c0040d4:	b10d                	j	1c003cf6 <pulp_nn_maxpool.constprop.0+0x6e>
1c0040d6:	4505                	li	a0,1
1c0040d8:	bba5                	j	1c003e50 <pulp_nn_maxpool.constprop.0+0x1c8>
1c0040da:	4705                	li	a4,1
1c0040dc:	b5c1                	j	1c003f9c <pulp_nn_maxpool.constprop.0+0x314>

1c0040de <Pooling1>:
1c0040de:	7171                	addi	sp,sp,-176
1c0040e0:	d522                	sw	s0,168(sp)
1c0040e2:	d326                	sw	s1,164(sp)
1c0040e4:	d14a                	sw	s2,160(sp)
1c0040e6:	cd52                	sw	s4,152(sp)
1c0040e8:	cb56                	sw	s5,148(sp)
1c0040ea:	c95a                	sw	s6,144(sp)
1c0040ec:	c75e                	sw	s7,140(sp)
1c0040ee:	c562                	sw	s8,136(sp)
1c0040f0:	c366                	sw	s9,132(sp)
1c0040f2:	c16a                	sw	s10,128(sp)
1c0040f4:	deee                	sw	s11,124(sp)
1c0040f6:	01c52b83          	lw	s7,28(a0)
1c0040fa:	d706                	sw	ra,172(sp)
1c0040fc:	cf4e                	sw	s3,156(sp)
1c0040fe:	00c52d83          	lw	s11,12(a0)
1c004102:	01452d03          	lw	s10,20(a0)
1c004106:	fb7fb0ef          	jal	ra,1c0000bc <dory_dma_allocate>
1c00410a:	6785                	lui	a5,0x1
1c00410c:	cc82                	sw	zero,88(sp)
1c00410e:	a0078793          	addi	a5,a5,-1536 # a00 <__rt_stack_size+0x200>
1c004112:	04f11e23          	sh	a5,92(sp)
1c004116:	02000793          	li	a5,32
1c00411a:	06f11023          	sh	a5,96(sp)
1c00411e:	4705                	li	a4,1
1c004120:	d4ba                	sw	a4,104(sp)
1c004122:	d6aa                	sw	a0,108(sp)
1c004124:	dc02                	sw	zero,56(sp)
1c004126:	50000713          	li	a4,1280
1c00412a:	02e11e23          	sh	a4,60(sp)
1c00412e:	04f11023          	sh	a5,64(sp)
1c004132:	6a9d                	lui	s5,0x7
1c004134:	c482                	sw	zero,72(sp)
1c004136:	208a8a93          	addi	s5,s5,520 # 7208 <__rt_stack_size+0x6a08>
1c00413a:	c42a                	sw	a0,8(sp)
1c00413c:	c6aa                	sw	a0,76(sp)
1c00413e:	9ade                	add	s5,s5,s7
1c004140:	4a21                	li	s4,8
1c004142:	4481                	li	s1,0
1c004144:	c602                	sw	zero,12(sp)
1c004146:	4401                	li	s0,0
1c004148:	04c00913          	li	s2,76
1c00414c:	4c01                	li	s8,0
1c00414e:	4b01                	li	s6,0
1c004150:	02000c93          	li	s9,32
1c004154:	04c00793          	li	a5,76
1c004158:	02f40733          	mul	a4,s0,a5
1c00415c:	009b07b3          	add	a5,s6,s1
1c004160:	00279613          	slli	a2,a5,0x2
1c004164:	00479693          	slli	a3,a5,0x4
1c004168:	96b2                	add	a3,a3,a2
1c00416a:	018d87b3          	add	a5,s11,s8
1c00416e:	06a6                	slli	a3,a3,0x9
1c004170:	0808                	addi	a0,sp,16
1c004172:	02600993          	li	s3,38
1c004176:	0716                	slli	a4,a4,0x5
1c004178:	97ba                	add	a5,a5,a4
1c00417a:	97b6                	add	a5,a5,a3
1c00417c:	c8be                	sw	a5,80(sp)
1c00417e:	cade                	sw	s7,84(sp)
1c004180:	4731                	li	a4,12
1c004182:	04e11f23          	sh	a4,94(sp)
1c004186:	07211123          	sh	s2,98(sp)
1c00418a:	07911223          	sh	s9,100(sp)
1c00418e:	4346                	lw	t1,80(sp)
1c004190:	48d6                	lw	a7,84(sp)
1c004192:	4866                	lw	a6,88(sp)
1c004194:	45f6                	lw	a1,92(sp)
1c004196:	5606                	lw	a2,96(sp)
1c004198:	5696                	lw	a3,100(sp)
1c00419a:	5726                	lw	a4,104(sp)
1c00419c:	57b6                	lw	a5,108(sp)
1c00419e:	c81a                	sw	t1,16(sp)
1c0041a0:	ca46                	sw	a7,20(sp)
1c0041a2:	cc42                	sw	a6,24(sp)
1c0041a4:	ce2e                	sw	a1,28(sp)
1c0041a6:	d032                	sw	a2,32(sp)
1c0041a8:	d236                	sw	a3,36(sp)
1c0041aa:	d43a                	sw	a4,40(sp)
1c0041ac:	d63e                	sw	a5,44(sp)
1c0041ae:	c0efc0ef          	jal	ra,1c0005bc <dory_dma_memcpy_async.constprop.13>
1c0041b2:	00143363          	p.bneimm	s0,1,1c0041b8 <Pooling1+0xda>
1c0041b6:	4989                	li	s3,2
1c0041b8:	e7cfc0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c0041bc:	864a                	mv	a2,s2
1c0041be:	86ce                	mv	a3,s3
1c0041c0:	85d6                	mv	a1,s5
1c0041c2:	855e                	mv	a0,s7
1c0041c4:	34d1                	jal	1c003c88 <pulp_nn_maxpool.constprop.0>
1c0041c6:	e6efc0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c0041ca:	02600793          	li	a5,38
1c0041ce:	02f406b3          	mul	a3,s0,a5
1c0041d2:	009b07b3          	add	a5,s6,s1
1c0041d6:	00179613          	slli	a2,a5,0x1
1c0041da:	078e                	slli	a5,a5,0x3
1c0041dc:	97b2                	add	a5,a5,a2
1c0041de:	018d0733          	add	a4,s10,s8
1c0041e2:	07a2                	slli	a5,a5,0x8
1c0041e4:	0808                	addi	a0,sp,16
1c0041e6:	4911                	li	s2,4
1c0041e8:	0696                	slli	a3,a3,0x5
1c0041ea:	9736                	add	a4,a4,a3
1c0041ec:	97ba                	add	a5,a5,a4
1c0041ee:	d83e                	sw	a5,48(sp)
1c0041f0:	da56                	sw	s5,52(sp)
1c0041f2:	4719                	li	a4,6
1c0041f4:	02e11f23          	sh	a4,62(sp)
1c0041f8:	05311123          	sh	s3,66(sp)
1c0041fc:	05911223          	sh	s9,68(sp)
1c004200:	5342                	lw	t1,48(sp)
1c004202:	58d2                	lw	a7,52(sp)
1c004204:	5862                	lw	a6,56(sp)
1c004206:	55f2                	lw	a1,60(sp)
1c004208:	4606                	lw	a2,64(sp)
1c00420a:	4696                	lw	a3,68(sp)
1c00420c:	4726                	lw	a4,72(sp)
1c00420e:	47b6                	lw	a5,76(sp)
1c004210:	c81a                	sw	t1,16(sp)
1c004212:	ca46                	sw	a7,20(sp)
1c004214:	cc42                	sw	a6,24(sp)
1c004216:	ce2e                	sw	a1,28(sp)
1c004218:	d032                	sw	a2,32(sp)
1c00421a:	d236                	sw	a3,36(sp)
1c00421c:	d43a                	sw	a4,40(sp)
1c00421e:	d63e                	sw	a5,44(sp)
1c004220:	932fc0ef          	jal	ra,1c000352 <dory_dma_memcpy_async.constprop.14>
1c004224:	00142963          	p.beqimm	s0,1,1c004236 <Pooling1+0x158>
1c004228:	1a7d                	addi	s4,s4,-1
1c00422a:	e0afc0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c00422e:	020a0263          	beqz	s4,1c004252 <Pooling1+0x174>
1c004232:	4405                	li	s0,1
1c004234:	b705                	j	1c004154 <Pooling1+0x76>
1c004236:	0485                	addi	s1,s1,1
1c004238:	1a7d                	addi	s4,s4,-1
1c00423a:	0244ad63          	p.beqimm	s1,4,1c004274 <Pooling1+0x196>
1c00423e:	df6fc0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c004242:	000a0863          	beqz	s4,1c004252 <Pooling1+0x174>
1c004246:	4401                	li	s0,0
1c004248:	04c00913          	li	s2,76
1c00424c:	00149b13          	slli	s6,s1,0x1
1c004250:	b711                	j	1c004154 <Pooling1+0x76>
1c004252:	542a                	lw	s0,168(sp)
1c004254:	4522                	lw	a0,8(sp)
1c004256:	50ba                	lw	ra,172(sp)
1c004258:	549a                	lw	s1,164(sp)
1c00425a:	590a                	lw	s2,160(sp)
1c00425c:	49fa                	lw	s3,156(sp)
1c00425e:	4a6a                	lw	s4,152(sp)
1c004260:	4ada                	lw	s5,148(sp)
1c004262:	4b4a                	lw	s6,144(sp)
1c004264:	4bba                	lw	s7,140(sp)
1c004266:	4c2a                	lw	s8,136(sp)
1c004268:	4c9a                	lw	s9,132(sp)
1c00426a:	4d0a                	lw	s10,128(sp)
1c00426c:	5df6                	lw	s11,124(sp)
1c00426e:	614d                	addi	sp,sp,176
1c004270:	e33fb06f          	j	1c0000a2 <dory_dma_deallocate>
1c004274:	47b2                	lw	a5,12(sp)
1c004276:	0785                	addi	a5,a5,1
1c004278:	c63e                	sw	a5,12(sp)
1c00427a:	dbafc0ef          	jal	ra,1c000834 <dory_cores_barrier>
1c00427e:	fc0a0ae3          	beqz	s4,1c004252 <Pooling1+0x174>
1c004282:	4732                	lw	a4,12(sp)
1c004284:	4401                	li	s0,0
1c004286:	4481                	li	s1,0
1c004288:	04c00913          	li	s2,76
1c00428c:	00571c13          	slli	s8,a4,0x5
1c004290:	4b01                	li	s6,0
1c004292:	b5c9                	j	1c004154 <Pooling1+0x76>

1c004294 <network_run_cluster>:
1c004294:	d7010113          	addi	sp,sp,-656
1c004298:	1c00e7b7          	lui	a5,0x1c00e
1c00429c:	00052e03          	lw	t3,0(a0)
1c0042a0:	28912223          	sw	s1,644(sp)
1c0042a4:	8e07a783          	lw	a5,-1824(a5) # 1c00d8e0 <L3_weights>
1c0042a8:	4144                	lw	s1,4(a0)
1c0042aa:	4558                	lw	a4,12(a0)
1c0042ac:	4908                	lw	a0,16(a0)
1c0042ae:	1c00e5b7          	lui	a1,0x1c00e
1c0042b2:	1c00e637          	lui	a2,0x1c00e
1c0042b6:	28112623          	sw	ra,652(sp)
1c0042ba:	28812423          	sw	s0,648(sp)
1c0042be:	29212023          	sw	s2,640(sp)
1c0042c2:	27312e23          	sw	s3,636(sp)
1c0042c6:	27412c23          	sw	s4,632(sp)
1c0042ca:	27512a23          	sw	s5,628(sp)
1c0042ce:	27612823          	sw	s6,624(sp)
1c0042d2:	27712623          	sw	s7,620(sp)
1c0042d6:	27812423          	sw	s8,616(sp)
1c0042da:	27912223          	sw	s9,612(sp)
1c0042de:	27a12023          	sw	s10,608(sp)
1c0042e2:	25b12e23          	sw	s11,604(sp)
1c0042e6:	ce72                	sw	t3,28(sp)
1c0042e8:	8e05a223          	sw	zero,-1820(a1) # 1c00d8e4 <bypass_activations>
1c0042ec:	8cf62e23          	sw	a5,-1828(a2) # 1c00d8dc <L3_weights_internal>
1c0042f0:	d22a                	sw	a0,36(sp)
1c0042f2:	94f2                	add	s1,s1,t3
1c0042f4:	2e1725e3          	p.beqimm	a4,1,1c004dde <network_run_cluster+0xb4a>
1c0042f8:	77f1                	lui	a5,0xffffc
1c0042fa:	40078793          	addi	a5,a5,1024 # ffffc400 <pulp__FC+0xffffc401>
1c0042fe:	94be                	add	s1,s1,a5
1c004300:	1c00ed37          	lui	s10,0x1c00e
1c004304:	8c9d2c23          	sw	s1,-1832(s10) # 1c00d8d8 <L2_input>
1c004308:	26070ae3          	beqz	a4,1c004d7c <network_run_cluster+0xae8>
1c00430c:	7789                	lui	a5,0xfffe2
1c00430e:	94be                	add	s1,s1,a5
1c004310:	1c00eb37          	lui	s6,0x1c00e
1c004314:	8c9b2a23          	sw	s1,-1836(s6) # 1c00d8d4 <L2_output>
1c004318:	8d4b2783          	lw	a5,-1836(s6)
1c00431c:	56078863          	beqz	a5,1c00488c <network_run_cluster+0x5f8>
1c004320:	1c00dab7          	lui	s5,0x1c00d
1c004324:	00e03833          	snez	a6,a4
1c004328:	4b81                	li	s7,0
1c00432a:	4401                	li	s0,0
1c00432c:	848a8a93          	addi	s5,s5,-1976 # 1c00c848 <L3_input_layers>
1c004330:	014027f3          	csrr	a5,uhartid
1c004334:	d05e                	sw	s7,32(sp)
1c004336:	8795                	srai	a5,a5,0x5
1c004338:	8bc2                	mv	s7,a6
1c00433a:	208af803          	p.lw	a6,s0(s5)
1c00433e:	f267b7b3          	p.bclr	a5,a5,25,6
1c004342:	1c00dc37          	lui	s8,0x1c00d
1c004346:	d43e                	sw	a5,40(sp)
1c004348:	d602                	sw	zero,44(sp)
1c00434a:	d83e                	sw	a5,48(sp)
1c00434c:	da3e                	sw	a5,52(sp)
1c00434e:	dc3e                	sw	a5,56(sp)
1c004350:	de3e                	sw	a5,60(sp)
1c004352:	848c0c13          	addi	s8,s8,-1976 # 1c00c848 <L3_input_layers>
1c004356:	4901                	li	s2,0
1c004358:	4981                	li	s3,0
1c00435a:	1c00ecb7          	lui	s9,0x1c00e
1c00435e:	1c00edb7          	lui	s11,0x1c00e
1c004362:	02000a13          	li	s4,32
1c004366:	30182a63          	p.beqimm	a6,1,1c00467a <network_run_cluster+0x3e6>
1c00436a:	1c00d637          	lui	a2,0x1c00d
1c00436e:	89060613          	addi	a2,a2,-1904 # 1c00c890 <allocate_layer>
1c004372:	20867783          	p.lw	a5,s0(a2)
1c004376:	7017a363          	p.beqimm	a5,1,1c004a7c <network_run_cluster+0x7e8>
1c00437a:	1c00d637          	lui	a2,0x1c00d
1c00437e:	89060613          	addi	a2,a2,-1904 # 1c00c890 <allocate_layer>
1c004382:	20867883          	p.lw	a7,s0(a2)
1c004386:	7218a163          	p.beqimm	a7,1,1c004aa8 <network_run_cluster+0x814>
1c00438a:	260905e3          	beqz	s2,1c004df4 <network_run_cluster+0xb60>
1c00438e:	1c00d5b7          	lui	a1,0x1c00d
1c004392:	84858593          	addi	a1,a1,-1976 # 1c00c848 <L3_input_layers>
1c004396:	00b407b3          	add	a5,s0,a1
1c00439a:	ffc7a803          	lw	a6,-4(a5) # fffe1ffc <pulp__FC+0xfffe1ffd>
1c00439e:	5a081263          	bnez	a6,1c004942 <network_run_cluster+0x6ae>
1c0043a2:	1c00d537          	lui	a0,0x1c00d
1c0043a6:	85ca                	mv	a1,s2
1c0043a8:	b6050513          	addi	a0,a0,-1184 # 1c00cb60 <__clz_tab+0x148>
1c0043ac:	c642                	sw	a6,12(sp)
1c0043ae:	c846                	sw	a7,16(sp)
1c0043b0:	378070ef          	jal	ra,1c00b728 <printf>
1c0043b4:	1c00d637          	lui	a2,0x1c00d
1c0043b8:	86c60613          	addi	a2,a2,-1940 # 1c00c86c <check_activations_dimension>
1c0043bc:	20867783          	p.lw	a5,s0(a2)
1c0043c0:	090a8613          	addi	a2,s5,144
1c0043c4:	8d8d2703          	lw	a4,-1832(s10)
1c0043c8:	20c47603          	p.lw	a2,a2(s0)
1c0043cc:	4832                	lw	a6,12(sp)
1c0043ce:	48c2                	lw	a7,16(sp)
1c0043d0:	4581                	li	a1,0
1c0043d2:	00f05763          	blez	a5,1c0043e0 <network_run_cluster+0x14c>
1c0043d6:	0047c0fb          	lp.setup	x1,a5,1c0043de <network_run_cluster+0x14a>
1c0043da:	0017468b          	p.lbu	a3,1(a4!)
1c0043de:	95b6                	add	a1,a1,a3
1c0043e0:	76b60363          	beq	a2,a1,1c004b46 <network_run_cluster+0x8b2>
1c0043e4:	1c00d537          	lui	a0,0x1c00d
1c0043e8:	b9c50513          	addi	a0,a0,-1124 # 1c00cb9c <__clz_tab+0x184>
1c0043ec:	c642                	sw	a6,12(sp)
1c0043ee:	c846                	sw	a7,16(sp)
1c0043f0:	338070ef          	jal	ra,1c00b728 <printf>
1c0043f4:	48c2                	lw	a7,16(sp)
1c0043f6:	4832                	lw	a6,12(sp)
1c0043f8:	7018a863          	p.beqimm	a7,1,1c004b08 <network_run_cluster+0x874>
1c0043fc:	1c00d537          	lui	a0,0x1c00d
1c004400:	c1c50513          	addi	a0,a0,-996 # 1c00cc1c <__clz_tab+0x204>
1c004404:	18e070ef          	jal	ra,1c00b592 <puts>
1c004408:	1c00e5b7          	lui	a1,0x1c00e
1c00440c:	1c00d737          	lui	a4,0x1c00d
1c004410:	1c00de37          	lui	t3,0x1c00d
1c004414:	8dc5a783          	lw	a5,-1828(a1) # 1c00d8dc <L3_weights_internal>
1c004418:	1c00e637          	lui	a2,0x1c00e
1c00441c:	1c00e6b7          	lui	a3,0x1c00e
1c004420:	92070713          	addi	a4,a4,-1760 # 1c00c920 <out_mult_vector>
1c004424:	944e0e13          	addi	t3,t3,-1724 # 1c00c944 <out_shift_vector>
1c004428:	8e462503          	lw	a0,-1820(a2) # 1c00d8e4 <bypass_activations>
1c00442c:	8ccca303          	lw	t1,-1844(s9) # 1c00d8cc <L3_input>
1c004430:	8d06a603          	lw	a2,-1840(a3) # 1c00d8d0 <L2_weights>
1c004434:	8c8da883          	lw	a7,-1848(s11) # 1c00d8c8 <L3_output>
1c004438:	20877683          	p.lw	a3,s0(a4)
1c00443c:	8d8d2803          	lw	a6,-1832(s10)
1c004440:	208e7703          	p.lw	a4,s0(t3)
1c004444:	8d4b2583          	lw	a1,-1836(s6)
1c004448:	5e12                	lw	t3,36(sp)
1c00444a:	99be                	add	s3,s3,a5
1c00444c:	c09a                	sw	t1,64(sp)
1c00444e:	c2c6                	sw	a7,68(sp)
1c004450:	c4ce                	sw	s3,72(sp)
1c004452:	c6c2                	sw	a6,76(sp)
1c004454:	c8aa                	sw	a0,80(sp)
1c004456:	caae                	sw	a1,84(sp)
1c004458:	ccb2                	sw	a2,88(sp)
1c00445a:	ce82                	sw	zero,92(sp)
1c00445c:	d0f2                	sw	t3,96(sp)
1c00445e:	d2b6                	sw	a3,100(sp)
1c004460:	d4ba                	sw	a4,104(sp)
1c004462:	d6ca                	sw	s2,108(sp)
1c004464:	67c1                	lui	a5,0x10
1c004466:	7a079073          	csrw	pcer,a5
1c00446a:	5e22                	lw	t3,40(sp)
1c00446c:	4705                	li	a4,1
1c00446e:	514e0563          	beq	t3,s4,1c004978 <network_run_cluster+0x6e4>
1c004472:	102007b7          	lui	a5,0x10200
1c004476:	40078793          	addi	a5,a5,1024 # 10200400 <__l1_end+0x2003e0>
1c00447a:	02e7a023          	sw	a4,32(a5)
1c00447e:	4781                	li	a5,0
1c004480:	79f79073          	csrw	pccr31,a5
1c004484:	5e42                	lw	t3,48(sp)
1c004486:	4d4e0f63          	beq	t3,s4,1c004964 <network_run_cluster+0x6d0>
1c00448a:	102007b7          	lui	a5,0x10200
1c00448e:	40078793          	addi	a5,a5,1024 # 10200400 <__l1_end+0x2003e0>
1c004492:	0007a023          	sw	zero,0(a5)
1c004496:	4781                	li	a5,0
1c004498:	7a179073          	csrw	pcmr,a5
1c00449c:	5e52                	lw	t3,52(sp)
1c00449e:	4705                	li	a4,1
1c0044a0:	4b4e0863          	beq	t3,s4,1c004950 <network_run_cluster+0x6bc>
1c0044a4:	102007b7          	lui	a5,0x10200
1c0044a8:	40078793          	addi	a5,a5,1024 # 10200400 <__l1_end+0x2003e0>
1c0044ac:	00e7ac23          	sw	a4,24(a5)
1c0044b0:	478d                	li	a5,3
1c0044b2:	7a179073          	csrw	pcmr,a5
1c0044b6:	65a5                	lui	a1,0x9
1c0044b8:	f5c58593          	addi	a1,a1,-164 # 8f5c <__rt_stack_size+0x875c>
1c0044bc:	4501                	li	a0,0
1c0044be:	76b040ef          	jal	ra,1c009428 <pi_cl_l1_malloc>
1c0044c2:	57b6                	lw	a5,108(sp)
1c0044c4:	ceaa                	sw	a0,92(sp)
1c0044c6:	85aa                	mv	a1,a0
1c0044c8:	7647a963          	p.beqimm	a5,4,1c004c3a <network_run_cluster+0x9a6>
1c0044cc:	4711                	li	a4,4
1c0044ce:	3ef76c63          	bltu	a4,a5,1c0048c6 <network_run_cluster+0x632>
1c0044d2:	7217aa63          	p.beqimm	a5,1,1c004c06 <network_run_cluster+0x972>
1c0044d6:	060788e3          	beqz	a5,1c004d46 <network_run_cluster+0xab2>
1c0044da:	0227abe3          	p.beqimm	a5,2,1c004d10 <network_run_cluster+0xa7c>
1c0044de:	0237bb63          	p.bneimm	a5,3,1c004514 <network_run_cluster+0x280>
1c0044e2:	4705                	li	a4,1
1c0044e4:	002047b7          	lui	a5,0x204
1c0044e8:	08e7a223          	sw	a4,132(a5) # 204084 <__L2+0x184084>
1c0044ec:	20078993          	addi	s3,a5,512
1c0044f0:	00e9a023          	sw	a4,0(s3)
1c0044f4:	00e9a623          	sw	a4,12(s3)
1c0044f8:	1c003737          	lui	a4,0x1c003
1c0044fc:	c6670713          	addi	a4,a4,-922 # 1c002c66 <BNReluConvolution3>
1c004500:	08e7a023          	sw	a4,128(a5)
1c004504:	0088                	addi	a0,sp,64
1c004506:	08a7a023          	sw	a0,128(a5)
1c00450a:	f5cfe0ef          	jal	ra,1c002c66 <BNReluConvolution3>
1c00450e:	01c9e783          	p.elw	a5,28(s3)
1c004512:	45f6                	lw	a1,92(sp)
1c004514:	6625                	lui	a2,0x9
1c004516:	f5c60613          	addi	a2,a2,-164 # 8f5c <__rt_stack_size+0x875c>
1c00451a:	4501                	li	a0,0
1c00451c:	713040ef          	jal	ra,1c00942e <pi_cl_l1_free>
1c004520:	5e62                	lw	t3,56(sp)
1c004522:	3f4e0d63          	beq	t3,s4,1c00491c <network_run_cluster+0x688>
1c004526:	102007b7          	lui	a5,0x10200
1c00452a:	40078793          	addi	a5,a5,1024 # 10200400 <__l1_end+0x2003e0>
1c00452e:	0007a023          	sw	zero,0(a5)
1c004532:	4781                	li	a5,0
1c004534:	7a179073          	csrw	pcmr,a5
1c004538:	5e72                	lw	t3,60(sp)
1c00453a:	3f4e0d63          	beq	t3,s4,1c004934 <network_run_cluster+0x6a0>
1c00453e:	102007b7          	lui	a5,0x10200
1c004542:	40078793          	addi	a5,a5,1024 # 10200400 <__l1_end+0x2003e0>
1c004546:	0087a783          	lw	a5,8(a5)
1c00454a:	5e02                	lw	t3,32(sp)
1c00454c:	9e3e                	add	t3,t3,a5
1c00454e:	d072                	sw	t3,32(sp)
1c004550:	8c8da703          	lw	a4,-1848(s11)
1c004554:	8ccca783          	lw	a5,-1844(s9)
1c004558:	8ceca623          	sw	a4,-1844(s9)
1c00455c:	8cfda423          	sw	a5,-1848(s11)
1c004560:	1c00d637          	lui	a2,0x1c00d
1c004564:	96860613          	addi	a2,a2,-1688 # 1c00c968 <Layers_name>
1c004568:	20867583          	p.lw	a1,s0(a2)
1c00456c:	1c00d6b7          	lui	a3,0x1c00d
1c004570:	864a                	mv	a2,s2
1c004572:	c5c68513          	addi	a0,a3,-932 # 1c00cc5c <__clz_tab+0x244>
1c004576:	1b2070ef          	jal	ra,1c00b728 <printf>
1c00457a:	48892e63          	p.beqimm	s2,8,1c004a16 <network_run_cluster+0x782>
1c00457e:	000c2783          	lw	a5,0(s8)
1c004582:	4217a963          	p.beqimm	a5,1,1c0049b4 <network_run_cluster+0x720>
1c004586:	168a8993          	addi	s3,s5,360
1c00458a:	2089f783          	p.lw	a5,s0(s3)
1c00458e:	144a8613          	addi	a2,s5,324
1c004592:	8d4b2703          	lw	a4,-1836(s6)
1c004596:	20c47603          	p.lw	a2,a2(s0)
1c00459a:	4581                	li	a1,0
1c00459c:	00f05763          	blez	a5,1c0045aa <network_run_cluster+0x316>
1c0045a0:	0047c0fb          	lp.setup	x1,a5,1c0045a8 <network_run_cluster+0x314>
1c0045a4:	0017468b          	p.lbu	a3,1(a4!)
1c0045a8:	95b6                	add	a1,a1,a3
1c0045aa:	4cb60263          	beq	a2,a1,1c004a6e <network_run_cluster+0x7da>
1c0045ae:	1c00d537          	lui	a0,0x1c00d
1c0045b2:	b9c50513          	addi	a0,a0,-1124 # 1c00cb9c <__clz_tab+0x184>
1c0045b6:	172070ef          	jal	ra,1c00b728 <printf>
1c0045ba:	4529                	li	a0,10
1c0045bc:	04c070ef          	jal	ra,1c00b608 <putchar>
1c0045c0:	1c00d7b7          	lui	a5,0x1c00d
1c0045c4:	89078793          	addi	a5,a5,-1904 # 1c00c890 <allocate_layer>
1c0045c8:	2087f703          	p.lw	a4,s0(a5)
1c0045cc:	1c00de37          	lui	t3,0x1c00d
1c0045d0:	86ce0e13          	addi	t3,t3,-1940 # 1c00c86c <check_activations_dimension>
1c0045d4:	208e7783          	p.lw	a5,s0(t3)
1c0045d8:	46172963          	p.beqimm	a4,1,1c004a4a <network_run_cluster+0x7b6>
1c0045dc:	3a1bac63          	p.beqimm	s7,1,1c004994 <network_run_cluster+0x700>
1c0045e0:	1c00d5b7          	lui	a1,0x1c00d
1c0045e4:	84858593          	addi	a1,a1,-1976 # 1c00c848 <L3_input_layers>
1c0045e8:	2085f703          	p.lw	a4,s0(a1)
1c0045ec:	94be                	add	s1,s1,a5
1c0045ee:	46172e63          	p.beqimm	a4,1,1c004a6a <network_run_cluster+0x7d6>
1c0045f2:	8d4b2783          	lw	a5,-1836(s6)
1c0045f6:	8cfd2c23          	sw	a5,-1832(s10)
1c0045fa:	22892c63          	p.beqimm	s2,8,1c004832 <network_run_cluster+0x59e>
1c0045fe:	1c00d5b7          	lui	a1,0x1c00d
1c004602:	84858593          	addi	a1,a1,-1976 # 1c00c848 <L3_input_layers>
1c004606:	008587b3          	add	a5,a1,s0
1c00460a:	43d8                	lw	a4,4(a5)
1c00460c:	1c00d9b7          	lui	s3,0x1c00d
1c004610:	9b098993          	addi	s3,s3,-1616 # 1c00c9b0 <check_activations_out_dimension>
1c004614:	54172463          	p.beqimm	a4,1,1c004b5c <network_run_cluster+0x8c8>
1c004618:	1c00d737          	lui	a4,0x1c00d
1c00461c:	008987b3          	add	a5,s3,s0
1c004620:	84870713          	addi	a4,a4,-1976 # 1c00c848 <L3_input_layers>
1c004624:	20877883          	p.lw	a7,s0(a4)
1c004628:	0047a803          	lw	a6,4(a5)
1c00462c:	02090063          	beqz	s2,1c00464c <network_run_cluster+0x3b8>
1c004630:	1c00d7b7          	lui	a5,0x1c00d
1c004634:	84878793          	addi	a5,a5,-1976 # 1c00c848 <L3_input_layers>
1c004638:	00878733          	add	a4,a5,s0
1c00463c:	ffc72703          	lw	a4,-4(a4)
1c004640:	38172163          	p.beqimm	a4,1,1c0049c2 <network_run_cluster+0x72e>
1c004644:	2087f783          	p.lw	a5,s0(a5)
1c004648:	0617ab63          	p.beqimm	a5,1,1c0046be <network_run_cluster+0x42a>
1c00464c:	4a18ab63          	p.beqimm	a7,1,1c004b02 <network_run_cluster+0x86e>
1c004650:	004c278b          	p.lw	a5,4(s8!)
1c004654:	1c1ba263          	p.beqimm	s7,1,1c004818 <network_run_cluster+0x584>
1c004658:	410484b3          	sub	s1,s1,a6
1c00465c:	8c9b2a23          	sw	s1,-1836(s6)
1c004660:	7617a763          	p.beqimm	a5,1,1c004dce <network_run_cluster+0xb3a>
1c004664:	4b85                	li	s7,1
1c004666:	0411                	addi	s0,s0,4
1c004668:	208af803          	p.lw	a6,s0(s5)
1c00466c:	18ca8993          	addi	s3,s5,396
1c004670:	0905                	addi	s2,s2,1
1c004672:	21347983          	p.lw	s3,s3(s0)
1c004676:	ce183ae3          	p.bneimm	a6,1,1c00436a <network_run_cluster+0xd6>
1c00467a:	1c00d5b7          	lui	a1,0x1c00d
1c00467e:	86c58593          	addi	a1,a1,-1940 # 1c00c86c <check_activations_dimension>
1c004682:	2085f783          	p.lw	a5,s0(a1)
1c004686:	701bab63          	p.beqimm	s7,1,1c004d9c <network_run_cluster+0xb08>
1c00468a:	1c00d5b7          	lui	a1,0x1c00d
1c00468e:	89058593          	addi	a1,a1,-1904 # 1c00c890 <allocate_layer>
1c004692:	2085f703          	p.lw	a4,s0(a1)
1c004696:	8c9d                	sub	s1,s1,a5
1c004698:	8c9d2c23          	sw	s1,-1832(s10)
1c00469c:	041728e3          	p.beqimm	a4,1,1c004eec <network_run_cluster+0xc58>
1c0046a0:	1c00d5b7          	lui	a1,0x1c00d
1c0046a4:	89058593          	addi	a1,a1,-1904 # 1c00c890 <allocate_layer>
1c0046a8:	2085f783          	p.lw	a5,s0(a1)
1c0046ac:	3e17ae63          	p.beqimm	a5,1,1c004aa8 <network_run_cluster+0x814>
1c0046b0:	1c00d537          	lui	a0,0x1c00d
1c0046b4:	b5450513          	addi	a0,a0,-1196 # 1c00cb54 <__clz_tab+0x13c>
1c0046b8:	6db060ef          	jal	ra,1c00b592 <puts>
1c0046bc:	b3b1                	j	1c004408 <network_run_cluster+0x174>
1c0046be:	000c2783          	lw	a5,0(s8)
1c0046c2:	2089f303          	p.lw	t1,s0(s3)
1c0046c6:	7817ad63          	p.beqimm	a5,1,1c004e60 <network_run_cluster+0xbcc>
1c0046ca:	5512                	lw	a0,36(sp)
1c0046cc:	859a                	mv	a1,t1
1c0046ce:	0a10                	addi	a2,sp,272
1c0046d0:	ca1a                	sw	t1,20(sp)
1c0046d2:	c642                	sw	a6,12(sp)
1c0046d4:	c846                	sw	a7,16(sp)
1c0046d6:	26e030ef          	jal	ra,1c007944 <pi_cl_ram_alloc>
1c0046da:	19c14783          	lbu	a5,412(sp)
1c0046de:	4352                	lw	t1,20(sp)
1c0046e0:	4832                	lw	a6,12(sp)
1c0046e2:	0ff7f793          	andi	a5,a5,255
1c0046e6:	48c2                	lw	a7,16(sp)
1c0046e8:	ef99                	bnez	a5,1c004706 <network_run_cluster+0x472>
1c0046ea:	4689                	li	a3,2
1c0046ec:	00204737          	lui	a4,0x204
1c0046f0:	00d72423          	sw	a3,8(a4) # 204008 <__L2+0x184008>
1c0046f4:	03c76783          	p.elw	a5,60(a4)
1c0046f8:	00d72223          	sw	a3,4(a4)
1c0046fc:	19c14783          	lbu	a5,412(sp)
1c004700:	0ff7f793          	andi	a5,a5,255
1c004704:	d7f5                	beqz	a5,1c0046f0 <network_run_cluster+0x45c>
1c004706:	56b2                	lw	a3,44(sp)
1c004708:	11412f03          	lw	t5,276(sp)
1c00470c:	8d4b2603          	lw	a2,-1836(s6)
1c004710:	1c00de37          	lui	t3,0x1c00d
1c004714:	5512                	lw	a0,36(sp)
1c004716:	4f8e0e13          	addi	t3,t3,1272 # 1c00d4f8 <_bss_start>
1c00471a:	00269e93          	slli	t4,a3,0x2
1c00471e:	01ee6ea3          	p.sw	t5,t4(t3)
1c004722:	1b1c                	addi	a5,sp,432
1c004724:	869a                	mv	a3,t1
1c004726:	4701                	li	a4,0
1c004728:	85fa                	mv	a1,t5
1c00472a:	ca1a                	sw	t1,20(sp)
1c00472c:	c642                	sw	a6,12(sp)
1c00472e:	c846                	sw	a7,16(sp)
1c004730:	cc72                	sw	t3,24(sp)
1c004732:	1d0030ef          	jal	ra,1c007902 <pi_cl_ram_copy>
1c004736:	24c14783          	lbu	a5,588(sp)
1c00473a:	4352                	lw	t1,20(sp)
1c00473c:	4832                	lw	a6,12(sp)
1c00473e:	0ff7f793          	andi	a5,a5,255
1c004742:	48c2                	lw	a7,16(sp)
1c004744:	4e62                	lw	t3,24(sp)
1c004746:	ef99                	bnez	a5,1c004764 <network_run_cluster+0x4d0>
1c004748:	4689                	li	a3,2
1c00474a:	00204737          	lui	a4,0x204
1c00474e:	00d72423          	sw	a3,8(a4) # 204008 <__L2+0x184008>
1c004752:	03c76783          	p.elw	a5,60(a4)
1c004756:	00d72223          	sw	a3,4(a4)
1c00475a:	24c14783          	lbu	a5,588(sp)
1c00475e:	0ff7f793          	andi	a5,a5,255
1c004762:	d7f5                	beqz	a5,1c00474e <network_run_cluster+0x4ba>
1c004764:	5732                	lw	a4,44(sp)
1c004766:	0705                	addi	a4,a4,1
1c004768:	d63a                	sw	a4,44(sp)
1c00476a:	ee18b3e3          	p.bneimm	a7,1,1c004650 <network_run_cluster+0x3bc>
1c00476e:	1c00d5b7          	lui	a1,0x1c00d
1c004772:	00291793          	slli	a5,s2,0x2
1c004776:	86c58593          	addi	a1,a1,-1940 # 1c00c86c <check_activations_dimension>
1c00477a:	97ae                	add	a5,a5,a1
1c00477c:	43d4                	lw	a3,4(a5)
1c00477e:	740b8763          	beqz	s7,1c004ecc <network_run_cluster+0xc38>
1c004782:	8c95                	sub	s1,s1,a3
1c004784:	949a                	add	s1,s1,t1
1c004786:	8c9d2c23          	sw	s1,-1832(s10)
1c00478a:	5732                	lw	a4,44(sp)
1c00478c:	8d8d2603          	lw	a2,-1832(s10)
1c004790:	5512                	lw	a0,36(sp)
1c004792:	ffe70893          	addi	a7,a4,-2
1c004796:	088a                	slli	a7,a7,0x2
1c004798:	211e7583          	p.lw	a1,a7(t3)
1c00479c:	1b1c                	addi	a5,sp,432
1c00479e:	4705                	li	a4,1
1c0047a0:	c642                	sw	a6,12(sp)
1c0047a2:	c846                	sw	a7,16(sp)
1c0047a4:	cc72                	sw	t3,24(sp)
1c0047a6:	15c030ef          	jal	ra,1c007902 <pi_cl_ram_copy>
1c0047aa:	24c14783          	lbu	a5,588(sp)
1c0047ae:	4832                	lw	a6,12(sp)
1c0047b0:	48c2                	lw	a7,16(sp)
1c0047b2:	0ff7f793          	andi	a5,a5,255
1c0047b6:	4e62                	lw	t3,24(sp)
1c0047b8:	ef99                	bnez	a5,1c0047d6 <network_run_cluster+0x542>
1c0047ba:	4689                	li	a3,2
1c0047bc:	00204737          	lui	a4,0x204
1c0047c0:	00d72423          	sw	a3,8(a4) # 204008 <__L2+0x184008>
1c0047c4:	03c76783          	p.elw	a5,60(a4)
1c0047c8:	00d72223          	sw	a3,4(a4)
1c0047cc:	24c14783          	lbu	a5,588(sp)
1c0047d0:	0ff7f793          	andi	a5,a5,255
1c0047d4:	d7f5                	beqz	a5,1c0047c0 <network_run_cluster+0x52c>
1c0047d6:	211e7583          	p.lw	a1,a7(t3)
1c0047da:	5512                	lw	a0,36(sp)
1c0047dc:	8642                	mv	a2,a6
1c0047de:	1894                	addi	a3,sp,112
1c0047e0:	c642                	sw	a6,12(sp)
1c0047e2:	198030ef          	jal	ra,1c00797a <pi_cl_ram_free>
1c0047e6:	10014783          	lbu	a5,256(sp)
1c0047ea:	4832                	lw	a6,12(sp)
1c0047ec:	0ff7f793          	andi	a5,a5,255
1c0047f0:	e60790e3          	bnez	a5,1c004650 <network_run_cluster+0x3bc>
1c0047f4:	4689                	li	a3,2
1c0047f6:	00204737          	lui	a4,0x204
1c0047fa:	00d72423          	sw	a3,8(a4) # 204008 <__L2+0x184008>
1c0047fe:	03c76783          	p.elw	a5,60(a4)
1c004802:	00d72223          	sw	a3,4(a4)
1c004806:	10014783          	lbu	a5,256(sp)
1c00480a:	0ff7f793          	andi	a5,a5,255
1c00480e:	d7f5                	beqz	a5,1c0047fa <network_run_cluster+0x566>
1c004810:	004c278b          	p.lw	a5,4(s8!)
1c004814:	e41bb2e3          	p.bneimm	s7,1,1c004658 <network_run_cluster+0x3c4>
1c004818:	4e72                	lw	t3,28(sp)
1c00481a:	4b81                	li	s7,0
1c00481c:	8dcb2a23          	sw	t3,-1836(s6)
1c004820:	9e42                	add	t3,t3,a6
1c004822:	ce72                	sw	t3,28(sp)
1c004824:	e417b1e3          	p.bneimm	a5,1,1c004666 <network_run_cluster+0x3d2>
1c004828:	2089f983          	p.lw	s3,s0(s3)
1c00482c:	4b81                	li	s7,0
1c00482e:	94ce                	add	s1,s1,s3
1c004830:	bd1d                	j	1c004666 <network_run_cluster+0x3d2>
1c004832:	5b82                	lw	s7,32(sp)
1c004834:	1c00d537          	lui	a0,0x1c00d
1c004838:	cbc50513          	addi	a0,a0,-836 # 1c00ccbc <__clz_tab+0x2a4>
1c00483c:	85de                	mv	a1,s7
1c00483e:	6eb060ef          	jal	ra,1c00b728 <printf>
1c004842:	00d7c5b7          	lui	a1,0xd7c
1c004846:	1c00d537          	lui	a0,0x1c00d
1c00484a:	e0058593          	addi	a1,a1,-512 # d7be00 <__L2+0xcfbe00>
1c00484e:	cd050513          	addi	a0,a0,-816 # 1c00ccd0 <__clz_tab+0x2b8>
1c004852:	6d7060ef          	jal	ra,1c00b728 <printf>
1c004856:	855e                	mv	a0,s7
1c004858:	468010ef          	jal	ra,1c005cc0 <__floatsisf>
1c00485c:	1c00d7b7          	lui	a5,0x1c00d
1c004860:	85aa                	mv	a1,a0
1c004862:	2207a503          	lw	a0,544(a5) # 1c00d220 <__hyper_pad+0xec>
1c004866:	25c010ef          	jal	ra,1c005ac2 <__divsf3>
1c00486a:	4fa010ef          	jal	ra,1c005d64 <__extendsfdf2>
1c00486e:	862a                	mv	a2,a0
1c004870:	1c00d537          	lui	a0,0x1c00d
1c004874:	86ae                	mv	a3,a1
1c004876:	cdc50513          	addi	a0,a0,-804 # 1c00ccdc <__clz_tab+0x2c4>
1c00487a:	6af060ef          	jal	ra,1c00b728 <printf>
1c00487e:	1c00d537          	lui	a0,0x1c00d
1c004882:	4585                	li	a1,1
1c004884:	cec50513          	addi	a0,a0,-788 # 1c00ccec <__clz_tab+0x2d4>
1c004888:	6a1060ef          	jal	ra,1c00b728 <printf>
1c00488c:	28c12083          	lw	ra,652(sp)
1c004890:	28812403          	lw	s0,648(sp)
1c004894:	28412483          	lw	s1,644(sp)
1c004898:	28012903          	lw	s2,640(sp)
1c00489c:	27c12983          	lw	s3,636(sp)
1c0048a0:	27812a03          	lw	s4,632(sp)
1c0048a4:	27412a83          	lw	s5,628(sp)
1c0048a8:	27012b03          	lw	s6,624(sp)
1c0048ac:	26c12b83          	lw	s7,620(sp)
1c0048b0:	26812c03          	lw	s8,616(sp)
1c0048b4:	26412c83          	lw	s9,612(sp)
1c0048b8:	26012d03          	lw	s10,608(sp)
1c0048bc:	25c12d83          	lw	s11,604(sp)
1c0048c0:	29010113          	addi	sp,sp,656
1c0048c4:	8082                	ret
1c0048c6:	4067aa63          	p.beqimm	a5,6,1c004cda <network_run_cluster+0xa46>
1c0048ca:	4719                	li	a4,6
1c0048cc:	3ce7ec63          	bltu	a5,a4,1c004ca4 <network_run_cluster+0xa10>
1c0048d0:	3877af63          	p.beqimm	a5,7,1c004c6e <network_run_cluster+0x9da>
1c0048d4:	c487b0e3          	p.bneimm	a5,8,1c004514 <network_run_cluster+0x280>
1c0048d8:	4705                	li	a4,1
1c0048da:	002047b7          	lui	a5,0x204
1c0048de:	08e7a223          	sw	a4,132(a5) # 204084 <__L2+0x184084>
1c0048e2:	20078993          	addi	s3,a5,512
1c0048e6:	00e9a023          	sw	a4,0(s3)
1c0048ea:	00e9a623          	sw	a4,12(s3)
1c0048ee:	1c004737          	lui	a4,0x1c004
1c0048f2:	8fc70713          	addi	a4,a4,-1796 # 1c0038fc <FullyConnected8>
1c0048f6:	08e7a023          	sw	a4,128(a5)
1c0048fa:	0088                	addi	a0,sp,64
1c0048fc:	08a7a023          	sw	a0,128(a5)
1c004900:	ffdfe0ef          	jal	ra,1c0038fc <FullyConnected8>
1c004904:	01c9e783          	p.elw	a5,28(s3)
1c004908:	6625                	lui	a2,0x9
1c00490a:	45f6                	lw	a1,92(sp)
1c00490c:	f5c60613          	addi	a2,a2,-164 # 8f5c <__rt_stack_size+0x875c>
1c004910:	4501                	li	a0,0
1c004912:	31d040ef          	jal	ra,1c00942e <pi_cl_l1_free>
1c004916:	5e62                	lw	t3,56(sp)
1c004918:	c14e17e3          	bne	t3,s4,1c004526 <network_run_cluster+0x292>
1c00491c:	002007b7          	lui	a5,0x200
1c004920:	40078793          	addi	a5,a5,1024 # 200400 <__L2+0x180400>
1c004924:	0007a023          	sw	zero,0(a5)
1c004928:	4781                	li	a5,0
1c00492a:	7a179073          	csrw	pcmr,a5
1c00492e:	5e72                	lw	t3,60(sp)
1c004930:	c14e17e3          	bne	t3,s4,1c00453e <network_run_cluster+0x2aa>
1c004934:	002007b7          	lui	a5,0x200
1c004938:	40078793          	addi	a5,a5,1024 # 200400 <__L2+0x180400>
1c00493c:	0087a783          	lw	a5,8(a5)
1c004940:	b129                	j	1c00454a <network_run_cluster+0x2b6>
1c004942:	1c00d537          	lui	a0,0x1c00d
1c004946:	c2c50513          	addi	a0,a0,-980 # 1c00cc2c <__clz_tab+0x214>
1c00494a:	449060ef          	jal	ra,1c00b592 <puts>
1c00494e:	bc6d                	j	1c004408 <network_run_cluster+0x174>
1c004950:	002007b7          	lui	a5,0x200
1c004954:	40078793          	addi	a5,a5,1024 # 200400 <__L2+0x180400>
1c004958:	00e7ac23          	sw	a4,24(a5)
1c00495c:	478d                	li	a5,3
1c00495e:	7a179073          	csrw	pcmr,a5
1c004962:	be91                	j	1c0044b6 <network_run_cluster+0x222>
1c004964:	002007b7          	lui	a5,0x200
1c004968:	40078793          	addi	a5,a5,1024 # 200400 <__L2+0x180400>
1c00496c:	0007a023          	sw	zero,0(a5)
1c004970:	4781                	li	a5,0
1c004972:	7a179073          	csrw	pcmr,a5
1c004976:	b61d                	j	1c00449c <network_run_cluster+0x208>
1c004978:	002007b7          	lui	a5,0x200
1c00497c:	40078793          	addi	a5,a5,1024 # 200400 <__L2+0x180400>
1c004980:	02e7a023          	sw	a4,32(a5)
1c004984:	4781                	li	a5,0
1c004986:	79f79073          	csrw	pccr31,a5
1c00498a:	bced                	j	1c004484 <network_run_cluster+0x1f0>
1c00498c:	4e72                	lw	t3,28(sp)
1c00498e:	40de0e33          	sub	t3,t3,a3
1c004992:	ce72                	sw	t3,28(sp)
1c004994:	4e72                	lw	t3,28(sp)
1c004996:	1c00d5b7          	lui	a1,0x1c00d
1c00499a:	84858593          	addi	a1,a1,-1976 # 1c00c848 <L3_input_layers>
1c00499e:	2085f703          	p.lw	a4,s0(a1)
1c0049a2:	40fe0e33          	sub	t3,t3,a5
1c0049a6:	ce72                	sw	t3,28(sp)
1c0049a8:	c41735e3          	p.bneimm	a4,1,1c0045f2 <network_run_cluster+0x35e>
1c0049ac:	40fe0e33          	sub	t3,t3,a5
1c0049b0:	ce72                	sw	t3,28(sp)
1c0049b2:	b181                	j	1c0045f2 <network_run_cluster+0x35e>
1c0049b4:	1c00d537          	lui	a0,0x1c00d
1c0049b8:	c7450513          	addi	a0,a0,-908 # 1c00cc74 <__clz_tab+0x25c>
1c0049bc:	3d7060ef          	jal	ra,1c00b592 <puts>
1c0049c0:	beed                	j	1c0045ba <network_run_cluster+0x326>
1c0049c2:	208af703          	p.lw	a4,s0(s5)
1c0049c6:	c6173fe3          	p.bneimm	a4,1,1c004644 <network_run_cluster+0x3b0>
1c0049ca:	5512                	lw	a0,36(sp)
1c0049cc:	0016e5b7          	lui	a1,0x16e
1c0049d0:	0a10                	addi	a2,sp,272
1c0049d2:	36058593          	addi	a1,a1,864 # 16e360 <__L2+0xee360>
1c0049d6:	cc3e                	sw	a5,24(sp)
1c0049d8:	c642                	sw	a6,12(sp)
1c0049da:	c846                	sw	a7,16(sp)
1c0049dc:	769020ef          	jal	ra,1c007944 <pi_cl_ram_alloc>
1c0049e0:	19c14703          	lbu	a4,412(sp)
1c0049e4:	47e2                	lw	a5,24(sp)
1c0049e6:	4832                	lw	a6,12(sp)
1c0049e8:	0ff77713          	andi	a4,a4,255
1c0049ec:	48c2                	lw	a7,16(sp)
1c0049ee:	ef19                	bnez	a4,1c004a0c <network_run_cluster+0x778>
1c0049f0:	4609                	li	a2,2
1c0049f2:	002046b7          	lui	a3,0x204
1c0049f6:	00c6a423          	sw	a2,8(a3) # 204008 <__L2+0x184008>
1c0049fa:	03c6e703          	p.elw	a4,60(a3)
1c0049fe:	00c6a223          	sw	a2,4(a3)
1c004a02:	19c14703          	lbu	a4,412(sp)
1c004a06:	0ff77713          	andi	a4,a4,255
1c004a0a:	d775                	beqz	a4,1c0049f6 <network_run_cluster+0x762>
1c004a0c:	11412703          	lw	a4,276(sp)
1c004a10:	8ceca623          	sw	a4,-1844(s9)
1c004a14:	b905                	j	1c004644 <network_run_cluster+0x3b0>
1c004a16:	8d4b2783          	lw	a5,-1836(s6)
1c004a1a:	7665                	lui	a2,0xffff9
1c004a1c:	a1d60613          	addi	a2,a2,-1507 # ffff8a1d <pulp__FC+0xffff8a1e>
1c004a20:	438c                	lw	a1,0(a5)
1c004a22:	43d4                	lw	a3,4(a5)
1c004a24:	4798                	lw	a4,8(a5)
1c004a26:	47dc                	lw	a5,12(a5)
1c004a28:	95b6                	add	a1,a1,a3
1c004a2a:	95ba                	add	a1,a1,a4
1c004a2c:	95be                	add	a1,a1,a5
1c004a2e:	36c58063          	beq	a1,a2,1c004d8e <network_run_cluster+0xafa>
1c004a32:	1c00d537          	lui	a0,0x1c00d
1c004a36:	c9450513          	addi	a0,a0,-876 # 1c00cc94 <__clz_tab+0x27c>
1c004a3a:	4ef060ef          	jal	ra,1c00b728 <printf>
1c004a3e:	1c00d5b7          	lui	a1,0x1c00d
1c004a42:	86c58593          	addi	a1,a1,-1940 # 1c00c86c <check_activations_dimension>
1c004a46:	2085f783          	p.lw	a5,s0(a1)
1c004a4a:	06ca8693          	addi	a3,s5,108
1c004a4e:	2086f683          	p.lw	a3,s0(a3)
1c004a52:	f21bade3          	p.beqimm	s7,1,1c00498c <network_run_cluster+0x6f8>
1c004a56:	1c00d5b7          	lui	a1,0x1c00d
1c004a5a:	84858593          	addi	a1,a1,-1976 # 1c00c848 <L3_input_layers>
1c004a5e:	2085f703          	p.lw	a4,s0(a1)
1c004a62:	94b6                	add	s1,s1,a3
1c004a64:	94be                	add	s1,s1,a5
1c004a66:	b81736e3          	p.bneimm	a4,1,1c0045f2 <network_run_cluster+0x35e>
1c004a6a:	94be                	add	s1,s1,a5
1c004a6c:	b659                	j	1c0045f2 <network_run_cluster+0x35e>
1c004a6e:	1c00d537          	lui	a0,0x1c00d
1c004a72:	b8050513          	addi	a0,a0,-1152 # 1c00cb80 <__clz_tab+0x168>
1c004a76:	31d060ef          	jal	ra,1c00b592 <puts>
1c004a7a:	b681                	j	1c0045ba <network_run_cluster+0x326>
1c004a7c:	06ca8693          	addi	a3,s5,108
1c004a80:	2086f783          	p.lw	a5,s0(a3)
1c004a84:	321bad63          	p.beqimm	s7,1,1c004dbe <network_run_cluster+0xb2a>
1c004a88:	8c9d                	sub	s1,s1,a5
1c004a8a:	1c00e5b7          	lui	a1,0x1c00e
1c004a8e:	8c95a823          	sw	s1,-1840(a1) # 1c00d8d0 <L2_weights>
1c004a92:	1c00d637          	lui	a2,0x1c00d
1c004a96:	89060613          	addi	a2,a2,-1904 # 1c00c890 <allocate_layer>
1c004a9a:	20867883          	p.lw	a7,s0(a2)
1c004a9e:	0018a963          	p.beqimm	a7,1,1c004ab0 <network_run_cluster+0x81c>
1c004aa2:	8e1834e3          	p.bneimm	a6,1,1c00438a <network_run_cluster+0xf6>
1c004aa6:	b129                	j	1c0046b0 <network_run_cluster+0x41c>
1c004aa8:	1c00d6b7          	lui	a3,0x1c00d
1c004aac:	8b468693          	addi	a3,a3,-1868 # 1c00c8b4 <check_weights_dimension>
1c004ab0:	1c00e737          	lui	a4,0x1c00e
1c004ab4:	8dc72583          	lw	a1,-1828(a4) # 1c00d8dc <L3_weights_internal>
1c004ab8:	1c00e7b7          	lui	a5,0x1c00e
1c004abc:	8d07a603          	lw	a2,-1840(a5) # 1c00d8d0 <L2_weights>
1c004ac0:	2086f683          	p.lw	a3,s0(a3)
1c004ac4:	5512                	lw	a0,36(sp)
1c004ac6:	1b1c                	addi	a5,sp,432
1c004ac8:	4705                	li	a4,1
1c004aca:	95ce                	add	a1,a1,s3
1c004acc:	c642                	sw	a6,12(sp)
1c004ace:	635020ef          	jal	ra,1c007902 <pi_cl_ram_copy>
1c004ad2:	24c14783          	lbu	a5,588(sp)
1c004ad6:	4832                	lw	a6,12(sp)
1c004ad8:	0ff7f793          	andi	a5,a5,255
1c004adc:	ef99                	bnez	a5,1c004afa <network_run_cluster+0x866>
1c004ade:	4689                	li	a3,2
1c004ae0:	00204737          	lui	a4,0x204
1c004ae4:	00d72423          	sw	a3,8(a4) # 204008 <__L2+0x184008>
1c004ae8:	03c76783          	p.elw	a5,60(a4)
1c004aec:	00d72223          	sw	a3,4(a4)
1c004af0:	24c14783          	lbu	a5,588(sp)
1c004af4:	0ff7f793          	andi	a5,a5,255
1c004af8:	d7f5                	beqz	a5,1c004ae4 <network_run_cluster+0x850>
1c004afa:	4885                	li	a7,1
1c004afc:	881837e3          	p.bneimm	a6,1,1c00438a <network_run_cluster+0xf6>
1c004b00:	be45                	j	1c0046b0 <network_run_cluster+0x41c>
1c004b02:	2089f303          	p.lw	t1,s0(s3)
1c004b06:	b6d1                	j	1c0046ca <network_run_cluster+0x436>
1c004b08:	06ca8693          	addi	a3,s5,108
1c004b0c:	2086f683          	p.lw	a3,s0(a3)
1c004b10:	0b4a8713          	addi	a4,s5,180
1c004b14:	00291613          	slli	a2,s2,0x2
1c004b18:	1c00ee37          	lui	t3,0x1c00e
1c004b1c:	8d0e2783          	lw	a5,-1840(t3) # 1c00d8d0 <L2_weights>
1c004b20:	20e67603          	p.lw	a2,a4(a2)
1c004b24:	00d05763          	blez	a3,1c004b32 <network_run_cluster+0x89e>
1c004b28:	0046c0fb          	lp.setup	x1,a3,1c004b30 <network_run_cluster+0x89c>
1c004b2c:	0017c70b          	p.lbu	a4,1(a5!)
1c004b30:	983a                	add	a6,a6,a4
1c004b32:	31060f63          	beq	a2,a6,1c004e50 <network_run_cluster+0xbbc>
1c004b36:	85c2                	mv	a1,a6
1c004b38:	1c00d537          	lui	a0,0x1c00d
1c004b3c:	be850513          	addi	a0,a0,-1048 # 1c00cbe8 <__clz_tab+0x1d0>
1c004b40:	3e9060ef          	jal	ra,1c00b728 <printf>
1c004b44:	b0d1                	j	1c004408 <network_run_cluster+0x174>
1c004b46:	1c00d537          	lui	a0,0x1c00d
1c004b4a:	b8050513          	addi	a0,a0,-1152 # 1c00cb80 <__clz_tab+0x168>
1c004b4e:	c642                	sw	a6,12(sp)
1c004b50:	c846                	sw	a7,16(sp)
1c004b52:	241060ef          	jal	ra,1c00b592 <puts>
1c004b56:	4832                	lw	a6,12(sp)
1c004b58:	48c2                	lw	a7,16(sp)
1c004b5a:	b879                	j	1c0043f8 <network_run_cluster+0x164>
1c004b5c:	2089f803          	p.lw	a6,s0(s3)
1c004b60:	360b8e63          	beqz	s7,1c004edc <network_run_cluster+0xc48>
1c004b64:	410484b3          	sub	s1,s1,a6
1c004b68:	1c00e5b7          	lui	a1,0x1c00e
1c004b6c:	8e95a223          	sw	s1,-1820(a1) # 1c00d8e4 <bypass_activations>
1c004b70:	5e32                	lw	t3,44(sp)
1c004b72:	1c00e6b7          	lui	a3,0x1c00e
1c004b76:	8e46a603          	lw	a2,-1820(a3) # 1c00d8e4 <bypass_activations>
1c004b7a:	1e7d                	addi	t3,t3,-1
1c004b7c:	d672                	sw	t3,44(sp)
1c004b7e:	55b2                	lw	a1,44(sp)
1c004b80:	1c00de37          	lui	t3,0x1c00d
1c004b84:	4f8e0e13          	addi	t3,t3,1272 # 1c00d4f8 <_bss_start>
1c004b88:	00259893          	slli	a7,a1,0x2
1c004b8c:	211e7583          	p.lw	a1,a7(t3)
1c004b90:	5512                	lw	a0,36(sp)
1c004b92:	1b1c                	addi	a5,sp,432
1c004b94:	86c2                	mv	a3,a6
1c004b96:	4705                	li	a4,1
1c004b98:	c642                	sw	a6,12(sp)
1c004b9a:	c846                	sw	a7,16(sp)
1c004b9c:	cc72                	sw	t3,24(sp)
1c004b9e:	565020ef          	jal	ra,1c007902 <pi_cl_ram_copy>
1c004ba2:	24c14783          	lbu	a5,588(sp)
1c004ba6:	4832                	lw	a6,12(sp)
1c004ba8:	48c2                	lw	a7,16(sp)
1c004baa:	0ff7f793          	andi	a5,a5,255
1c004bae:	4e62                	lw	t3,24(sp)
1c004bb0:	ef99                	bnez	a5,1c004bce <network_run_cluster+0x93a>
1c004bb2:	4689                	li	a3,2
1c004bb4:	00204737          	lui	a4,0x204
1c004bb8:	00d72423          	sw	a3,8(a4) # 204008 <__L2+0x184008>
1c004bbc:	03c76783          	p.elw	a5,60(a4)
1c004bc0:	00d72223          	sw	a3,4(a4)
1c004bc4:	24c14783          	lbu	a5,588(sp)
1c004bc8:	0ff7f793          	andi	a5,a5,255
1c004bcc:	d7f5                	beqz	a5,1c004bb8 <network_run_cluster+0x924>
1c004bce:	211e7583          	p.lw	a1,a7(t3)
1c004bd2:	5512                	lw	a0,36(sp)
1c004bd4:	1894                	addi	a3,sp,112
1c004bd6:	8642                	mv	a2,a6
1c004bd8:	5a3020ef          	jal	ra,1c00797a <pi_cl_ram_free>
1c004bdc:	10014783          	lbu	a5,256(sp)
1c004be0:	0ff7f793          	andi	a5,a5,255
1c004be4:	a2079ae3          	bnez	a5,1c004618 <network_run_cluster+0x384>
1c004be8:	4689                	li	a3,2
1c004bea:	00204737          	lui	a4,0x204
1c004bee:	00d72423          	sw	a3,8(a4) # 204008 <__L2+0x184008>
1c004bf2:	03c76783          	p.elw	a5,60(a4)
1c004bf6:	00d72223          	sw	a3,4(a4)
1c004bfa:	10014783          	lbu	a5,256(sp)
1c004bfe:	0ff7f793          	andi	a5,a5,255
1c004c02:	d7f5                	beqz	a5,1c004bee <network_run_cluster+0x95a>
1c004c04:	bc11                	j	1c004618 <network_run_cluster+0x384>
1c004c06:	4705                	li	a4,1
1c004c08:	002047b7          	lui	a5,0x204
1c004c0c:	08e7a223          	sw	a4,132(a5) # 204084 <__L2+0x184084>
1c004c10:	20078993          	addi	s3,a5,512
1c004c14:	00e9a023          	sw	a4,0(s3)
1c004c18:	00e9a623          	sw	a4,12(s3)
1c004c1c:	1c004737          	lui	a4,0x1c004
1c004c20:	0de70713          	addi	a4,a4,222 # 1c0040de <Pooling1>
1c004c24:	08e7a023          	sw	a4,128(a5)
1c004c28:	0088                	addi	a0,sp,64
1c004c2a:	08a7a023          	sw	a0,128(a5)
1c004c2e:	cb0ff0ef          	jal	ra,1c0040de <Pooling1>
1c004c32:	01c9e783          	p.elw	a5,28(s3)
1c004c36:	45f6                	lw	a1,92(sp)
1c004c38:	b8f1                	j	1c004514 <network_run_cluster+0x280>
1c004c3a:	4705                	li	a4,1
1c004c3c:	002047b7          	lui	a5,0x204
1c004c40:	08e7a223          	sw	a4,132(a5) # 204084 <__L2+0x184084>
1c004c44:	20078993          	addi	s3,a5,512
1c004c48:	00e9a023          	sw	a4,0(s3)
1c004c4c:	00e9a623          	sw	a4,12(s3)
1c004c50:	1c003737          	lui	a4,0x1c003
1c004c54:	03c70713          	addi	a4,a4,60 # 1c00303c <BNReluConvolution4>
1c004c58:	08e7a023          	sw	a4,128(a5)
1c004c5c:	0088                	addi	a0,sp,64
1c004c5e:	08a7a023          	sw	a0,128(a5)
1c004c62:	bdafe0ef          	jal	ra,1c00303c <BNReluConvolution4>
1c004c66:	01c9e783          	p.elw	a5,28(s3)
1c004c6a:	45f6                	lw	a1,92(sp)
1c004c6c:	b065                	j	1c004514 <network_run_cluster+0x280>
1c004c6e:	4705                	li	a4,1
1c004c70:	002047b7          	lui	a5,0x204
1c004c74:	08e7a223          	sw	a4,132(a5) # 204084 <__L2+0x184084>
1c004c78:	20078993          	addi	s3,a5,512
1c004c7c:	00e9a023          	sw	a4,0(s3)
1c004c80:	00e9a623          	sw	a4,12(s3)
1c004c84:	1c003737          	lui	a4,0x1c003
1c004c88:	40a70713          	addi	a4,a4,1034 # 1c00340a <BNReluConvolution7>
1c004c8c:	08e7a023          	sw	a4,128(a5)
1c004c90:	0088                	addi	a0,sp,64
1c004c92:	08a7a023          	sw	a0,128(a5)
1c004c96:	f74fe0ef          	jal	ra,1c00340a <BNReluConvolution7>
1c004c9a:	01c9e783          	p.elw	a5,28(s3)
1c004c9e:	45f6                	lw	a1,92(sp)
1c004ca0:	875ff06f          	j	1c004514 <network_run_cluster+0x280>
1c004ca4:	4705                	li	a4,1
1c004ca6:	002047b7          	lui	a5,0x204
1c004caa:	08e7a223          	sw	a4,132(a5) # 204084 <__L2+0x184084>
1c004cae:	20078993          	addi	s3,a5,512
1c004cb2:	00e9a023          	sw	a4,0(s3)
1c004cb6:	00e9a623          	sw	a4,12(s3)
1c004cba:	1c001737          	lui	a4,0x1c001
1c004cbe:	71e70713          	addi	a4,a4,1822 # 1c00171e <BNReluConvolution5>
1c004cc2:	08e7a023          	sw	a4,128(a5)
1c004cc6:	0088                	addi	a0,sp,64
1c004cc8:	08a7a023          	sw	a0,128(a5)
1c004ccc:	a53fc0ef          	jal	ra,1c00171e <BNReluConvolution5>
1c004cd0:	01c9e783          	p.elw	a5,28(s3)
1c004cd4:	45f6                	lw	a1,92(sp)
1c004cd6:	83fff06f          	j	1c004514 <network_run_cluster+0x280>
1c004cda:	4705                	li	a4,1
1c004cdc:	002047b7          	lui	a5,0x204
1c004ce0:	08e7a223          	sw	a4,132(a5) # 204084 <__L2+0x184084>
1c004ce4:	20078993          	addi	s3,a5,512
1c004ce8:	00e9a023          	sw	a4,0(s3)
1c004cec:	00e9a623          	sw	a4,12(s3)
1c004cf0:	1c002737          	lui	a4,0x1c002
1c004cf4:	c1c70713          	addi	a4,a4,-996 # 1c001c1c <BNReluConvolution6>
1c004cf8:	08e7a023          	sw	a4,128(a5)
1c004cfc:	0088                	addi	a0,sp,64
1c004cfe:	08a7a023          	sw	a0,128(a5)
1c004d02:	f1bfc0ef          	jal	ra,1c001c1c <BNReluConvolution6>
1c004d06:	01c9e783          	p.elw	a5,28(s3)
1c004d0a:	45f6                	lw	a1,92(sp)
1c004d0c:	809ff06f          	j	1c004514 <network_run_cluster+0x280>
1c004d10:	4705                	li	a4,1
1c004d12:	002047b7          	lui	a5,0x204
1c004d16:	08e7a223          	sw	a4,132(a5) # 204084 <__L2+0x184084>
1c004d1a:	20078993          	addi	s3,a5,512
1c004d1e:	00e9a023          	sw	a4,0(s3)
1c004d22:	00e9a623          	sw	a4,12(s3)
1c004d26:	1c002737          	lui	a4,0x1c002
1c004d2a:	6fc70713          	addi	a4,a4,1788 # 1c0026fc <BNReluConvolution2>
1c004d2e:	08e7a023          	sw	a4,128(a5)
1c004d32:	0088                	addi	a0,sp,64
1c004d34:	08a7a023          	sw	a0,128(a5)
1c004d38:	9c5fd0ef          	jal	ra,1c0026fc <BNReluConvolution2>
1c004d3c:	01c9e783          	p.elw	a5,28(s3)
1c004d40:	45f6                	lw	a1,92(sp)
1c004d42:	fd2ff06f          	j	1c004514 <network_run_cluster+0x280>
1c004d46:	4705                	li	a4,1
1c004d48:	002047b7          	lui	a5,0x204
1c004d4c:	08e7a223          	sw	a4,132(a5) # 204084 <__L2+0x184084>
1c004d50:	20078993          	addi	s3,a5,512
1c004d54:	00e9a023          	sw	a4,0(s3)
1c004d58:	00e9a623          	sw	a4,12(s3)
1c004d5c:	1c002737          	lui	a4,0x1c002
1c004d60:	19c70713          	addi	a4,a4,412 # 1c00219c <BNReluConvolution0>
1c004d64:	08e7a023          	sw	a4,128(a5)
1c004d68:	0088                	addi	a0,sp,64
1c004d6a:	08a7a023          	sw	a0,128(a5)
1c004d6e:	c2efd0ef          	jal	ra,1c00219c <BNReluConvolution0>
1c004d72:	01c9e783          	p.elw	a5,28(s3)
1c004d76:	45f6                	lw	a1,92(sp)
1c004d78:	f9cff06f          	j	1c004514 <network_run_cluster+0x280>
1c004d7c:	1c00eb37          	lui	s6,0x1c00e
1c004d80:	67f9                	lui	a5,0x1e
1c004d82:	8dcb2a23          	sw	t3,-1836(s6) # 1c00d8d4 <L2_output>
1c004d86:	9e3e                	add	t3,t3,a5
1c004d88:	ce72                	sw	t3,28(sp)
1c004d8a:	d8eff06f          	j	1c004318 <network_run_cluster+0x84>
1c004d8e:	1c00d537          	lui	a0,0x1c00d
1c004d92:	c8050513          	addi	a0,a0,-896 # 1c00cc80 <__clz_tab+0x268>
1c004d96:	7fc060ef          	jal	ra,1c00b592 <puts>
1c004d9a:	b155                	j	1c004a3e <network_run_cluster+0x7aa>
1c004d9c:	4e72                	lw	t3,28(sp)
1c004d9e:	1c00d637          	lui	a2,0x1c00d
1c004da2:	89060613          	addi	a2,a2,-1904 # 1c00c890 <allocate_layer>
1c004da6:	20867703          	p.lw	a4,s0(a2)
1c004daa:	8dcd2c23          	sw	t3,-1832(s10)
1c004dae:	9e3e                	add	t3,t3,a5
1c004db0:	ce72                	sw	t3,28(sp)
1c004db2:	8e1737e3          	p.bneimm	a4,1,1c0046a0 <network_run_cluster+0x40c>
1c004db6:	06ca8693          	addi	a3,s5,108
1c004dba:	2086f783          	p.lw	a5,s0(a3)
1c004dbe:	4e72                	lw	t3,28(sp)
1c004dc0:	1c00e737          	lui	a4,0x1c00e
1c004dc4:	8dc72823          	sw	t3,-1840(a4) # 1c00d8d0 <L2_weights>
1c004dc8:	9e3e                	add	t3,t3,a5
1c004dca:	ce72                	sw	t3,28(sp)
1c004dcc:	b1d9                	j	1c004a92 <network_run_cluster+0x7fe>
1c004dce:	4e72                	lw	t3,28(sp)
1c004dd0:	2089f983          	p.lw	s3,s0(s3)
1c004dd4:	4b85                	li	s7,1
1c004dd6:	413e0e33          	sub	t3,t3,s3
1c004dda:	ce72                	sw	t3,28(sp)
1c004ddc:	b069                	j	1c004666 <network_run_cluster+0x3d2>
1c004dde:	6791                	lui	a5,0x4
1c004de0:	1c00ed37          	lui	s10,0x1c00e
1c004de4:	c0078793          	addi	a5,a5,-1024 # 3c00 <__rt_stack_size+0x3400>
1c004de8:	8dcd2c23          	sw	t3,-1832(s10) # 1c00d8d8 <L2_input>
1c004dec:	9e3e                	add	t3,t3,a5
1c004dee:	ce72                	sw	t3,28(sp)
1c004df0:	d1cff06f          	j	1c00430c <network_run_cluster+0x78>
1c004df4:	1c00d537          	lui	a0,0x1c00d
1c004df8:	4581                	li	a1,0
1c004dfa:	b6050513          	addi	a0,a0,-1184 # 1c00cb60 <__clz_tab+0x148>
1c004dfe:	12b060ef          	jal	ra,1c00b728 <printf>
1c004e02:	8d8d2703          	lw	a4,-1832(s10)
1c004e06:	6791                	lui	a5,0x4
1c004e08:	4581                	li	a1,0
1c004e0a:	c0078793          	addi	a5,a5,-1024 # 3c00 <__rt_stack_size+0x3400>
1c004e0e:	0047c0fb          	lp.setup	x1,a5,1c004e16 <network_run_cluster+0xb82>
1c004e12:	0017468b          	p.lbu	a3,1(a4!)
1c004e16:	95b6                	add	a1,a1,a3
1c004e18:	001de637          	lui	a2,0x1de
1c004e1c:	c5160613          	addi	a2,a2,-943 # 1ddc51 <__L2+0x15dc51>
1c004e20:	0cc58b63          	beq	a1,a2,1c004ef6 <network_run_cluster+0xc62>
1c004e24:	1c00d537          	lui	a0,0x1c00d
1c004e28:	b9c50513          	addi	a0,a0,-1124 # 1c00cb9c <__clz_tab+0x184>
1c004e2c:	0fd060ef          	jal	ra,1c00b728 <printf>
1c004e30:	1c00ee37          	lui	t3,0x1c00e
1c004e34:	8d0e2703          	lw	a4,-1840(t3) # 1c00d8d0 <L2_weights>
1c004e38:	4581                	li	a1,0
1c004e3a:	520250fb          	lp.setupi	x1,1312,1c004e42 <network_run_cluster+0xbae>
1c004e3e:	0017468b          	p.lbu	a3,1(a4!)
1c004e42:	95b6                	add	a1,a1,a3
1c004e44:	00022637          	lui	a2,0x22
1c004e48:	a5e60613          	addi	a2,a2,-1442 # 21a5e <__L1Cl+0x11a5e>
1c004e4c:	cec596e3          	bne	a1,a2,1c004b38 <network_run_cluster+0x8a4>
1c004e50:	1c00d537          	lui	a0,0x1c00d
1c004e54:	bc850513          	addi	a0,a0,-1080 # 1c00cbc8 <__clz_tab+0x1b0>
1c004e58:	73a060ef          	jal	ra,1c00b592 <puts>
1c004e5c:	dacff06f          	j	1c004408 <network_run_cluster+0x174>
1c004e60:	8ccca583          	lw	a1,-1844(s9)
1c004e64:	0016e637          	lui	a2,0x16e
1c004e68:	5512                	lw	a0,36(sp)
1c004e6a:	36060613          	addi	a2,a2,864 # 16e360 <__L2+0xee360>
1c004e6e:	40660633          	sub	a2,a2,t1
1c004e72:	959a                	add	a1,a1,t1
1c004e74:	1894                	addi	a3,sp,112
1c004e76:	ca1a                	sw	t1,20(sp)
1c004e78:	c642                	sw	a6,12(sp)
1c004e7a:	c846                	sw	a7,16(sp)
1c004e7c:	2ff020ef          	jal	ra,1c00797a <pi_cl_ram_free>
1c004e80:	10014783          	lbu	a5,256(sp)
1c004e84:	4352                	lw	t1,20(sp)
1c004e86:	4832                	lw	a6,12(sp)
1c004e88:	0ff7f793          	andi	a5,a5,255
1c004e8c:	48c2                	lw	a7,16(sp)
1c004e8e:	ef99                	bnez	a5,1c004eac <network_run_cluster+0xc18>
1c004e90:	4689                	li	a3,2
1c004e92:	00204737          	lui	a4,0x204
1c004e96:	00d72423          	sw	a3,8(a4) # 204008 <__L2+0x184008>
1c004e9a:	03c76783          	p.elw	a5,60(a4)
1c004e9e:	00d72223          	sw	a3,4(a4)
1c004ea2:	10014783          	lbu	a5,256(sp)
1c004ea6:	0ff7f793          	andi	a5,a5,255
1c004eaa:	d7f5                	beqz	a5,1c004e96 <network_run_cluster+0xc02>
1c004eac:	55b2                	lw	a1,44(sp)
1c004eae:	8ccca703          	lw	a4,-1844(s9)
1c004eb2:	1c00de37          	lui	t3,0x1c00d
1c004eb6:	00259793          	slli	a5,a1,0x2
1c004eba:	4f8e0e13          	addi	t3,t3,1272 # 1c00d4f8 <_bss_start>
1c004ebe:	0585                	addi	a1,a1,1
1c004ec0:	00ee67a3          	p.sw	a4,a5(t3)
1c004ec4:	d62e                	sw	a1,44(sp)
1c004ec6:	f818b563          	p.bneimm	a7,1,1c004650 <network_run_cluster+0x3bc>
1c004eca:	b055                	j	1c00476e <network_run_cluster+0x4da>
1c004ecc:	4672                	lw	a2,28(sp)
1c004ece:	40660333          	sub	t1,a2,t1
1c004ed2:	8c6d2c23          	sw	t1,-1832(s10)
1c004ed6:	9336                	add	t1,t1,a3
1c004ed8:	ce1a                	sw	t1,28(sp)
1c004eda:	b845                	j	1c00478a <network_run_cluster+0x4f6>
1c004edc:	4e72                	lw	t3,28(sp)
1c004ede:	1c00e637          	lui	a2,0x1c00e
1c004ee2:	8fc62223          	sw	t3,-1820(a2) # 1c00d8e4 <bypass_activations>
1c004ee6:	9e42                	add	t3,t3,a6
1c004ee8:	ce72                	sw	t3,28(sp)
1c004eea:	b159                	j	1c004b70 <network_run_cluster+0x8dc>
1c004eec:	06ca8693          	addi	a3,s5,108
1c004ef0:	2086f783          	p.lw	a5,s0(a3)
1c004ef4:	be51                	j	1c004a88 <network_run_cluster+0x7f4>
1c004ef6:	1c00d537          	lui	a0,0x1c00d
1c004efa:	b8050513          	addi	a0,a0,-1152 # 1c00cb80 <__clz_tab+0x168>
1c004efe:	694060ef          	jal	ra,1c00b592 <puts>
1c004f02:	b73d                	j	1c004e30 <network_run_cluster+0xb9c>

1c004f04 <_entry>:
  csrw    0x7A1, x0
1c004f04:	7a101073          	csrw	pcmr,zero
  csrr    a0, 0xF14
1c004f08:	f1402573          	csrr	a0,mhartid
  andi    a1, a0, 0x1f
1c004f0c:	01f57593          	andi	a1,a0,31
  srli    a0, a0, 5
1c004f10:	8115                	srli	a0,a0,0x5
  li      a2, ARCHI_FC_CID
1c004f12:	02000613          	li	a2,32
  bne     a0, a2, __rt_pe_start
1c004f16:	00c50463          	beq	a0,a2,1c004f1e <_entry+0x1a>
1c004f1a:	6da0706f          	j	1c00c5f4 <__cluster_text_start>
  la      t0, _bss_start
1c004f1e:	00008297          	auipc	t0,0x8
1c004f22:	5da28293          	addi	t0,t0,1498 # 1c00d4f8 <_bss_start>
  la      t1, _bss_end
1c004f26:	00009317          	auipc	t1,0x9
1c004f2a:	a3e30313          	addi	t1,t1,-1474 # 1c00d964 <_bss_end>
  sw      zero,0(t0)
1c004f2e:	0002a023          	sw	zero,0(t0)
  addi    t0, t0, 4
1c004f32:	0291                	addi	t0,t0,4
  bltu    t0, t1, 1b
1c004f34:	fe62ede3          	bltu	t0,t1,1c004f2e <_entry+0x2a>
  la   a0, __rt_fc_stack_size
1c004f38:	00008517          	auipc	a0,0x8
1c004f3c:	50c50513          	addi	a0,a0,1292 # 1c00d444 <__rt_fc_stack_size>
  lw   a0, 0(a0)
1c004f40:	4108                	lw	a0,0(a0)
  la   x2, __rt_fc_stack
1c004f42:	feffb117          	auipc	sp,0xfeffb
1c004f46:	45610113          	addi	sp,sp,1110 # 1b000398 <__rt_fc_stack>
  add  x2, x2, a0
1c004f4a:	912a                	add	sp,sp,a0
  jal  x1, __rt_init
1c004f4c:	233030ef          	jal	ra,1c00897e <__rt_init>
  addi  a0, x0, 0
1c004f50:	00000513          	li	a0,0
  addi  a1, x0, 0
1c004f54:	00000593          	li	a1,0
  la    t2, main
1c004f58:	00001397          	auipc	t2,0x1
1c004f5c:	e9438393          	addi	t2,t2,-364 # 1c005dec <main>
  jalr  x1, t2
1c004f60:	000380e7          	jalr	t2
  mv    s0, a0
1c004f64:	842a                	mv	s0,a0
  jal  x1, __rt_deinit
1c004f66:	381030ef          	jal	ra,1c008ae6 <__rt_deinit>
  mv   a0, s0
1c004f6a:	8522                	mv	a0,s0
  jal  x1, exit
1c004f6c:	6ca060ef          	jal	ra,1c00b636 <exit>

1c004f70 <_fini>:
  ret
1c004f70:	8082                	ret

1c004f72 <__rt_event_enqueue>:
  //   x10/a0: temporary register
  //   x11/a1: the event
  //   x12/a2: temporary register

  // First check if it is a normal event
  andi    x10, x11, 0x3
1c004f72:	0035f513          	andi	a0,a1,3
  bne     x10, x0, __rt_handle_special_event
1c004f76:	02051063          	bnez	a0,1c004f96 <__rt_handle_special_event>

  // Enqueue normal event
  la      x10, __rt_sched
1c004f7a:	e3ffb517          	auipc	a0,0xe3ffb
1c004f7e:	0a250513          	addi	a0,a0,162 # 1c <_l1_preload_size>
  sw      x0, RT_EVENT_T_NEXT(x11)
1c004f82:	0005a023          	sw	zero,0(a1)
  lw      x12, RT_SCHED_T_FIRST(x10)
1c004f86:	4110                	lw	a2,0(a0)
  beqz    x12, __rt_no_first
1c004f88:	c601                	beqz	a2,1c004f90 <__rt_no_first>
  lw      x12, RT_SCHED_T_LAST(x10)
1c004f8a:	4150                	lw	a2,4(a0)
  sw      x11, RT_EVENT_T_NEXT(x12)
1c004f8c:	c20c                	sw	a1,0(a2)
  j       __rt_common
1c004f8e:	a011                	j	1c004f92 <__rt_common>

1c004f90 <__rt_no_first>:

__rt_no_first:
  sw      x11, RT_SCHED_T_FIRST(x10)
1c004f90:	c10c                	sw	a1,0(a0)

1c004f92 <__rt_common>:

__rt_common:
  sw      x11, RT_SCHED_T_LAST(x10)
1c004f92:	c14c                	sw	a1,4(a0)

1c004f94 <enqueue_end>:

enqueue_end:
  jr          x9
1c004f94:	8482                	jr	s1

1c004f96 <__rt_handle_special_event>:

__rt_handle_special_event:
  li      x10, ~0x3
1c004f96:	5571                	li	a0,-4
  and     x11, x11, x10
1c004f98:	8de9                	and	a1,a1,a0
  lw      x12, PI_CALLBACK_T_ENTRY(x11)
1c004f9a:	41d0                	lw	a2,4(a1)
  lw      x10, PI_CALLBACK_T_ARG(x11)
1c004f9c:	4588                	lw	a0,8(a1)
  j       __rt_call_external_c_function
1c004f9e:	a0d9                	j	1c005064 <__rt_call_external_c_function>

1c004fa0 <__rt_bridge_enqueue_event>:
    // to enqueue an event to the FC scheduler.

    .global __rt_bridge_enqueue_event
__rt_bridge_enqueue_event:

    sw  x8, -4(sp)
1c004fa0:	fe812e23          	sw	s0,-4(sp)
    sw  x9, -8(sp)
1c004fa4:	fe912c23          	sw	s1,-8(sp)
    sw  a0, -12(sp)
1c004fa8:	fea12a23          	sw	a0,-12(sp)
    sw  a1, -16(sp)
1c004fac:	feb12823          	sw	a1,-16(sp)
    sw  a2, -20(sp)
1c004fb0:	fec12623          	sw	a2,-20(sp)

    // Everything is done from C code
    la      x12, __rt_bridge_handle_notif
1c004fb4:	00004617          	auipc	a2,0x4
1c004fb8:	eb060613          	addi	a2,a2,-336 # 1c008e64 <__rt_bridge_handle_notif>
    jal     x9, __rt_call_external_c_function
1c004fbc:	0a8004ef          	jal	s1,1c005064 <__rt_call_external_c_function>

    lw  x8, -4(sp)
1c004fc0:	ffc12403          	lw	s0,-4(sp)
    lw  x9, -8(sp)
1c004fc4:	ff812483          	lw	s1,-8(sp)
    lw  a0, -12(sp)
1c004fc8:	ff412503          	lw	a0,-12(sp)
    lw  a1, -16(sp)
1c004fcc:	ff012583          	lw	a1,-16(sp)
    lw  a2, -20(sp)
1c004fd0:	fec12603          	lw	a2,-20(sp)

    mret
1c004fd4:	30200073          	mret

1c004fd8 <__rt_remote_enqueue_event>:
    // The FC must get it and push it to the scheduler

    .global __rt_remote_enqueue_event
__rt_remote_enqueue_event:

    sw  x8, -4(sp)
1c004fd8:	fe812e23          	sw	s0,-4(sp)
    sw  x9, -8(sp)
1c004fdc:	fe912c23          	sw	s1,-8(sp)
    sw  a0, -12(sp)
1c004fe0:	fea12a23          	sw	a0,-12(sp)
    sw  a1, -16(sp)
1c004fe4:	feb12823          	sw	a1,-16(sp)
    sw  a2, -20(sp)
1c004fe8:	fec12623          	sw	a2,-20(sp)

#ifndef ARCHI_NB_CLUSTER
    li   x8, 1
1c004fec:	4405                	li	s0,1
#else
    li   x8, ARCHI_NB_CLUSTER
#endif
    la   x9, __rt_fc_cluster_data
1c004fee:	00009497          	auipc	s1,0x9
1c004ff2:	94e48493          	addi	s1,s1,-1714 # 1c00d93c <__rt_fc_cluster_data>

1c004ff6 <__rt_remote_enqueue_event_loop_cluster>:

    // Loop over the clusters to see if there is an event to push
__rt_remote_enqueue_event_loop_cluster:
    lw   a1, RT_FC_CLUSTER_DATA_T_EVENTS(x9)
1c004ff6:	40cc                	lw	a1,4(s1)
    beq  a1, x0, __rt_remote_enqueue_event_loop_cluster_continue
1c004ff8:	02058d63          	beqz	a1,1c005032 <__rt_remote_enqueue_event_loop_cluster_continue>

    // Everytime a task is finished, first check if we can update the queue head
    // as it is not updated by cluster side to avoid race conditions.
    // At least this task won t be there anymore after we update, and maybe even
    // more tasks, which is not an issue, as we compare against the head.
    lw   a1, RT_FC_CLUSTER_DATA_T_CLUSTER_POOL(x9)
1c004ffc:	48cc                	lw	a1,20(s1)
    lw   a0, RT_CLUSTER_CALL_POOL_T_FIRST_CALL_FC(a1)
1c004ffe:	41c8                	lw	a0,4(a1)

    beq  a0, x0, __rt_cluster_pool_update_end
1c005000:	00050e63          	beqz	a0,1c00501c <__rt_cluster_pool_update_end>

1c005004 <__rt_cluster_pool_update_loop>:

__rt_cluster_pool_update_loop:
    lw    a2, RT_CLUSTER_TASK_PENDING(a0)
1c005004:	5150                	lw	a2,36(a0)
    bnez  a2, __rt_cluster_pool_update_loop_end
1c005006:	e219                	bnez	a2,1c00500c <__rt_cluster_pool_update_loop_end>

    lw   a0, RT_CLUSTER_TASK_NEXT(a0)
1c005008:	5108                	lw	a0,32(a0)
    bnez a0, __rt_cluster_pool_update_loop
1c00500a:	fd6d                	bnez	a0,1c005004 <__rt_cluster_pool_update_loop>

1c00500c <__rt_cluster_pool_update_loop_end>:


__rt_cluster_pool_update_loop_end:
    
    beqz a0, __rt_cluster_pool_update_no_current
1c00500c:	c501                	beqz	a0,1c005014 <__rt_cluster_pool_update_no_current>

    lw   a0, RT_CLUSTER_TASK_NEXT(a0)
1c00500e:	5108                	lw	a0,32(a0)
    sw   a0, RT_CLUSTER_CALL_POOL_T_FIRST_CALL_FC(a1)
1c005010:	c1c8                	sw	a0,4(a1)

    j    __rt_cluster_pool_update_end
1c005012:	a029                	j	1c00501c <__rt_cluster_pool_update_end>

1c005014 <__rt_cluster_pool_update_no_current>:

__rt_cluster_pool_update_no_current:

    sw   x0, RT_CLUSTER_CALL_POOL_T_FIRST_CALL_FC(a1)
1c005014:	0005a223          	sw	zero,4(a1)
    sw   x0, RT_CLUSTER_CALL_POOL_T_FIRST_LAST_FC(a1)
1c005018:	0005a423          	sw	zero,8(a1)

1c00501c <__rt_cluster_pool_update_end>:




__rt_cluster_pool_update_end:
    lw   a1, RT_FC_CLUSTER_DATA_T_EVENTS(x9)
1c00501c:	40cc                	lw	a1,4(s1)

    lw   a2, RT_FC_CLUSTER_DATA_T_TRIG_ADDR(x9)
1c00501e:	4890                	lw	a2,16(s1)
    sw   x0, RT_FC_CLUSTER_DATA_T_EVENTS(x9)
1c005020:	0004a223          	sw	zero,4(s1)

    sw   x0, 0(a2)
1c005024:	00062023          	sw	zero,0(a2)

    la   x9, __rt_remote_enqueue_event_loop_cluster_continue
1c005028:	00000497          	auipc	s1,0x0
1c00502c:	00a48493          	addi	s1,s1,10 # 1c005032 <__rt_remote_enqueue_event_loop_cluster_continue>
    j    __rt_event_enqueue
1c005030:	b789                	j	1c004f72 <__rt_event_enqueue>

1c005032 <__rt_remote_enqueue_event_loop_cluster_continue>:

__rt_remote_enqueue_event_loop_cluster_continue:
    addi x8, x8, -1
1c005032:	147d                	addi	s0,s0,-1
    bgt  x8, x0, __rt_remote_enqueue_event_loop_next_cluster
1c005034:	00804e63          	bgtz	s0,1c005050 <__rt_remote_enqueue_event_loop_next_cluster>



    lw  x8, -4(sp)
1c005038:	ffc12403          	lw	s0,-4(sp)
    lw  x9, -8(sp)
1c00503c:	ff812483          	lw	s1,-8(sp)
    lw  a0, -12(sp)
1c005040:	ff412503          	lw	a0,-12(sp)
    lw  a1, -16(sp)
1c005044:	ff012583          	lw	a1,-16(sp)
    lw  a2, -20(sp)
1c005048:	fec12603          	lw	a2,-20(sp)

    mret
1c00504c:	30200073          	mret

1c005050 <__rt_remote_enqueue_event_loop_next_cluster>:

__rt_remote_enqueue_event_loop_next_cluster:
    la   x9, __rt_fc_cluster_data
1c005050:	00009497          	auipc	s1,0x9
1c005054:	8ec48493          	addi	s1,s1,-1812 # 1c00d93c <__rt_fc_cluster_data>
    li   a1, RT_FC_CLUSTER_DATA_T_SIZEOF
1c005058:	02800593          	li	a1,40
    mul  a1, x8, a1
1c00505c:	02b405b3          	mul	a1,s0,a1
    add  x9, x9, a1
1c005060:	94ae                	add	s1,s1,a1
    j __rt_remote_enqueue_event_loop_cluster
1c005062:	bf51                	j	1c004ff6 <__rt_remote_enqueue_event_loop_cluster>

1c005064 <__rt_call_external_c_function>:
#endif

  .global __rt_call_external_c_function
__rt_call_external_c_function:

    add  sp, sp, -128
1c005064:	7119                	addi	sp,sp,-128

    sw   ra, 0x00(sp)
1c005066:	c006                	sw	ra,0(sp)
    sw   gp, 0x04(sp)
1c005068:	c20e                	sw	gp,4(sp)
    sw   tp, 0x08(sp)
1c00506a:	c412                	sw	tp,8(sp)
    sw   t0, 0x0C(sp)
1c00506c:	c616                	sw	t0,12(sp)
    sw   t1, 0x10(sp)
1c00506e:	c81a                	sw	t1,16(sp)
    sw   t2, 0x14(sp)
1c005070:	ca1e                	sw	t2,20(sp)
    sw   a3, 0x24(sp)
1c005072:	d236                	sw	a3,36(sp)
    sw   a4, 0x28(sp)
1c005074:	d43a                	sw	a4,40(sp)
    sw   a5, 0x2C(sp)
1c005076:	d63e                	sw	a5,44(sp)
    sw   a6, 0x30(sp)
1c005078:	d842                	sw	a6,48(sp)
    sw   a7, 0x34(sp)
1c00507a:	da46                	sw	a7,52(sp)
    sw   t3, 0x38(sp)
1c00507c:	dc72                	sw	t3,56(sp)
    sw   t4, 0x3C(sp)
1c00507e:	de76                	sw	t4,60(sp)
    sw   t5, 0x40(sp)
1c005080:	c0fa                	sw	t5,64(sp)
    sw   t6, 0x4C(sp)
1c005082:	c6fe                	sw	t6,76(sp)

    jalr ra, a2
1c005084:	000600e7          	jalr	a2

    lw   ra, 0x00(sp)
1c005088:	4082                	lw	ra,0(sp)
    lw   gp, 0x04(sp)
1c00508a:	4192                	lw	gp,4(sp)
    lw   tp, 0x08(sp)
1c00508c:	4222                	lw	tp,8(sp)
    lw   t0, 0x0C(sp)
1c00508e:	42b2                	lw	t0,12(sp)
    lw   t1, 0x10(sp)
1c005090:	4342                	lw	t1,16(sp)
    lw   t2, 0x14(sp)
1c005092:	43d2                	lw	t2,20(sp)
    lw   a3, 0x24(sp)
1c005094:	5692                	lw	a3,36(sp)
    lw   a4, 0x28(sp)
1c005096:	5722                	lw	a4,40(sp)
    lw   a5, 0x2C(sp)
1c005098:	57b2                	lw	a5,44(sp)
    lw   a6, 0x30(sp)
1c00509a:	5842                	lw	a6,48(sp)
    lw   a7, 0x34(sp)
1c00509c:	58d2                	lw	a7,52(sp)
    lw   t3, 0x38(sp)
1c00509e:	5e62                	lw	t3,56(sp)
    lw   t4, 0x3C(sp)
1c0050a0:	5ef2                	lw	t4,60(sp)
    lw   t5, 0x40(sp)
1c0050a2:	4f06                	lw	t5,64(sp)
    lw   t6, 0x4C(sp)
1c0050a4:	4fb6                	lw	t6,76(sp)

    add  sp, sp, 128
1c0050a6:	6109                	addi	sp,sp,128

    jr   x9
1c0050a8:	8482                	jr	s1

1c0050aa <__rt_illegal_instr>:

  .section .text
  
    .global __rt_illegal_instr
__rt_illegal_instr:
    sw   ra, -4(sp)
1c0050aa:	fe112e23          	sw	ra,-4(sp)
    sw   a0, -8(sp)
1c0050ae:	fea12c23          	sw	a0,-8(sp)
    la   a0, __rt_handle_illegal_instr
1c0050b2:	00004517          	auipc	a0,0x4
1c0050b6:	aae50513          	addi	a0,a0,-1362 # 1c008b60 <__rt_handle_illegal_instr>
    jal  ra, __rt_call_c_function
1c0050ba:	010000ef          	jal	ra,1c0050ca <__rt_call_c_function>
    lw   ra, -4(sp)
1c0050be:	ffc12083          	lw	ra,-4(sp)
    lw   a0, -8(sp)
1c0050c2:	ff812503          	lw	a0,-8(sp)
#if PULP_CORE == CORE_RISCV_V4
    mret
1c0050c6:	30200073          	mret

1c0050ca <__rt_call_c_function>:
#endif


__rt_call_c_function:

    add  sp, sp, -128
1c0050ca:	7119                	addi	sp,sp,-128

    sw   ra, 0x00(sp)
1c0050cc:	c006                	sw	ra,0(sp)
    sw   gp, 0x04(sp)
1c0050ce:	c20e                	sw	gp,4(sp)
    sw   tp, 0x08(sp)
1c0050d0:	c412                	sw	tp,8(sp)
    sw   t0, 0x0C(sp)
1c0050d2:	c616                	sw	t0,12(sp)
    sw   t1, 0x10(sp)
1c0050d4:	c81a                	sw	t1,16(sp)
    sw   t2, 0x14(sp)
1c0050d6:	ca1e                	sw	t2,20(sp)
    sw   a1, 0x1C(sp)
1c0050d8:	ce2e                	sw	a1,28(sp)
    sw   a2, 0x20(sp)
1c0050da:	d032                	sw	a2,32(sp)
    sw   a3, 0x24(sp)
1c0050dc:	d236                	sw	a3,36(sp)
    sw   a4, 0x28(sp)
1c0050de:	d43a                	sw	a4,40(sp)
    sw   a5, 0x2C(sp)
1c0050e0:	d63e                	sw	a5,44(sp)
    sw   a6, 0x30(sp)
1c0050e2:	d842                	sw	a6,48(sp)
    sw   a7, 0x34(sp)
1c0050e4:	da46                	sw	a7,52(sp)
    sw   t3, 0x38(sp)
1c0050e6:	dc72                	sw	t3,56(sp)
    sw   t4, 0x3C(sp)
1c0050e8:	de76                	sw	t4,60(sp)
    sw   t5, 0x40(sp)
1c0050ea:	c0fa                	sw	t5,64(sp)
    sw   t6, 0x4C(sp)
1c0050ec:	c6fe                	sw	t6,76(sp)

    jalr ra, a0
1c0050ee:	000500e7          	jalr	a0

    lw   ra, 0x00(sp)
1c0050f2:	4082                	lw	ra,0(sp)
    lw   gp, 0x04(sp)
1c0050f4:	4192                	lw	gp,4(sp)
    lw   tp, 0x08(sp)
1c0050f6:	4222                	lw	tp,8(sp)
    lw   t0, 0x0C(sp)
1c0050f8:	42b2                	lw	t0,12(sp)
    lw   t1, 0x10(sp)
1c0050fa:	4342                	lw	t1,16(sp)
    lw   t2, 0x14(sp)
1c0050fc:	43d2                	lw	t2,20(sp)
    lw   a1, 0x1C(sp)
1c0050fe:	45f2                	lw	a1,28(sp)
    lw   a2, 0x20(sp)
1c005100:	5602                	lw	a2,32(sp)
    lw   a3, 0x24(sp)
1c005102:	5692                	lw	a3,36(sp)
    lw   a4, 0x28(sp)
1c005104:	5722                	lw	a4,40(sp)
    lw   a5, 0x2C(sp)
1c005106:	57b2                	lw	a5,44(sp)
    lw   a6, 0x30(sp)
1c005108:	5842                	lw	a6,48(sp)
    lw   a7, 0x34(sp)
1c00510a:	58d2                	lw	a7,52(sp)
    lw   t3, 0x38(sp)
1c00510c:	5e62                	lw	t3,56(sp)
    lw   t4, 0x3C(sp)
1c00510e:	5ef2                	lw	t4,60(sp)
    lw   t5, 0x40(sp)
1c005110:	4f06                	lw	t5,64(sp)
    lw   t6, 0x4C(sp)
1c005112:	4fb6                	lw	t6,76(sp)

    add  sp, sp, 128
1c005114:	6109                	addi	sp,sp,128

    jr   ra
1c005116:	8082                	ret

1c005118 <udma_event_handler>:

  .global udma_event_handler
udma_event_handler:

  // Dequeue the transfer which have just finished and mark it as done
  lw   x8, RT_PERIPH_CHANNEL_T_FIRST(x9)
1c005118:	4080                	lw	s0,0(s1)
  lw   x11, RT_PERIPH_CHANNEL_T_FIRST_TO_ENQUEUE(x9)   // This is used later on, just put here to fill the slot
1c00511a:	448c                	lw	a1,8(s1)
  beq  x8, x0, __rt_udma_no_copy                       // Special case where there is no copy, just register the event in the bitfield
1c00511c:	08040f63          	beqz	s0,1c0051ba <__rt_udma_no_copy>
  lw   x12, RT_PERIPH_COPY_T_REPEAT(x8)
1c005120:	4c50                	lw	a2,28(s0)
  lw   x10, RT_PERIPH_COPY_T_NEXT(x8)
1c005122:	4848                	lw	a0,20(s0)
  bne  x12, x0, repeat_transfer
1c005124:	04061f63          	bnez	a2,1c005182 <dmaCmd>
  sw   x10, RT_PERIPH_CHANNEL_T_FIRST(x9)
1c005128:	c088                	sw	a0,0(s1)
  
  // Handle any special end-of-transfer control
  lw       x10, RT_PERIPH_COPY_T_CTRL(x8)
1c00512a:	4448                	lw	a0,12(s0)
  bnez     x10, handle_special_end
1c00512c:	e15d                	bnez	a0,1c0051d2 <handle_special_end>

1c00512e <resume_after_special_end>:
resume_after_special_end:


  // Now check if there are some transfers enqueued in the SW FIFO to be enqueued to the UDMA
  beq x11, x0, checkTask
1c00512e:	02058f63          	beqz	a1,1c00516c <checkTask>

  // x9 contains the pointer to the channel and x11 the first copy

  // Update the FIFO pointers and just copy from node to UDMA
  lw  x12, RT_PERIPH_COPY_T_ENQUEUE_CALLBACK(x11)
1c005132:	4990                	lw	a2,16(a1)
  lw  x10, RT_PERIPH_COPY_T_NEXT(x11)
1c005134:	49c8                	lw	a0,20(a1)
  beqz x12, __rt_udma_call_enqueue_callback_resume
1c005136:	c611                	beqz	a2,1c005142 <__rt_udma_call_enqueue_callback_resume>

  la  x9, __rt_udma_call_enqueue_callback_resume
1c005138:	00000497          	auipc	s1,0x0
1c00513c:	00a48493          	addi	s1,s1,10 # 1c005142 <__rt_udma_call_enqueue_callback_resume>
  jr  x12
1c005140:	8602                	jr	a2

1c005142 <__rt_udma_call_enqueue_callback_resume>:

__rt_udma_call_enqueue_callback_resume:
  lw  x12, RT_PERIPH_CHANNEL_T_BASE(x9)
1c005142:	44d0                	lw	a2,12(s1)
  sw  x10, RT_PERIPH_CHANNEL_T_FIRST_TO_ENQUEUE(x9)
1c005144:	c488                	sw	a0,8(s1)
  lw  x10, RT_PERIPH_COPY_T_ADDR(x11)
1c005146:	4188                	lw	a0,0(a1)
  lw  x9, RT_PERIPH_COPY_T_SIZE(x11)
1c005148:	41c4                	lw	s1,4(a1)
  sw  x10, UDMA_CHANNEL_SADDR_OFFSET(x12)
1c00514a:	c208                	sw	a0,0(a2)
  sw  x9, UDMA_CHANNEL_SIZE_OFFSET(x12)
1c00514c:	c244                	sw	s1,4(a2)

  lw  x9, RT_PERIPH_COPY_T_CTRL(x11)
1c00514e:	45c4                	lw	s1,12(a1)
  andi x9, x9, (1<<RT_PERIPH_COPY_CTRL_TYPE_WIDTH)-1
1c005150:	88bd                	andi	s1,s1,15
  li  x10, RT_PERIPH_COPY_SPECIAL_ENQUEUE_THRESHOLD
1c005152:	4515                	li	a0,5
  blt x9, x10, transfer_resume
1c005154:	00a4ca63          	blt	s1,a0,1c005168 <transfer_resume>
  li          x10, RT_PERIPH_COPY_HYPER
  beq         x9, x10, hyper
  li          x10, RT_PERIPH_COPY_FC_TCDM
  beq         x9, x10, fc_tcdm
#else
  p.beqimm      x9, RT_PERIPH_COPY_HYPER, hyper
1c005158:	0064a463          	p.beqimm	s1,6,1c005160 <dual>
  p.beqimm      x9, RT_PERIPH_COPY_FC_TCDM, fc_tcdm
1c00515c:	0074a263          	p.beqimm	s1,7,1c005160 <dual>

1c005160 <dual>:
#ifdef RV_ISA_RV32
  li    x10, ~(1<<UDMA_CHANNEL_SIZE_LOG2)
  and   x9, x12, x10
  lw    x10, RT_PERIPH_COPY_T_HYPER_ADDR(x11)
#else
  lw    x10, RT_PERIPH_COPY_T_HYPER_ADDR(x11)
1c005160:	51c8                	lw	a0,36(a1)
  p.bclr  x9, x12, 0, UDMA_CHANNEL_SIZE_LOG2
1c005162:	c04634b3          	p.bclr	s1,a2,0,4
#endif
  sw    x10, HYPER_EXT_ADDR_CHANNEL_CUSTOM_OFFSET(x9)
1c005166:	d088                	sw	a0,32(s1)

1c005168 <transfer_resume>:
#endif

transfer_resume:
  lw  x10, RT_PERIPH_COPY_T_CFG(x11)
1c005168:	4588                	lw	a0,8(a1)
  sw  x10, UDMA_CHANNEL_CFG_OFFSET(x12)
1c00516a:	c608                	sw	a0,8(a2)

1c00516c <checkTask>:

checkTask:

  // Check if we have a DMA transfer from L2 to L1   
  //lw          x10, RT_PERIPH_COPY_T_DMACMD(x8)           // Not null if we must transfer
  lw          x11, RT_PERIPH_COPY_T_EVENT(x8)             // Read this in advance to fill the slot, it is used later on in case there is no DMA command
1c00516c:	4c0c                	lw	a1,24(s0)

  //bne         x10, zero, dmaCmd
  la          x9, udma_event_handler_end
1c00516e:	00000497          	auipc	s1,0x0
1c005172:	19a48493          	addi	s1,s1,410 # 1c005308 <udma_event_handler_end>
  bne         x11, zero, __rt_event_enqueue
1c005176:	00058463          	beqz	a1,1c00517e <checkTask+0x12>
1c00517a:	df9ff06f          	j	1c004f72 <__rt_event_enqueue>

  // Loop again in case there are still events in the FIFO
  j udma_event_handler_end
1c00517e:	18a0006f          	j	1c005308 <udma_event_handler_end>

1c005182 <dmaCmd>:
//   x12 : number of bytes to repeat
repeat_transfer:

#ifdef ARCHI_UDMA_HAS_HYPER

  lw      x11, RT_PERIPH_CHANNEL_T_BASE(x9)
1c005182:	44cc                	lw	a1,12(s1)
#ifdef RV_ISA_RV32
  li      x10, ~(1<<UDMA_CHANNEL_SIZE_LOG2)
  and     x9, x11, x10
  lw      x10, RT_PERIPH_COPY_T_HYPER_ADDR(x8)
#else
  lw      x10, RT_PERIPH_COPY_T_HYPER_ADDR(x8)
1c005184:	5048                	lw	a0,36(s0)
  p.bclr  x9, x11, 0, UDMA_CHANNEL_SIZE_LOG2
1c005186:	c045b4b3          	p.bclr	s1,a1,0,4
#endif
  add     x10, x10, x12
1c00518a:	9532                	add	a0,a0,a2
  sw      x10, HYPER_EXT_ADDR_CHANNEL_CUSTOM_OFFSET(x9)
1c00518c:	d088                	sw	a0,32(s1)
  sw      x10, RT_PERIPH_COPY_T_HYPER_ADDR(x8)
1c00518e:	d048                	sw	a0,36(s0)

  lw      x10, RT_PERIPH_COPY_T_ADDR(x8)
1c005190:	4008                	lw	a0,0(s0)
  lw      x9, RT_PERIPH_COPY_T_REPEAT_SIZE(x8)
1c005192:	5004                	lw	s1,32(s0)
  add     x10, x10, x12
1c005194:	9532                	add	a0,a0,a2
  sub     x9, x9, x12
1c005196:	8c91                	sub	s1,s1,a2
  blt     x12, x9, not_last
1c005198:	00964963          	blt	a2,s1,1c0051aa <not_last>
  mv      x12, x9
1c00519c:	8626                	mv	a2,s1
  sw      x0, RT_PERIPH_COPY_T_REPEAT(x8)
1c00519e:	00042e23          	sw	zero,28(s0) # 201c <__rt_stack_size+0x181c>
  beq     x12, x0, udma_event_handler_end
1c0051a2:	00061463          	bnez	a2,1c0051aa <not_last>
1c0051a6:	1620006f          	j	1c005308 <udma_event_handler_end>

1c0051aa <not_last>:

not_last:
  sw      x10, RT_PERIPH_COPY_T_ADDR(x8)
1c0051aa:	c008                	sw	a0,0(s0)
  sw      x9, RT_PERIPH_COPY_T_REPEAT_SIZE(x8)
1c0051ac:	d004                	sw	s1,32(s0)
  sw      x10, UDMA_CHANNEL_SADDR_OFFSET(x11)
1c0051ae:	c188                	sw	a0,0(a1)
  sw      x12, UDMA_CHANNEL_SIZE_OFFSET(x11)
1c0051b0:	c1d0                	sw	a2,4(a1)

  li      x10, UDMA_CHANNEL_CFG_EN
1c0051b2:	4541                	li	a0,16
  sw      x10, UDMA_CHANNEL_CFG_OFFSET(x11)
1c0051b4:	c588                	sw	a0,8(a1)

#endif

  j           udma_event_handler_end
1c0051b6:	1520006f          	j	1c005308 <udma_event_handler_end>

1c0051ba <__rt_udma_no_copy>:




__rt_udma_no_copy:
  la      x9, __rt_socevents_status
1c0051ba:	e3ffb497          	auipc	s1,0xe3ffb
1c0051be:	0f648493          	addi	s1,s1,246 # 2b0 <__rt_socevents_status>
  lw      x8, 0(x9)
1c0051c2:	4080                	lw	s0,0(s1)
  li      x11, 1
1c0051c4:	4585                	li	a1,1
  sll     x10, x11, x10
1c0051c6:	00a59533          	sll	a0,a1,a0
  or      x8, x8, x10
1c0051ca:	8c49                	or	s0,s0,a0
  sw      x8, 0(x9)
1c0051cc:	c080                	sw	s0,0(s1)
  j udma_event_handler_end
1c0051ce:	13a0006f          	j	1c005308 <udma_event_handler_end>

1c0051d2 <handle_special_end>:
  li          x12, RT_PERIPH_COPY_I2C_STEP1
  beq         x10, x12, i2c_step1
  li          x12, RT_PERIPH_COPY_I2C_STEP2
  beq         x10, x12, i2c_step2
#else
  p.beqimm    x10, RT_PERIPH_COPY_I2C_STEP1, i2c_step1  
1c0051d2:	04352463          	p.beqimm	a0,3,1c00521a <i2c_step1>
  p.beqimm    x10, RT_PERIPH_COPY_I2C_STEP2, i2c_step2
1c0051d6:	06452063          	p.beqimm	a0,4,1c005236 <i2c_step2>
#endif

  j           resume_after_special_end
1c0051da:	bf91                	j	1c00512e <resume_after_special_end>

1c0051dc <spim_step3>:


spim_step3:
  // The current copy was enqueued to configure spi, cs and send command
  // now we need to reenqueue the same copy with the user buffer.
  lw          x10, RT_PERIPH_COPY_T_RAW_VAL1(x8)
1c0051dc:	5408                	lw	a0,40(s0)
  sw          x10, RT_PERIPH_COPY_T_CTRL(x8)
1c0051de:	c448                	sw	a0,12(s0)

  // Reenqueue the same copy to the list of pending copies as it has been removed
  lw          x10, RT_PERIPH_CHANNEL_T_FIRST(x9)
1c0051e0:	4088                	lw	a0,0(s1)
  sw          x10, RT_PERIPH_COPY_T_NEXT(x8)
1c0051e2:	c848                	sw	a0,20(s0)
  sw          x8, RT_PERIPH_CHANNEL_T_FIRST(x9)
1c0051e4:	c080                	sw	s0,0(s1)

  // And rearm the transfer in the udma
  lw          x12, RT_PERIPH_CHANNEL_T_BASE(x9)
1c0051e6:	44d0                	lw	a2,12(s1)
  lw          x10, RT_PERIPH_COPY_T_RAW_VAL2(x8)
1c0051e8:	5448                	lw	a0,44(s0)
  sw          x10, UDMA_CHANNEL_SADDR_OFFSET(x12)
1c0051ea:	c208                	sw	a0,0(a2)
  lw          x10, RT_PERIPH_COPY_T_RAW_VAL0(x8)
1c0051ec:	5048                	lw	a0,36(s0)
  sw          x10, UDMA_CHANNEL_SIZE_OFFSET(x12)
1c0051ee:	c248                	sw	a0,4(a2)
  lw          x10, RT_PERIPH_COPY_T_CFG(x8)
1c0051f0:	4408                	lw	a0,8(s0)
  sw          x10, UDMA_CHANNEL_CFG_OFFSET(x12)
1c0051f2:	c608                	sw	a0,8(a2)

  j           udma_event_handler_end
1c0051f4:	1140006f          	j	1c005308 <udma_event_handler_end>

1c0051f8 <spim_step2>:

spim_step2:
  // Now that the user data has been pushed, we must push an EOT command
  sw          x0, RT_PERIPH_COPY_T_CTRL(x8)
1c0051f8:	00042623          	sw	zero,12(s0)
  
  // Reenqueue the same copy to the list of pending copies as it has been removed
  lw          x10, RT_PERIPH_CHANNEL_T_FIRST(x9)
1c0051fc:	4088                	lw	a0,0(s1)
  sw          x10, RT_PERIPH_COPY_T_NEXT(x8)
1c0051fe:	c848                	sw	a0,20(s0)
  sw          x8, RT_PERIPH_CHANNEL_T_FIRST(x9)
1c005200:	c080                	sw	s0,0(s1)

  // And rearm the transfer in the udma
  #if PULP_CHIP_FAMILY == CHIP_GAP

  lw          x8, RT_PERIPH_COPY_T_PERIPH_DATA(x8)
1c005202:	4060                	lw	s0,68(s0)
  li          x12, SPI_CMD_EOT(0)
1c005204:	90000637          	lui	a2,0x90000
  sw          x12, 0(x8)
1c005208:	c010                	sw	a2,0(s0)
  lw          x12, RT_PERIPH_CHANNEL_T_BASE(x9)
1c00520a:	44d0                	lw	a2,12(s1)
  sw          x8, UDMA_CHANNEL_SADDR_OFFSET(x12)
1c00520c:	c200                	sw	s0,0(a2)
  addi        x10, x8, RT_PERIPH_COPY_T_PERIPH_DATA
  sw          x10, UDMA_CHANNEL_SADDR_OFFSET(x12)

  #endif

  li          x10, 4
1c00520e:	4511                	li	a0,4
  sw          x10, UDMA_CHANNEL_SIZE_OFFSET(x12)
1c005210:	c248                	sw	a0,4(a2)
  li          x10, UDMA_CHANNEL_CFG_EN
1c005212:	4541                	li	a0,16
  sw          x10, UDMA_CHANNEL_CFG_OFFSET(x12)
1c005214:	c608                	sw	a0,8(a2)

  j           udma_event_handler_end
1c005216:	0f20006f          	j	1c005308 <udma_event_handler_end>

1c00521a <i2c_step1>:
 */

i2c_step1:
  // The current copy was enqueued to configure i2c, cs and send command
  // now we need to reenqueue the same copy with the user buffer.
  lw          x10, RT_PERIPH_COPY_T_RAW_VAL1(x8)
1c00521a:	5408                	lw	a0,40(s0)
  sw          x10, RT_PERIPH_COPY_T_CTRL(x8)
1c00521c:	c448                	sw	a0,12(s0)

  // Reenqueue the same copy to the list of pending copies as it has been removed
  lw          x10, RT_PERIPH_CHANNEL_T_FIRST(x9)
1c00521e:	4088                	lw	a0,0(s1)
  sw          x10, RT_PERIPH_COPY_T_NEXT(x8)
1c005220:	c848                	sw	a0,20(s0)
  sw          x8, RT_PERIPH_CHANNEL_T_FIRST(x9)
1c005222:	c080                	sw	s0,0(s1)

  // And rearm the transfer in the udma
  lw          x12, RT_PERIPH_CHANNEL_T_BASE(x9)
1c005224:	44d0                	lw	a2,12(s1)
  lw          x10, RT_PERIPH_COPY_T_ADDR(x8)
1c005226:	4008                	lw	a0,0(s0)
  sw          x10, UDMA_CHANNEL_SADDR_OFFSET(x12)
1c005228:	c208                	sw	a0,0(a2)
  lw          x10, RT_PERIPH_COPY_T_RAW_VAL0(x8)
1c00522a:	5048                	lw	a0,36(s0)
  sw          x10, UDMA_CHANNEL_SIZE_OFFSET(x12)
1c00522c:	c248                	sw	a0,4(a2)
  lw          x10, RT_PERIPH_COPY_T_CFG(x8)
1c00522e:	4408                	lw	a0,8(s0)
  sw          x10, UDMA_CHANNEL_CFG_OFFSET(x12)
1c005230:	c608                	sw	a0,8(a2)

  j           udma_event_handler_end
1c005232:	0d60006f          	j	1c005308 <udma_event_handler_end>

1c005236 <i2c_step2>:

i2c_step2:
  // Now that the user data has been pushed, we must push a STOP command
  sw          x0, RT_PERIPH_COPY_T_CTRL(x8)
1c005236:	00042623          	sw	zero,12(s0)
  
  // Reenqueue the same copy to the list of pending copies as it has been removed
  lw          x10, RT_PERIPH_CHANNEL_T_FIRST(x9)
1c00523a:	4088                	lw	a0,0(s1)
  sw          x10, RT_PERIPH_COPY_T_NEXT(x8)
1c00523c:	c848                	sw	a0,20(s0)
  sw          x8, RT_PERIPH_CHANNEL_T_FIRST(x9)
1c00523e:	c080                	sw	s0,0(s1)

  // And rearm the transfer in the udma
  #if PULP_CHIP_FAMILY == CHIP_GAP

  lw          x8, RT_PERIPH_COPY_T_PERIPH_DATA(x8)
1c005240:	4060                	lw	s0,68(s0)
  li          x12, I2C_CMD_STOP
1c005242:	02000613          	li	a2,32
  sw          x12, 0(x8)
1c005246:	c010                	sw	a2,0(s0)
  lw          x12, RT_PERIPH_CHANNEL_T_BASE(x9)
1c005248:	44d0                	lw	a2,12(s1)
  sw          x8, UDMA_CHANNEL_SADDR_OFFSET(x12)
1c00524a:	c200                	sw	s0,0(a2)
  addi        x10, x8, RT_PERIPH_COPY_T_PERIPH_DATA
  sw          x10, UDMA_CHANNEL_SADDR_OFFSET(x12)

  #endif

  li          x10, 1
1c00524c:	4505                	li	a0,1
  sw          x10, UDMA_CHANNEL_SIZE_OFFSET(x12)
1c00524e:	c248                	sw	a0,4(a2)
  li          x10, UDMA_CHANNEL_CFG_EN
1c005250:	4541                	li	a0,16
  sw          x10, UDMA_CHANNEL_CFG_OFFSET(x12)
1c005252:	c608                	sw	a0,8(a2)

  j           udma_event_handler_end
1c005254:	0b40006f          	j	1c005308 <udma_event_handler_end>

1c005258 <__rt_fc_socevents_handler>:

  .global __rt_fc_socevents_handler
  .extern pwm_event_handler
__rt_fc_socevents_handler:
// The stack is first adjusted to have stack-based load/store compressed
  add sp, sp, -128
1c005258:	7119                	addi	sp,sp,-128
  sw  x8, 0(sp)
1c00525a:	c022                	sw	s0,0(sp)
  sw  x9, 4(sp)
1c00525c:	c226                	sw	s1,4(sp)
  sw  x10, 8(sp)
1c00525e:	c42a                	sw	a0,8(sp)
  sw  x11, 12(sp)
1c005260:	c62e                	sw	a1,12(sp)
  sw  x12, 16(sp)
1c005262:	c832                	sw	a2,16(sp)


  // Pop one element from the FIFO
  li  x8, ARCHI_EU_ADDR + EU_SOC_EVENTS_AREA_OFFSET + EU_SOC_EVENTS_CURRENT_EVENT
1c005264:	00201437          	lui	s0,0x201
1c005268:	f0040413          	addi	s0,s0,-256 # 200f00 <__L2+0x180f00>
  lw  x8, 0(x8)
1c00526c:	4000                	lw	s0,0(s0)

  // Now that we popped the element, we can clear the soc event FIFO event as the FIFO is generating
  // an event as soon as the FIFO is not empty
  li  x9, 1<<PULP_SOC_EVENTS_EVENT
1c00526e:	080004b7          	lui	s1,0x8000
  li  x10, ARCHI_EU_DEMUX_ADDR + EU_CORE_BUFFER_CLEAR
1c005272:	00204537          	lui	a0,0x204
1c005276:	02850513          	addi	a0,a0,40 # 204028 <__L2+0x184028>
  sw  x9, 0(x10)
1c00527a:	c104                	sw	s1,0(a0)
  // Due to a HW bug in the core on Gap, we have to load this value early
#ifdef CONFIG_NO_FC_TINY
  la    x12, __rt_hyper_udma_handle
  lw    x12, 0(x12)
#else
  lw    x12, %tiny(__rt_hyper_udma_handle)(x0)
1c00527c:	30802603          	lw	a2,776(zero) # 308 <__rt_hyper_udma_handle>
#endif
#endif

  // Extract ID part
  p.extractu x10, x8, EU_SOC_EVENTS_EVENT_MASK_BITS-1, EU_SOC_EVENTS_EVENT_MASK_OFFSET
1c005280:	ce041533          	p.extractu	a0,s0,7,0

#ifdef ARCHI_UDMA_HAS_HYPER
  p.bneimm x10, UDMA_EVENT_ID(ARCHI_UDMA_HYPER_ID(0)), __rt_fc_socevents_not_hyper_rx
1c005284:	00653363          	p.bneimm	a0,6,1c00528a <__rt_fc_socevents_not_hyper_rx>
  jr x12
1c005288:	8602                	jr	a2

1c00528a <__rt_fc_socevents_not_hyper_rx>:

__rt_fc_socevents_not_hyper_rx:
  p.bneimm x10, UDMA_EVENT_ID(ARCHI_UDMA_HYPER_ID(0))+1, __rt_fc_socevents_not_hyper_tx
1c00528a:	00753363          	p.bneimm	a0,7,1c005290 <__rt_fc_socevents_not_hyper_tx>
  jr x12
1c00528e:	8602                	jr	a2

1c005290 <__rt_fc_socevents_not_hyper_tx>:
#endif

__rt_fc_socevents_not_hyper_tx:

  // UDMA CHANNEL EVENTS
  li x9, ARCHI_SOC_EVENT_UDMA_NB_EVT
1c005290:	44cd                	li	s1,19
  bge x10, x9, __rt_soc_evt_no_udma_channel
1c005292:	00955c63          	ble	s1,a0,1c0052aa <__rt_soc_evt_no_udma_channel>
  andi   x8, x10, 1
  srli   x10, x10, 1
  or     x10, x10, x8
#endif

  la     x8, periph_channels
1c005296:	e3ffb417          	auipc	s0,0xe3ffb
1c00529a:	d9a40413          	addi	s0,s0,-614 # 30 <periph_channels>
  slli   x9, x10, RT_PERIPH_CHANNEL_T_SIZEOF_LOG2
1c00529e:	00551493          	slli	s1,a0,0x5
  add    x9, x9, x8
1c0052a2:	94a2                	add	s1,s1,s0

  lw   x11, RT_PERIPH_CHANNEL_T_CALLBACK(x9)
1c0052a4:	4ccc                	lw	a1,28(s1)
  lw   x8, RT_PERIPH_CHANNEL_T_FIRST(x9)
1c0052a6:	4080                	lw	s0,0(s1)

  jr   x11
1c0052a8:	8582                	jr	a1

1c0052aa <__rt_soc_evt_no_udma_channel>:


__rt_soc_evt_no_udma_channel:

  li x9, ARCHI_SOC_EVENT_UDMA_FIRST_EXTRA_EVT + ARCHI_SOC_EVENT_UDMA_NB_EXTRA_EVT
1c0052aa:	44f9                	li	s1,30
  bge x10, x9, __rt_soc_evt_no_udma
1c0052ac:	00955b63          	ble	s1,a0,1c0052c2 <__rt_soc_evt_no_udma>

  addi x8, x10, -ARCHI_SOC_EVENT_UDMA_FIRST_EXTRA_EVT
1c0052b0:	fec50413          	addi	s0,a0,-20
  slli x11, x8, 2
1c0052b4:	00241593          	slli	a1,s0,0x2
  la   x12, __rt_udma_extra_callback
  p.lw x12, x12(x11)
  la   x9, __rt_udma_extra_callback_arg
  p.lw x11, x9(x11)
#else
  lw   x12, %tiny(__rt_udma_extra_callback)(x11)
1c0052b8:	2b85a603          	lw	a2,696(a1)
  lw   x11, %tiny(__rt_udma_extra_callback_arg)(x11)
1c0052bc:	2e05a583          	lw	a1,736(a1)
#endif

  jr   x12
1c0052c0:	8602                	jr	a2

1c0052c2 <__rt_soc_evt_no_udma>:

  .global __rt_soc_evt_no_udma
__rt_soc_evt_no_udma:
#ifdef RT_CONFIG_GPIO_ENABLED
  // GPIO EVENT
  li      x9, ARCHI_SOC_EVENT_GPIO
1c0052c2:	02a00493          	li	s1,42
  beq     x10, x9, __rt_gpio_handler
1c0052c6:	00951463          	bne	a0,s1,1c0052ce <__rt_soc_evt_no_udma+0xc>
1c0052ca:	1740006f          	j	1c00543e <__rt_gpio_handler>
#endif

  li      x9, ARCHI_SOC_EVENT_RTC_IRQ
1c0052ce:	02c00493          	li	s1,44
  beq     x9, x10, rtc_event_handler
1c0052d2:	04a48363          	beq	s1,a0,1c005318 <rtc_event_handler>

1c0052d6 <__rt_soc_evt_pwm>:


// pwm event handler
//x9 : nb of event that will be used by handler
__rt_soc_evt_pwm:
  li x11, ARCHI_SOC_EVENT_ADV_TIMER_NB_EVT-1 // 3
1c0052d6:	458d                	li	a1,3
  addi x9, x11, ARCHI_SOC_EVENT_ADV_TIMER_FIRST_EVT //3+38=41
1c0052d8:	02658493          	addi	s1,a1,38
  sub x9, x9, x10 // 41 - 56
1c0052dc:	8c89                	sub	s1,s1,a0
  bgt x9, x11, __rt_soc_evt_store // if > 3 not for pwm
1c0052de:	0095c663          	blt	a1,s1,1c0052ea <__rt_soc_evt_store>
  blt x9, x0,  __rt_soc_evt_store // if > 3 not for pwm
1c0052e2:	0004c463          	bltz	s1,1c0052ea <__rt_soc_evt_store>
  j pwm_event_handler
1c0052e6:	1340006f          	j	1c00541a <pwm_event_handler>

1c0052ea <__rt_soc_evt_store>:


__rt_soc_evt_store:
  // If the event is not handled, store it in the soc event status mask
  la      x9, __rt_socevents_status
1c0052ea:	e3ffb497          	auipc	s1,0xe3ffb
1c0052ee:	fc648493          	addi	s1,s1,-58 # 2b0 <__rt_socevents_status>
  li      x11, 32
1c0052f2:	02000593          	li	a1,32
  blt     x10, x11, socevents_set
1c0052f6:	00b54463          	blt	a0,a1,1c0052fe <socevents_set>
  addi    x9, x9, 4
1c0052fa:	0491                	addi	s1,s1,4
  addi    x10, x10, -32
1c0052fc:	1501                	addi	a0,a0,-32

1c0052fe <socevents_set>:

socevents_set:
  lw      x11, 0(x9)
1c0052fe:	408c                	lw	a1,0(s1)
  p.bsetr x12, x11, x10
1c005300:	80a5c633          	p.bsetr	a2,a1,a0
  sw      x12, 0(x9)
1c005304:	c090                	sw	a2,0(s1)
  j       udma_event_handler_end
1c005306:	a009                	j	1c005308 <udma_event_handler_end>

1c005308 <udma_event_handler_end>:

  .global udma_event_handler_end
udma_event_handler_end:
  lw  x8, 0(sp)
1c005308:	4402                	lw	s0,0(sp)
  lw  x9, 4(sp)
1c00530a:	4492                	lw	s1,4(sp)
  lw  x10, 8(sp)
1c00530c:	4522                	lw	a0,8(sp)
  lw  x11, 12(sp)
1c00530e:	45b2                	lw	a1,12(sp)
  lw  x12, 16(sp)
1c005310:	4642                	lw	a2,16(sp)
  add sp, sp, 128
1c005312:	6109                	addi	sp,sp,128
  mret
1c005314:	30200073          	mret

1c005318 <rtc_event_handler>:


rtc_event_handler:
  lw    x11, __rtc_handler
1c005318:	e3ffb597          	auipc	a1,0xe3ffb
1c00531c:	0785a583          	lw	a1,120(a1) # 390 <__rtc_handler>
  la    x9, udma_event_handler_end
1c005320:	00000497          	auipc	s1,0x0
1c005324:	fe848493          	addi	s1,s1,-24 # 1c005308 <udma_event_handler_end>
  j   __rt_event_enqueue
1c005328:	c4bff06f          	j	1c004f72 <__rt_event_enqueue>

1c00532c <__rt_hyper_handle_copy>:

#ifdef CONFIG_NO_FC_TINY
  la        x8, __rt_hyper_pending_repeat
  lw    x12, 0(x8)
#else
  lw    x12, %tiny(__rt_hyper_pending_repeat)(x0)
1c00532c:	31802603          	lw	a2,792(zero) # 318 <__rt_hyper_pending_repeat>
#endif
  beqz      x12, __rt_hyper_handle_copy_end
1c005330:	c621                	beqz	a2,1c005378 <__rt_hyper_handle_copy_end>

1c005332 <__rt_hyper_repeat_copy>:

#ifdef CONFIG_NO_FC_TINY
  la        x8, __rt_hyper_pending_base
  lw        x11, 0(x8)
#else
  lw        x11, %tiny(__rt_hyper_pending_base)(x0)
1c005332:	30c02583          	lw	a1,780(zero) # 30c <__rt_hyper_pending_base>
#else
#ifdef CONFIG_NO_FC_TINY
  la        x8, __rt_hyper_pending_hyper_addr
  lw        x10, 0(x8)
#else
  lw        x10, %tiny(__rt_hyper_pending_hyper_addr)(x0)
1c005336:	31002503          	lw	a0,784(zero) # 310 <__rt_hyper_pending_hyper_addr>
#endif
  p.bclr    x9, x11, 0, UDMA_CHANNEL_SIZE_LOG2
1c00533a:	c045b4b3          	p.bclr	s1,a1,0,4
#endif
  add       x10, x10, x12
1c00533e:	9532                	add	a0,a0,a2
  sw        x10, HYPER_EXT_ADDR_CHANNEL_CUSTOM_OFFSET(x9)
1c005340:	d088                	sw	a0,32(s1)
  la        x8, __rt_hyper_pending_addr
  lw        x10, 0(x8)
  la        x8, __rt_hyper_pending_repeat_size
  lw        x9, 0(x8)
#else
  sw        x10, %tiny(__rt_hyper_pending_hyper_addr)(x0)
1c005342:	30a02823          	sw	a0,784(zero) # 310 <__rt_hyper_pending_hyper_addr>

  lw        x10, %tiny(__rt_hyper_pending_addr)(x0)
1c005346:	31402503          	lw	a0,788(zero) # 314 <__rt_hyper_pending_addr>
  lw        x9, %tiny(__rt_hyper_pending_repeat_size)(x0)
1c00534a:	31c02483          	lw	s1,796(zero) # 31c <__rt_hyper_pending_repeat_size>
#endif
  add       x10, x10, x12
1c00534e:	9532                	add	a0,a0,a2
  sub       x9, x9, x12
1c005350:	8c91                	sub	s1,s1,a2
  blt       x12, x9, __rt_hyper_repeat_copy_not_last
1c005352:	00964963          	blt	a2,s1,1c005364 <__rt_hyper_repeat_copy_not_last>
  mv        x12, x9
1c005356:	8626                	mv	a2,s1
#ifdef CONFIG_NO_FC_TINY
  la        x8, __rt_hyper_pending_repeat
  sw        x0, 0(x8)
#else
  sw        x0, %tiny(__rt_hyper_pending_repeat)(x0)
1c005358:	30002c23          	sw	zero,792(zero) # 318 <__rt_hyper_pending_repeat>
#endif
  beq       x12, x0, udma_event_handler_end
1c00535c:	00061463          	bnez	a2,1c005364 <__rt_hyper_repeat_copy_not_last>
1c005360:	fa9ff06f          	j	1c005308 <udma_event_handler_end>

1c005364 <__rt_hyper_repeat_copy_not_last>:
  la        x8, __rt_hyper_pending_addr
  sw        x10, 0(x8)
  la        x8, __rt_hyper_pending_repeat_size
  sw        x9, 0(x8)
#else
  sw        x10, %tiny(__rt_hyper_pending_addr)(x0)
1c005364:	30a02a23          	sw	a0,788(zero) # 314 <__rt_hyper_pending_addr>
  sw        x9, %tiny(__rt_hyper_pending_repeat_size)(x0)
1c005368:	30902e23          	sw	s1,796(zero) # 31c <__rt_hyper_pending_repeat_size>
#endif
  sw        x10, UDMA_CHANNEL_SADDR_OFFSET(x11)
1c00536c:	c188                	sw	a0,0(a1)
  sw        x12, UDMA_CHANNEL_SIZE_OFFSET(x11)
1c00536e:	c1d0                	sw	a2,4(a1)

  li        x10, UDMA_CHANNEL_CFG_EN
1c005370:	4541                	li	a0,16
  sw        x10, UDMA_CHANNEL_CFG_OFFSET(x11)
1c005372:	c588                	sw	a0,8(a1)

  j         udma_event_handler_end
1c005374:	f95ff06f          	j	1c005308 <udma_event_handler_end>

1c005378 <__rt_hyper_handle_copy_end>:
#ifdef CONFIG_NO_FC_TINY
  la        x8, __rt_hyper_end_task
  lw        x11, 0(x8)
  sw        x0, 0(x8)
#else
  lw        x11, %tiny(__rt_hyper_end_task)(x0)
1c005378:	32002583          	lw	a1,800(zero) # 320 <__rt_hyper_end_task>
  sw        x0, %tiny(__rt_hyper_end_task)(x0)
1c00537c:	32002023          	sw	zero,800(zero) # 320 <__rt_hyper_end_task>
#endif
  beqz      x11, __rt_hyper_handle_emu_task
1c005380:	c589                	beqz	a1,1c00538a <__rt_hyper_handle_emu_task>
#ifdef CONFIG_NO_FC_TINY
  la        x8, __rt_hyper_current_task
  sw        x0, 0(x8)
#else
  sw        x0, %tiny(__rt_hyper_current_task)(x0)
1c005382:	32002223          	sw	zero,804(zero) # 324 <__rt_hyper_current_task>
#endif
  jal       x9, __rt_event_enqueue
1c005386:	bedff4ef          	jal	s1,1c004f72 <__rt_event_enqueue>

1c00538a <__rt_hyper_handle_emu_task>:
__rt_hyper_handle_emu_task:
#ifdef CONFIG_NO_FC_TINY
  la        x8, __rt_hyper_pending_emu_task
  lw        x10, 0(x8)
#else
  lw        x10, %tiny(__rt_hyper_pending_emu_task)(x0)
1c00538a:	33c02503          	lw	a0,828(zero) # 33c <__rt_hyper_pending_emu_task>
#endif
  beqz      x10, __rt_hyper_handle_pending_tasks
1c00538e:	c919                	beqz	a0,1c0053a4 <__rt_hyper_handle_pending_tasks>

  la      x12, __rt_hyper_resume_emu_task
1c005390:	00006617          	auipc	a2,0x6
1c005394:	9f060613          	addi	a2,a2,-1552 # 1c00ad80 <__rt_hyper_resume_emu_task>
  la        x9, udma_event_handler_end
1c005398:	00000497          	auipc	s1,0x0
1c00539c:	f7048493          	addi	s1,s1,-144 # 1c005308 <udma_event_handler_end>
  j         __rt_call_external_c_function
1c0053a0:	cc5ff06f          	j	1c005064 <__rt_call_external_c_function>

1c0053a4 <__rt_hyper_handle_pending_tasks>:
__rt_hyper_handle_pending_tasks:
#ifdef CONFIG_NO_FC_TINY
  la        x8, __rt_hyper_pending_tasks
  lw        x10, 0(x8)
#else
  lw        x10, %tiny(__rt_hyper_pending_tasks)(x0)
1c0053a4:	34002503          	lw	a0,832(zero) # 340 <__rt_hyper_pending_tasks>
#endif
  beqz      x10, udma_event_handler_end
1c0053a8:	00051463          	bnez	a0,1c0053b0 <__rt_hyper_handle_pending_tasks+0xc>
1c0053ac:	f5dff06f          	j	1c005308 <udma_event_handler_end>

  la      x12, __rt_hyper_resume_copy
1c0053b0:	00006617          	auipc	a2,0x6
1c0053b4:	9d860613          	addi	a2,a2,-1576 # 1c00ad88 <__rt_hyper_resume_copy>
  la        x9, udma_event_handler_end
1c0053b8:	00000497          	auipc	s1,0x0
1c0053bc:	f5048493          	addi	s1,s1,-176 # 1c005308 <udma_event_handler_end>
  j         __rt_call_external_c_function
1c0053c0:	ca5ff06f          	j	1c005064 <__rt_call_external_c_function>

1c0053c4 <__rt_hyper_handle_burst>:
  la        x8, __rt_hyper_pending_repeat
  lw        x12, 0(x8)
  la        x8, __rt_hyper_pending_base
  lw        x11, 0(x8)
#else
  lw        x12, %tiny(__rt_hyper_pending_repeat)(x0)
1c0053c4:	31802603          	lw	a2,792(zero) # 318 <__rt_hyper_pending_repeat>

  lw        x11, %tiny(__rt_hyper_pending_base)(x0)
1c0053c8:	30c02583          	lw	a1,780(zero) # 30c <__rt_hyper_pending_base>
#else
#ifdef CONFIG_NO_FC_TINY
  la        x8, __rt_hyper_pending_hyper_addr
  lw        x10, 0(x8)
#else
  lw        x10, %tiny(__rt_hyper_pending_hyper_addr)(x0)
1c0053cc:	31002503          	lw	a0,784(zero) # 310 <__rt_hyper_pending_hyper_addr>
#endif
  p.bclr    x9, x11, 0, UDMA_CHANNEL_SIZE_LOG2
1c0053d0:	c045b4b3          	p.bclr	s1,a1,0,4
#endif
  add       x10, x10, x12
1c0053d4:	9532                	add	a0,a0,a2
  sw        x10, HYPER_EXT_ADDR_CHANNEL_CUSTOM_OFFSET(x9)
1c0053d6:	d088                	sw	a0,32(s1)
  la        x8, __rt_hyper_pending_addr
  lw        x10, 0(x8)
  la        x8, __rt_hyper_pending_repeat_size
  lw        x9, 0(x8)
#else
  sw        x10, %tiny(__rt_hyper_pending_hyper_addr)(x0)
1c0053d8:	30a02823          	sw	a0,784(zero) # 310 <__rt_hyper_pending_hyper_addr>

  lw        x10, %tiny(__rt_hyper_pending_addr)(x0)
1c0053dc:	31402503          	lw	a0,788(zero) # 314 <__rt_hyper_pending_addr>
  lw        x9, %tiny(__rt_hyper_pending_repeat_size)(x0)
1c0053e0:	31c02483          	lw	s1,796(zero) # 31c <__rt_hyper_pending_repeat_size>
#endif
  add       x10, x10, x12
1c0053e4:	9532                	add	a0,a0,a2
  sub       x9, x9, x12
1c0053e6:	8c91                	sub	s1,s1,a2
  blt       x12, x9, __rt_hyper_repeat_copy_not_last2
1c0053e8:	00964f63          	blt	a2,s1,1c005406 <__rt_hyper_repeat_copy_not_last2>

  la        x12, __rt_hyper_handle_copy
1c0053ec:	00000617          	auipc	a2,0x0
1c0053f0:	f4060613          	addi	a2,a2,-192 # 1c00532c <__rt_hyper_handle_copy>
#ifdef CONFIG_NO_FC_TINY
  la        x8, __rt_hyper_udma_handle
  sw        x12, 0(x8)
#else
  sw        x12, %tiny(__rt_hyper_udma_handle)(x0)
1c0053f4:	30c02423          	sw	a2,776(zero) # 308 <__rt_hyper_udma_handle>
#endif

  mv        x12, x9
1c0053f8:	8626                	mv	a2,s1
#ifdef CONFIG_NO_FC_TINY
  la        x8, __rt_hyper_pending_repeat
  sw        x0, 0(x8)
#else
  sw        x0, %tiny(__rt_hyper_pending_repeat)(x0)
1c0053fa:	30002c23          	sw	zero,792(zero) # 318 <__rt_hyper_pending_repeat>
#endif
  beq       x12, x0, udma_event_handler_end
1c0053fe:	00061463          	bnez	a2,1c005406 <__rt_hyper_repeat_copy_not_last2>
1c005402:	f07ff06f          	j	1c005308 <udma_event_handler_end>

1c005406 <__rt_hyper_repeat_copy_not_last2>:
  la        x8, __rt_hyper_pending_addr
  sw        x10, 0(x8)
  la        x8, __rt_hyper_pending_repeat_size
  sw        x9, 0(x8)
#else
  sw        x10, %tiny(__rt_hyper_pending_addr)(x0)
1c005406:	30a02a23          	sw	a0,788(zero) # 314 <__rt_hyper_pending_addr>
  sw        x9, %tiny(__rt_hyper_pending_repeat_size)(x0)
1c00540a:	30902e23          	sw	s1,796(zero) # 31c <__rt_hyper_pending_repeat_size>
#endif
  sw        x10, UDMA_CHANNEL_SADDR_OFFSET(x11)
1c00540e:	c188                	sw	a0,0(a1)
  sw        x12, UDMA_CHANNEL_SIZE_OFFSET(x11)
1c005410:	c1d0                	sw	a2,4(a1)

  li        x10, UDMA_CHANNEL_CFG_EN
1c005412:	4541                	li	a0,16
  sw        x10, UDMA_CHANNEL_CFG_OFFSET(x11)
1c005414:	c588                	sw	a0,8(a1)

  j         udma_event_handler_end
1c005416:	ef3ff06f          	j	1c005308 <udma_event_handler_end>

1c00541a <pwm_event_handler>:
#include "archi/eu/eu_v3.h"

  .global pwm_event_handler
  .extern pwmEventsStatus
pwm_event_handler:
  la   x10, pwmEventsStatus
1c00541a:	e3ffb517          	auipc	a0,0xe3ffb
1c00541e:	f3a50513          	addi	a0,a0,-198 # 354 <pwmEventsStatus>
  addi  x11, x0, 1
1c005422:	00100593          	li	a1,1
  lw   x8, 0(x10)
1c005426:	4100                	lw	s0,0(a0)
  p.insertr x8, x11, x9
1c005428:	8095a433          	p.insertr	s0,a1,s1
  sw   x8, 0(x10)
1c00542c:	c100                	sw	s0,0(a0)

  // continue with sw event raising
  li   x9, ARCHI_EU_DEMUX_ADDR + EU_SW_EVENTS_DEMUX_OFFSET + EU_CORE_TRIGG_SW_EVENT + (PLP_RT_NOTIF_EVENT << 2)
1c00542e:	002044b7          	lui	s1,0x204
1c005432:	10c48493          	addi	s1,s1,268 # 20410c <__L2+0x18410c>
  li   x10, -1
1c005436:	557d                	li	a0,-1
  sw   x10, 0(x9)
1c005438:	c088                	sw	a0,0(s1)

  j udma_event_handler_end
1c00543a:	ecfff06f          	j	1c005308 <udma_event_handler_end>

1c00543e <__rt_gpio_handler>:
  bnez     x8, __rt_gpio_ff1_loop
#endif

#else
  .extern __pi_gpio_handler
  mv        x11, x8
1c00543e:	85a2                	mv	a1,s0
  la        x12, __pi_gpio_handler
1c005440:	00006617          	auipc	a2,0x6
1c005444:	a1060613          	addi	a2,a2,-1520 # 1c00ae50 <__pi_gpio_handler>
  la        x9, __rt_gpio_handler_end
1c005448:	00000497          	auipc	s1,0x0
1c00544c:	00c48493          	addi	s1,s1,12 # 1c005454 <__rt_gpio_handler_end>
  j         __rt_call_external_c_function
1c005450:	c15ff06f          	j	1c005064 <__rt_call_external_c_function>

1c005454 <__rt_gpio_handler_end>:

  mret

#else

  j udma_event_handler_end
1c005454:	eb5ff06f          	j	1c005308 <udma_event_handler_end>

1c005458 <__udivdi3>:
1c005458:	87b2                	mv	a5,a2
1c00545a:	8736                	mv	a4,a3
1c00545c:	88aa                	mv	a7,a0
1c00545e:	882e                	mv	a6,a1
1c005460:	1e069d63          	bnez	a3,1c00565a <__udivdi3+0x202>
1c005464:	1c00d337          	lui	t1,0x1c00d
1c005468:	a1830313          	addi	t1,t1,-1512 # 1c00ca18 <__clz_tab>
1c00546c:	0ac5fd63          	bleu	a2,a1,1c005526 <__udivdi3+0xce>
1c005470:	6741                	lui	a4,0x10
1c005472:	0ae67363          	bleu	a4,a2,1c005518 <__udivdi3+0xc0>
1c005476:	0ff00693          	li	a3,255
1c00547a:	00c6b6b3          	sltu	a3,a3,a2
1c00547e:	068e                	slli	a3,a3,0x3
1c005480:	00d65733          	srl	a4,a2,a3
1c005484:	933a                	add	t1,t1,a4
1c005486:	00034703          	lbu	a4,0(t1)
1c00548a:	02000313          	li	t1,32
1c00548e:	96ba                	add	a3,a3,a4
1c005490:	40d30333          	sub	t1,t1,a3
1c005494:	00030c63          	beqz	t1,1c0054ac <__udivdi3+0x54>
1c005498:	00659733          	sll	a4,a1,t1
1c00549c:	00d556b3          	srl	a3,a0,a3
1c0054a0:	006617b3          	sll	a5,a2,t1
1c0054a4:	00e6e833          	or	a6,a3,a4
1c0054a8:	006518b3          	sll	a7,a0,t1
1c0054ac:	0107d513          	srli	a0,a5,0x10
1c0054b0:	02a85733          	divu	a4,a6,a0
1c0054b4:	1007d5b3          	p.exthz	a1,a5
1c0054b8:	0108d693          	srli	a3,a7,0x10
1c0054bc:	02a87633          	remu	a2,a6,a0
1c0054c0:	02e58833          	mul	a6,a1,a4
1c0054c4:	0642                	slli	a2,a2,0x10
1c0054c6:	8ed1                	or	a3,a3,a2
1c0054c8:	863a                	mv	a2,a4
1c0054ca:	0106fc63          	bleu	a6,a3,1c0054e2 <__udivdi3+0x8a>
1c0054ce:	96be                	add	a3,a3,a5
1c0054d0:	fff70613          	addi	a2,a4,-1 # ffff <__l1_heap_size+0x1f>
1c0054d4:	00f6e763          	bltu	a3,a5,1c0054e2 <__udivdi3+0x8a>
1c0054d8:	0106f563          	bleu	a6,a3,1c0054e2 <__udivdi3+0x8a>
1c0054dc:	ffe70613          	addi	a2,a4,-2
1c0054e0:	96be                	add	a3,a3,a5
1c0054e2:	410686b3          	sub	a3,a3,a6
1c0054e6:	02a6f833          	remu	a6,a3,a0
1c0054ea:	02a6d6b3          	divu	a3,a3,a0
1c0054ee:	df0828b3          	p.insert	a7,a6,15,16
1c0054f2:	02d58733          	mul	a4,a1,a3
1c0054f6:	8536                	mv	a0,a3
1c0054f8:	00e8fb63          	bleu	a4,a7,1c00550e <__udivdi3+0xb6>
1c0054fc:	98be                	add	a7,a7,a5
1c0054fe:	fff68513          	addi	a0,a3,-1
1c005502:	00f8e663          	bltu	a7,a5,1c00550e <__udivdi3+0xb6>
1c005506:	00e8f463          	bleu	a4,a7,1c00550e <__udivdi3+0xb6>
1c00550a:	ffe68513          	addi	a0,a3,-2
1c00550e:	01061793          	slli	a5,a2,0x10
1c005512:	8fc9                	or	a5,a5,a0
1c005514:	4801                	li	a6,0
1c005516:	a06d                	j	1c0055c0 <__udivdi3+0x168>
1c005518:	01000737          	lui	a4,0x1000
1c00551c:	46c1                	li	a3,16
1c00551e:	f6e661e3          	bltu	a2,a4,1c005480 <__udivdi3+0x28>
1c005522:	46e1                	li	a3,24
1c005524:	bfb1                	j	1c005480 <__udivdi3+0x28>
1c005526:	e601                	bnez	a2,1c00552e <__udivdi3+0xd6>
1c005528:	4685                	li	a3,1
1c00552a:	02c6d7b3          	divu	a5,a3,a2
1c00552e:	66c1                	lui	a3,0x10
1c005530:	08d7fb63          	bleu	a3,a5,1c0055c6 <__udivdi3+0x16e>
1c005534:	0ff00693          	li	a3,255
1c005538:	00f6f363          	bleu	a5,a3,1c00553e <__udivdi3+0xe6>
1c00553c:	4721                	li	a4,8
1c00553e:	00e7d6b3          	srl	a3,a5,a4
1c005542:	9336                	add	t1,t1,a3
1c005544:	00034683          	lbu	a3,0(t1)
1c005548:	02000613          	li	a2,32
1c00554c:	96ba                	add	a3,a3,a4
1c00554e:	8e15                	sub	a2,a2,a3
1c005550:	e251                	bnez	a2,1c0055d4 <__udivdi3+0x17c>
1c005552:	40f58733          	sub	a4,a1,a5
1c005556:	4805                	li	a6,1
1c005558:	0107d513          	srli	a0,a5,0x10
1c00555c:	1007d5b3          	p.exthz	a1,a5
1c005560:	0108d693          	srli	a3,a7,0x10
1c005564:	02a77633          	remu	a2,a4,a0
1c005568:	02a75733          	divu	a4,a4,a0
1c00556c:	0642                	slli	a2,a2,0x10
1c00556e:	8ed1                	or	a3,a3,a2
1c005570:	02e58333          	mul	t1,a1,a4
1c005574:	863a                	mv	a2,a4
1c005576:	0066fc63          	bleu	t1,a3,1c00558e <__udivdi3+0x136>
1c00557a:	96be                	add	a3,a3,a5
1c00557c:	fff70613          	addi	a2,a4,-1 # ffffff <__L2+0xf7ffff>
1c005580:	00f6e763          	bltu	a3,a5,1c00558e <__udivdi3+0x136>
1c005584:	0066f563          	bleu	t1,a3,1c00558e <__udivdi3+0x136>
1c005588:	ffe70613          	addi	a2,a4,-2
1c00558c:	96be                	add	a3,a3,a5
1c00558e:	406686b3          	sub	a3,a3,t1
1c005592:	02a6f333          	remu	t1,a3,a0
1c005596:	02a6d6b3          	divu	a3,a3,a0
1c00559a:	df0328b3          	p.insert	a7,t1,15,16
1c00559e:	02d58733          	mul	a4,a1,a3
1c0055a2:	8536                	mv	a0,a3
1c0055a4:	00e8fb63          	bleu	a4,a7,1c0055ba <__udivdi3+0x162>
1c0055a8:	98be                	add	a7,a7,a5
1c0055aa:	fff68513          	addi	a0,a3,-1 # ffff <__l1_heap_size+0x1f>
1c0055ae:	00f8e663          	bltu	a7,a5,1c0055ba <__udivdi3+0x162>
1c0055b2:	00e8f463          	bleu	a4,a7,1c0055ba <__udivdi3+0x162>
1c0055b6:	ffe68513          	addi	a0,a3,-2
1c0055ba:	01061793          	slli	a5,a2,0x10
1c0055be:	8fc9                	or	a5,a5,a0
1c0055c0:	853e                	mv	a0,a5
1c0055c2:	85c2                	mv	a1,a6
1c0055c4:	8082                	ret
1c0055c6:	010006b7          	lui	a3,0x1000
1c0055ca:	4741                	li	a4,16
1c0055cc:	f6d7e9e3          	bltu	a5,a3,1c00553e <__udivdi3+0xe6>
1c0055d0:	4761                	li	a4,24
1c0055d2:	b7b5                	j	1c00553e <__udivdi3+0xe6>
1c0055d4:	00c797b3          	sll	a5,a5,a2
1c0055d8:	00d5d333          	srl	t1,a1,a3
1c0055dc:	0107de13          	srli	t3,a5,0x10
1c0055e0:	00c59733          	sll	a4,a1,a2
1c0055e4:	00c518b3          	sll	a7,a0,a2
1c0055e8:	00d555b3          	srl	a1,a0,a3
1c0055ec:	03c35533          	divu	a0,t1,t3
1c0055f0:	8dd9                	or	a1,a1,a4
1c0055f2:	1007d733          	p.exthz	a4,a5
1c0055f6:	0105d693          	srli	a3,a1,0x10
1c0055fa:	03c37633          	remu	a2,t1,t3
1c0055fe:	882a                	mv	a6,a0
1c005600:	02a70333          	mul	t1,a4,a0
1c005604:	0642                	slli	a2,a2,0x10
1c005606:	8ed1                	or	a3,a3,a2
1c005608:	0066fc63          	bleu	t1,a3,1c005620 <__udivdi3+0x1c8>
1c00560c:	96be                	add	a3,a3,a5
1c00560e:	fff50813          	addi	a6,a0,-1
1c005612:	00f6e763          	bltu	a3,a5,1c005620 <__udivdi3+0x1c8>
1c005616:	0066f563          	bleu	t1,a3,1c005620 <__udivdi3+0x1c8>
1c00561a:	ffe50813          	addi	a6,a0,-2
1c00561e:	96be                	add	a3,a3,a5
1c005620:	406686b3          	sub	a3,a3,t1
1c005624:	03c6f633          	remu	a2,a3,t3
1c005628:	03c6d6b3          	divu	a3,a3,t3
1c00562c:	df0625b3          	p.insert	a1,a2,15,16
1c005630:	02d70733          	mul	a4,a4,a3
1c005634:	8636                	mv	a2,a3
1c005636:	00e5fc63          	bleu	a4,a1,1c00564e <__udivdi3+0x1f6>
1c00563a:	95be                	add	a1,a1,a5
1c00563c:	fff68613          	addi	a2,a3,-1 # ffffff <__L2+0xf7ffff>
1c005640:	00f5e763          	bltu	a1,a5,1c00564e <__udivdi3+0x1f6>
1c005644:	00e5f563          	bleu	a4,a1,1c00564e <__udivdi3+0x1f6>
1c005648:	ffe68613          	addi	a2,a3,-2
1c00564c:	95be                	add	a1,a1,a5
1c00564e:	0842                	slli	a6,a6,0x10
1c005650:	40e58733          	sub	a4,a1,a4
1c005654:	00c86833          	or	a6,a6,a2
1c005658:	b701                	j	1c005558 <__udivdi3+0x100>
1c00565a:	12d5ea63          	bltu	a1,a3,1c00578e <__udivdi3+0x336>
1c00565e:	67c1                	lui	a5,0x10
1c005660:	02f6fd63          	bleu	a5,a3,1c00569a <__udivdi3+0x242>
1c005664:	0ff00793          	li	a5,255
1c005668:	00d7b8b3          	sltu	a7,a5,a3
1c00566c:	088e                	slli	a7,a7,0x3
1c00566e:	1c00d737          	lui	a4,0x1c00d
1c005672:	0116d7b3          	srl	a5,a3,a7
1c005676:	a1870713          	addi	a4,a4,-1512 # 1c00ca18 <__clz_tab>
1c00567a:	97ba                	add	a5,a5,a4
1c00567c:	0007c783          	lbu	a5,0(a5) # 10000 <__L1Cl>
1c005680:	02000813          	li	a6,32
1c005684:	97c6                	add	a5,a5,a7
1c005686:	40f80833          	sub	a6,a6,a5
1c00568a:	00081f63          	bnez	a6,1c0056a8 <__udivdi3+0x250>
1c00568e:	4785                	li	a5,1
1c005690:	f2b6e8e3          	bltu	a3,a1,1c0055c0 <__udivdi3+0x168>
1c005694:	04a637b3          	p.sletu	a5,a2,a0
1c005698:	b725                	j	1c0055c0 <__udivdi3+0x168>
1c00569a:	010007b7          	lui	a5,0x1000
1c00569e:	48c1                	li	a7,16
1c0056a0:	fcf6e7e3          	bltu	a3,a5,1c00566e <__udivdi3+0x216>
1c0056a4:	48e1                	li	a7,24
1c0056a6:	b7e1                	j	1c00566e <__udivdi3+0x216>
1c0056a8:	00f658b3          	srl	a7,a2,a5
1c0056ac:	010696b3          	sll	a3,a3,a6
1c0056b0:	00d8e6b3          	or	a3,a7,a3
1c0056b4:	00f5d333          	srl	t1,a1,a5
1c0056b8:	0106de13          	srli	t3,a3,0x10
1c0056bc:	00f55733          	srl	a4,a0,a5
1c0056c0:	03c377b3          	remu	a5,t1,t3
1c0056c4:	1006d8b3          	p.exthz	a7,a3
1c0056c8:	010595b3          	sll	a1,a1,a6
1c0056cc:	8f4d                	or	a4,a4,a1
1c0056ce:	01075593          	srli	a1,a4,0x10
1c0056d2:	01061633          	sll	a2,a2,a6
1c0056d6:	03c35333          	divu	t1,t1,t3
1c0056da:	07c2                	slli	a5,a5,0x10
1c0056dc:	8ddd                	or	a1,a1,a5
1c0056de:	02688eb3          	mul	t4,a7,t1
1c0056e2:	879a                	mv	a5,t1
1c0056e4:	01d5fc63          	bleu	t4,a1,1c0056fc <__udivdi3+0x2a4>
1c0056e8:	95b6                	add	a1,a1,a3
1c0056ea:	fff30793          	addi	a5,t1,-1
1c0056ee:	00d5e763          	bltu	a1,a3,1c0056fc <__udivdi3+0x2a4>
1c0056f2:	01d5f563          	bleu	t4,a1,1c0056fc <__udivdi3+0x2a4>
1c0056f6:	ffe30793          	addi	a5,t1,-2
1c0056fa:	95b6                	add	a1,a1,a3
1c0056fc:	41d585b3          	sub	a1,a1,t4
1c005700:	03c5f333          	remu	t1,a1,t3
1c005704:	03c5d5b3          	divu	a1,a1,t3
1c005708:	df032733          	p.insert	a4,t1,15,16
1c00570c:	02b888b3          	mul	a7,a7,a1
1c005710:	832e                	mv	t1,a1
1c005712:	01177c63          	bleu	a7,a4,1c00572a <__udivdi3+0x2d2>
1c005716:	9736                	add	a4,a4,a3
1c005718:	fff58313          	addi	t1,a1,-1
1c00571c:	00d76763          	bltu	a4,a3,1c00572a <__udivdi3+0x2d2>
1c005720:	01177563          	bleu	a7,a4,1c00572a <__udivdi3+0x2d2>
1c005724:	ffe58313          	addi	t1,a1,-2
1c005728:	9736                	add	a4,a4,a3
1c00572a:	07c2                	slli	a5,a5,0x10
1c00572c:	6e41                	lui	t3,0x10
1c00572e:	0067e7b3          	or	a5,a5,t1
1c005732:	fffe0593          	addi	a1,t3,-1 # ffff <__l1_heap_size+0x1f>
1c005736:	00b7f6b3          	and	a3,a5,a1
1c00573a:	41170733          	sub	a4,a4,a7
1c00573e:	8df1                	and	a1,a1,a2
1c005740:	0107d893          	srli	a7,a5,0x10
1c005744:	02b68333          	mul	t1,a3,a1
1c005748:	8241                	srli	a2,a2,0x10
1c00574a:	02b885b3          	mul	a1,a7,a1
1c00574e:	8eae                	mv	t4,a1
1c005750:	42c68eb3          	p.mac	t4,a3,a2
1c005754:	01035693          	srli	a3,t1,0x10
1c005758:	96f6                	add	a3,a3,t4
1c00575a:	02c888b3          	mul	a7,a7,a2
1c00575e:	00b6f363          	bleu	a1,a3,1c005764 <__udivdi3+0x30c>
1c005762:	98f2                	add	a7,a7,t3
1c005764:	0106d613          	srli	a2,a3,0x10
1c005768:	98b2                	add	a7,a7,a2
1c00576a:	03176063          	bltu	a4,a7,1c00578a <__udivdi3+0x332>
1c00576e:	db1713e3          	bne	a4,a7,1c005514 <__udivdi3+0xbc>
1c005772:	6741                	lui	a4,0x10
1c005774:	177d                	addi	a4,a4,-1
1c005776:	8ef9                	and	a3,a3,a4
1c005778:	06c2                	slli	a3,a3,0x10
1c00577a:	00e37333          	and	t1,t1,a4
1c00577e:	01051533          	sll	a0,a0,a6
1c005782:	969a                	add	a3,a3,t1
1c005784:	4801                	li	a6,0
1c005786:	e2d57de3          	bleu	a3,a0,1c0055c0 <__udivdi3+0x168>
1c00578a:	17fd                	addi	a5,a5,-1
1c00578c:	b361                	j	1c005514 <__udivdi3+0xbc>
1c00578e:	4801                	li	a6,0
1c005790:	4781                	li	a5,0
1c005792:	b53d                	j	1c0055c0 <__udivdi3+0x168>

1c005794 <__umoddi3>:
1c005794:	88b2                	mv	a7,a2
1c005796:	8736                	mv	a4,a3
1c005798:	87aa                	mv	a5,a0
1c00579a:	882e                	mv	a6,a1
1c00579c:	1a069963          	bnez	a3,1c00594e <__umoddi3+0x1ba>
1c0057a0:	1c00d6b7          	lui	a3,0x1c00d
1c0057a4:	a1868693          	addi	a3,a3,-1512 # 1c00ca18 <__clz_tab>
1c0057a8:	0ac5f463          	bleu	a2,a1,1c005850 <__umoddi3+0xbc>
1c0057ac:	6341                	lui	t1,0x10
1c0057ae:	08667a63          	bleu	t1,a2,1c005842 <__umoddi3+0xae>
1c0057b2:	0ff00313          	li	t1,255
1c0057b6:	00c37363          	bleu	a2,t1,1c0057bc <__umoddi3+0x28>
1c0057ba:	4721                	li	a4,8
1c0057bc:	00e65333          	srl	t1,a2,a4
1c0057c0:	969a                	add	a3,a3,t1
1c0057c2:	0006c683          	lbu	a3,0(a3)
1c0057c6:	02000313          	li	t1,32
1c0057ca:	9736                	add	a4,a4,a3
1c0057cc:	40e30333          	sub	t1,t1,a4
1c0057d0:	00030c63          	beqz	t1,1c0057e8 <__umoddi3+0x54>
1c0057d4:	006595b3          	sll	a1,a1,t1
1c0057d8:	00e55733          	srl	a4,a0,a4
1c0057dc:	006618b3          	sll	a7,a2,t1
1c0057e0:	00b76833          	or	a6,a4,a1
1c0057e4:	006517b3          	sll	a5,a0,t1
1c0057e8:	0108d613          	srli	a2,a7,0x10
1c0057ec:	02c87733          	remu	a4,a6,a2
1c0057f0:	1008d533          	p.exthz	a0,a7
1c0057f4:	0107d693          	srli	a3,a5,0x10
1c0057f8:	02c85833          	divu	a6,a6,a2
1c0057fc:	0742                	slli	a4,a4,0x10
1c0057fe:	8ed9                	or	a3,a3,a4
1c005800:	03050833          	mul	a6,a0,a6
1c005804:	0106f863          	bleu	a6,a3,1c005814 <__umoddi3+0x80>
1c005808:	96c6                	add	a3,a3,a7
1c00580a:	0116e563          	bltu	a3,a7,1c005814 <__umoddi3+0x80>
1c00580e:	0106f363          	bleu	a6,a3,1c005814 <__umoddi3+0x80>
1c005812:	96c6                	add	a3,a3,a7
1c005814:	410686b3          	sub	a3,a3,a6
1c005818:	02c6f733          	remu	a4,a3,a2
1c00581c:	02c6d6b3          	divu	a3,a3,a2
1c005820:	df0727b3          	p.insert	a5,a4,15,16
1c005824:	02d506b3          	mul	a3,a0,a3
1c005828:	00d7f863          	bleu	a3,a5,1c005838 <__umoddi3+0xa4>
1c00582c:	97c6                	add	a5,a5,a7
1c00582e:	0117e563          	bltu	a5,a7,1c005838 <__umoddi3+0xa4>
1c005832:	00d7f363          	bleu	a3,a5,1c005838 <__umoddi3+0xa4>
1c005836:	97c6                	add	a5,a5,a7
1c005838:	8f95                	sub	a5,a5,a3
1c00583a:	0067d533          	srl	a0,a5,t1
1c00583e:	4581                	li	a1,0
1c005840:	8082                	ret
1c005842:	01000337          	lui	t1,0x1000
1c005846:	4741                	li	a4,16
1c005848:	f6666ae3          	bltu	a2,t1,1c0057bc <__umoddi3+0x28>
1c00584c:	4761                	li	a4,24
1c00584e:	b7bd                	j	1c0057bc <__umoddi3+0x28>
1c005850:	e601                	bnez	a2,1c005858 <__umoddi3+0xc4>
1c005852:	4605                	li	a2,1
1c005854:	031658b3          	divu	a7,a2,a7
1c005858:	6641                	lui	a2,0x10
1c00585a:	06c8ff63          	bleu	a2,a7,1c0058d8 <__umoddi3+0x144>
1c00585e:	0ff00613          	li	a2,255
1c005862:	01167363          	bleu	a7,a2,1c005868 <__umoddi3+0xd4>
1c005866:	4721                	li	a4,8
1c005868:	00e8d633          	srl	a2,a7,a4
1c00586c:	96b2                	add	a3,a3,a2
1c00586e:	0006c603          	lbu	a2,0(a3)
1c005872:	02000313          	li	t1,32
1c005876:	963a                	add	a2,a2,a4
1c005878:	40c30333          	sub	t1,t1,a2
1c00587c:	06031563          	bnez	t1,1c0058e6 <__umoddi3+0x152>
1c005880:	411585b3          	sub	a1,a1,a7
1c005884:	0108d713          	srli	a4,a7,0x10
1c005888:	1008d533          	p.exthz	a0,a7
1c00588c:	0107d613          	srli	a2,a5,0x10
1c005890:	02e5f6b3          	remu	a3,a1,a4
1c005894:	02e5d5b3          	divu	a1,a1,a4
1c005898:	06c2                	slli	a3,a3,0x10
1c00589a:	8ed1                	or	a3,a3,a2
1c00589c:	02b505b3          	mul	a1,a0,a1
1c0058a0:	00b6f863          	bleu	a1,a3,1c0058b0 <__umoddi3+0x11c>
1c0058a4:	96c6                	add	a3,a3,a7
1c0058a6:	0116e563          	bltu	a3,a7,1c0058b0 <__umoddi3+0x11c>
1c0058aa:	00b6f363          	bleu	a1,a3,1c0058b0 <__umoddi3+0x11c>
1c0058ae:	96c6                	add	a3,a3,a7
1c0058b0:	40b685b3          	sub	a1,a3,a1
1c0058b4:	02e5f6b3          	remu	a3,a1,a4
1c0058b8:	02e5d5b3          	divu	a1,a1,a4
1c0058bc:	df06a7b3          	p.insert	a5,a3,15,16
1c0058c0:	02b505b3          	mul	a1,a0,a1
1c0058c4:	00b7f863          	bleu	a1,a5,1c0058d4 <__umoddi3+0x140>
1c0058c8:	97c6                	add	a5,a5,a7
1c0058ca:	0117e563          	bltu	a5,a7,1c0058d4 <__umoddi3+0x140>
1c0058ce:	00b7f363          	bleu	a1,a5,1c0058d4 <__umoddi3+0x140>
1c0058d2:	97c6                	add	a5,a5,a7
1c0058d4:	8f8d                	sub	a5,a5,a1
1c0058d6:	b795                	j	1c00583a <__umoddi3+0xa6>
1c0058d8:	01000637          	lui	a2,0x1000
1c0058dc:	4741                	li	a4,16
1c0058de:	f8c8e5e3          	bltu	a7,a2,1c005868 <__umoddi3+0xd4>
1c0058e2:	4761                	li	a4,24
1c0058e4:	b751                	j	1c005868 <__umoddi3+0xd4>
1c0058e6:	006898b3          	sll	a7,a7,t1
1c0058ea:	00c5d733          	srl	a4,a1,a2
1c0058ee:	006517b3          	sll	a5,a0,t1
1c0058f2:	00c55633          	srl	a2,a0,a2
1c0058f6:	006595b3          	sll	a1,a1,t1
1c0058fa:	0108d513          	srli	a0,a7,0x10
1c0058fe:	8dd1                	or	a1,a1,a2
1c005900:	02a77633          	remu	a2,a4,a0
1c005904:	1008d833          	p.exthz	a6,a7
1c005908:	0105d693          	srli	a3,a1,0x10
1c00590c:	02a75733          	divu	a4,a4,a0
1c005910:	0642                	slli	a2,a2,0x10
1c005912:	8ed1                	or	a3,a3,a2
1c005914:	02e80733          	mul	a4,a6,a4
1c005918:	00e6f863          	bleu	a4,a3,1c005928 <__umoddi3+0x194>
1c00591c:	96c6                	add	a3,a3,a7
1c00591e:	0116e563          	bltu	a3,a7,1c005928 <__umoddi3+0x194>
1c005922:	00e6f363          	bleu	a4,a3,1c005928 <__umoddi3+0x194>
1c005926:	96c6                	add	a3,a3,a7
1c005928:	8e99                	sub	a3,a3,a4
1c00592a:	02a6f733          	remu	a4,a3,a0
1c00592e:	02a6d6b3          	divu	a3,a3,a0
1c005932:	df0725b3          	p.insert	a1,a4,15,16
1c005936:	02d806b3          	mul	a3,a6,a3
1c00593a:	00d5f863          	bleu	a3,a1,1c00594a <__umoddi3+0x1b6>
1c00593e:	95c6                	add	a1,a1,a7
1c005940:	0115e563          	bltu	a1,a7,1c00594a <__umoddi3+0x1b6>
1c005944:	00d5f363          	bleu	a3,a1,1c00594a <__umoddi3+0x1b6>
1c005948:	95c6                	add	a1,a1,a7
1c00594a:	8d95                	sub	a1,a1,a3
1c00594c:	bf25                	j	1c005884 <__umoddi3+0xf0>
1c00594e:	eed5e9e3          	bltu	a1,a3,1c005840 <__umoddi3+0xac>
1c005952:	6741                	lui	a4,0x10
1c005954:	04e6f563          	bleu	a4,a3,1c00599e <__umoddi3+0x20a>
1c005958:	0ff00e93          	li	t4,255
1c00595c:	00deb733          	sltu	a4,t4,a3
1c005960:	070e                	slli	a4,a4,0x3
1c005962:	1c00d337          	lui	t1,0x1c00d
1c005966:	00e6d8b3          	srl	a7,a3,a4
1c00596a:	a1830313          	addi	t1,t1,-1512 # 1c00ca18 <__clz_tab>
1c00596e:	989a                	add	a7,a7,t1
1c005970:	0008ce83          	lbu	t4,0(a7)
1c005974:	02000e13          	li	t3,32
1c005978:	9eba                	add	t4,t4,a4
1c00597a:	41de0e33          	sub	t3,t3,t4
1c00597e:	020e1763          	bnez	t3,1c0059ac <__umoddi3+0x218>
1c005982:	00b6e463          	bltu	a3,a1,1c00598a <__umoddi3+0x1f6>
1c005986:	00c56963          	bltu	a0,a2,1c005998 <__umoddi3+0x204>
1c00598a:	40c507b3          	sub	a5,a0,a2
1c00598e:	8d95                	sub	a1,a1,a3
1c005990:	00f53533          	sltu	a0,a0,a5
1c005994:	40a58833          	sub	a6,a1,a0
1c005998:	853e                	mv	a0,a5
1c00599a:	85c2                	mv	a1,a6
1c00599c:	b555                	j	1c005840 <__umoddi3+0xac>
1c00599e:	010008b7          	lui	a7,0x1000
1c0059a2:	4741                	li	a4,16
1c0059a4:	fb16efe3          	bltu	a3,a7,1c005962 <__umoddi3+0x1ce>
1c0059a8:	4761                	li	a4,24
1c0059aa:	bf65                	j	1c005962 <__umoddi3+0x1ce>
1c0059ac:	01d65733          	srl	a4,a2,t4
1c0059b0:	01c696b3          	sll	a3,a3,t3
1c0059b4:	8ed9                	or	a3,a3,a4
1c0059b6:	01d5d7b3          	srl	a5,a1,t4
1c0059ba:	0106d813          	srli	a6,a3,0x10
1c0059be:	0307f333          	remu	t1,a5,a6
1c0059c2:	1006d733          	p.exthz	a4,a3
1c0059c6:	01d558b3          	srl	a7,a0,t4
1c0059ca:	01c595b3          	sll	a1,a1,t3
1c0059ce:	00b8e5b3          	or	a1,a7,a1
1c0059d2:	0105d893          	srli	a7,a1,0x10
1c0059d6:	01c61633          	sll	a2,a2,t3
1c0059da:	01c51533          	sll	a0,a0,t3
1c0059de:	0307d7b3          	divu	a5,a5,a6
1c0059e2:	0342                	slli	t1,t1,0x10
1c0059e4:	011368b3          	or	a7,t1,a7
1c0059e8:	02f70f33          	mul	t5,a4,a5
1c0059ec:	833e                	mv	t1,a5
1c0059ee:	01e8fc63          	bleu	t5,a7,1c005a06 <__umoddi3+0x272>
1c0059f2:	98b6                	add	a7,a7,a3
1c0059f4:	fff78313          	addi	t1,a5,-1 # ffffff <__L2+0xf7ffff>
1c0059f8:	00d8e763          	bltu	a7,a3,1c005a06 <__umoddi3+0x272>
1c0059fc:	01e8f563          	bleu	t5,a7,1c005a06 <__umoddi3+0x272>
1c005a00:	ffe78313          	addi	t1,a5,-2
1c005a04:	98b6                	add	a7,a7,a3
1c005a06:	41e888b3          	sub	a7,a7,t5
1c005a0a:	0308f7b3          	remu	a5,a7,a6
1c005a0e:	0308d8b3          	divu	a7,a7,a6
1c005a12:	df07a5b3          	p.insert	a1,a5,15,16
1c005a16:	03170733          	mul	a4,a4,a7
1c005a1a:	87c6                	mv	a5,a7
1c005a1c:	00e5fc63          	bleu	a4,a1,1c005a34 <__umoddi3+0x2a0>
1c005a20:	95b6                	add	a1,a1,a3
1c005a22:	fff88793          	addi	a5,a7,-1 # ffffff <__L2+0xf7ffff>
1c005a26:	00d5e763          	bltu	a1,a3,1c005a34 <__umoddi3+0x2a0>
1c005a2a:	00e5f563          	bleu	a4,a1,1c005a34 <__umoddi3+0x2a0>
1c005a2e:	ffe88793          	addi	a5,a7,-2
1c005a32:	95b6                	add	a1,a1,a3
1c005a34:	0342                	slli	t1,t1,0x10
1c005a36:	6f41                	lui	t5,0x10
1c005a38:	00f36333          	or	t1,t1,a5
1c005a3c:	ffff0793          	addi	a5,t5,-1 # ffff <__l1_heap_size+0x1f>
1c005a40:	00f37833          	and	a6,t1,a5
1c005a44:	01035313          	srli	t1,t1,0x10
1c005a48:	8ff1                	and	a5,a5,a2
1c005a4a:	02f808b3          	mul	a7,a6,a5
1c005a4e:	8d99                	sub	a1,a1,a4
1c005a50:	01065713          	srli	a4,a2,0x10
1c005a54:	02f307b3          	mul	a5,t1,a5
1c005a58:	8fbe                	mv	t6,a5
1c005a5a:	42e80fb3          	p.mac	t6,a6,a4
1c005a5e:	0108d813          	srli	a6,a7,0x10
1c005a62:	987e                	add	a6,a6,t6
1c005a64:	02e30333          	mul	t1,t1,a4
1c005a68:	00f87363          	bleu	a5,a6,1c005a6e <__umoddi3+0x2da>
1c005a6c:	937a                	add	t1,t1,t5
1c005a6e:	01085713          	srli	a4,a6,0x10
1c005a72:	933a                	add	t1,t1,a4
1c005a74:	6741                	lui	a4,0x10
1c005a76:	177d                	addi	a4,a4,-1
1c005a78:	00e87833          	and	a6,a6,a4
1c005a7c:	0842                	slli	a6,a6,0x10
1c005a7e:	00e8f733          	and	a4,a7,a4
1c005a82:	9742                	add	a4,a4,a6
1c005a84:	0065e663          	bltu	a1,t1,1c005a90 <__umoddi3+0x2fc>
1c005a88:	00659d63          	bne	a1,t1,1c005aa2 <__umoddi3+0x30e>
1c005a8c:	00e57b63          	bleu	a4,a0,1c005aa2 <__umoddi3+0x30e>
1c005a90:	40c70633          	sub	a2,a4,a2
1c005a94:	00c73733          	sltu	a4,a4,a2
1c005a98:	40d30333          	sub	t1,t1,a3
1c005a9c:	40e30333          	sub	t1,t1,a4
1c005aa0:	8732                	mv	a4,a2
1c005aa2:	40e50733          	sub	a4,a0,a4
1c005aa6:	00e53533          	sltu	a0,a0,a4
1c005aaa:	406585b3          	sub	a1,a1,t1
1c005aae:	8d89                	sub	a1,a1,a0
1c005ab0:	01d597b3          	sll	a5,a1,t4
1c005ab4:	01c75733          	srl	a4,a4,t3
1c005ab8:	00e7e533          	or	a0,a5,a4
1c005abc:	01c5d5b3          	srl	a1,a1,t3
1c005ac0:	b341                	j	1c005840 <__umoddi3+0xac>

1c005ac2 <__divsf3>:
1c005ac2:	cf751633          	p.extractu	a2,a0,7,23
1c005ac6:	ec051333          	p.extractu	t1,a0,22,0
1c005aca:	817d                	srli	a0,a0,0x1f
1c005acc:	ce39                	beqz	a2,1c005b2a <__divsf3+0x68>
1c005ace:	0ff00793          	li	a5,255
1c005ad2:	06f60b63          	beq	a2,a5,1c005b48 <__divsf3+0x86>
1c005ad6:	030e                	slli	t1,t1,0x3
1c005ad8:	c1a34333          	p.bset	t1,t1,0,26
1c005adc:	f8160613          	addi	a2,a2,-127 # ffff81 <__L2+0xf7ff81>
1c005ae0:	4681                	li	a3,0
1c005ae2:	cf759733          	p.extractu	a4,a1,7,23
1c005ae6:	ec0597b3          	p.extractu	a5,a1,22,0
1c005aea:	81fd                	srli	a1,a1,0x1f
1c005aec:	cb25                	beqz	a4,1c005b5c <__divsf3+0x9a>
1c005aee:	0ff00813          	li	a6,255
1c005af2:	09070463          	beq	a4,a6,1c005b7a <__divsf3+0xb8>
1c005af6:	078e                	slli	a5,a5,0x3
1c005af8:	c1a7c7b3          	p.bset	a5,a5,0,26
1c005afc:	f8170713          	addi	a4,a4,-127 # ff81 <__rt_stack_size+0xf781>
1c005b00:	4801                	li	a6,0
1c005b02:	40e60e33          	sub	t3,a2,a4
1c005b06:	00269713          	slli	a4,a3,0x2
1c005b0a:	01076733          	or	a4,a4,a6
1c005b0e:	177d                	addi	a4,a4,-1
1c005b10:	4639                	li	a2,14
1c005b12:	00b548b3          	xor	a7,a0,a1
1c005b16:	06e66b63          	bltu	a2,a4,1c005b8c <__divsf3+0xca>
1c005b1a:	1c00d637          	lui	a2,0x1c00d
1c005b1e:	070a                	slli	a4,a4,0x2
1c005b20:	b1860613          	addi	a2,a2,-1256 # 1c00cb18 <__clz_tab+0x100>
1c005b24:	20e67703          	p.lw	a4,a4(a2)
1c005b28:	8702                	jr	a4
1c005b2a:	02030663          	beqz	t1,1c005b56 <__divsf3+0x94>
1c005b2e:	10031733          	p.fl1	a4,t1
1c005b32:	47fd                	li	a5,31
1c005b34:	40e78733          	sub	a4,a5,a4
1c005b38:	ffb70793          	addi	a5,a4,-5
1c005b3c:	f8a00613          	li	a2,-118
1c005b40:	00f31333          	sll	t1,t1,a5
1c005b44:	8e19                	sub	a2,a2,a4
1c005b46:	bf69                	j	1c005ae0 <__divsf3+0x1e>
1c005b48:	0ff00613          	li	a2,255
1c005b4c:	4689                	li	a3,2
1c005b4e:	f8030ae3          	beqz	t1,1c005ae2 <__divsf3+0x20>
1c005b52:	468d                	li	a3,3
1c005b54:	b779                	j	1c005ae2 <__divsf3+0x20>
1c005b56:	4601                	li	a2,0
1c005b58:	4685                	li	a3,1
1c005b5a:	b761                	j	1c005ae2 <__divsf3+0x20>
1c005b5c:	c78d                	beqz	a5,1c005b86 <__divsf3+0xc4>
1c005b5e:	10079833          	p.fl1	a6,a5
1c005b62:	477d                	li	a4,31
1c005b64:	41070833          	sub	a6,a4,a6
1c005b68:	ffb80713          	addi	a4,a6,-5
1c005b6c:	00e797b3          	sll	a5,a5,a4
1c005b70:	f8a00713          	li	a4,-118
1c005b74:	41070733          	sub	a4,a4,a6
1c005b78:	b761                	j	1c005b00 <__divsf3+0x3e>
1c005b7a:	0ff00713          	li	a4,255
1c005b7e:	4809                	li	a6,2
1c005b80:	d3c9                	beqz	a5,1c005b02 <__divsf3+0x40>
1c005b82:	480d                	li	a6,3
1c005b84:	bfbd                	j	1c005b02 <__divsf3+0x40>
1c005b86:	4701                	li	a4,0
1c005b88:	4805                	li	a6,1
1c005b8a:	bfa5                	j	1c005b02 <__divsf3+0x40>
1c005b8c:	00579813          	slli	a6,a5,0x5
1c005b90:	0af37a63          	bleu	a5,t1,1c005c44 <__divsf3+0x182>
1c005b94:	1e7d                	addi	t3,t3,-1
1c005b96:	4601                	li	a2,0
1c005b98:	01085793          	srli	a5,a6,0x10
1c005b9c:	02f35eb3          	divu	t4,t1,a5
1c005ba0:	65c1                	lui	a1,0x10
1c005ba2:	15fd                	addi	a1,a1,-1
1c005ba4:	00b87733          	and	a4,a6,a1
1c005ba8:	8241                	srli	a2,a2,0x10
1c005baa:	02f376b3          	remu	a3,t1,a5
1c005bae:	8576                	mv	a0,t4
1c005bb0:	03d705b3          	mul	a1,a4,t4
1c005bb4:	06c2                	slli	a3,a3,0x10
1c005bb6:	8ed1                	or	a3,a3,a2
1c005bb8:	00b6fc63          	bleu	a1,a3,1c005bd0 <__divsf3+0x10e>
1c005bbc:	96c2                	add	a3,a3,a6
1c005bbe:	fffe8513          	addi	a0,t4,-1
1c005bc2:	0106e763          	bltu	a3,a6,1c005bd0 <__divsf3+0x10e>
1c005bc6:	00b6f563          	bleu	a1,a3,1c005bd0 <__divsf3+0x10e>
1c005bca:	ffee8513          	addi	a0,t4,-2
1c005bce:	96c2                	add	a3,a3,a6
1c005bd0:	8e8d                	sub	a3,a3,a1
1c005bd2:	02f6d633          	divu	a2,a3,a5
1c005bd6:	02f6f6b3          	remu	a3,a3,a5
1c005bda:	87b2                	mv	a5,a2
1c005bdc:	02c705b3          	mul	a1,a4,a2
1c005be0:	01069713          	slli	a4,a3,0x10
1c005be4:	00b77c63          	bleu	a1,a4,1c005bfc <__divsf3+0x13a>
1c005be8:	9742                	add	a4,a4,a6
1c005bea:	fff60793          	addi	a5,a2,-1
1c005bee:	01076763          	bltu	a4,a6,1c005bfc <__divsf3+0x13a>
1c005bf2:	00b77563          	bleu	a1,a4,1c005bfc <__divsf3+0x13a>
1c005bf6:	ffe60793          	addi	a5,a2,-2
1c005bfa:	9742                	add	a4,a4,a6
1c005bfc:	0542                	slli	a0,a0,0x10
1c005bfe:	8f0d                	sub	a4,a4,a1
1c005c00:	8d5d                	or	a0,a0,a5
1c005c02:	00e03733          	snez	a4,a4
1c005c06:	00e567b3          	or	a5,a0,a4
1c005c0a:	07fe0693          	addi	a3,t3,127
1c005c0e:	04d05e63          	blez	a3,1c005c6a <__divsf3+0x1a8>
1c005c12:	f837b733          	p.bclr	a4,a5,28,3
1c005c16:	c711                	beqz	a4,1c005c22 <__divsf3+0x160>
1c005c18:	f647b733          	p.bclr	a4,a5,27,4
1c005c1c:	00472363          	p.beqimm	a4,4,1c005c22 <__divsf3+0x160>
1c005c20:	0791                	addi	a5,a5,4
1c005c22:	00479713          	slli	a4,a5,0x4
1c005c26:	00075663          	bgez	a4,1c005c32 <__divsf3+0x170>
1c005c2a:	c1b7b7b3          	p.bclr	a5,a5,0,27
1c005c2e:	080e0693          	addi	a3,t3,128
1c005c32:	0fe00713          	li	a4,254
1c005c36:	838d                	srli	a5,a5,0x3
1c005c38:	06d75c63          	ble	a3,a4,1c005cb0 <__divsf3+0x1ee>
1c005c3c:	4781                	li	a5,0
1c005c3e:	0ff00693          	li	a3,255
1c005c42:	a0bd                	j	1c005cb0 <__divsf3+0x1ee>
1c005c44:	01f31613          	slli	a2,t1,0x1f
1c005c48:	00135313          	srli	t1,t1,0x1
1c005c4c:	b7b1                	j	1c005b98 <__divsf3+0xd6>
1c005c4e:	88aa                	mv	a7,a0
1c005c50:	879a                	mv	a5,t1
1c005c52:	8836                	mv	a6,a3
1c005c54:	fe2824e3          	p.beqimm	a6,2,1c005c3c <__divsf3+0x17a>
1c005c58:	04382763          	p.beqimm	a6,3,1c005ca6 <__divsf3+0x1e4>
1c005c5c:	fa1837e3          	p.bneimm	a6,1,1c005c0a <__divsf3+0x148>
1c005c60:	4781                	li	a5,0
1c005c62:	4681                	li	a3,0
1c005c64:	a0b1                	j	1c005cb0 <__divsf3+0x1ee>
1c005c66:	88ae                	mv	a7,a1
1c005c68:	b7f5                	j	1c005c54 <__divsf3+0x192>
1c005c6a:	4705                	li	a4,1
1c005c6c:	8f15                	sub	a4,a4,a3
1c005c6e:	46ed                	li	a3,27
1c005c70:	fee6c8e3          	blt	a3,a4,1c005c60 <__divsf3+0x19e>
1c005c74:	09ee0613          	addi	a2,t3,158
1c005c78:	00e7d733          	srl	a4,a5,a4
1c005c7c:	00c797b3          	sll	a5,a5,a2
1c005c80:	00f037b3          	snez	a5,a5
1c005c84:	8fd9                	or	a5,a5,a4
1c005c86:	f837b733          	p.bclr	a4,a5,28,3
1c005c8a:	c711                	beqz	a4,1c005c96 <__divsf3+0x1d4>
1c005c8c:	f647b733          	p.bclr	a4,a5,27,4
1c005c90:	00472363          	p.beqimm	a4,4,1c005c96 <__divsf3+0x1d4>
1c005c94:	0791                	addi	a5,a5,4
1c005c96:	00579713          	slli	a4,a5,0x5
1c005c9a:	838d                	srli	a5,a5,0x3
1c005c9c:	fc0753e3          	bgez	a4,1c005c62 <__divsf3+0x1a0>
1c005ca0:	4781                	li	a5,0
1c005ca2:	4685                	li	a3,1
1c005ca4:	a031                	j	1c005cb0 <__divsf3+0x1ee>
1c005ca6:	004007b7          	lui	a5,0x400
1c005caa:	0ff00693          	li	a3,255
1c005cae:	4881                	li	a7,0
1c005cb0:	4501                	li	a0,0
1c005cb2:	ec07a533          	p.insert	a0,a5,22,0
1c005cb6:	cf76a533          	p.insert	a0,a3,7,23
1c005cba:	c1f8a533          	p.insert	a0,a7,0,31
1c005cbe:	8082                	ret

1c005cc0 <__floatsisf>:
1c005cc0:	cd51                	beqz	a0,1c005d5c <__floatsisf+0x9c>
1c005cc2:	87aa                	mv	a5,a0
1c005cc4:	01f55593          	srli	a1,a0,0x1f
1c005cc8:	00055463          	bgez	a0,1c005cd0 <__floatsisf+0x10>
1c005ccc:	40a007b3          	neg	a5,a0
1c005cd0:	46fd                	li	a3,31
1c005cd2:	10079733          	p.fl1	a4,a5
1c005cd6:	40e68733          	sub	a4,a3,a4
1c005cda:	09e00693          	li	a3,158
1c005cde:	8e99                	sub	a3,a3,a4
1c005ce0:	09600613          	li	a2,150
1c005ce4:	02d64063          	blt	a2,a3,1c005d04 <__floatsisf+0x44>
1c005ce8:	4621                	li	a2,8
1c005cea:	00e65563          	ble	a4,a2,1c005cf4 <__floatsisf+0x34>
1c005cee:	1761                	addi	a4,a4,-8
1c005cf0:	00e797b3          	sll	a5,a5,a4
1c005cf4:	4501                	li	a0,0
1c005cf6:	ec07a533          	p.insert	a0,a5,22,0
1c005cfa:	cf76a533          	p.insert	a0,a3,7,23
1c005cfe:	c1f5a533          	p.insert	a0,a1,0,31
1c005d02:	8082                	ret
1c005d04:	09900613          	li	a2,153
1c005d08:	00d65d63          	ble	a3,a2,1c005d22 <__floatsisf+0x62>
1c005d0c:	4615                	li	a2,5
1c005d0e:	8e19                	sub	a2,a2,a4
1c005d10:	01b70513          	addi	a0,a4,27
1c005d14:	00c7d633          	srl	a2,a5,a2
1c005d18:	00a797b3          	sll	a5,a5,a0
1c005d1c:	00f037b3          	snez	a5,a5
1c005d20:	8fd1                	or	a5,a5,a2
1c005d22:	4615                	li	a2,5
1c005d24:	00e65663          	ble	a4,a2,1c005d30 <__floatsisf+0x70>
1c005d28:	ffb70613          	addi	a2,a4,-5
1c005d2c:	00c797b3          	sll	a5,a5,a2
1c005d30:	f837b533          	p.bclr	a0,a5,28,3
1c005d34:	c1a7b633          	p.bclr	a2,a5,0,26
1c005d38:	c511                	beqz	a0,1c005d44 <__floatsisf+0x84>
1c005d3a:	f647b7b3          	p.bclr	a5,a5,27,4
1c005d3e:	0047a363          	p.beqimm	a5,4,1c005d44 <__floatsisf+0x84>
1c005d42:	0611                	addi	a2,a2,4
1c005d44:	00561793          	slli	a5,a2,0x5
1c005d48:	0007d763          	bgez	a5,1c005d56 <__floatsisf+0x96>
1c005d4c:	09f00693          	li	a3,159
1c005d50:	c1a63633          	p.bclr	a2,a2,0,26
1c005d54:	8e99                	sub	a3,a3,a4
1c005d56:	00365793          	srli	a5,a2,0x3
1c005d5a:	bf69                	j	1c005cf4 <__floatsisf+0x34>
1c005d5c:	4781                	li	a5,0
1c005d5e:	4681                	li	a3,0
1c005d60:	4581                	li	a1,0
1c005d62:	bf49                	j	1c005cf4 <__floatsisf+0x34>

1c005d64 <__extendsfdf2>:
1c005d64:	cf7516b3          	p.extractu	a3,a0,7,23
1c005d68:	00168793          	addi	a5,a3,1
1c005d6c:	ee87b7b3          	p.bclr	a5,a5,23,8
1c005d70:	4605                	li	a2,1
1c005d72:	ec051733          	p.extractu	a4,a0,22,0
1c005d76:	817d                	srli	a0,a0,0x1f
1c005d78:	02f65163          	ble	a5,a2,1c005d9a <__extendsfdf2+0x36>
1c005d7c:	00375793          	srli	a5,a4,0x3
1c005d80:	38068693          	addi	a3,a3,896
1c005d84:	0776                	slli	a4,a4,0x1d
1c005d86:	4601                	li	a2,0
1c005d88:	e607a633          	p.insert	a2,a5,19,0
1c005d8c:	d546a633          	p.insert	a2,a3,10,20
1c005d90:	c1f52633          	p.insert	a2,a0,0,31
1c005d94:	85b2                	mv	a1,a2
1c005d96:	853a                	mv	a0,a4
1c005d98:	8082                	ret
1c005d9a:	ee85                	bnez	a3,1c005dd2 <__extendsfdf2+0x6e>
1c005d9c:	c729                	beqz	a4,1c005de6 <__extendsfdf2+0x82>
1c005d9e:	47fd                	li	a5,31
1c005da0:	10071633          	p.fl1	a2,a4
1c005da4:	40c78633          	sub	a2,a5,a2
1c005da8:	47a9                	li	a5,10
1c005daa:	00c7ce63          	blt	a5,a2,1c005dc6 <__extendsfdf2+0x62>
1c005dae:	47ad                	li	a5,11
1c005db0:	8f91                	sub	a5,a5,a2
1c005db2:	01560693          	addi	a3,a2,21
1c005db6:	00f757b3          	srl	a5,a4,a5
1c005dba:	00d71733          	sll	a4,a4,a3
1c005dbe:	38900693          	li	a3,905
1c005dc2:	8e91                	sub	a3,a3,a2
1c005dc4:	b7c9                	j	1c005d86 <__extendsfdf2+0x22>
1c005dc6:	ff560793          	addi	a5,a2,-11
1c005dca:	00f717b3          	sll	a5,a4,a5
1c005dce:	4701                	li	a4,0
1c005dd0:	b7fd                	j	1c005dbe <__extendsfdf2+0x5a>
1c005dd2:	4781                	li	a5,0
1c005dd4:	c711                	beqz	a4,1c005de0 <__extendsfdf2+0x7c>
1c005dd6:	00375793          	srli	a5,a4,0x3
1c005dda:	c137c7b3          	p.bset	a5,a5,0,19
1c005dde:	0776                	slli	a4,a4,0x1d
1c005de0:	7ff00693          	li	a3,2047
1c005de4:	b74d                	j	1c005d86 <__extendsfdf2+0x22>
1c005de6:	4781                	li	a5,0
1c005de8:	4681                	li	a3,0
1c005dea:	bf71                	j	1c005d86 <__extendsfdf2+0x22>

1c005dec <main>:
1c005dec:	714d                	addi	sp,sp,-336
1c005dee:	4581                	li	a1,0
1c005df0:	3e800513          	li	a0,1000
1c005df4:	14112623          	sw	ra,332(sp)
1c005df8:	14812423          	sw	s0,328(sp)
1c005dfc:	14912223          	sw	s1,324(sp)
1c005e00:	6409                	lui	s0,0x2
1c005e02:	15212023          	sw	s2,320(sp)
1c005e06:	13312e23          	sw	s3,316(sp)
1c005e0a:	13412c23          	sw	s4,312(sp)
1c005e0e:	13512a23          	sw	s5,308(sp)
1c005e12:	13612823          	sw	s6,304(sp)
1c005e16:	13712623          	sw	s7,300(sp)
1c005e1a:	13812423          	sw	s8,296(sp)
1c005e1e:	13912223          	sw	s9,292(sp)
1c005e22:	13a12023          	sw	s10,288(sp)
1c005e26:	11b12e23          	sw	s11,284(sp)
1c005e2a:	495030ef          	jal	ra,1c009abe <PMU_set_voltage>
1c005e2e:	71040513          	addi	a0,s0,1808 # 2710 <__rt_stack_size+0x1f10>
1c005e32:	6f4030ef          	jal	ra,1c009526 <pi_time_wait_us>
1c005e36:	05f5e4b7          	lui	s1,0x5f5e
1c005e3a:	4601                	li	a2,0
1c005e3c:	10048593          	addi	a1,s1,256 # 5f5e100 <__L2+0x5ede100>
1c005e40:	4501                	li	a0,0
1c005e42:	27d030ef          	jal	ra,1c0098be <rt_freq_set_and_get>
1c005e46:	71040513          	addi	a0,s0,1808
1c005e4a:	6dc030ef          	jal	ra,1c009526 <pi_time_wait_us>
1c005e4e:	4601                	li	a2,0
1c005e50:	10048593          	addi	a1,s1,256
1c005e54:	4505                	li	a0,1
1c005e56:	269030ef          	jal	ra,1c0098be <rt_freq_set_and_get>
1c005e5a:	71040513          	addi	a0,s0,1808
1c005e5e:	6c8030ef          	jal	ra,1c009526 <pi_time_wait_us>
1c005e62:	0908                	addi	a0,sp,144
1c005e64:	03d010ef          	jal	ra,1c0076a0 <pi_hyperflash_conf_init>
1c005e68:	0860                	addi	s0,sp,28
1c005e6a:	090c                	addi	a1,sp,144
1c005e6c:	8522                	mv	a0,s0
1c005e6e:	4a1020ef          	jal	ra,1c008b0e <pi_open_from_conf>
1c005e72:	8522                	mv	a0,s0
1c005e74:	2b99                	jal	1c0063ca <pi_flash_open>
1c005e76:	c62a                	sw	a0,12(sp)
1c005e78:	50051d63          	bnez	a0,1c006392 <main+0x5a6>
1c005e7c:	18a8                	addi	a0,sp,120
1c005e7e:	4ab000ef          	jal	ra,1c006b28 <pi_readfs_conf_init>
1c005e82:	1028                	addi	a0,sp,40
1c005e84:	18ac                	addi	a1,sp,120
1c005e86:	dea2                	sw	s0,124(sp)
1c005e88:	487020ef          	jal	ra,1c008b0e <pi_open_from_conf>
1c005e8c:	1028                	addi	a0,sp,40
1c005e8e:	2379                	jal	1c00641c <pi_fs_mount>
1c005e90:	52051463          	bnez	a0,1c0063b8 <main+0x5cc>
1c005e94:	1c00dd37          	lui	s10,0x1c00d
1c005e98:	4f8d0d13          	addi	s10,s10,1272 # 1c00d4f8 <_bss_start>
1c005e9c:	024d0413          	addi	s0,s10,36
1c005ea0:	8522                	mv	a0,s0
1c005ea2:	133010ef          	jal	ra,1c0077d4 <pi_hyperram_conf_init>
1c005ea6:	1c00d537          	lui	a0,0x1c00d
1c005eaa:	85a2                	mv	a1,s0
1c005eac:	53850513          	addi	a0,a0,1336 # 1c00d538 <ram>
1c005eb0:	45f020ef          	jal	ra,1c008b0e <pi_open_from_conf>
1c005eb4:	1c00d537          	lui	a0,0x1c00d
1c005eb8:	53850513          	addi	a0,a0,1336 # 1c00d538 <ram>
1c005ebc:	23b010ef          	jal	ra,1c0078f6 <pi_ram_open>
1c005ec0:	040d2783          	lw	a5,64(s10)
1c005ec4:	1c00e6b7          	lui	a3,0x1c00e
1c005ec8:	0007a637          	lui	a2,0x7a
1c005ecc:	4b9c                	lw	a5,16(a5)
1c005ece:	1c00d537          	lui	a0,0x1c00d
1c005ed2:	8c468593          	addi	a1,a3,-1852 # 1c00d8c4 <activations_input>
1c005ed6:	12060613          	addi	a2,a2,288 # 7a120 <__L1Cl+0x6a120>
1c005eda:	53850513          	addi	a0,a0,1336 # 1c00d538 <ram>
1c005ede:	9782                	jalr	a5
1c005ee0:	1c00d5b7          	lui	a1,0x1c00d
1c005ee4:	4601                	li	a2,0
1c005ee6:	d3058593          	addi	a1,a1,-720 # 1c00cd30 <__clz_tab+0x318>
1c005eea:	1028                	addi	a0,sp,40
1c005eec:	2bb1                	jal	1c006448 <pi_fs_open>
1c005eee:	8b2a                	mv	s6,a0
1c005ef0:	4a050a63          	beqz	a0,1c0063a4 <main+0x5b8>
1c005ef4:	1c00d9b7          	lui	s3,0x1c00d
1c005ef8:	6a91                	lui	s5,0x4
1c005efa:	4b81                	li	s7,0
1c005efc:	4481                	li	s1,0
1c005efe:	54498993          	addi	s3,s3,1348 # 1c00d544 <flashBuffer.lto_priv.20>
1c005f02:	4a05                	li	s4,1
1c005f04:	bffa8a93          	addi	s5,s5,-1025 # 3bff <__rt_stack_size+0x33ff>
1c005f08:	08000613          	li	a2,128
1c005f0c:	85ce                	mv	a1,s3
1c005f0e:	855a                	mv	a0,s6
1c005f10:	23a1                	jal	1c006458 <pi_fs_read>
1c005f12:	040d2783          	lw	a5,64(s10)
1c005f16:	1c00e637          	lui	a2,0x1c00e
1c005f1a:	8c462583          	lw	a1,-1852(a2) # 1c00d8c4 <activations_input>
1c005f1e:	0a010223          	sb	zero,164(sp)
1c005f22:	0087a803          	lw	a6,8(a5) # 400008 <__L2+0x380008>
1c005f26:	86aa                	mv	a3,a0
1c005f28:	8c2a                	mv	s8,a0
1c005f2a:	1c00d537          	lui	a0,0x1c00d
1c005f2e:	091c                	addi	a5,sp,144
1c005f30:	d552                	sw	s4,168(sp)
1c005f32:	cb02                	sw	zero,148(sp)
1c005f34:	dd52                	sw	s4,184(sp)
1c005f36:	4701                	li	a4,0
1c005f38:	864e                	mv	a2,s3
1c005f3a:	95de                	add	a1,a1,s7
1c005f3c:	53850513          	addi	a0,a0,1336 # 1c00d538 <ram>
1c005f40:	9802                	jalr	a6
1c005f42:	0a410783          	lb	a5,164(sp)
1c005f46:	ef89                	bnez	a5,1c005f60 <main+0x174>
1c005f48:	30047973          	csrrci	s2,mstatus,8
1c005f4c:	4585                	li	a1,1
1c005f4e:	01c00513          	li	a0,28
1c005f52:	23c030ef          	jal	ra,1c00918e <__rt_event_execute>
1c005f56:	30091073          	csrw	mstatus,s2
1c005f5a:	0a410783          	lb	a5,164(sp)
1c005f5e:	d7ed                	beqz	a5,1c005f48 <main+0x15c>
1c005f60:	94e2                	add	s1,s1,s8
1c005f62:	8ba6                	mv	s7,s1
1c005f64:	fa9af2e3          	bleu	s1,s5,1c005f08 <main+0x11c>
1c005f68:	0005d537          	lui	a0,0x5d
1c005f6c:	c6050513          	addi	a0,a0,-928 # 5cc60 <__L1Cl+0x4cc60>
1c005f70:	4ca030ef          	jal	ra,1c00943a <pi_l2_malloc>
1c005f74:	1c00e6b7          	lui	a3,0x1c00e
1c005f78:	c42a                	sw	a0,8(sp)
1c005f7a:	8ca6aa23          	sw	a0,-1836(a3) # 1c00d8d4 <L2_output>
1c005f7e:	3e050663          	beqz	a0,1c00636a <main+0x57e>
1c005f82:	1c00d637          	lui	a2,0x1c00d
1c005f86:	b9860613          	addi	a2,a2,-1128 # 1c00cb98 <__clz_tab+0x180>
1c005f8a:	45a2                	lw	a1,8(sp)
1c005f8c:	1c00d537          	lui	a0,0x1c00d
1c005f90:	d5050513          	addi	a0,a0,-688 # 1c00cd50 <__clz_tab+0x338>
1c005f94:	794050ef          	jal	ra,1c00b728 <printf>
1c005f98:	5822                	lw	a6,40(sp)
1c005f9a:	1c00d637          	lui	a2,0x1c00d
1c005f9e:	53860613          	addi	a2,a2,1336 # 1c00d538 <ram>
1c005fa2:	c6c2                	sw	a6,76(sp)
1c005fa4:	5832                	lw	a6,44(sp)
1c005fa6:	421c                	lw	a5,0(a2)
1c005fa8:	044d2503          	lw	a0,68(s10)
1c005fac:	048d2683          	lw	a3,72(s10)
1c005fb0:	c8c2                	sw	a6,80(sp)
1c005fb2:	5842                	lw	a6,48(sp)
1c005fb4:	4b98                	lw	a4,16(a5)
1c005fb6:	1c00ec37          	lui	s8,0x1c00e
1c005fba:	0044b637          	lui	a2,0x44b
1c005fbe:	cac2                	sw	a6,84(sp)
1c005fc0:	a2060613          	addi	a2,a2,-1504 # 44aa20 <__L2+0x3caa20>
1c005fc4:	8e0c0593          	addi	a1,s8,-1824 # 1c00d8e0 <L3_weights>
1c005fc8:	ccbe                	sw	a5,88(sp)
1c005fca:	ceaa                	sw	a0,92(sp)
1c005fcc:	d0b6                	sw	a3,96(sp)
1c005fce:	08a8                	addi	a0,sp,88
1c005fd0:	9702                	jalr	a4
1c005fd2:	47e6                	lw	a5,88(sp)
1c005fd4:	1c00e6b7          	lui	a3,0x1c00e
1c005fd8:	0016e437          	lui	s0,0x16e
1c005fdc:	4b9c                	lw	a5,16(a5)
1c005fde:	8cc68593          	addi	a1,a3,-1844 # 1c00d8cc <L3_input>
1c005fe2:	36040613          	addi	a2,s0,864 # 16e360 <__L2+0xee360>
1c005fe6:	08a8                	addi	a0,sp,88
1c005fe8:	9782                	jalr	a5
1c005fea:	47e6                	lw	a5,88(sp)
1c005fec:	1c00e737          	lui	a4,0x1c00e
1c005ff0:	8c870593          	addi	a1,a4,-1848 # 1c00d8c8 <L3_output>
1c005ff4:	4b9c                	lw	a5,16(a5)
1c005ff6:	36040613          	addi	a2,s0,864
1c005ffa:	08a8                	addi	a0,sp,88
1c005ffc:	9782                	jalr	a5
1c005ffe:	8e0c2583          	lw	a1,-1824(s8)
1c006002:	34059f63          	bnez	a1,1c006360 <main+0x574>
1c006006:	1c00d637          	lui	a2,0x1c00d
1c00600a:	d0060613          	addi	a2,a2,-768 # 1c00cd00 <__clz_tab+0x2e8>
1c00600e:	1c00d437          	lui	s0,0x1c00d
1c006012:	d7840513          	addi	a0,s0,-648 # 1c00cd78 <__clz_tab+0x360>
1c006016:	712050ef          	jal	ra,1c00b728 <printf>
1c00601a:	1c00e7b7          	lui	a5,0x1c00e
1c00601e:	8cc7a583          	lw	a1,-1844(a5) # 1c00d8cc <L3_input>
1c006022:	32059a63          	bnez	a1,1c006356 <main+0x56a>
1c006026:	1c00d637          	lui	a2,0x1c00d
1c00602a:	d0060613          	addi	a2,a2,-768 # 1c00cd00 <__clz_tab+0x2e8>
1c00602e:	d7840513          	addi	a0,s0,-648
1c006032:	6f6050ef          	jal	ra,1c00b728 <printf>
1c006036:	1c00e637          	lui	a2,0x1c00e
1c00603a:	8c862583          	lw	a1,-1848(a2) # 1c00d8c8 <L3_output>
1c00603e:	30059763          	bnez	a1,1c00634c <main+0x560>
1c006042:	1c00d637          	lui	a2,0x1c00d
1c006046:	d0060613          	addi	a2,a2,-768 # 1c00cd00 <__clz_tab+0x2e8>
1c00604a:	d7840513          	addi	a0,s0,-648
1c00604e:	6da050ef          	jal	ra,1c00b728 <printf>
1c006052:	1c00d6b7          	lui	a3,0x1c00d
1c006056:	84868693          	addi	a3,a3,-1976 # 1c00c848 <L3_input_layers>
1c00605a:	1b068d93          	addi	s11,a3,432
1c00605e:	004da40b          	p.lw	s0,4(s11!)
1c006062:	4601                	li	a2,0
1c006064:	00e8                	addi	a0,sp,76
1c006066:	85a2                	mv	a1,s0
1c006068:	c202                	sw	zero,4(sp)
1c00606a:	1c00da37          	lui	s4,0x1c00d
1c00606e:	2ee9                	jal	1c006448 <pi_fs_open>
1c006070:	0ccd0b93          	addi	s7,s10,204
1c006074:	4981                	li	s3,0
1c006076:	5e4a0a13          	addi	s4,s4,1508 # 1c00d5e4 <flashBuffer.lto_priv.21>
1c00607a:	4a85                	li	s5,1
1c00607c:	8b2a                	mv	s6,a0
1c00607e:	cd79                	beqz	a0,1c00615c <main+0x370>
1c006080:	455c                	lw	a5,12(a0)
1c006082:	4401                	li	s0,0
1c006084:	97ce                	add	a5,a5,s3
1c006086:	00fba023          	sw	a5,0(s7)
1c00608a:	06f9f663          	bleu	a5,s3,1c0060f6 <main+0x30a>
1c00608e:	08000613          	li	a2,128
1c006092:	85d2                	mv	a1,s4
1c006094:	855a                	mv	a0,s6
1c006096:	26c9                	jal	1c006458 <pi_fs_read>
1c006098:	892a                	mv	s2,a0
1c00609a:	00a05963          	blez	a0,1c0060ac <main+0x2c0>
1c00609e:	8752                	mv	a4,s4
1c0060a0:	87aa                	mv	a5,a0
1c0060a2:	0047c0fb          	lp.setup	x1,a5,1c0060aa <main+0x2be>
1c0060a6:	0017468b          	p.lbu	a3,1(a4!)
1c0060aa:	9436                	add	s0,s0,a3
1c0060ac:	47e6                	lw	a5,88(sp)
1c0060ae:	8e0c2583          	lw	a1,-1824(s8)
1c0060b2:	0a010223          	sb	zero,164(sp)
1c0060b6:	0087a803          	lw	a6,8(a5)
1c0060ba:	4701                	li	a4,0
1c0060bc:	091c                	addi	a5,sp,144
1c0060be:	d556                	sw	s5,168(sp)
1c0060c0:	cb02                	sw	zero,148(sp)
1c0060c2:	dd56                	sw	s5,184(sp)
1c0060c4:	86ca                	mv	a3,s2
1c0060c6:	8652                	mv	a2,s4
1c0060c8:	95ce                	add	a1,a1,s3
1c0060ca:	08a8                	addi	a0,sp,88
1c0060cc:	9802                	jalr	a6
1c0060ce:	0a410783          	lb	a5,164(sp)
1c0060d2:	ef89                	bnez	a5,1c0060ec <main+0x300>
1c0060d4:	30047cf3          	csrrci	s9,mstatus,8
1c0060d8:	4585                	li	a1,1
1c0060da:	01c00513          	li	a0,28
1c0060de:	0b0030ef          	jal	ra,1c00918e <__rt_event_execute>
1c0060e2:	300c9073          	csrw	mstatus,s9
1c0060e6:	0a410783          	lb	a5,164(sp)
1c0060ea:	d7ed                	beqz	a5,1c0060d4 <main+0x2e8>
1c0060ec:	000ba783          	lw	a5,0(s7)
1c0060f0:	99ca                	add	s3,s3,s2
1c0060f2:	f8f9eee3          	bltu	s3,a5,1c00608e <main+0x2a2>
1c0060f6:	4712                	lw	a4,4(sp)
1c0060f8:	1c00d637          	lui	a2,0x1c00d
1c0060fc:	84860613          	addi	a2,a2,-1976 # 1c00c848 <L3_input_layers>
1c006100:	00271793          	slli	a5,a4,0x2
1c006104:	97b2                	add	a5,a5,a2
1c006106:	0b47a603          	lw	a2,180(a5)
1c00610a:	22860463          	beq	a2,s0,1c006332 <main+0x546>
1c00610e:	1c00d7b7          	lui	a5,0x1c00d
1c006112:	85ba                	mv	a1,a4
1c006114:	86a2                	mv	a3,s0
1c006116:	dec78513          	addi	a0,a5,-532 # 1c00cdec <__clz_tab+0x3d4>
1c00611a:	60e050ef          	jal	ra,1c00b728 <printf>
1c00611e:	4612                	lw	a2,4(sp)
1c006120:	1c00d6b7          	lui	a3,0x1c00d
1c006124:	a1868693          	addi	a3,a3,-1512 # 1c00ca18 <__clz_tab>
1c006128:	00160713          	addi	a4,a2,1
1c00612c:	03b68f63          	beq	a3,s11,1c00616a <main+0x37e>
1c006130:	1c00d637          	lui	a2,0x1c00d
1c006134:	00271793          	slli	a5,a4,0x2
1c006138:	84860613          	addi	a2,a2,-1976 # 1c00c848 <L3_input_layers>
1c00613c:	97b2                	add	a5,a5,a2
1c00613e:	47bc                	lw	a5,72(a5)
1c006140:	20079363          	bnez	a5,1c006346 <main+0x55a>
1c006144:	4692                	lw	a3,4(sp)
1c006146:	0b91                	addi	s7,s7,4
1c006148:	0689                	addi	a3,a3,2
1c00614a:	c236                	sw	a3,4(sp)
1c00614c:	004da40b          	p.lw	s0,4(s11!)
1c006150:	4601                	li	a2,0
1c006152:	00e8                	addi	a0,sp,76
1c006154:	85a2                	mv	a1,s0
1c006156:	2ccd                	jal	1c006448 <pi_fs_open>
1c006158:	8b2a                	mv	s6,a0
1c00615a:	f11d                	bnez	a0,1c006080 <main+0x294>
1c00615c:	1c00d537          	lui	a0,0x1c00d
1c006160:	85a2                	mv	a1,s0
1c006162:	d9c50513          	addi	a0,a0,-612 # 1c00cd9c <__clz_tab+0x384>
1c006166:	5c2050ef          	jal	ra,1c00b728 <printf>
1c00616a:	1c00e737          	lui	a4,0x1c00e
1c00616e:	8c472703          	lw	a4,-1852(a4) # 1c00d8c4 <activations_input>
1c006172:	040d2783          	lw	a5,64(s10)
1c006176:	0a010223          	sb	zero,164(sp)
1c00617a:	c03a                	sw	a4,0(sp)
1c00617c:	0087a803          	lw	a6,8(a5)
1c006180:	4622                	lw	a2,8(sp)
1c006182:	4582                	lw	a1,0(sp)
1c006184:	4785                	li	a5,1
1c006186:	6691                	lui	a3,0x4
1c006188:	1c00d537          	lui	a0,0x1c00d
1c00618c:	d53e                	sw	a5,168(sp)
1c00618e:	dd3e                	sw	a5,184(sp)
1c006190:	cb02                	sw	zero,148(sp)
1c006192:	091c                	addi	a5,sp,144
1c006194:	4705                	li	a4,1
1c006196:	c0068693          	addi	a3,a3,-1024 # 3c00 <__rt_stack_size+0x3400>
1c00619a:	53850513          	addi	a0,a0,1336 # 1c00d538 <ram>
1c00619e:	9802                	jalr	a6
1c0061a0:	0a410783          	lb	a5,164(sp)
1c0061a4:	ef89                	bnez	a5,1c0061be <main+0x3d2>
1c0061a6:	30047473          	csrrci	s0,mstatus,8
1c0061aa:	4585                	li	a1,1
1c0061ac:	01c00513          	li	a0,28
1c0061b0:	7df020ef          	jal	ra,1c00918e <__rt_event_execute>
1c0061b4:	30041073          	csrw	mstatus,s0
1c0061b8:	0a410783          	lb	a5,164(sp)
1c0061bc:	d7ed                	beqz	a5,1c0061a6 <main+0x3ba>
1c0061be:	1c00d7b7          	lui	a5,0x1c00d
1c0061c2:	53878793          	addi	a5,a5,1336 # 1c00d538 <ram>
1c0061c6:	4394                	lw	a3,0(a5)
1c0061c8:	044d2703          	lw	a4,68(s10)
1c0061cc:	048d2783          	lw	a5,72(s10)
1c0061d0:	1c00e637          	lui	a2,0x1c00e
1c0061d4:	18a8                	addi	a0,sp,120
1c0061d6:	8d462403          	lw	s0,-1836(a2) # 1c00d8d4 <L2_output>
1c0061da:	da36                	sw	a3,52(sp)
1c0061dc:	dc3a                	sw	a4,56(sp)
1c0061de:	de3e                	sw	a5,60(sp)
1c0061e0:	c082                	sw	zero,64(sp)
1c0061e2:	c282                	sw	zero,68(sp)
1c0061e4:	c482                	sw	zero,72(sp)
1c0061e6:	c902                	sw	zero,144(sp)
1c0061e8:	cb02                	sw	zero,148(sp)
1c0061ea:	cd02                	sw	zero,152(sp)
1c0061ec:	cf02                	sw	zero,156(sp)
1c0061ee:	d102                	sw	zero,160(sp)
1c0061f0:	d302                	sw	zero,164(sp)
1c0061f2:	d502                	sw	zero,168(sp)
1c0061f4:	d702                	sw	zero,172(sp)
1c0061f6:	d902                	sw	zero,176(sp)
1c0061f8:	db02                	sw	zero,180(sp)
1c0061fa:	dd02                	sw	zero,184(sp)
1c0061fc:	71d030ef          	jal	ra,1c00a118 <pi_cluster_conf_init>
1c006200:	0005d7b7          	lui	a5,0x5d
1c006204:	c6078793          	addi	a5,a5,-928 # 5cc60 <__L1Cl+0x4cc60>
1c006208:	d4be                	sw	a5,104(sp)
1c00620a:	4785                	li	a5,1
1c00620c:	d8be                	sw	a5,112(sp)
1c00620e:	185c                	addi	a5,sp,52
1c006210:	46a2                	lw	a3,8(sp)
1c006212:	dabe                	sw	a5,116(sp)
1c006214:	1c0047b7          	lui	a5,0x1c004
1c006218:	29478793          	addi	a5,a5,660 # 1c004294 <network_run_cluster>
1c00621c:	0088                	addi	a0,sp,64
1c00621e:	c93e                	sw	a5,144(sp)
1c006220:	18ac                	addi	a1,sp,120
1c006222:	10dc                	addi	a5,sp,100
1c006224:	de82                	sw	zero,124(sp)
1c006226:	d2b6                	sw	a3,100(sp)
1c006228:	d6a2                	sw	s0,108(sp)
1c00622a:	cb3e                	sw	a5,148(sp)
1c00622c:	cd02                	sw	zero,152(sp)
1c00622e:	cf02                	sw	zero,156(sp)
1c006230:	d302                	sw	zero,164(sp)
1c006232:	0dd020ef          	jal	ra,1c008b0e <pi_open_from_conf>
1c006236:	0088                	addi	a0,sp,64
1c006238:	6e7030ef          	jal	ra,1c00a11e <pi_cluster_open>
1c00623c:	12050c63          	beqz	a0,1c006374 <main+0x588>
1c006240:	1c00d537          	lui	a0,0x1c00d
1c006244:	e2850513          	addi	a0,a0,-472 # 1c00ce28 <__clz_tab+0x410>
1c006248:	4e0050ef          	jal	ra,1c00b728 <printf>
1c00624c:	4401                	li	s0,0
1c00624e:	1c00d937          	lui	s2,0x1c00d
1c006252:	44c1                	li	s1,16
1c006254:	1c00e737          	lui	a4,0x1c00e
1c006258:	8d472583          	lw	a1,-1836(a4) # 1c00d8d4 <L2_output>
1c00625c:	e3c90513          	addi	a0,s2,-452 # 1c00ce3c <__clz_tab+0x424>
1c006260:	2085f583          	p.lw	a1,s0(a1)
1c006264:	0411                	addi	s0,s0,4
1c006266:	4c2050ef          	jal	ra,1c00b728 <printf>
1c00626a:	fe9415e3          	bne	s0,s1,1c006254 <main+0x468>
1c00626e:	4529                	li	a0,10
1c006270:	398050ef          	jal	ra,1c00b608 <putchar>
1c006274:	040d2783          	lw	a5,64(s10)
1c006278:	1c00e637          	lui	a2,0x1c00e
1c00627c:	8c462583          	lw	a1,-1852(a2) # 1c00d8c4 <activations_input>
1c006280:	4bdc                	lw	a5,20(a5)
1c006282:	0007a637          	lui	a2,0x7a
1c006286:	1c00d537          	lui	a0,0x1c00d
1c00628a:	12060613          	addi	a2,a2,288 # 7a120 <__L1Cl+0x6a120>
1c00628e:	53850513          	addi	a0,a0,1336 # 1c00d538 <ram>
1c006292:	9782                	jalr	a5
1c006294:	1c00d6b7          	lui	a3,0x1c00d
1c006298:	53868693          	addi	a3,a3,1336 # 1c00d538 <ram>
1c00629c:	429c                	lw	a5,0(a3)
1c00629e:	044d2503          	lw	a0,68(s10)
1c0062a2:	048d2683          	lw	a3,72(s10)
1c0062a6:	4bd8                	lw	a4,20(a5)
1c0062a8:	8e0c2583          	lw	a1,-1824(s8)
1c0062ac:	0044b637          	lui	a2,0x44b
1c0062b0:	cd36                	sw	a3,152(sp)
1c0062b2:	a2060613          	addi	a2,a2,-1504 # 44aa20 <__L2+0x3caa20>
1c0062b6:	c93e                	sw	a5,144(sp)
1c0062b8:	cb2a                	sw	a0,148(sp)
1c0062ba:	0908                	addi	a0,sp,144
1c0062bc:	9702                	jalr	a4
1c0062be:	47ca                	lw	a5,144(sp)
1c0062c0:	1c00e737          	lui	a4,0x1c00e
1c0062c4:	8cc72583          	lw	a1,-1844(a4) # 1c00d8cc <L3_input>
1c0062c8:	4bdc                	lw	a5,20(a5)
1c0062ca:	0016e437          	lui	s0,0x16e
1c0062ce:	36040613          	addi	a2,s0,864 # 16e360 <__L2+0xee360>
1c0062d2:	0908                	addi	a0,sp,144
1c0062d4:	9782                	jalr	a5
1c0062d6:	1c00e7b7          	lui	a5,0x1c00e
1c0062da:	8c87a583          	lw	a1,-1848(a5) # 1c00d8c8 <L3_output>
1c0062de:	47ca                	lw	a5,144(sp)
1c0062e0:	36040613          	addi	a2,s0,864
1c0062e4:	0908                	addi	a0,sp,144
1c0062e6:	4bdc                	lw	a5,20(a5)
1c0062e8:	9782                	jalr	a5
1c0062ea:	4522                	lw	a0,8(sp)
1c0062ec:	0005d5b7          	lui	a1,0x5d
1c0062f0:	c6058593          	addi	a1,a1,-928 # 5cc60 <__L1Cl+0x4cc60>
1c0062f4:	154030ef          	jal	ra,1c009448 <pi_l2_free>
1c0062f8:	4532                	lw	a0,12(sp)
1c0062fa:	14c12083          	lw	ra,332(sp)
1c0062fe:	14812403          	lw	s0,328(sp)
1c006302:	14412483          	lw	s1,324(sp)
1c006306:	14012903          	lw	s2,320(sp)
1c00630a:	13c12983          	lw	s3,316(sp)
1c00630e:	13812a03          	lw	s4,312(sp)
1c006312:	13412a83          	lw	s5,308(sp)
1c006316:	13012b03          	lw	s6,304(sp)
1c00631a:	12c12b83          	lw	s7,300(sp)
1c00631e:	12812c03          	lw	s8,296(sp)
1c006322:	12412c83          	lw	s9,292(sp)
1c006326:	12012d03          	lw	s10,288(sp)
1c00632a:	11c12d83          	lw	s11,284(sp)
1c00632e:	6171                	addi	sp,sp,336
1c006330:	8082                	ret
1c006332:	85ba                	mv	a1,a4
1c006334:	1c00d737          	lui	a4,0x1c00d
1c006338:	86a2                	mv	a3,s0
1c00633a:	8622                	mv	a2,s0
1c00633c:	db470513          	addi	a0,a4,-588 # 1c00cdb4 <__clz_tab+0x39c>
1c006340:	3e8050ef          	jal	ra,1c00b728 <printf>
1c006344:	bbe9                	j	1c00611e <main+0x332>
1c006346:	c23a                	sw	a4,4(sp)
1c006348:	0b91                	addi	s7,s7,4
1c00634a:	b509                	j	1c00614c <main+0x360>
1c00634c:	1c00d637          	lui	a2,0x1c00d
1c006350:	b9860613          	addi	a2,a2,-1128 # 1c00cb98 <__clz_tab+0x180>
1c006354:	b9dd                	j	1c00604a <main+0x25e>
1c006356:	1c00d637          	lui	a2,0x1c00d
1c00635a:	b9860613          	addi	a2,a2,-1128 # 1c00cb98 <__clz_tab+0x180>
1c00635e:	b9c1                	j	1c00602e <main+0x242>
1c006360:	1c00d637          	lui	a2,0x1c00d
1c006364:	b9860613          	addi	a2,a2,-1128 # 1c00cb98 <__clz_tab+0x180>
1c006368:	b15d                	j	1c00600e <main+0x222>
1c00636a:	1c00d637          	lui	a2,0x1c00d
1c00636e:	d0060613          	addi	a2,a2,-768 # 1c00cd00 <__clz_tab+0x2e8>
1c006372:	b921                	j	1c005f8a <main+0x19e>
1c006374:	6785                	lui	a5,0x1
1c006376:	dac78713          	addi	a4,a5,-596 # dac <__rt_stack_size+0x5ac>
1c00637a:	090c                	addi	a1,sp,144
1c00637c:	d4878793          	addi	a5,a5,-696
1c006380:	0088                	addi	a0,sp,64
1c006382:	cf3a                	sw	a4,156(sp)
1c006384:	d13e                	sw	a5,160(sp)
1c006386:	170040ef          	jal	ra,1c00a4f6 <pi_cluster_send_task_to_cl>
1c00638a:	0088                	addi	a0,sp,64
1c00638c:	66b030ef          	jal	ra,1c00a1f6 <pi_cluster_close>
1c006390:	bd45                	j	1c006240 <main+0x454>
1c006392:	1c00d537          	lui	a0,0x1c00d
1c006396:	d0850513          	addi	a0,a0,-760 # 1c00cd08 <__clz_tab+0x2f0>
1c00639a:	1f8050ef          	jal	ra,1c00b592 <puts>
1c00639e:	557d                	li	a0,-1
1c0063a0:	296050ef          	jal	ra,1c00b636 <exit>
1c0063a4:	1c00d537          	lui	a0,0x1c00d
1c0063a8:	d3c50513          	addi	a0,a0,-708 # 1c00cd3c <__clz_tab+0x324>
1c0063ac:	1e6050ef          	jal	ra,1c00b592 <puts>
1c0063b0:	577d                	li	a4,-1
1c0063b2:	c63a                	sw	a4,12(sp)
1c0063b4:	853a                	mv	a0,a4
1c0063b6:	b791                	j	1c0062fa <main+0x50e>
1c0063b8:	1c00d537          	lui	a0,0x1c00d
1c0063bc:	d1c50513          	addi	a0,a0,-740 # 1c00cd1c <__clz_tab+0x304>
1c0063c0:	1d2050ef          	jal	ra,1c00b592 <puts>
1c0063c4:	5579                	li	a0,-2
1c0063c6:	270050ef          	jal	ra,1c00b636 <exit>

1c0063ca <pi_flash_open>:


int pi_flash_open(struct pi_device *device)
{
  struct pi_flash_conf *conf = (struct pi_flash_conf *)device->config;
  pi_flash_api_t *api = (pi_flash_api_t *)conf->api;
1c0063ca:	415c                	lw	a5,4(a0)
1c0063cc:	439c                	lw	a5,0(a5)
  device->api = (struct pi_device_api *)api;
  return api->open(device);
1c0063ce:	0007a303          	lw	t1,0(a5)
  device->api = (struct pi_device_api *)api;
1c0063d2:	c11c                	sw	a5,0(a0)
  return api->open(device);
1c0063d4:	8302                	jr	t1

1c0063d6 <__flash_conf_init>:
}


void __flash_conf_init(struct pi_flash_conf *conf)
{
}
1c0063d6:	8082                	ret

1c0063d8 <pi_task_wait_on.isra.3>:
  return api->open(device, file_name, flags);
}

void pi_fs_close(pi_fs_file_t *file)
{
  return file->api->close(file);
1c0063d8:	1141                	addi	sp,sp,-16
1c0063da:	c422                	sw	s0,8(sp)
1c0063dc:	c226                	sw	s1,4(sp)
1c0063de:	c606                	sw	ra,12(sp)
1c0063e0:	c04a                	sw	s2,0(sp)
1c0063e2:	842a                	mv	s0,a0
1c0063e4:	00040783          	lb	a5,0(s0)
1c0063e8:	c799                	beqz	a5,1c0063f6 <pi_task_wait_on.isra.3+0x1e>
1c0063ea:	40b2                	lw	ra,12(sp)
1c0063ec:	4422                	lw	s0,8(sp)
1c0063ee:	4492                	lw	s1,4(sp)
1c0063f0:	4902                	lw	s2,0(sp)
1c0063f2:	0141                	addi	sp,sp,16
1c0063f4:	8082                	ret
1c0063f6:	30047973          	csrrci	s2,mstatus,8
1c0063fa:	4585                	li	a1,1
1c0063fc:	01c00513          	li	a0,28
1c006400:	58f020ef          	jal	ra,1c00918e <__rt_event_execute>
1c006404:	30091073          	csrw	mstatus,s2
1c006408:	bff1                	j	1c0063e4 <pi_task_wait_on.isra.3+0xc>

1c00640a <pi_fs_conf_init>:
1c00640a:	00052023          	sw	zero,0(a0)
1c00640e:	00052423          	sw	zero,8(a0)
1c006412:	00050623          	sb	zero,12(a0)
1c006416:	00052823          	sw	zero,16(a0)
1c00641a:	8082                	ret

1c00641c <pi_fs_mount>:
1c00641c:	4158                	lw	a4,4(a0)
1c00641e:	4b1c                	lw	a5,16(a4)
1c006420:	eb89                	bnez	a5,1c006432 <pi_fs_mount+0x16>
1c006422:	431c                	lw	a5,0(a4)
1c006424:	cb99                	beqz	a5,1c00643a <pi_fs_mount+0x1e>
1c006426:	0017bf63          	p.bneimm	a5,1,1c006444 <pi_fs_mount+0x28>
1c00642a:	1c00d7b7          	lui	a5,0x1c00d
1c00642e:	29c78793          	addi	a5,a5,668 # 1c00d29c <__pi_host_fs_api>
1c006432:	0007a303          	lw	t1,0(a5)
1c006436:	c11c                	sw	a5,0(a0)
1c006438:	8302                	jr	t1
1c00643a:	1c00d7b7          	lui	a5,0x1c00d
1c00643e:	27478793          	addi	a5,a5,628 # 1c00d274 <__pi_read_fs_api>
1c006442:	bfc5                	j	1c006432 <pi_fs_mount+0x16>
1c006444:	557d                	li	a0,-1
1c006446:	8082                	ret

1c006448 <pi_fs_open>:
1c006448:	411c                	lw	a5,0(a0)
1c00644a:	0087a303          	lw	t1,8(a5)
1c00644e:	8302                	jr	t1

1c006450 <pi_fs_read_async>:
}

int32_t pi_fs_read_async(pi_fs_file_t *file, void *buffer, uint32_t size, pi_task_t *task)
{
  return file->api->read(file, buffer, size, task);
1c006450:	415c                	lw	a5,4(a0)
1c006452:	0107a303          	lw	t1,16(a5)
1c006456:	8302                	jr	t1

1c006458 <pi_fs_read>:
}

int32_t pi_fs_read(pi_fs_file_t *file, void *buffer, uint32_t size)
{
1c006458:	7175                	addi	sp,sp,-144
  return 0;
}

static inline struct pi_task *pi_task_block(struct pi_task *task)
{
  task->id = PI_TASK_NONE_ID;
1c00645a:	4785                	li	a5,1
  pi_task_t task;
  int result = pi_fs_read_async(file, buffer, size, pi_task_block(&task));
1c00645c:	868a                	mv	a3,sp
{
1c00645e:	c706                	sw	ra,140(sp)
1c006460:	c522                	sw	s0,136(sp)
1c006462:	cc3e                	sw	a5,24(sp)
  task->arg[0] = (uint32_t)0;
  task->implem.keep = 1;
1c006464:	d43e                	sw	a5,40(sp)
  task->arg[0] = (uint32_t)0;
1c006466:	c202                	sw	zero,4(sp)

void __rt_event_sched_init();

static inline void __rt_task_init(pi_task_t *task)
{
  task->done = 0;
1c006468:	00010a23          	sb	zero,20(sp)
  int result = pi_fs_read_async(file, buffer, size, pi_task_block(&task));
1c00646c:	37d5                	jal	1c006450 <pi_fs_read_async>
1c00646e:	842a                	mv	s0,a0
  pi_task_wait_on(&task);
1c006470:	0848                	addi	a0,sp,20
1c006472:	379d                	jal	1c0063d8 <pi_task_wait_on.isra.3>
  return result;
}
1c006474:	8522                	mv	a0,s0
1c006476:	40ba                	lw	ra,140(sp)
1c006478:	442a                	lw	s0,136(sp)
1c00647a:	6149                	addi	sp,sp,144
1c00647c:	8082                	ret

1c00647e <pi_fs_write_async>:

int32_t pi_fs_write_async(pi_fs_file_t *file, void *buffer, uint32_t size, pi_task_t *task)
{
  return file->api->write(file, buffer, size, task);
1c00647e:	415c                	lw	a5,4(a0)
1c006480:	0187a303          	lw	t1,24(a5)
1c006484:	8302                	jr	t1

1c006486 <pi_fs_write>:
}

int32_t pi_fs_write(pi_fs_file_t *file, void *buffer, uint32_t size)
{
1c006486:	7175                	addi	sp,sp,-144
  task->id = PI_TASK_NONE_ID;
1c006488:	4785                	li	a5,1
  pi_task_t task;
  int result = pi_fs_write_async(file, buffer, size, pi_task_block(&task));
1c00648a:	868a                	mv	a3,sp
{
1c00648c:	c706                	sw	ra,140(sp)
1c00648e:	c522                	sw	s0,136(sp)
1c006490:	cc3e                	sw	a5,24(sp)
  task->implem.keep = 1;
1c006492:	d43e                	sw	a5,40(sp)
  task->arg[0] = (uint32_t)0;
1c006494:	c202                	sw	zero,4(sp)
1c006496:	00010a23          	sb	zero,20(sp)
  int result = pi_fs_write_async(file, buffer, size, pi_task_block(&task));
1c00649a:	37d5                	jal	1c00647e <pi_fs_write_async>
1c00649c:	842a                	mv	s0,a0
  pi_task_wait_on(&task);
1c00649e:	0848                	addi	a0,sp,20
1c0064a0:	3f25                	jal	1c0063d8 <pi_task_wait_on.isra.3>
  return result;
}
1c0064a2:	8522                	mv	a0,s0
1c0064a4:	40ba                	lw	ra,140(sp)
1c0064a6:	442a                	lw	s0,136(sp)
1c0064a8:	6149                	addi	sp,sp,144
1c0064aa:	8082                	ret

1c0064ac <pi_flash_read_async>:
}

static inline void pi_flash_read_async(struct pi_device *device, uint32_t pi_flash_addr, void *data, uint32_t size, pi_task_t *task)
{
  pi_flash_api_t *api = (pi_flash_api_t *)device->api;
  api->read_async(device, pi_flash_addr, data, size, task);
1c0064ac:	411c                	lw	a5,0(a0)
1c0064ae:	00c7a303          	lw	t1,12(a5)
1c0064b2:	8302                	jr	t1

1c0064b4 <__pi_read_fs_write>:
    return block_size;
}

static int32_t __pi_read_fs_write(pi_fs_file_t *_file, void *buffer, uint32_t size, pi_task_t *task)
{
    pi_read_fs_t *fs = (pi_read_fs_t *) _file->fs->data;
1c0064b4:	411c                	lw	a5,0(a0)
    pi_read_fs_file_t *file = (pi_read_fs_file_t *) _file;
    
    int real_size = size;
    unsigned int addr = file->addr + file->offset;
1c0064b6:	01852803          	lw	a6,24(a0)
{
1c0064ba:	8736                	mv	a4,a3
    pi_read_fs_t *fs = (pi_read_fs_t *) _file->fs->data;
1c0064bc:	4794                	lw	a3,8(a5)
    unsigned int addr = file->addr + file->offset;
1c0064be:	495c                	lw	a5,20(a0)
{
1c0064c0:	88ae                	mv	a7,a1
1c0064c2:	1141                	addi	sp,sp,-16
    unsigned int addr = file->addr + file->offset;
1c0064c4:	010785b3          	add	a1,a5,a6
    if(file->offset + size > file->fs_file.size)
1c0064c8:	00c52803          	lw	a6,12(a0)
{
1c0064cc:	c606                	sw	ra,12(sp)
    if(file->offset + size > file->fs_file.size)
1c0064ce:	00c78333          	add	t1,a5,a2
1c0064d2:	00687463          	bleu	t1,a6,1c0064da <__pi_read_fs_write+0x26>
    {
        real_size = file->fs_file.size - file->offset;
1c0064d6:	40f80633          	sub	a2,a6,a5
    }
    file->offset += real_size;
1c0064da:	97b2                	add	a5,a5,a2
1c0064dc:	c95c                	sw	a5,20(a0)
    
    pi_flash_program_async(fs->flash, addr, (void *) buffer, real_size, task);
1c0064de:	4288                	lw	a0,0(a3)
}

static inline void pi_flash_program_async(struct pi_device *device, uint32_t pi_flash_addr, const void *data, uint32_t size, pi_task_t *task)
{
  pi_flash_api_t *api = (pi_flash_api_t *)device->api;
  api->program_async(device, pi_flash_addr, data, size, task);
1c0064e0:	86b2                	mv	a3,a2
1c0064e2:	8646                	mv	a2,a7
1c0064e4:	411c                	lw	a5,0(a0)
1c0064e6:	4b9c                	lw	a5,16(a5)
1c0064e8:	9782                	jalr	a5
    
    return 0;
}
1c0064ea:	40b2                	lw	ra,12(sp)
1c0064ec:	4501                	li	a0,0
1c0064ee:	0141                	addi	sp,sp,16
1c0064f0:	8082                	ret

1c0064f2 <__pi_read_fs_seek>:
static int32_t __pi_read_fs_seek(pi_fs_file_t *_file, unsigned int offset)
{
    pi_read_fs_file_t *file = (pi_read_fs_file_t *) _file;
    //printf("[FS] File seek (file: %p, offset: 0x%x)\n", file, offset);
    
    if(offset < file->fs_file.size)
1c0064f2:	455c                	lw	a5,12(a0)
1c0064f4:	00f5f563          	bleu	a5,a1,1c0064fe <__pi_read_fs_seek+0xc>
    {
        file->offset = offset;
1c0064f8:	c94c                	sw	a1,20(a0)
        return 0;
1c0064fa:	4501                	li	a0,0
1c0064fc:	8082                	ret
    }
    return -1;
1c0064fe:	557d                	li	a0,-1
}
1c006500:	8082                	ret

1c006502 <__pi_read_fs_direct_read_async>:
}

static int32_t __pi_read_fs_direct_read_async(pi_fs_file_t *_file, void *buffer, uint32_t size, pi_task_t *event)
{
    pi_read_fs_file_t *file = (pi_read_fs_file_t *) _file;
    pi_read_fs_t *fs = (pi_read_fs_t *) file->fs_file.fs->data;
1c006502:	411c                	lw	a5,0(a0)
{
1c006504:	1141                	addi	sp,sp,-16
1c006506:	c422                	sw	s0,8(sp)
    pi_read_fs_t *fs = (pi_read_fs_t *) file->fs_file.fs->data;
1c006508:	0087a803          	lw	a6,8(a5)
{
1c00650c:	8432                	mv	s0,a2
    // Mask interrupt to update file current position and get information
    //int irq = pi_irq_disable();
    
    int real_size = size;
    unsigned int addr = file->addr + file->offset;
1c00650e:	495c                	lw	a5,20(a0)
1c006510:	4d10                	lw	a2,24(a0)
{
1c006512:	88ae                	mv	a7,a1
1c006514:	8736                	mv	a4,a3
    unsigned int addr = file->addr + file->offset;
1c006516:	00c785b3          	add	a1,a5,a2
    if(file->offset + size > file->fs_file.size)
1c00651a:	4550                	lw	a2,12(a0)
{
1c00651c:	c606                	sw	ra,12(sp)
    if(file->offset + size > file->fs_file.size)
1c00651e:	008786b3          	add	a3,a5,s0
1c006522:	00d67463          	bleu	a3,a2,1c00652a <__pi_read_fs_direct_read_async+0x28>
    {
        real_size = file->fs_file.size - file->offset;
1c006526:	40f60433          	sub	s0,a2,a5
    }
    file->offset += real_size;
1c00652a:	97a2                	add	a5,a5,s0
1c00652c:	c95c                	sw	a5,20(a0)
    
    //pi_irq_restore(irq);
    
    pi_flash_read_async(fs->flash, addr, (void *) buffer, real_size, event);
1c00652e:	00082503          	lw	a0,0(a6)
1c006532:	86a2                	mv	a3,s0
1c006534:	8646                	mv	a2,a7
1c006536:	3f9d                	jal	1c0064ac <pi_flash_read_async>
    
    return real_size;
}
1c006538:	8522                	mv	a0,s0
1c00653a:	40b2                	lw	ra,12(sp)
1c00653c:	4422                	lw	s0,8(sp)
1c00653e:	0141                	addi	sp,sp,16
1c006540:	8082                	ret

1c006542 <__pi_read_fs_copy_async>:


static int32_t
__pi_read_fs_copy_async(pi_fs_file_t *_file, uint32_t index, void *buffer, uint32_t size, int32_t ext2loc,
                        pi_task_t *task)
{
1c006542:	882a                	mv	a6,a0
    pi_read_fs_file_t *file = (pi_read_fs_file_t *) _file;
    pi_read_fs_t *fs = (pi_read_fs_t *) file->fs_file.fs->data;
1c006544:	4108                	lw	a0,0(a0)
    return pi_flash_copy_async(fs->flash, file->addr + index, buffer, size, ext2loc, task);
1c006546:	01882803          	lw	a6,24(a6)
1c00654a:	4508                	lw	a0,8(a0)
}

static inline int pi_flash_copy_async(struct pi_device *device, uint32_t pi_flash_addr, void *buffer, uint32_t size, int ext2loc, pi_task_t *task)
{
  pi_flash_api_t *api = (pi_flash_api_t *)device->api;
  return api->copy_async(device, pi_flash_addr, buffer, size, ext2loc, task);
1c00654c:	95c2                	add	a1,a1,a6
1c00654e:	4108                	lw	a0,0(a0)
1c006550:	00052883          	lw	a7,0(a0)
1c006554:	0288a303          	lw	t1,40(a7)
1c006558:	8302                	jr	t1

1c00655a <__pi_read_fs_copy_2d_async>:
}

static int32_t
__pi_read_fs_copy_2d_async(pi_fs_file_t *_file, uint32_t index, void *buffer, uint32_t size, uint32_t stride,
                           uint32_t length, int32_t ext2loc, pi_task_t *task)
{
1c00655a:	832a                	mv	t1,a0
    pi_read_fs_file_t *file = (pi_read_fs_file_t *) _file;
    pi_read_fs_t *fs = (pi_read_fs_t *) file->fs_file.fs->data;
1c00655c:	4108                	lw	a0,0(a0)
    return pi_flash_copy_2d_async(fs->flash, file->addr + index, buffer, size, stride, length, ext2loc, task);
1c00655e:	01832e03          	lw	t3,24(t1)
1c006562:	4508                	lw	a0,8(a0)
}

static inline int pi_flash_copy_2d_async(struct pi_device *device, uint32_t pi_flash_addr, void *buffer, uint32_t size, uint32_t stride, uint32_t length, int ext2loc, pi_task_t *task)
{
  pi_flash_api_t *api = (pi_flash_api_t *)device->api;
  return api->copy_2d_async(device, pi_flash_addr, buffer, size, stride, length, ext2loc, task);
1c006564:	95f2                	add	a1,a1,t3
1c006566:	4108                	lw	a0,0(a0)
1c006568:	00052303          	lw	t1,0(a0)
1c00656c:	02c32303          	lw	t1,44(t1)
1c006570:	8302                	jr	t1

1c006572 <rt_event_enqueue>:

#if defined(__OPTIMIZE__) && defined(CORE_PULP_BUILTINS) && !defined(__LLVM__)

static inline unsigned int hal_spr_read_then_clr(unsigned int reg, unsigned int val)
{
  return __builtin_pulp_read_then_spr_bit_clr(reg, val);
1c006572:	300476f3          	csrrci	a3,mstatus,8
  if (sched->first) {
1c006576:	01c02603          	lw	a2,28(zero) # 1c <_l1_preload_size>
  event->next = NULL;
1c00657a:	00052023          	sw	zero,0(a0)
1c00657e:	01c00713          	li	a4,28
  if (sched->first) {
1c006582:	c619                	beqz	a2,1c006590 <rt_event_enqueue+0x1e>
    sched->last->next = event;
1c006584:	435c                	lw	a5,4(a4)
1c006586:	c388                	sw	a0,0(a5)
  sched->last = event;
1c006588:	c348                	sw	a0,4(a4)
  return __builtin_pulp_read_then_spr_bit_set(reg, val);
}

static inline void hal_spr_write(unsigned int reg, unsigned int val)
{
  __builtin_pulp_spr_write(reg, val);
1c00658a:	30069073          	csrw	mstatus,a3
}
1c00658e:	8082                	ret
    sched->first = event;
1c006590:	00a02e23          	sw	a0,28(zero) # 1c <_l1_preload_size>
1c006594:	bfd5                	j	1c006588 <rt_event_enqueue+0x16>

1c006596 <__pi_fs_free>:
    if(fs != NULL)
1c006596:	c91d                	beqz	a0,1c0065cc <__pi_fs_free+0x36>
{
1c006598:	1141                	addi	sp,sp,-16
1c00659a:	c422                	sw	s0,8(sp)
1c00659c:	842a                	mv	s0,a0
        if(fs->pi_fs_info) pmsis_l2_malloc_free(fs->pi_fs_info, fs->pi_fs_l2->pi_fs_size);
1c00659e:	09c52503          	lw	a0,156(a0)
{
1c0065a2:	c606                	sw	ra,12(sp)
        if(fs->pi_fs_info) pmsis_l2_malloc_free(fs->pi_fs_info, fs->pi_fs_l2->pi_fs_size);
1c0065a4:	c511                	beqz	a0,1c0065b0 <__pi_fs_free+0x1a>
1c0065a6:	09842783          	lw	a5,152(s0)
1c0065aa:	438c                	lw	a1,0(a5)
1c0065ac:	69d020ef          	jal	ra,1c009448 <pi_l2_free>
        if(fs->pi_fs_l2) pmsis_l2_malloc_free(fs->pi_fs_l2, sizeof(pi_fs_l2_t));
1c0065b0:	09842503          	lw	a0,152(s0)
1c0065b4:	c501                	beqz	a0,1c0065bc <__pi_fs_free+0x26>
1c0065b6:	45a1                	li	a1,8
1c0065b8:	691020ef          	jal	ra,1c009448 <pi_l2_free>
        pmsis_l2_malloc_free(fs, sizeof(pi_read_fs_t));
1c0065bc:	8522                	mv	a0,s0
}
1c0065be:	4422                	lw	s0,8(sp)
1c0065c0:	40b2                	lw	ra,12(sp)
        pmsis_l2_malloc_free(fs, sizeof(pi_read_fs_t));
1c0065c2:	1b800593          	li	a1,440
}
1c0065c6:	0141                	addi	sp,sp,16
        pmsis_l2_malloc_free(fs, sizeof(pi_read_fs_t));
1c0065c8:	6810206f          	j	1c009448 <pi_l2_free>
1c0065cc:	8082                	ret

1c0065ce <__pi_read_fs_unmount>:
    __pi_fs_free(fs);
1c0065ce:	4508                	lw	a0,8(a0)
1c0065d0:	b7d9                	j	1c006596 <__pi_fs_free>

1c0065d2 <__pi_read_fs_open>:
{
1c0065d2:	1101                	addi	sp,sp,-32
1c0065d4:	ca26                	sw	s1,20(sp)
1c0065d6:	c452                	sw	s4,8(sp)
1c0065d8:	c256                	sw	s5,4(sp)
1c0065da:	ce06                	sw	ra,28(sp)
1c0065dc:	cc22                	sw	s0,24(sp)
1c0065de:	c84a                	sw	s2,16(sp)
1c0065e0:	c64e                	sw	s3,12(sp)
1c0065e2:	c05a                	sw	s6,0(sp)
1c0065e4:	8a2a                	mv	s4,a0
1c0065e6:	8aae                	mv	s5,a1
    pi_read_fs_t *fs = (pi_read_fs_t *) device->data;
1c0065e8:	4504                	lw	s1,8(a0)
    if(flags == PI_FS_FLAGS_WRITE)
1c0065ea:	08163f63          	p.bneimm	a2,1,1c006688 <__pi_read_fs_open+0xb6>
        if(fs->last_created_file)
1c0065ee:	12c4a783          	lw	a5,300(s1)
1c0065f2:	c399                	beqz	a5,1c0065f8 <__pi_read_fs_open+0x26>
    return NULL;
1c0065f4:	4501                	li	a0,0
1c0065f6:	a8bd                	j	1c006674 <__pi_read_fs_open+0xa2>
        file = pmsis_l2_malloc(sizeof(pi_read_fs_file_t));
1c0065f8:	0c000513          	li	a0,192
1c0065fc:	63f020ef          	jal	ra,1c00943a <pi_l2_malloc>
1c006600:	842a                	mv	s0,a0
        if(file == NULL) return NULL;
1c006602:	d96d                	beqz	a0,1c0065f4 <__pi_read_fs_open+0x22>
        int str_len = strlen(file_name);
1c006604:	8556                	mv	a0,s5
1c006606:	5d1040ef          	jal	ra,1c00b3d6 <strlen>
        int header_size = ((str_len + 7) & ~0x7) + 12;
1c00660a:	00750913          	addi	s2,a0,7
1c00660e:	c4093933          	p.bclr	s2,s2,2,0
1c006612:	0931                	addi	s2,s2,12
        int str_len = strlen(file_name);
1c006614:	89aa                	mv	s3,a0
        uint8_t *header = pmsis_l2_malloc(header_size);
1c006616:	854a                	mv	a0,s2
1c006618:	623020ef          	jal	ra,1c00943a <pi_l2_malloc>
        if(header == NULL)
1c00661c:	e519                	bnez	a0,1c00662a <__pi_read_fs_open+0x58>
    pmsis_l2_malloc_free(file, sizeof(pi_read_fs_file_t));
1c00661e:	0c000593          	li	a1,192
1c006622:	8522                	mv	a0,s0
1c006624:	625020ef          	jal	ra,1c009448 <pi_l2_free>
1c006628:	b7f1                	j	1c0065f4 <__pi_read_fs_open+0x22>
        file->header = header;
1c00662a:	0aa42a23          	sw	a0,180(s0)
        file->header_size = header_size;
1c00662e:	0b242c23          	sw	s2,184(s0)
        memcpy(&file->header[12], file_name, str_len);
1c006632:	864e                	mv	a2,s3
1c006634:	85d6                	mv	a1,s5
1c006636:	0531                	addi	a0,a0,12
1c006638:	5c5040ef          	jal	ra,1c00b3fc <memcpy>
        *(uint32_t *) &file->header[8] = str_len;
1c00663c:	0b442783          	lw	a5,180(s0)
1c006640:	0137a423          	sw	s3,8(a5)
        file->addr = fs->free_flash_area + header_size;
1c006644:	1284a783          	lw	a5,296(s1)
        file->fs_file.size = 0;
1c006648:	00042623          	sw	zero,12(s0)
        file->offset = 0;
1c00664c:	00042a23          	sw	zero,20(s0)
        file->addr = fs->free_flash_area + header_size;
1c006650:	993e                	add	s2,s2,a5
        file->cache_addr = -1;
1c006652:	57fd                	li	a5,-1
        file->addr = fs->free_flash_area + header_size;
1c006654:	01242c23          	sw	s2,24(s0)
        file->cache_addr = -1;
1c006658:	0af42823          	sw	a5,176(s0)
        fs->last_created_file = file;
1c00665c:	1284a623          	sw	s0,300(s1)
    file->fs_file.api = (pi_fs_api_t *) device->api;
1c006660:	000a2783          	lw	a5,0(s4)
    file->fs_file.fs_data = &fs->fs_data;
1c006664:	13048493          	addi	s1,s1,304
    file->fs_file.data = file;
1c006668:	c400                	sw	s0,8(s0)
    file->fs_file.api = (pi_fs_api_t *) device->api;
1c00666a:	c05c                	sw	a5,4(s0)
    file->fs_file.fs = device;
1c00666c:	01442023          	sw	s4,0(s0)
    file->fs_file.fs_data = &fs->fs_data;
1c006670:	c804                	sw	s1,16(s0)
    return &file->fs_file;
1c006672:	8522                	mv	a0,s0
}
1c006674:	40f2                	lw	ra,28(sp)
1c006676:	4462                	lw	s0,24(sp)
1c006678:	44d2                	lw	s1,20(sp)
1c00667a:	4942                	lw	s2,16(sp)
1c00667c:	49b2                	lw	s3,12(sp)
1c00667e:	4a22                	lw	s4,8(sp)
1c006680:	4a92                	lw	s5,4(sp)
1c006682:	4b02                	lw	s6,0(sp)
1c006684:	6105                	addi	sp,sp,32
1c006686:	8082                	ret
        unsigned int *pi_fs_info = fs->pi_fs_info;
1c006688:	09c4a783          	lw	a5,156(s1)
        for (i = 0; i < nb_comps; i++)
1c00668c:	4981                	li	s3,0
        pi_fs_desc_t *desc = NULL;
1c00668e:	4901                	li	s2,0
        int nb_comps = *pi_fs_info++;
1c006690:	0007ab03          	lw	s6,0(a5)
1c006694:	00478413          	addi	s0,a5,4
        for (i = 0; i < nb_comps; i++)
1c006698:	0569c163          	blt	s3,s6,1c0066da <__pi_read_fs_open+0x108>
        if(i == nb_comps) goto error;
1c00669c:	f5698ce3          	beq	s3,s6,1c0065f4 <__pi_read_fs_open+0x22>
        file = pmsis_l2_malloc(sizeof(pi_read_fs_file_t));
1c0066a0:	0c000513          	li	a0,192
1c0066a4:	597020ef          	jal	ra,1c00943a <pi_l2_malloc>
1c0066a8:	842a                	mv	s0,a0
        if(file == NULL) goto error;
1c0066aa:	d529                	beqz	a0,1c0065f4 <__pi_read_fs_open+0x22>
        file->cache = pmsis_l2_malloc(READ_FS_THRESHOLD_BLOCK_FULL);
1c0066ac:	08800513          	li	a0,136
1c0066b0:	58b020ef          	jal	ra,1c00943a <pi_l2_malloc>
1c0066b4:	0aa42623          	sw	a0,172(s0)
        if(file->cache == NULL) goto error1;
1c0066b8:	d13d                	beqz	a0,1c00661e <__pi_read_fs_open+0x4c>
        file->fs_file.size = desc->size;
1c0066ba:	00492783          	lw	a5,4(s2)
        file->addr = desc->addr + fs->partition_offset;
1c0066be:	4498                	lw	a4,8(s1)
        file->header = NULL;
1c0066c0:	0a042a23          	sw	zero,180(s0)
        file->fs_file.size = desc->size;
1c0066c4:	c45c                	sw	a5,12(s0)
        file->addr = desc->addr + fs->partition_offset;
1c0066c6:	00092783          	lw	a5,0(s2)
        file->offset = 0;
1c0066ca:	00042a23          	sw	zero,20(s0)
        file->addr = desc->addr + fs->partition_offset;
1c0066ce:	97ba                	add	a5,a5,a4
1c0066d0:	cc1c                	sw	a5,24(s0)
        file->cache_addr = -1;
1c0066d2:	57fd                	li	a5,-1
1c0066d4:	0af42823          	sw	a5,176(s0)
1c0066d8:	b761                	j	1c006660 <__pi_read_fs_open+0x8e>
            if(strcmp(desc->name, file_name) == 0) break;
1c0066da:	85d6                	mv	a1,s5
1c0066dc:	00c40513          	addi	a0,s0,12
1c0066e0:	4c3040ef          	jal	ra,1c00b3a2 <strcmp>
1c0066e4:	c901                	beqz	a0,1c0066f4 <__pi_read_fs_open+0x122>
            pi_fs_info = (unsigned int *) ((unsigned int) pi_fs_info + sizeof(pi_fs_desc_t) + desc->path_size);
1c0066e6:	441c                	lw	a5,8(s0)
        for (i = 0; i < nb_comps; i++)
1c0066e8:	8922                	mv	s2,s0
1c0066ea:	0985                	addi	s3,s3,1
            pi_fs_info = (unsigned int *) ((unsigned int) pi_fs_info + sizeof(pi_fs_desc_t) + desc->path_size);
1c0066ec:	97a2                	add	a5,a5,s0
1c0066ee:	00c78413          	addi	s0,a5,12
1c0066f2:	b75d                	j	1c006698 <__pi_read_fs_open+0xc6>
1c0066f4:	8922                	mv	s2,s0
1c0066f6:	b76d                	j	1c0066a0 <__pi_read_fs_open+0xce>

1c0066f8 <__pi_fs_mount_step>:
{
1c0066f8:	7179                	addi	sp,sp,-48
1c0066fa:	d226                	sw	s1,36(sp)
    switch (fs->mount_step)
1c0066fc:	09052483          	lw	s1,144(a0)
{
1c006700:	d422                	sw	s0,40(sp)
1c006702:	d606                	sw	ra,44(sp)
1c006704:	d04a                	sw	s2,32(sp)
    const pi_partition_table_t partition_table = NULL;
1c006706:	ce02                	sw	zero,28(sp)
{
1c006708:	842a                	mv	s0,a0
    switch (fs->mount_step)
1c00670a:	0834a463          	p.beqimm	s1,3,1c006792 <__pi_fs_mount_step+0x9a>
1c00670e:	0c44a963          	p.beqimm	s1,4,1c0067e0 <__pi_fs_mount_step+0xe8>
1c006712:	0614ba63          	p.bneimm	s1,1,1c006786 <__pi_fs_mount_step+0x8e>
            rc = pi_partition_table_load(fs->flash, &partition_table);
1c006716:	4108                	lw	a0,0(a0)
1c006718:	086c                	addi	a1,sp,28
1c00671a:	3e8010ef          	jal	ra,1c007b02 <pi_partition_table_load>
            if(rc != PI_OK) goto error;
1c00671e:	ed09                	bnez	a0,1c006738 <__pi_fs_mount_step+0x40>
            readfs_partition = pi_partition_find_first(partition_table, PI_PARTITION_TYPE_DATA,
1c006720:	4054                	lw	a3,4(s0)
1c006722:	4572                	lw	a0,28(sp)
1c006724:	08100613          	li	a2,129
1c006728:	4585                	li	a1,1
1c00672a:	3dc010ef          	jal	ra,1c007b06 <pi_partition_find_first>
1c00672e:	892a                	mv	s2,a0
            if(readfs_partition == NULL)
1c006730:	e901                	bnez	a0,1c006740 <__pi_fs_mount_step+0x48>
                pi_partition_table_free(partition_table);
1c006732:	4572                	lw	a0,28(sp)
1c006734:	3cc010ef          	jal	ra,1c007b00 <pi_partition_table_free>
    fs->error = -1;
1c006738:	57fd                	li	a5,-1
1c00673a:	12f42223          	sw	a5,292(s0)
1c00673e:	a0c9                	j	1c006800 <__pi_fs_mount_step+0x108>
            fs->partition_offset = pi_partition_get_flash_offset(readfs_partition);
1c006740:	3b6010ef          	jal	ra,1c007af6 <pi_partition_get_flash_offset>

/// @cond IMPLEM

static inline pi_err_t pi_partition_close(const pi_partition_t *partition)
{
    pi_l2_free((pi_partition_t *) partition, sizeof(pi_partition_t));
1c006744:	02800593          	li	a1,40
1c006748:	c408                	sw	a0,8(s0)
1c00674a:	854a                	mv	a0,s2
1c00674c:	4fd020ef          	jal	ra,1c009448 <pi_l2_free>
            pi_partition_table_free(partition_table);
1c006750:	4572                	lw	a0,28(sp)
1c006752:	3ae010ef          	jal	ra,1c007b00 <pi_partition_table_free>
            fs->mount_step++;
1c006756:	09042783          	lw	a5,144(s0)
            pi_flash_read_async(fs->flash, fs->partition_offset, &fs->pi_fs_l2->pi_fs_size, 8,
1c00675a:	4008                	lw	a0,0(s0)
1c00675c:	440c                	lw	a1,8(s0)
            fs->mount_step++;
1c00675e:	0789                	addi	a5,a5,2
1c006760:	08f42823          	sw	a5,144(s0)
            pi_flash_read_async(fs->flash, fs->partition_offset, &fs->pi_fs_l2->pi_fs_size, 8,
1c006764:	09842603          	lw	a2,152(s0)


struct pi_task *pi_task_callback(struct pi_task *task, void (*callback)(void*), void *arg)
{
  task->id = PI_TASK_CALLBACK_ID;
  task->arg[0] = (uint32_t)callback;
1c006768:	1c0067b7          	lui	a5,0x1c006
1c00676c:	6f878793          	addi	a5,a5,1784 # 1c0066f8 <__pi_fs_mount_step>
  task->id = PI_TASK_CALLBACK_ID;
1c006770:	02042223          	sw	zero,36(s0)
  task->arg[0] = (uint32_t)callback;
1c006774:	c81c                	sw	a5,16(s0)
  task->arg[1] = (uint32_t)arg;
1c006776:	c840                	sw	s0,20(s0)
  task->implem.keep = 1;
1c006778:	d844                	sw	s1,52(s0)
  task->done = 0;
1c00677a:	02040023          	sb	zero,32(s0)
1c00677e:	00c40713          	addi	a4,s0,12
1c006782:	46a1                	li	a3,8
            pi_flash_read_async(fs->flash, pi_fs_offset + 8, (void *) fs->pi_fs_info, pi_fs_size,
1c006784:	3325                	jal	1c0064ac <pi_flash_read_async>
}
1c006786:	50b2                	lw	ra,44(sp)
1c006788:	5422                	lw	s0,40(sp)
1c00678a:	5492                	lw	s1,36(sp)
1c00678c:	5902                	lw	s2,32(sp)
1c00678e:	6145                	addi	sp,sp,48
1c006790:	8082                	ret
            int pi_fs_size = ((fs->pi_fs_l2->pi_fs_size + 7) & ~7);
1c006792:	09852783          	lw	a5,152(a0)
            int pi_fs_offset = fs->partition_offset;
1c006796:	4504                	lw	s1,8(a0)
            int pi_fs_size = ((fs->pi_fs_l2->pi_fs_size + 7) & ~7);
1c006798:	4394                	lw	a3,0(a5)
1c00679a:	069d                	addi	a3,a3,7
1c00679c:	c406b6b3          	p.bclr	a3,a3,2,0
            fs->pi_fs_info = pmsis_l2_malloc(pi_fs_size);
1c0067a0:	8536                	mv	a0,a3
1c0067a2:	c636                	sw	a3,12(sp)
1c0067a4:	497020ef          	jal	ra,1c00943a <pi_l2_malloc>
1c0067a8:	08a42e23          	sw	a0,156(s0)
1c0067ac:	862a                	mv	a2,a0
            if(fs->pi_fs_info == NULL)
1c0067ae:	46b2                	lw	a3,12(sp)
1c0067b0:	d541                	beqz	a0,1c006738 <__pi_fs_mount_step+0x40>
            fs->mount_step++;
1c0067b2:	09042783          	lw	a5,144(s0)
            pi_flash_read_async(fs->flash, pi_fs_offset + 8, (void *) fs->pi_fs_info, pi_fs_size,
1c0067b6:	4008                	lw	a0,0(s0)
  task->id = PI_TASK_CALLBACK_ID;
1c0067b8:	02042223          	sw	zero,36(s0)
            fs->mount_step++;
1c0067bc:	0785                	addi	a5,a5,1
1c0067be:	08f42823          	sw	a5,144(s0)
  task->arg[0] = (uint32_t)callback;
1c0067c2:	1c0067b7          	lui	a5,0x1c006
1c0067c6:	6f878793          	addi	a5,a5,1784 # 1c0066f8 <__pi_fs_mount_step>
1c0067ca:	c81c                	sw	a5,16(s0)
  task->implem.keep = 1;
1c0067cc:	4785                	li	a5,1
  task->arg[1] = (uint32_t)arg;
1c0067ce:	c840                	sw	s0,20(s0)
  task->implem.keep = 1;
1c0067d0:	d85c                	sw	a5,52(s0)
1c0067d2:	02040023          	sb	zero,32(s0)
            pi_flash_read_async(fs->flash, pi_fs_offset + 8, (void *) fs->pi_fs_info, pi_fs_size,
1c0067d6:	00c40713          	addi	a4,s0,12
1c0067da:	00848593          	addi	a1,s1,8
1c0067de:	b75d                	j	1c006784 <__pi_fs_mount_step+0x8c>
            unsigned int *pi_fs_info = fs->pi_fs_info;
1c0067e0:	09c52703          	lw	a4,156(a0)
            for (i = 0; i < nb_comps; i++)
1c0067e4:	4681                	li	a3,0
            int nb_comps = *pi_fs_info++;
1c0067e6:	00470793          	addi	a5,a4,4
1c0067ea:	430c                	lw	a1,0(a4)
            pi_fs_desc_t *desc = NULL;
1c0067ec:	4701                	li	a4,0
            for (i = 0; i < nb_comps; i++)
1c0067ee:	00b6cd63          	blt	a3,a1,1c006808 <__pi_fs_mount_step+0x110>
            if(desc == NULL)
1c0067f2:	e315                	bnez	a4,1c006816 <__pi_fs_mount_step+0x11e>
                fs->free_flash_area = desc->addr + desc->size;
1c0067f4:	12f42423          	sw	a5,296(s0)
            fs->last_created_file = NULL;
1c0067f8:	12042623          	sw	zero,300(s0)
            fs->error = 0;
1c0067fc:	12042223          	sw	zero,292(s0)
  rt_event_enqueue(task);
1c006800:	08c42503          	lw	a0,140(s0)
1c006804:	33bd                	jal	1c006572 <rt_event_enqueue>
1c006806:	b741                	j	1c006786 <__pi_fs_mount_step+0x8e>
                pi_fs_info = (unsigned int *) ((unsigned int) pi_fs_info + sizeof(pi_fs_desc_t) + desc->path_size);
1c006808:	4790                	lw	a2,8(a5)
            for (i = 0; i < nb_comps; i++)
1c00680a:	873e                	mv	a4,a5
1c00680c:	0685                	addi	a3,a3,1
                pi_fs_info = (unsigned int *) ((unsigned int) pi_fs_info + sizeof(pi_fs_desc_t) + desc->path_size);
1c00680e:	963e                	add	a2,a2,a5
1c006810:	00c60793          	addi	a5,a2,12
1c006814:	bfe9                	j	1c0067ee <__pi_fs_mount_step+0xf6>
                fs->free_flash_area = desc->addr + desc->size;
1c006816:	431c                	lw	a5,0(a4)
1c006818:	4358                	lw	a4,4(a4)
1c00681a:	97ba                	add	a5,a5,a4
1c00681c:	bfe1                	j	1c0067f4 <__pi_fs_mount_step+0xfc>

1c00681e <__pi_read_fs_close>:
    if(file->header == NULL)
1c00681e:	0b452603          	lw	a2,180(a0)
{
1c006822:	1141                	addi	sp,sp,-16
1c006824:	c422                	sw	s0,8(sp)
1c006826:	c606                	sw	ra,12(sp)
1c006828:	842a                	mv	s0,a0
    if(file->header == NULL)
1c00682a:	ee19                	bnez	a2,1c006848 <__pi_read_fs_close+0x2a>
        pmsis_l2_malloc_free(file->cache, READ_FS_THRESHOLD_BLOCK_FULL);
1c00682c:	0ac52503          	lw	a0,172(a0)
1c006830:	08800593          	li	a1,136
        pi_l2_free((void *) file->header, file->header_size);
1c006834:	415020ef          	jal	ra,1c009448 <pi_l2_free>
        pi_l2_free((void *) file, sizeof(pi_read_fs_file_t));
1c006838:	8522                	mv	a0,s0
}
1c00683a:	4422                	lw	s0,8(sp)
1c00683c:	40b2                	lw	ra,12(sp)
        pi_l2_free((void *) file, sizeof(pi_read_fs_file_t));
1c00683e:	0c000593          	li	a1,192
}
1c006842:	0141                	addi	sp,sp,16
        pi_l2_free((void *) file, sizeof(pi_read_fs_file_t));
1c006844:	4050206f          	j	1c009448 <pi_l2_free>
        pi_read_fs_t *fs = (pi_read_fs_t *) file->fs_file.fs->data;
1c006848:	411c                	lw	a5,0(a0)
        *(uint32_t *) &file->header[0] = file->addr;
1c00684a:	4d0c                	lw	a1,24(a0)
        *(uint32_t *) &file->header[4] = file->fs_file.size;
1c00684c:	4558                	lw	a4,12(a0)
        pi_read_fs_t *fs = (pi_read_fs_t *) file->fs_file.fs->data;
1c00684e:	479c                	lw	a5,8(a5)
  api->program(device, pi_flash_addr, data, size);
1c006850:	0b842683          	lw	a3,184(s0)
        *(uint32_t *) &file->header[0] = file->addr;
1c006854:	c20c                	sw	a1,0(a2)
        pi_flash_program(fs->flash, file->addr - file->header_size, (void *) file->header, file->header_size);
1c006856:	4388                	lw	a0,0(a5)
1c006858:	8d95                	sub	a1,a1,a3
        *(uint32_t *) &file->header[4] = file->fs_file.size;
1c00685a:	c258                	sw	a4,4(a2)
1c00685c:	411c                	lw	a5,0(a0)
1c00685e:	5bdc                	lw	a5,52(a5)
1c006860:	9782                	jalr	a5
        pi_l2_free((void *) file->header, file->header_size);
1c006862:	0b842583          	lw	a1,184(s0)
1c006866:	0b442503          	lw	a0,180(s0)
1c00686a:	b7e9                	j	1c006834 <__pi_read_fs_close+0x16>

1c00686c <__pi_read_fs_mount>:
{
1c00686c:	7175                	addi	sp,sp,-144
1c00686e:	c326                	sw	s1,132(sp)
1c006870:	c14a                	sw	s2,128(sp)
1c006872:	84aa                	mv	s1,a0
    struct pi_fs_conf *conf = (struct pi_fs_conf *) device->config;
1c006874:	00452903          	lw	s2,4(a0)
    pi_read_fs_t *fs = pmsis_l2_malloc(sizeof(pi_read_fs_t));
1c006878:	1b800513          	li	a0,440
{
1c00687c:	c522                	sw	s0,136(sp)
1c00687e:	c706                	sw	ra,140(sp)
    pi_read_fs_t *fs = pmsis_l2_malloc(sizeof(pi_read_fs_t));
1c006880:	3bb020ef          	jal	ra,1c00943a <pi_l2_malloc>
1c006884:	842a                	mv	s0,a0
    if(fs == NULL) goto error;
1c006886:	e911                	bnez	a0,1c00689a <__pi_read_fs_mount+0x2e>
    __pi_fs_free(fs);
1c006888:	8522                	mv	a0,s0
1c00688a:	3331                	jal	1c006596 <__pi_fs_free>
    return -1;
1c00688c:	557d                	li	a0,-1
}
1c00688e:	40ba                	lw	ra,140(sp)
1c006890:	442a                	lw	s0,136(sp)
1c006892:	449a                	lw	s1,132(sp)
1c006894:	490a                	lw	s2,128(sp)
1c006896:	6149                	addi	sp,sp,144
1c006898:	8082                	ret
    fs->flash = conf->flash;
1c00689a:	00492783          	lw	a5,4(s2)
    fs->pi_fs_l2 = NULL;
1c00689e:	08052c23          	sw	zero,152(a0)
    fs->pi_fs_info = NULL;
1c0068a2:	08052e23          	sw	zero,156(a0)
    fs->flash = conf->flash;
1c0068a6:	c11c                	sw	a5,0(a0)
    fs->fs_data.cluster_reqs_first = NULL;
1c0068a8:	12052823          	sw	zero,304(a0)
    fs->pi_fs_l2 = pmsis_l2_malloc(sizeof(pi_fs_l2_t));
1c0068ac:	4521                	li	a0,8
1c0068ae:	38d020ef          	jal	ra,1c00943a <pi_l2_malloc>
1c0068b2:	08a42c23          	sw	a0,152(s0)
    if(fs->pi_fs_l2 == NULL) goto error;
1c0068b6:	d969                	beqz	a0,1c006888 <__pi_read_fs_mount+0x1c>
    fs->mount_step = 1;
1c0068b8:	4785                	li	a5,1
1c0068ba:	08f42823          	sw	a5,144(s0)
  task->id = PI_TASK_NONE_ID;
1c0068be:	cc3e                	sw	a5,24(sp)
  task->implem.keep = 1;
1c0068c0:	d43e                	sw	a5,40(sp)
1c0068c2:	00010a23          	sb	zero,20(sp)
    fs->pending_event = pi_task_block(&task);
1c0068c6:	00010793          	mv	a5,sp
1c0068ca:	08f42623          	sw	a5,140(s0)
    fs->partition_name = conf->partition_name;
1c0068ce:	00892783          	lw	a5,8(s2)
  task->arg[0] = (uint32_t)0;
1c0068d2:	c202                	sw	zero,4(sp)
    fs->pi_fs_info = NULL;
1c0068d4:	08042e23          	sw	zero,156(s0)
    fs->partition_name = conf->partition_name;
1c0068d8:	c05c                	sw	a5,4(s0)
    device->data = (void *) fs;
1c0068da:	c480                	sw	s0,8(s1)
    __pi_fs_mount_step((void *) fs);
1c0068dc:	8522                	mv	a0,s0
1c0068de:	3d29                	jal	1c0066f8 <__pi_fs_mount_step>
  while(!task->done)
1c0068e0:	01410783          	lb	a5,20(sp)
1c0068e4:	c791                	beqz	a5,1c0068f0 <__pi_read_fs_mount+0x84>
    if(fs->error)
1c0068e6:	12442783          	lw	a5,292(s0)
1c0068ea:	ffd9                	bnez	a5,1c006888 <__pi_read_fs_mount+0x1c>
    return 0;
1c0068ec:	4501                	li	a0,0
1c0068ee:	b745                	j	1c00688e <__pi_read_fs_mount+0x22>
  return __builtin_pulp_read_then_spr_bit_clr(reg, val);
1c0068f0:	30047973          	csrrci	s2,mstatus,8
  __rt_event_execute(__rt_event_get_current_sched(), wait);
1c0068f4:	4585                	li	a1,1
1c0068f6:	01c00513          	li	a0,28
1c0068fa:	095020ef          	jal	ra,1c00918e <__rt_event_execute>
  __builtin_pulp_spr_write(reg, val);
1c0068fe:	30091073          	csrw	mstatus,s2
1c006902:	bff9                	j	1c0068e0 <__pi_read_fs_mount+0x74>

1c006904 <__pi_fs_read_cached>:
{
1c006904:	88ae                	mv	a7,a1
    if(addr < file->cache_addr || addr + size > file->cache_addr + READ_FS_THRESHOLD_BLOCK_FULL)
1c006906:	0b052583          	lw	a1,176(a0)
{
1c00690a:	1141                	addi	sp,sp,-16
1c00690c:	c226                	sw	s1,4(sp)
1c00690e:	c606                	sw	ra,12(sp)
1c006910:	c422                	sw	s0,8(sp)
1c006912:	84ba                	mv	s1,a4
1c006914:	0ac52803          	lw	a6,172(a0)
    if(addr < file->cache_addr || addr + size > file->cache_addr + READ_FS_THRESHOLD_BLOCK_FULL)
1c006918:	00b66f63          	bltu	a2,a1,1c006936 <__pi_fs_read_cached+0x32>
    if(size > READ_FS_THRESHOLD_BLOCK_FULL - (addr & 0x7)) size = READ_FS_THRESHOLD_BLOCK_FULL - (addr & 0x7);
1c00691c:	f8363733          	p.bclr	a4,a2,28,3
1c006920:	08800413          	li	s0,136
1c006924:	8c19                	sub	s0,s0,a4
1c006926:	04d45433          	p.minu	s0,s0,a3
    if(addr < file->cache_addr || addr + size > file->cache_addr + READ_FS_THRESHOLD_BLOCK_FULL)
1c00692a:	008606b3          	add	a3,a2,s0
1c00692e:	08858713          	addi	a4,a1,136
1c006932:	02d77a63          	bleu	a3,a4,1c006966 <__pi_fs_read_cached+0x62>
    pi_read_fs_t *fs = (pi_read_fs_t *) file->fs_file.fs->data;
1c006936:	4118                	lw	a4,0(a0)
        file->cache_addr = addr & ~0x7;
1c006938:	c40635b3          	p.bclr	a1,a2,2,0
    pi_flash_read_async(fs->flash, addr, (void *) buffer, size, event);
1c00693c:	08800693          	li	a3,136
    pi_read_fs_t *fs = (pi_read_fs_t *) file->fs_file.fs->data;
1c006940:	00872883          	lw	a7,8(a4)
        file->cache_addr = addr & ~0x7;
1c006944:	0ab52823          	sw	a1,176(a0)
    pi_flash_read_async(fs->flash, addr, (void *) buffer, size, event);
1c006948:	873e                	mv	a4,a5
1c00694a:	0008a503          	lw	a0,0(a7)
1c00694e:	8642                	mv	a2,a6
        return 0;
1c006950:	4401                	li	s0,0
    pi_flash_read_async(fs->flash, addr, (void *) buffer, size, event);
1c006952:	b5bff0ef          	jal	ra,1c0064ac <pi_flash_read_async>
        *pending = 1;
1c006956:	4785                	li	a5,1
1c006958:	c09c                	sw	a5,0(s1)
}
1c00695a:	8522                	mv	a0,s0
1c00695c:	40b2                	lw	ra,12(sp)
1c00695e:	4422                	lw	s0,8(sp)
1c006960:	4492                	lw	s1,4(sp)
1c006962:	0141                	addi	sp,sp,16
1c006964:	8082                	ret
    memcpy((void *) buffer, &file->cache[addr - file->cache_addr], size);
1c006966:	40b605b3          	sub	a1,a2,a1
1c00696a:	95c2                	add	a1,a1,a6
1c00696c:	8622                	mv	a2,s0
1c00696e:	8546                	mv	a0,a7
1c006970:	28d040ef          	jal	ra,1c00b3fc <memcpy>
    return __pi_fs_read_from_cache(file, buffer, addr, size);
1c006974:	b7dd                	j	1c00695a <__pi_fs_read_cached+0x56>

1c006976 <__pi_fs_read>:
{
1c006976:	7179                	addi	sp,sp,-48
1c006978:	d422                	sw	s0,40(sp)
1c00697a:	d226                	sw	s1,36(sp)
1c00697c:	d04a                	sw	s2,32(sp)
1c00697e:	ca56                	sw	s5,20(sp)
1c006980:	c85a                	sw	s6,16(sp)
1c006982:	d606                	sw	ra,44(sp)
1c006984:	8b3e                	mv	s6,a5
1c006986:	ce4e                	sw	s3,28(sp)
1c006988:	cc52                	sw	s4,24(sp)
1c00698a:	c65e                	sw	s7,12(sp)
    int use_cache = size <= READ_FS_THRESHOLD || (addr & 0x7) != (buffer & 0x7);
1c00698c:	47c1                	li	a5,16
{
1c00698e:	892e                	mv	s2,a1
1c006990:	8432                	mv	s0,a2
1c006992:	84b6                	mv	s1,a3
1c006994:	8aba                	mv	s5,a4
    int use_cache = size <= READ_FS_THRESHOLD || (addr & 0x7) != (buffer & 0x7);
1c006996:	06d7d063          	ble	a3,a5,1c0069f6 <__pi_fs_read+0x80>
1c00699a:	00b647b3          	xor	a5,a2,a1
1c00699e:	f837b7b3          	p.bclr	a5,a5,28,3
1c0069a2:	ebb1                	bnez	a5,1c0069f6 <__pi_fs_read+0x80>
    if(size <= READ_FS_THRESHOLD_BLOCK_FULL &&
1c0069a4:	08800793          	li	a5,136
1c0069a8:	06d7d763          	ble	a3,a5,1c006a16 <__pi_fs_read+0xa0>
    pi_read_fs_t *fs = (pi_read_fs_t *) file->fs_file.fs->data;
1c0069ac:	411c                	lw	a5,0(a0)
1c0069ae:	0087ab83          	lw	s7,8(a5)
    int prefix_size = addr & 0x7;
1c0069b2:	f83437b3          	p.bclr	a5,s0,28,3
    if(prefix_size)
1c0069b6:	c395                	beqz	a5,1c0069da <__pi_fs_read+0x64>
        prefix_size = 4 - prefix_size;
1c0069b8:	4991                	li	s3,4
1c0069ba:	40f989b3          	sub	s3,s3,a5
        int read_size = __pi_fs_read_cached(file, buffer, addr, prefix_size, pending, event);
1c0069be:	8756                	mv	a4,s5
1c0069c0:	87da                	mv	a5,s6
1c0069c2:	86ce                	mv	a3,s3
1c0069c4:	8622                	mv	a2,s0
1c0069c6:	85ca                	mv	a1,s2
1c0069c8:	3f35                	jal	1c006904 <__pi_fs_read_cached>
        if(*pending) return read_size;
1c0069ca:	000aa783          	lw	a5,0(s5)
        int read_size = __pi_fs_read_cached(file, buffer, addr, prefix_size, pending, event);
1c0069ce:	8a2a                	mv	s4,a0
        if(*pending) return read_size;
1c0069d0:	e7bd                	bnez	a5,1c006a3e <__pi_fs_read+0xc8>
        addr += prefix_size;
1c0069d2:	944e                	add	s0,s0,s3
        buffer += prefix_size;
1c0069d4:	994e                	add	s2,s2,s3
        size -= prefix_size;
1c0069d6:	413484b3          	sub	s1,s1,s3
    pi_flash_read_async(fs->flash, addr, (void *) buffer, size, event);
1c0069da:	000ba503          	lw	a0,0(s7)
    int block_size = size & ~0x7;
1c0069de:	c404ba33          	p.bclr	s4,s1,2,0
    pi_flash_read_async(fs->flash, addr, (void *) buffer, size, event);
1c0069e2:	875a                	mv	a4,s6
1c0069e4:	86d2                	mv	a3,s4
1c0069e6:	864a                	mv	a2,s2
1c0069e8:	85a2                	mv	a1,s0
1c0069ea:	ac3ff0ef          	jal	ra,1c0064ac <pi_flash_read_async>
    *pending = 1;
1c0069ee:	4785                	li	a5,1
1c0069f0:	00faa023          	sw	a5,0(s5)
    return block_size;
1c0069f4:	a0a9                	j	1c006a3e <__pi_fs_read+0xc8>
    if(use_cache) return __pi_fs_read_cached(file, buffer, addr, size, pending, event);
1c0069f6:	8622                	mv	a2,s0
}
1c0069f8:	5422                	lw	s0,40(sp)
1c0069fa:	50b2                	lw	ra,44(sp)
1c0069fc:	49f2                	lw	s3,28(sp)
1c0069fe:	4a62                	lw	s4,24(sp)
1c006a00:	4bb2                	lw	s7,12(sp)
    if(use_cache) return __pi_fs_read_cached(file, buffer, addr, size, pending, event);
1c006a02:	87da                	mv	a5,s6
1c006a04:	8756                	mv	a4,s5
}
1c006a06:	4b42                	lw	s6,16(sp)
1c006a08:	4ad2                	lw	s5,20(sp)
    if(use_cache) return __pi_fs_read_cached(file, buffer, addr, size, pending, event);
1c006a0a:	86a6                	mv	a3,s1
1c006a0c:	85ca                	mv	a1,s2
}
1c006a0e:	5492                	lw	s1,36(sp)
1c006a10:	5902                	lw	s2,32(sp)
1c006a12:	6145                	addi	sp,sp,48
    if(use_cache) return __pi_fs_read_cached(file, buffer, addr, size, pending, event);
1c006a14:	bdc5                	j	1c006904 <__pi_fs_read_cached>
       addr >= file->cache_addr &&
1c006a16:	0b052583          	lw	a1,176(a0)
    if(size <= READ_FS_THRESHOLD_BLOCK_FULL &&
1c006a1a:	f8b669e3          	bltu	a2,a1,1c0069ac <__pi_fs_read+0x36>
       addr + size < file->cache_addr + READ_FS_THRESHOLD_BLOCK_FULL)
1c006a1e:	00c687b3          	add	a5,a3,a2
1c006a22:	08858713          	addi	a4,a1,136
       addr >= file->cache_addr &&
1c006a26:	f8e7f3e3          	bleu	a4,a5,1c0069ac <__pi_fs_read+0x36>
    memcpy((void *) buffer, &file->cache[addr - file->cache_addr], size);
1c006a2a:	40b60433          	sub	s0,a2,a1
1c006a2e:	0ac52583          	lw	a1,172(a0)
1c006a32:	8636                	mv	a2,a3
1c006a34:	854a                	mv	a0,s2
1c006a36:	95a2                	add	a1,a1,s0
1c006a38:	1c5040ef          	jal	ra,1c00b3fc <memcpy>
        return __pi_fs_read_from_cache(file, buffer, addr, size);
1c006a3c:	8a26                	mv	s4,s1
}
1c006a3e:	50b2                	lw	ra,44(sp)
1c006a40:	5422                	lw	s0,40(sp)
1c006a42:	8552                	mv	a0,s4
1c006a44:	5492                	lw	s1,36(sp)
1c006a46:	5902                	lw	s2,32(sp)
1c006a48:	49f2                	lw	s3,28(sp)
1c006a4a:	4a62                	lw	s4,24(sp)
1c006a4c:	4ad2                	lw	s5,20(sp)
1c006a4e:	4b42                	lw	s6,16(sp)
1c006a50:	4bb2                	lw	s7,12(sp)
1c006a52:	6145                	addi	sp,sp,48
1c006a54:	8082                	ret

1c006a56 <__pi_read_fs_try_read>:
    if(file->pending_size == 0)
1c006a56:	0a852683          	lw	a3,168(a0)
{
1c006a5a:	7179                	addi	sp,sp,-48
1c006a5c:	d422                	sw	s0,40(sp)
1c006a5e:	d606                	sw	ra,44(sp)
1c006a60:	d226                	sw	s1,36(sp)
1c006a62:	d04a                	sw	s2,32(sp)
1c006a64:	ce4e                	sw	s3,28(sp)
    int pending = 0;
1c006a66:	c602                	sw	zero,12(sp)
{
1c006a68:	842a                	mv	s0,a0
    if(file->pending_size == 0)
1c006a6a:	ee99                	bnez	a3,1c006a88 <__pi_read_fs_try_read+0x32>
            file->pending_event->implem.data[0] = file->first_read_size;
1c006a6c:	501c                	lw	a5,32(s0)
1c006a6e:	0bc42703          	lw	a4,188(s0)
1c006a72:	df98                	sw	a4,56(a5)
  rt_event_enqueue(task);
1c006a74:	5008                	lw	a0,32(s0)
1c006a76:	afdff0ef          	jal	ra,1c006572 <rt_event_enqueue>
}
1c006a7a:	50b2                	lw	ra,44(sp)
1c006a7c:	5422                	lw	s0,40(sp)
1c006a7e:	5492                	lw	s1,36(sp)
1c006a80:	5902                	lw	s2,32(sp)
1c006a82:	49f2                	lw	s3,28(sp)
1c006a84:	6145                	addi	sp,sp,48
1c006a86:	8082                	ret
  task->arg[0] = (uint32_t)callback;
1c006a88:	1c0074b7          	lui	s1,0x1c007
1c006a8c:	a5648493          	addi	s1,s1,-1450 # 1c006a56 <__pi_read_fs_try_read>
  task->id = PI_TASK_CALLBACK_ID;
1c006a90:	02052e23          	sw	zero,60(a0)
  task->arg[0] = (uint32_t)callback;
1c006a94:	d504                	sw	s1,40(a0)
    int size = __pi_fs_read(
1c006a96:	4d50                	lw	a2,28(a0)
1c006a98:	0a452583          	lw	a1,164(a0)
  task->arg[1] = (uint32_t)arg;
1c006a9c:	d448                	sw	a0,44(s0)
            pi_task_callback(&file->step_event, __pi_read_fs_try_read, (void *) file)
1c006a9e:	02450913          	addi	s2,a0,36
  task->implem.keep = 1;
1c006aa2:	4985                	li	s3,1
    int size = __pi_fs_read(
1c006aa4:	87ca                	mv	a5,s2
1c006aa6:	05352623          	sw	s3,76(a0)
  task->done = 0;
1c006aaa:	02050c23          	sb	zero,56(a0)
1c006aae:	0078                	addi	a4,sp,12
1c006ab0:	35d9                	jal	1c006976 <__pi_fs_read>
    file->pending_addr += size;
1c006ab2:	4c5c                	lw	a5,28(s0)
1c006ab4:	97aa                	add	a5,a5,a0
1c006ab6:	cc5c                	sw	a5,28(s0)
    file->pending_buffer += size;
1c006ab8:	0a442783          	lw	a5,164(s0)
1c006abc:	97aa                	add	a5,a5,a0
1c006abe:	0af42223          	sw	a5,164(s0)
    file->pending_size -= size;
1c006ac2:	0a842783          	lw	a5,168(s0)
1c006ac6:	40a78533          	sub	a0,a5,a0
    if(!pending)
1c006aca:	47b2                	lw	a5,12(sp)
    file->pending_size -= size;
1c006acc:	0aa42423          	sw	a0,168(s0)
    if(!pending)
1c006ad0:	f7cd                	bnez	a5,1c006a7a <__pi_read_fs_try_read+0x24>
        if(file->pending_size == 0)
1c006ad2:	dd49                	beqz	a0,1c006a6c <__pi_read_fs_try_read+0x16>
  task->id = PI_TASK_CALLBACK_ID;
1c006ad4:	02042e23          	sw	zero,60(s0)
  task->arg[0] = (uint32_t)callback;
1c006ad8:	d404                	sw	s1,40(s0)
  task->arg[1] = (uint32_t)arg;
1c006ada:	d440                	sw	s0,44(s0)
  task->implem.keep = 1;
1c006adc:	05342623          	sw	s3,76(s0)
1c006ae0:	02040c23          	sb	zero,56(s0)
  rt_event_enqueue(task);
1c006ae4:	854a                	mv	a0,s2
1c006ae6:	bf41                	j	1c006a76 <__pi_read_fs_try_read+0x20>

1c006ae8 <__pi_read_fs_read_async>:
    if(file->offset + size > file->fs_file.size)
1c006ae8:	495c                	lw	a5,20(a0)
1c006aea:	4558                	lw	a4,12(a0)
{
1c006aec:	1101                	addi	sp,sp,-32
1c006aee:	ce06                	sw	ra,28(sp)
    if(file->offset + size > file->fs_file.size)
1c006af0:	00c78833          	add	a6,a5,a2
1c006af4:	01077463          	bleu	a6,a4,1c006afc <__pi_read_fs_read_async+0x14>
        real_size = file->fs_file.size - file->offset;
1c006af8:	40f70633          	sub	a2,a4,a5
    file->first_read_size = real_size;
1c006afc:	0ac52e23          	sw	a2,188(a0)
1c006b00:	00068a23          	sb	zero,20(a3)
    file->pending_addr = file->addr + file->offset;
1c006b04:	495c                	lw	a5,20(a0)
1c006b06:	4d18                	lw	a4,24(a0)
    file->pending_size = real_size;
1c006b08:	0ac52423          	sw	a2,168(a0)
    file->pending_event = event;
1c006b0c:	d114                	sw	a3,32(a0)
    file->pending_addr = file->addr + file->offset;
1c006b0e:	973e                	add	a4,a4,a5
    file->offset += real_size;
1c006b10:	97b2                	add	a5,a5,a2
    file->pending_buffer = (unsigned int) buffer;
1c006b12:	0ab52223          	sw	a1,164(a0)
    file->pending_addr = file->addr + file->offset;
1c006b16:	cd58                	sw	a4,28(a0)
    file->offset += real_size;
1c006b18:	c95c                	sw	a5,20(a0)
    __pi_read_fs_try_read((void *) file);
1c006b1a:	c632                	sw	a2,12(sp)
1c006b1c:	3f2d                	jal	1c006a56 <__pi_read_fs_try_read>
}
1c006b1e:	4632                	lw	a2,12(sp)
1c006b20:	40f2                	lw	ra,28(sp)
1c006b22:	8532                	mv	a0,a2
1c006b24:	6105                	addi	sp,sp,32
1c006b26:	8082                	ret

1c006b28 <pi_readfs_conf_init>:
    .copy = __pi_read_fs_copy_async,
    .copy_2d = __pi_read_fs_copy_2d_async
};

void pi_readfs_conf_init(struct pi_readfs_conf *conf)
{
1c006b28:	1141                	addi	sp,sp,-16
1c006b2a:	c422                	sw	s0,8(sp)
1c006b2c:	c606                	sw	ra,12(sp)
1c006b2e:	842a                	mv	s0,a0
    pi_fs_conf_init(&conf->fs);
1c006b30:	8dbff0ef          	jal	ra,1c00640a <pi_fs_conf_init>
    conf->fs.type = PI_FS_READ_ONLY;
    conf->fs.api = &__pi_read_fs_api;
1c006b34:	1c00d7b7          	lui	a5,0x1c00d
1c006b38:	27478793          	addi	a5,a5,628 # 1c00d274 <__pi_read_fs_api>
    conf->fs.type = PI_FS_READ_ONLY;
1c006b3c:	00042023          	sw	zero,0(s0)
    conf->fs.api = &__pi_read_fs_api;
1c006b40:	c81c                	sw	a5,16(s0)
}
1c006b42:	40b2                	lw	ra,12(sp)
1c006b44:	4422                	lw	s0,8(sp)
1c006b46:	0141                	addi	sp,sp,16
1c006b48:	8082                	ret

1c006b4a <__pi_host_fs_mount>:
  int fd;
} pi_host_fs_file_t;

static int32_t __pi_host_fs_mount(struct pi_device *device)
{
  bsp_fs_data.cluster_reqs_first = NULL;
1c006b4a:	1c00d7b7          	lui	a5,0x1c00d
1c006b4e:	6607a223          	sw	zero,1636(a5) # 1c00d664 <bsp_fs_data>
  return 0;
}
1c006b52:	4501                	li	a0,0
1c006b54:	8082                	ret

1c006b56 <__pi_host_fs_unmount>:

static void __pi_host_fs_unmount(struct pi_device *device)
{
}
1c006b56:	8082                	ret

1c006b58 <rt_event_enqueue>:
  return __builtin_pulp_read_then_spr_bit_clr(reg, val);
1c006b58:	300476f3          	csrrci	a3,mstatus,8
  if (sched->first) {
1c006b5c:	01c02603          	lw	a2,28(zero) # 1c <_l1_preload_size>
  event->next = NULL;
1c006b60:	00052023          	sw	zero,0(a0)
1c006b64:	01c00713          	li	a4,28
  if (sched->first) {
1c006b68:	c619                	beqz	a2,1c006b76 <rt_event_enqueue+0x1e>
    sched->last->next = event;
1c006b6a:	435c                	lw	a5,4(a4)
1c006b6c:	c388                	sw	a0,0(a5)
  sched->last = event;
1c006b6e:	c348                	sw	a0,4(a4)
  __builtin_pulp_spr_write(reg, val);
1c006b70:	30069073          	csrw	mstatus,a3
}
1c006b74:	8082                	ret
    sched->first = event;
1c006b76:	00a02e23          	sw	a0,28(zero) # 1c <_l1_preload_size>
1c006b7a:	bfd5                	j	1c006b6e <rt_event_enqueue+0x16>

1c006b7c <__pi_host_fs_seek>:
}

static int32_t __pi_host_fs_seek(pi_fs_file_t *arg, unsigned int offset)
{
  pi_host_fs_file_t *file = (pi_host_fs_file_t *)arg;
  return semihost_seek(file->fd, offset);
1c006b7c:	4948                	lw	a0,20(a0)
1c006b7e:	5470106f          	j	1c0088c4 <semihost_seek>

1c006b82 <__pi_host_fs_copy_2d_async>:
  else
    return __pi_host_fs_write_async(arg, buffer, size, task);
}

static int32_t __pi_host_fs_copy_2d_async(pi_fs_file_t *file, uint32_t index, void *buffer, uint32_t size, uint32_t stride, uint32_t length, int32_t ext2loc, pi_task_t *task)
{
1c006b82:	7179                	addi	sp,sp,-48
1c006b84:	d422                	sw	s0,40(sp)
1c006b86:	d226                	sw	s1,36(sp)
1c006b88:	d04a                	sw	s2,32(sp)
1c006b8a:	ce4e                	sw	s3,28(sp)
1c006b8c:	cc52                	sw	s4,24(sp)
1c006b8e:	ca56                	sw	s5,20(sp)
1c006b90:	c85a                	sw	s6,16(sp)
1c006b92:	c65e                	sw	s7,12(sp)
1c006b94:	c462                	sw	s8,8(sp)
1c006b96:	d606                	sw	ra,44(sp)
1c006b98:	89aa                	mv	s3,a0
1c006b9a:	8a2e                	mv	s4,a1
1c006b9c:	84b2                	mv	s1,a2
1c006b9e:	8b36                	mv	s6,a3
1c006ba0:	8bba                	mv	s7,a4
1c006ba2:	843e                	mv	s0,a5
1c006ba4:	8c42                	mv	s8,a6
1c006ba6:	8ac6                	mv	s5,a7
  unsigned int chunk;
  for (chunk=0; chunk<size; chunk+=length)
1c006ba8:	4901                	li	s2,0
1c006baa:	03696163          	bltu	s2,s6,1c006bcc <__pi_host_fs_copy_2d_async+0x4a>
1c006bae:	8556                	mv	a0,s5
1c006bb0:	3765                	jal	1c006b58 <rt_event_enqueue>

    buffer = ((char *)buffer) + length;
    index += stride;
  }
  pi_task_push(task);
  return 0;
1c006bb2:	4501                	li	a0,0

error:
  pi_task_push(task);
  return -1;
}
1c006bb4:	50b2                	lw	ra,44(sp)
1c006bb6:	5422                	lw	s0,40(sp)
1c006bb8:	5492                	lw	s1,36(sp)
1c006bba:	5902                	lw	s2,32(sp)
1c006bbc:	49f2                	lw	s3,28(sp)
1c006bbe:	4a62                	lw	s4,24(sp)
1c006bc0:	4ad2                	lw	s5,20(sp)
1c006bc2:	4b42                	lw	s6,16(sp)
1c006bc4:	4bb2                	lw	s7,12(sp)
1c006bc6:	4c22                	lw	s8,8(sp)
1c006bc8:	6145                	addi	sp,sp,48
1c006bca:	8082                	ret
    if (__pi_host_fs_seek(file, index))
1c006bcc:	85d2                	mv	a1,s4
1c006bce:	854e                	mv	a0,s3
1c006bd0:	05645433          	p.minu	s0,s0,s6
1c006bd4:	3765                	jal	1c006b7c <__pi_host_fs_seek>
1c006bd6:	e10d                	bnez	a0,1c006bf8 <__pi_host_fs_copy_2d_async+0x76>
      if (pi_fs_read(file, buffer, length) != (int)length)
1c006bd8:	8622                	mv	a2,s0
1c006bda:	85a6                	mv	a1,s1
1c006bdc:	854e                	mv	a0,s3
    if (ext2loc)
1c006bde:	000c0a63          	beqz	s8,1c006bf2 <__pi_host_fs_copy_2d_async+0x70>
      if (pi_fs_read(file, buffer, length) != (int)length)
1c006be2:	877ff0ef          	jal	ra,1c006458 <pi_fs_read>
1c006be6:	00851963          	bne	a0,s0,1c006bf8 <__pi_host_fs_copy_2d_async+0x76>
    buffer = ((char *)buffer) + length;
1c006bea:	94a2                	add	s1,s1,s0
    index += stride;
1c006bec:	9a5e                	add	s4,s4,s7
  for (chunk=0; chunk<size; chunk+=length)
1c006bee:	9922                	add	s2,s2,s0
1c006bf0:	bf6d                	j	1c006baa <__pi_host_fs_copy_2d_async+0x28>
      if (pi_fs_write(file, buffer, length) != (int)length)
1c006bf2:	895ff0ef          	jal	ra,1c006486 <pi_fs_write>
1c006bf6:	bfc5                	j	1c006be6 <__pi_host_fs_copy_2d_async+0x64>
1c006bf8:	8556                	mv	a0,s5
1c006bfa:	3fb9                	jal	1c006b58 <rt_event_enqueue>
  return -1;
1c006bfc:	557d                	li	a0,-1
1c006bfe:	bf5d                	j	1c006bb4 <__pi_host_fs_copy_2d_async+0x32>

1c006c00 <__pi_host_fs_write_async>:
  int result = size - semihost_write(file->fd, buffer, size);
1c006c00:	4948                	lw	a0,20(a0)
{
1c006c02:	1101                	addi	sp,sp,-32
1c006c04:	ce06                	sw	ra,28(sp)
1c006c06:	cc22                	sw	s0,24(sp)
1c006c08:	ca26                	sw	s1,20(sp)
  int result = size - semihost_write(file->fd, buffer, size);
1c006c0a:	c636                	sw	a3,12(sp)
{
1c006c0c:	84b2                	mv	s1,a2
  int result = size - semihost_write(file->fd, buffer, size);
1c006c0e:	49b010ef          	jal	ra,1c0088a8 <semihost_write>
1c006c12:	46b2                	lw	a3,12(sp)
1c006c14:	842a                	mv	s0,a0
1c006c16:	8536                	mv	a0,a3
1c006c18:	3781                	jal	1c006b58 <rt_event_enqueue>
}
1c006c1a:	40848533          	sub	a0,s1,s0
1c006c1e:	40f2                	lw	ra,28(sp)
1c006c20:	4462                	lw	s0,24(sp)
1c006c22:	44d2                	lw	s1,20(sp)
1c006c24:	6105                	addi	sp,sp,32
1c006c26:	8082                	ret

1c006c28 <__pi_host_fs_read_async>:
  int result = size - semihost_read(file->fd, buffer, size);
1c006c28:	4948                	lw	a0,20(a0)
{
1c006c2a:	1101                	addi	sp,sp,-32
1c006c2c:	ce06                	sw	ra,28(sp)
1c006c2e:	cc22                	sw	s0,24(sp)
  int result = size - semihost_read(file->fd, buffer, size);
1c006c30:	c636                	sw	a3,12(sp)
{
1c006c32:	8432                	mv	s0,a2
  int result = size - semihost_read(file->fd, buffer, size);
1c006c34:	459010ef          	jal	ra,1c00888c <semihost_read>
  task->implem.data[0] = result;
1c006c38:	46b2                	lw	a3,12(sp)
  int result = size - semihost_read(file->fd, buffer, size);
1c006c3a:	8c09                	sub	s0,s0,a0
  task->implem.data[0] = result;
1c006c3c:	de80                	sw	s0,56(a3)
1c006c3e:	8536                	mv	a0,a3
1c006c40:	3f21                	jal	1c006b58 <rt_event_enqueue>
}
1c006c42:	8522                	mv	a0,s0
1c006c44:	40f2                	lw	ra,28(sp)
1c006c46:	4462                	lw	s0,24(sp)
1c006c48:	6105                	addi	sp,sp,32
1c006c4a:	8082                	ret

1c006c4c <__pi_host_fs_copy_async>:
{
1c006c4c:	1101                	addi	sp,sp,-32
1c006c4e:	cc22                	sw	s0,24(sp)
1c006c50:	ca26                	sw	s1,20(sp)
  if (__pi_host_fs_seek(arg, index))
1c006c52:	c636                	sw	a3,12(sp)
{
1c006c54:	84b2                	mv	s1,a2
  if (__pi_host_fs_seek(arg, index))
1c006c56:	c43a                	sw	a4,8(sp)
{
1c006c58:	ce06                	sw	ra,28(sp)
1c006c5a:	842a                	mv	s0,a0
  if (__pi_host_fs_seek(arg, index))
1c006c5c:	c23e                	sw	a5,4(sp)
1c006c5e:	3f39                	jal	1c006b7c <__pi_host_fs_seek>
1c006c60:	4632                	lw	a2,12(sp)
1c006c62:	4692                	lw	a3,4(sp)
1c006c64:	4722                	lw	a4,8(sp)
1c006c66:	ed11                	bnez	a0,1c006c82 <__pi_host_fs_copy_async+0x36>
    return __pi_host_fs_read_async(arg, buffer, size, task);
1c006c68:	85a6                	mv	a1,s1
1c006c6a:	8522                	mv	a0,s0
  if (ext2loc)
1c006c6c:	c711                	beqz	a4,1c006c78 <__pi_host_fs_copy_async+0x2c>
}
1c006c6e:	4462                	lw	s0,24(sp)
1c006c70:	40f2                	lw	ra,28(sp)
1c006c72:	44d2                	lw	s1,20(sp)
1c006c74:	6105                	addi	sp,sp,32
    return __pi_host_fs_read_async(arg, buffer, size, task);
1c006c76:	bf4d                	j	1c006c28 <__pi_host_fs_read_async>
}
1c006c78:	4462                	lw	s0,24(sp)
1c006c7a:	40f2                	lw	ra,28(sp)
1c006c7c:	44d2                	lw	s1,20(sp)
1c006c7e:	6105                	addi	sp,sp,32
    return __pi_host_fs_write_async(arg, buffer, size, task);
1c006c80:	b741                	j	1c006c00 <__pi_host_fs_write_async>
}
1c006c82:	40f2                	lw	ra,28(sp)
1c006c84:	4462                	lw	s0,24(sp)
1c006c86:	44d2                	lw	s1,20(sp)
1c006c88:	557d                	li	a0,-1
1c006c8a:	6105                	addi	sp,sp,32
1c006c8c:	8082                	ret

1c006c8e <__pi_host_fs_direct_read_async>:
1c006c8e:	bf69                	j	1c006c28 <__pi_host_fs_read_async>

1c006c90 <__pi_host_fs_close>:
{
1c006c90:	1141                	addi	sp,sp,-16
1c006c92:	c422                	sw	s0,8(sp)
1c006c94:	842a                	mv	s0,a0
  semihost_close(file->fd);
1c006c96:	4948                	lw	a0,20(a0)
{
1c006c98:	c606                	sw	ra,12(sp)
  semihost_close(file->fd);
1c006c9a:	3ed010ef          	jal	ra,1c008886 <semihost_close>
  pmsis_l2_malloc_free(file, sizeof(pi_host_fs_file_t));
1c006c9e:	8522                	mv	a0,s0
}
1c006ca0:	4422                	lw	s0,8(sp)
1c006ca2:	40b2                	lw	ra,12(sp)
  pmsis_l2_malloc_free(file, sizeof(pi_host_fs_file_t));
1c006ca4:	45e1                	li	a1,24
}
1c006ca6:	0141                	addi	sp,sp,16
  pmsis_l2_malloc_free(file, sizeof(pi_host_fs_file_t));
1c006ca8:	7a00206f          	j	1c009448 <pi_l2_free>

1c006cac <__pi_host_fs_open>:
{
1c006cac:	1101                	addi	sp,sp,-32
1c006cae:	ca26                	sw	s1,20(sp)
1c006cb0:	84aa                	mv	s1,a0
  pi_host_fs_file_t *file = pmsis_l2_malloc(sizeof(pi_host_fs_file_t));
1c006cb2:	4561                	li	a0,24
{
1c006cb4:	c84a                	sw	s2,16(sp)
  pi_host_fs_file_t *file = pmsis_l2_malloc(sizeof(pi_host_fs_file_t));
1c006cb6:	c632                	sw	a2,12(sp)
{
1c006cb8:	ce06                	sw	ra,28(sp)
1c006cba:	cc22                	sw	s0,24(sp)
1c006cbc:	892e                	mv	s2,a1
  pi_host_fs_file_t *file = pmsis_l2_malloc(sizeof(pi_host_fs_file_t));
1c006cbe:	77c020ef          	jal	ra,1c00943a <pi_l2_malloc>
  if (file == NULL) goto error;
1c006cc2:	4632                	lw	a2,12(sp)
1c006cc4:	e909                	bnez	a0,1c006cd6 <__pi_host_fs_open+0x2a>
  return NULL;
1c006cc6:	4401                	li	s0,0
}
1c006cc8:	8522                	mv	a0,s0
1c006cca:	40f2                	lw	ra,28(sp)
1c006ccc:	4462                	lw	s0,24(sp)
1c006cce:	44d2                	lw	s1,20(sp)
1c006cd0:	4942                	lw	s2,16(sp)
1c006cd2:	6105                	addi	sp,sp,32
1c006cd4:	8082                	ret
  file->header.fs = device;
1c006cd6:	c104                	sw	s1,0(a0)
1c006cd8:	842a                	mv	s0,a0
  file->fd = semihost_open(file_name, flags == PI_FS_FLAGS_WRITE ? 6 : flags == PI_FS_FLAGS_APPEND ? 8 : 0);
1c006cda:	4599                	li	a1,6
1c006cdc:	00162663          	p.beqimm	a2,1,1c006ce8 <__pi_host_fs_open+0x3c>
1c006ce0:	45a1                	li	a1,8
1c006ce2:	00262363          	p.beqimm	a2,2,1c006ce8 <__pi_host_fs_open+0x3c>
1c006ce6:	4581                	li	a1,0
1c006ce8:	854a                	mv	a0,s2
1c006cea:	373010ef          	jal	ra,1c00885c <semihost_open>
1c006cee:	c848                	sw	a0,20(s0)
  if (file->fd == -1)
1c006cf0:	fdf52be3          	p.beqimm	a0,-1,1c006cc6 <__pi_host_fs_open+0x1a>
  file->header.api = (pi_fs_api_t *)device->api;
1c006cf4:	409c                	lw	a5,0(s1)
  file->header.data = file;
1c006cf6:	c400                	sw	s0,8(s0)
  file->header.fs = device;
1c006cf8:	c004                	sw	s1,0(s0)
  file->header.api = (pi_fs_api_t *)device->api;
1c006cfa:	c05c                	sw	a5,4(s0)
  file->header.fs_data = &bsp_fs_data;
1c006cfc:	1c00d7b7          	lui	a5,0x1c00d
1c006d00:	66478793          	addi	a5,a5,1636 # 1c00d664 <bsp_fs_data>
1c006d04:	c81c                	sw	a5,16(s0)
  return (pi_fs_file_t *)file;
1c006d06:	b7c9                	j	1c006cc8 <__pi_host_fs_open+0x1c>

1c006d08 <__rt_event_enqueue>:

    // Wait wakeup time
    pi_time_wait_us(300);

    // Don't know why on RTL, the flash model needs a SW reset
    hyperflash_set_reg_exec(hyperflash, 0x000<<1, 0xF0);
1c006d08:	01c02683          	lw	a3,28(zero) # 1c <_l1_preload_size>
1c006d0c:	00052023          	sw	zero,0(a0)
1c006d10:	01c00713          	li	a4,28
1c006d14:	c689                	beqz	a3,1c006d1e <__rt_event_enqueue+0x16>
1c006d16:	435c                	lw	a5,4(a4)
1c006d18:	c388                	sw	a0,0(a5)
1c006d1a:	c348                	sw	a0,4(a4)
1c006d1c:	8082                	ret
1c006d1e:	00a02e23          	sw	a0,28(zero) # 1c <_l1_preload_size>
1c006d22:	bfe5                	j	1c006d1a <__rt_event_enqueue+0x12>

1c006d24 <hyperflash_ioctl>:
1c006d24:	e589                	bnez	a1,1c006d2e <hyperflash_ioctl+0xa>
1c006d26:	000407b7          	lui	a5,0x40
1c006d2a:	c21c                	sw	a5,0(a2)
1c006d2c:	c25c                	sw	a5,4(a2)
1c006d2e:	4501                	li	a0,0
1c006d30:	8082                	ret

1c006d32 <hyperflash_set_reg_exec>:
1c006d32:	00c51623          	sh	a2,12(a0)
1c006d36:	4689                	li	a3,2
1c006d38:	00c50613          	addi	a2,a0,12
1c006d3c:	46b0306f          	j	1c00a9a6 <pi_hyper_write>

1c006d40 <hyperflash_stall_task>:
1c006d40:	30047373          	csrrci	t1,mstatus,8
1c006d44:	01852e03          	lw	t3,24(a0)
1c006d48:	020e0763          	beqz	t3,1c006d76 <hyperflash_stall_task+0x36>
1c006d4c:	dd90                	sw	a2,56(a1)
1c006d4e:	ddd4                	sw	a3,60(a1)
1c006d50:	c1b8                	sw	a4,64(a1)
1c006d52:	c1fc                	sw	a5,68(a1)
1c006d54:	0505a423          	sw	a6,72(a1)
1c006d58:	0515a623          	sw	a7,76(a1)
1c006d5c:	491c                	lw	a5,16(a0)
1c006d5e:	cb91                	beqz	a5,1c006d72 <hyperflash_stall_task+0x32>
1c006d60:	495c                	lw	a5,20(a0)
1c006d62:	cfcc                	sw	a1,28(a5)
1c006d64:	c94c                	sw	a1,20(a0)
1c006d66:	0005ae23          	sw	zero,28(a1)
1c006d6a:	30031073          	csrw	mstatus,t1
1c006d6e:	4505                	li	a0,1
1c006d70:	8082                	ret
1c006d72:	c90c                	sw	a1,16(a0)
1c006d74:	bfc5                	j	1c006d64 <hyperflash_stall_task+0x24>
1c006d76:	cd0c                	sw	a1,24(a0)
1c006d78:	30031073          	csrw	mstatus,t1
1c006d7c:	4501                	li	a0,0
1c006d7e:	8082                	ret

1c006d80 <hyperflash_read_2d_async>:
1c006d80:	1101                	addi	sp,sp,-32
1c006d82:	cc22                	sw	s0,24(sp)
1c006d84:	4500                	lw	s0,8(a0)
1c006d86:	ca26                	sw	s1,20(sp)
1c006d88:	84ae                	mv	s1,a1
1c006d8a:	c84a                	sw	s2,16(sp)
1c006d8c:	c64e                	sw	s3,12(sp)
1c006d8e:	c452                	sw	s4,8(sp)
1c006d90:	c256                	sw	s5,4(sp)
1c006d92:	c05a                	sw	s6,0(sp)
1c006d94:	8932                	mv	s2,a2
1c006d96:	8b2a                	mv	s6,a0
1c006d98:	89b6                	mv	s3,a3
1c006d9a:	8a3a                	mv	s4,a4
1c006d9c:	8abe                	mv	s5,a5
1c006d9e:	85c2                	mv	a1,a6
1c006da0:	88be                	mv	a7,a5
1c006da2:	883a                	mv	a6,a4
1c006da4:	87b6                	mv	a5,a3
1c006da6:	8732                	mv	a4,a2
1c006da8:	86a6                	mv	a3,s1
1c006daa:	4619                	li	a2,6
1c006dac:	8522                	mv	a0,s0
1c006dae:	ce06                	sw	ra,28(sp)
1c006db0:	3f41                	jal	1c006d40 <hyperflash_stall_task>
1c006db2:	e129                	bnez	a0,1c006df4 <hyperflash_read_2d_async+0x74>
1c006db4:	1c0077b7          	lui	a5,0x1c007
1c006db8:	fea78793          	addi	a5,a5,-22 # 1c006fea <hyperflash_handle_pending_task>
1c006dbc:	02040e23          	sb	zero,60(s0)
1c006dc0:	d45c                	sw	a5,44(s0)
1c006dc2:	4785                	li	a5,1
1c006dc4:	03642823          	sw	s6,48(s0)
1c006dc8:	c83c                	sw	a5,80(s0)
1c006dca:	04042023          	sw	zero,64(s0)
1c006dce:	02840813          	addi	a6,s0,40
1c006dd2:	8522                	mv	a0,s0
1c006dd4:	4462                	lw	s0,24(sp)
1c006dd6:	40f2                	lw	ra,28(sp)
1c006dd8:	4b02                	lw	s6,0(sp)
1c006dda:	87d6                	mv	a5,s5
1c006ddc:	8752                	mv	a4,s4
1c006dde:	4a92                	lw	s5,4(sp)
1c006de0:	4a22                	lw	s4,8(sp)
1c006de2:	86ce                	mv	a3,s3
1c006de4:	864a                	mv	a2,s2
1c006de6:	49b2                	lw	s3,12(sp)
1c006de8:	4942                	lw	s2,16(sp)
1c006dea:	85a6                	mv	a1,s1
1c006dec:	44d2                	lw	s1,20(sp)
1c006dee:	6105                	addi	sp,sp,32
1c006df0:	75f0306f          	j	1c00ad4e <pi_hyper_read_2d_async>
1c006df4:	40f2                	lw	ra,28(sp)
1c006df6:	4462                	lw	s0,24(sp)
1c006df8:	44d2                	lw	s1,20(sp)
1c006dfa:	4942                	lw	s2,16(sp)
1c006dfc:	49b2                	lw	s3,12(sp)
1c006dfe:	4a22                	lw	s4,8(sp)
1c006e00:	4a92                	lw	s5,4(sp)
1c006e02:	4b02                	lw	s6,0(sp)
1c006e04:	6105                	addi	sp,sp,32
1c006e06:	8082                	ret

1c006e08 <hyperflash_copy_2d_async>:
1c006e08:	00080a63          	beqz	a6,1c006e1c <hyperflash_copy_2d_async+0x14>
1c006e0c:	1141                	addi	sp,sp,-16
1c006e0e:	8846                	mv	a6,a7
1c006e10:	c606                	sw	ra,12(sp)
1c006e12:	37bd                	jal	1c006d80 <hyperflash_read_2d_async>
1c006e14:	40b2                	lw	ra,12(sp)
1c006e16:	4501                	li	a0,0
1c006e18:	0141                	addi	sp,sp,16
1c006e1a:	8082                	ret
1c006e1c:	557d                	li	a0,-1
1c006e1e:	8082                	ret

1c006e20 <hyperflash_erase_sector_async>:
1c006e20:	1101                	addi	sp,sp,-32
1c006e22:	cc22                	sw	s0,24(sp)
1c006e24:	4500                	lw	s0,8(a0)
1c006e26:	c64e                	sw	s3,12(sp)
1c006e28:	89ae                	mv	s3,a1
1c006e2a:	c84a                	sw	s2,16(sp)
1c006e2c:	85b2                	mv	a1,a2
1c006e2e:	892a                	mv	s2,a0
1c006e30:	4881                	li	a7,0
1c006e32:	4801                	li	a6,0
1c006e34:	4781                	li	a5,0
1c006e36:	4701                	li	a4,0
1c006e38:	86ce                	mv	a3,s3
1c006e3a:	4609                	li	a2,2
1c006e3c:	8522                	mv	a0,s0
1c006e3e:	ce06                	sw	ra,28(sp)
1c006e40:	ca26                	sw	s1,20(sp)
1c006e42:	3dfd                	jal	1c006d40 <hyperflash_stall_task>
1c006e44:	ed3d                	bnez	a0,1c006ec2 <hyperflash_erase_sector_async+0xa2>
1c006e46:	6485                	lui	s1,0x1
1c006e48:	aaa48593          	addi	a1,s1,-1366 # aaa <__rt_stack_size+0x2aa>
1c006e4c:	8522                	mv	a0,s0
1c006e4e:	0aa00613          	li	a2,170
1c006e52:	35c5                	jal	1c006d32 <hyperflash_set_reg_exec>
1c006e54:	8522                	mv	a0,s0
1c006e56:	05500613          	li	a2,85
1c006e5a:	55400593          	li	a1,1364
1c006e5e:	3dd1                	jal	1c006d32 <hyperflash_set_reg_exec>
1c006e60:	aaa48593          	addi	a1,s1,-1366
1c006e64:	8522                	mv	a0,s0
1c006e66:	08000613          	li	a2,128
1c006e6a:	35e1                	jal	1c006d32 <hyperflash_set_reg_exec>
1c006e6c:	aaa48593          	addi	a1,s1,-1366
1c006e70:	8522                	mv	a0,s0
1c006e72:	0aa00613          	li	a2,170
1c006e76:	3d75                	jal	1c006d32 <hyperflash_set_reg_exec>
1c006e78:	8522                	mv	a0,s0
1c006e7a:	05500613          	li	a2,85
1c006e7e:	55400593          	li	a1,1364
1c006e82:	3d45                	jal	1c006d32 <hyperflash_set_reg_exec>
1c006e84:	85ce                	mv	a1,s3
1c006e86:	8522                	mv	a0,s0
1c006e88:	03000613          	li	a2,48
1c006e8c:	355d                	jal	1c006d32 <hyperflash_set_reg_exec>
1c006e8e:	1c0077b7          	lui	a5,0x1c007
1c006e92:	5fe78793          	addi	a5,a5,1534 # 1c0075fe <hyperflash_check_erase>
1c006e96:	02040e23          	sb	zero,60(s0)
1c006e9a:	d45c                	sw	a5,44(s0)
1c006e9c:	4785                	li	a5,1
1c006e9e:	03242823          	sw	s2,48(s0)
1c006ea2:	04042023          	sw	zero,64(s0)
1c006ea6:	c83c                	sw	a5,80(s0)
1c006ea8:	02840513          	addi	a0,s0,40
1c006eac:	4462                	lw	s0,24(sp)
1c006eae:	40f2                	lw	ra,28(sp)
1c006eb0:	44d2                	lw	s1,20(sp)
1c006eb2:	4942                	lw	s2,16(sp)
1c006eb4:	49b2                	lw	s3,12(sp)
1c006eb6:	6589                	lui	a1,0x2
1c006eb8:	71058593          	addi	a1,a1,1808 # 2710 <__rt_stack_size+0x1f10>
1c006ebc:	6105                	addi	sp,sp,32
1c006ebe:	38e0206f          	j	1c00924c <pi_task_push_delayed_us>
1c006ec2:	40f2                	lw	ra,28(sp)
1c006ec4:	4462                	lw	s0,24(sp)
1c006ec6:	44d2                	lw	s1,20(sp)
1c006ec8:	4942                	lw	s2,16(sp)
1c006eca:	49b2                	lw	s3,12(sp)
1c006ecc:	6105                	addi	sp,sp,32
1c006ece:	8082                	ret

1c006ed0 <hyperflash_erase_chip_async>:
1c006ed0:	1141                	addi	sp,sp,-16
1c006ed2:	c422                	sw	s0,8(sp)
1c006ed4:	4500                	lw	s0,8(a0)
1c006ed6:	c04a                	sw	s2,0(sp)
1c006ed8:	4881                	li	a7,0
1c006eda:	892a                	mv	s2,a0
1c006edc:	4801                	li	a6,0
1c006ede:	4781                	li	a5,0
1c006ee0:	4701                	li	a4,0
1c006ee2:	4681                	li	a3,0
1c006ee4:	4605                	li	a2,1
1c006ee6:	8522                	mv	a0,s0
1c006ee8:	c606                	sw	ra,12(sp)
1c006eea:	c226                	sw	s1,4(sp)
1c006eec:	3d91                	jal	1c006d40 <hyperflash_stall_task>
1c006eee:	ed35                	bnez	a0,1c006f6a <hyperflash_erase_chip_async+0x9a>
1c006ef0:	6485                	lui	s1,0x1
1c006ef2:	aaa48593          	addi	a1,s1,-1366 # aaa <__rt_stack_size+0x2aa>
1c006ef6:	8522                	mv	a0,s0
1c006ef8:	0aa00613          	li	a2,170
1c006efc:	3d1d                	jal	1c006d32 <hyperflash_set_reg_exec>
1c006efe:	8522                	mv	a0,s0
1c006f00:	05500613          	li	a2,85
1c006f04:	55400593          	li	a1,1364
1c006f08:	352d                	jal	1c006d32 <hyperflash_set_reg_exec>
1c006f0a:	aaa48593          	addi	a1,s1,-1366
1c006f0e:	8522                	mv	a0,s0
1c006f10:	08000613          	li	a2,128
1c006f14:	3d39                	jal	1c006d32 <hyperflash_set_reg_exec>
1c006f16:	aaa48593          	addi	a1,s1,-1366
1c006f1a:	8522                	mv	a0,s0
1c006f1c:	0aa00613          	li	a2,170
1c006f20:	3d09                	jal	1c006d32 <hyperflash_set_reg_exec>
1c006f22:	8522                	mv	a0,s0
1c006f24:	05500613          	li	a2,85
1c006f28:	55400593          	li	a1,1364
1c006f2c:	3519                	jal	1c006d32 <hyperflash_set_reg_exec>
1c006f2e:	aaa48593          	addi	a1,s1,-1366
1c006f32:	8522                	mv	a0,s0
1c006f34:	4641                	li	a2,16
1c006f36:	3bf5                	jal	1c006d32 <hyperflash_set_reg_exec>
1c006f38:	1c0077b7          	lui	a5,0x1c007
1c006f3c:	5fe78793          	addi	a5,a5,1534 # 1c0075fe <hyperflash_check_erase>
1c006f40:	02040e23          	sb	zero,60(s0)
1c006f44:	d45c                	sw	a5,44(s0)
1c006f46:	4785                	li	a5,1
1c006f48:	03242823          	sw	s2,48(s0)
1c006f4c:	04042023          	sw	zero,64(s0)
1c006f50:	c83c                	sw	a5,80(s0)
1c006f52:	02840513          	addi	a0,s0,40
1c006f56:	4422                	lw	s0,8(sp)
1c006f58:	40b2                	lw	ra,12(sp)
1c006f5a:	4492                	lw	s1,4(sp)
1c006f5c:	4902                	lw	s2,0(sp)
1c006f5e:	65e1                	lui	a1,0x18
1c006f60:	6a058593          	addi	a1,a1,1696 # 186a0 <__L1Cl+0x86a0>
1c006f64:	0141                	addi	sp,sp,16
1c006f66:	2e60206f          	j	1c00924c <pi_task_push_delayed_us>
1c006f6a:	40b2                	lw	ra,12(sp)
1c006f6c:	4422                	lw	s0,8(sp)
1c006f6e:	4492                	lw	s1,4(sp)
1c006f70:	4902                	lw	s2,0(sp)
1c006f72:	0141                	addi	sp,sp,16
1c006f74:	8082                	ret

1c006f76 <hyperflash_read_async>:
1c006f76:	1101                	addi	sp,sp,-32
1c006f78:	cc22                	sw	s0,24(sp)
1c006f7a:	4500                	lw	s0,8(a0)
1c006f7c:	ca26                	sw	s1,20(sp)
1c006f7e:	84ae                	mv	s1,a1
1c006f80:	c84a                	sw	s2,16(sp)
1c006f82:	c64e                	sw	s3,12(sp)
1c006f84:	c452                	sw	s4,8(sp)
1c006f86:	8932                	mv	s2,a2
1c006f88:	8a2a                	mv	s4,a0
1c006f8a:	89b6                	mv	s3,a3
1c006f8c:	85ba                	mv	a1,a4
1c006f8e:	87b6                	mv	a5,a3
1c006f90:	8732                	mv	a4,a2
1c006f92:	4881                	li	a7,0
1c006f94:	4801                	li	a6,0
1c006f96:	86a6                	mv	a3,s1
1c006f98:	4615                	li	a2,5
1c006f9a:	8522                	mv	a0,s0
1c006f9c:	ce06                	sw	ra,28(sp)
1c006f9e:	334d                	jal	1c006d40 <hyperflash_stall_task>
1c006fa0:	ed0d                	bnez	a0,1c006fda <hyperflash_read_async+0x64>
1c006fa2:	1c0077b7          	lui	a5,0x1c007
1c006fa6:	fea78793          	addi	a5,a5,-22 # 1c006fea <hyperflash_handle_pending_task>
1c006faa:	02040e23          	sb	zero,60(s0)
1c006fae:	d45c                	sw	a5,44(s0)
1c006fb0:	4785                	li	a5,1
1c006fb2:	03442823          	sw	s4,48(s0)
1c006fb6:	04042023          	sw	zero,64(s0)
1c006fba:	c83c                	sw	a5,80(s0)
1c006fbc:	02840713          	addi	a4,s0,40
1c006fc0:	8522                	mv	a0,s0
1c006fc2:	4462                	lw	s0,24(sp)
1c006fc4:	40f2                	lw	ra,28(sp)
1c006fc6:	4a22                	lw	s4,8(sp)
1c006fc8:	86ce                	mv	a3,s3
1c006fca:	864a                	mv	a2,s2
1c006fcc:	49b2                	lw	s3,12(sp)
1c006fce:	4942                	lw	s2,16(sp)
1c006fd0:	85a6                	mv	a1,s1
1c006fd2:	44d2                	lw	s1,20(sp)
1c006fd4:	6105                	addi	sp,sp,32
1c006fd6:	1810306f          	j	1c00a956 <pi_hyper_read_async>
1c006fda:	40f2                	lw	ra,28(sp)
1c006fdc:	4462                	lw	s0,24(sp)
1c006fde:	44d2                	lw	s1,20(sp)
1c006fe0:	4942                	lw	s2,16(sp)
1c006fe2:	49b2                	lw	s3,12(sp)
1c006fe4:	4a22                	lw	s4,8(sp)
1c006fe6:	6105                	addi	sp,sp,32
1c006fe8:	8082                	ret

1c006fea <hyperflash_handle_pending_task>:
1c006fea:	1101                	addi	sp,sp,-32
1c006fec:	ca26                	sw	s1,20(sp)
1c006fee:	4504                	lw	s1,8(a0)
1c006ff0:	cc22                	sw	s0,24(sp)
1c006ff2:	842a                	mv	s0,a0
1c006ff4:	ce06                	sw	ra,28(sp)
1c006ff6:	c84a                	sw	s2,16(sp)
1c006ff8:	c64e                	sw	s3,12(sp)
1c006ffa:	30047973          	csrrci	s2,mstatus,8
1c006ffe:	4c88                	lw	a0,24(s1)
1c007000:	300479f3          	csrrci	s3,mstatus,8
1c007004:	d05ff0ef          	jal	ra,1c006d08 <__rt_event_enqueue>
1c007008:	30099073          	csrw	mstatus,s3
1c00700c:	4898                	lw	a4,16(s1)
1c00700e:	0004ac23          	sw	zero,24(s1)
1c007012:	c319                	beqz	a4,1c007018 <hyperflash_handle_pending_task+0x2e>
1c007014:	4f5c                	lw	a5,28(a4)
1c007016:	c89c                	sw	a5,16(s1)
1c007018:	30091073          	csrw	mstatus,s2
1c00701c:	c361                	beqz	a4,1c0070dc <hyperflash_handle_pending_task+0xf2>
1c00701e:	5f1c                	lw	a5,56(a4)
1c007020:	ef81                	bnez	a5,1c007038 <hyperflash_handle_pending_task+0x4e>
1c007022:	8522                	mv	a0,s0
1c007024:	4462                	lw	s0,24(sp)
1c007026:	40f2                	lw	ra,28(sp)
1c007028:	44d2                	lw	s1,20(sp)
1c00702a:	4942                	lw	s2,16(sp)
1c00702c:	49b2                	lw	s3,12(sp)
1c00702e:	4374                	lw	a3,68(a4)
1c007030:	4330                	lw	a2,64(a4)
1c007032:	5f4c                	lw	a1,60(a4)
1c007034:	6105                	addi	sp,sp,32
1c007036:	ac19                	j	1c00724c <hyperflash_program_async>
1c007038:	0017bb63          	p.bneimm	a5,1,1c00704e <hyperflash_handle_pending_task+0x64>
1c00703c:	8522                	mv	a0,s0
1c00703e:	4462                	lw	s0,24(sp)
1c007040:	40f2                	lw	ra,28(sp)
1c007042:	44d2                	lw	s1,20(sp)
1c007044:	4942                	lw	s2,16(sp)
1c007046:	49b2                	lw	s3,12(sp)
1c007048:	85ba                	mv	a1,a4
1c00704a:	6105                	addi	sp,sp,32
1c00704c:	b551                	j	1c006ed0 <hyperflash_erase_chip_async>
1c00704e:	0027bc63          	p.bneimm	a5,2,1c007066 <hyperflash_handle_pending_task+0x7c>
1c007052:	8522                	mv	a0,s0
1c007054:	4462                	lw	s0,24(sp)
1c007056:	40f2                	lw	ra,28(sp)
1c007058:	44d2                	lw	s1,20(sp)
1c00705a:	4942                	lw	s2,16(sp)
1c00705c:	49b2                	lw	s3,12(sp)
1c00705e:	5f4c                	lw	a1,60(a4)
1c007060:	863a                	mv	a2,a4
1c007062:	6105                	addi	sp,sp,32
1c007064:	bb75                	j	1c006e20 <hyperflash_erase_sector_async>
1c007066:	0037bd63          	p.bneimm	a5,3,1c007080 <hyperflash_handle_pending_task+0x96>
1c00706a:	8522                	mv	a0,s0
1c00706c:	4462                	lw	s0,24(sp)
1c00706e:	40f2                	lw	ra,28(sp)
1c007070:	44d2                	lw	s1,20(sp)
1c007072:	4942                	lw	s2,16(sp)
1c007074:	49b2                	lw	s3,12(sp)
1c007076:	4330                	lw	a2,64(a4)
1c007078:	5f4c                	lw	a1,60(a4)
1c00707a:	86ba                	mv	a3,a4
1c00707c:	6105                	addi	sp,sp,32
1c00707e:	a0e9                	j	1c007148 <hyperflash_reg_set_async>
1c007080:	0047bd63          	p.bneimm	a5,4,1c00709a <hyperflash_handle_pending_task+0xb0>
1c007084:	8522                	mv	a0,s0
1c007086:	4462                	lw	s0,24(sp)
1c007088:	40f2                	lw	ra,28(sp)
1c00708a:	44d2                	lw	s1,20(sp)
1c00708c:	4942                	lw	s2,16(sp)
1c00708e:	49b2                	lw	s3,12(sp)
1c007090:	4330                	lw	a2,64(a4)
1c007092:	5f4c                	lw	a1,60(a4)
1c007094:	86ba                	mv	a3,a4
1c007096:	6105                	addi	sp,sp,32
1c007098:	a889                	j	1c0070ea <hyperflash_reg_get_async>
1c00709a:	0057bd63          	p.bneimm	a5,5,1c0070b4 <hyperflash_handle_pending_task+0xca>
1c00709e:	8522                	mv	a0,s0
1c0070a0:	4462                	lw	s0,24(sp)
1c0070a2:	40f2                	lw	ra,28(sp)
1c0070a4:	44d2                	lw	s1,20(sp)
1c0070a6:	4942                	lw	s2,16(sp)
1c0070a8:	49b2                	lw	s3,12(sp)
1c0070aa:	4374                	lw	a3,68(a4)
1c0070ac:	4330                	lw	a2,64(a4)
1c0070ae:	5f4c                	lw	a1,60(a4)
1c0070b0:	6105                	addi	sp,sp,32
1c0070b2:	b5d1                	j	1c006f76 <hyperflash_read_async>
1c0070b4:	0267b463          	p.bneimm	a5,6,1c0070dc <hyperflash_handle_pending_task+0xf2>
1c0070b8:	883a                	mv	a6,a4
1c0070ba:	8522                	mv	a0,s0
1c0070bc:	4462                	lw	s0,24(sp)
1c0070be:	477c                	lw	a5,76(a4)
1c0070c0:	40f2                	lw	ra,28(sp)
1c0070c2:	44d2                	lw	s1,20(sp)
1c0070c4:	4942                	lw	s2,16(sp)
1c0070c6:	49b2                	lw	s3,12(sp)
1c0070c8:	4738                	lw	a4,72(a4)
1c0070ca:	04482683          	lw	a3,68(a6)
1c0070ce:	04082603          	lw	a2,64(a6)
1c0070d2:	03c82583          	lw	a1,60(a6)
1c0070d6:	6105                	addi	sp,sp,32
1c0070d8:	ca9ff06f          	j	1c006d80 <hyperflash_read_2d_async>
1c0070dc:	40f2                	lw	ra,28(sp)
1c0070de:	4462                	lw	s0,24(sp)
1c0070e0:	44d2                	lw	s1,20(sp)
1c0070e2:	4942                	lw	s2,16(sp)
1c0070e4:	49b2                	lw	s3,12(sp)
1c0070e6:	6105                	addi	sp,sp,32
1c0070e8:	8082                	ret

1c0070ea <hyperflash_reg_get_async>:
1c0070ea:	1101                	addi	sp,sp,-32
1c0070ec:	cc22                	sw	s0,24(sp)
1c0070ee:	4500                	lw	s0,8(a0)
1c0070f0:	c64e                	sw	s3,12(sp)
1c0070f2:	89ae                	mv	s3,a1
1c0070f4:	ca26                	sw	s1,20(sp)
1c0070f6:	c84a                	sw	s2,16(sp)
1c0070f8:	84aa                	mv	s1,a0
1c0070fa:	8932                	mv	s2,a2
1c0070fc:	85b6                	mv	a1,a3
1c0070fe:	8732                	mv	a4,a2
1c007100:	4881                	li	a7,0
1c007102:	4801                	li	a6,0
1c007104:	4781                	li	a5,0
1c007106:	86ce                	mv	a3,s3
1c007108:	4611                	li	a2,4
1c00710a:	8522                	mv	a0,s0
1c00710c:	ce06                	sw	ra,28(sp)
1c00710e:	c33ff0ef          	jal	ra,1c006d40 <hyperflash_stall_task>
1c007112:	e505                	bnez	a0,1c00713a <hyperflash_reg_get_async+0x50>
1c007114:	8522                	mv	a0,s0
1c007116:	00c40613          	addi	a2,s0,12
1c00711a:	85ce                	mv	a1,s3
1c00711c:	4691                	li	a3,4
1c00711e:	04f030ef          	jal	ra,1c00a96c <pi_hyper_read>
1c007122:	00c45783          	lhu	a5,12(s0)
1c007126:	4462                	lw	s0,24(sp)
1c007128:	40f2                	lw	ra,28(sp)
1c00712a:	00f91023          	sh	a5,0(s2)
1c00712e:	49b2                	lw	s3,12(sp)
1c007130:	4942                	lw	s2,16(sp)
1c007132:	8526                	mv	a0,s1
1c007134:	44d2                	lw	s1,20(sp)
1c007136:	6105                	addi	sp,sp,32
1c007138:	bd4d                	j	1c006fea <hyperflash_handle_pending_task>
1c00713a:	40f2                	lw	ra,28(sp)
1c00713c:	4462                	lw	s0,24(sp)
1c00713e:	44d2                	lw	s1,20(sp)
1c007140:	4942                	lw	s2,16(sp)
1c007142:	49b2                	lw	s3,12(sp)
1c007144:	6105                	addi	sp,sp,32
1c007146:	8082                	ret

1c007148 <hyperflash_reg_set_async>:
1c007148:	1101                	addi	sp,sp,-32
1c00714a:	ca26                	sw	s1,20(sp)
1c00714c:	4504                	lw	s1,8(a0)
1c00714e:	c84a                	sw	s2,16(sp)
1c007150:	892e                	mv	s2,a1
1c007152:	cc22                	sw	s0,24(sp)
1c007154:	c64e                	sw	s3,12(sp)
1c007156:	842a                	mv	s0,a0
1c007158:	89b2                	mv	s3,a2
1c00715a:	85b6                	mv	a1,a3
1c00715c:	8732                	mv	a4,a2
1c00715e:	4881                	li	a7,0
1c007160:	4801                	li	a6,0
1c007162:	4781                	li	a5,0
1c007164:	86ca                	mv	a3,s2
1c007166:	460d                	li	a2,3
1c007168:	8526                	mv	a0,s1
1c00716a:	ce06                	sw	ra,28(sp)
1c00716c:	bd5ff0ef          	jal	ra,1c006d40 <hyperflash_stall_task>
1c007170:	ed19                	bnez	a0,1c00718e <hyperflash_reg_set_async+0x46>
1c007172:	0009d603          	lhu	a2,0(s3)
1c007176:	8526                	mv	a0,s1
1c007178:	85ca                	mv	a1,s2
1c00717a:	bb9ff0ef          	jal	ra,1c006d32 <hyperflash_set_reg_exec>
1c00717e:	8522                	mv	a0,s0
1c007180:	4462                	lw	s0,24(sp)
1c007182:	40f2                	lw	ra,28(sp)
1c007184:	44d2                	lw	s1,20(sp)
1c007186:	4942                	lw	s2,16(sp)
1c007188:	49b2                	lw	s3,12(sp)
1c00718a:	6105                	addi	sp,sp,32
1c00718c:	bdb9                	j	1c006fea <hyperflash_handle_pending_task>
1c00718e:	40f2                	lw	ra,28(sp)
1c007190:	4462                	lw	s0,24(sp)
1c007192:	44d2                	lw	s1,20(sp)
1c007194:	4942                	lw	s2,16(sp)
1c007196:	49b2                	lw	s3,12(sp)
1c007198:	6105                	addi	sp,sp,32
1c00719a:	8082                	ret

1c00719c <hyperflash_program_resume>:
1c00719c:	1101                	addi	sp,sp,-32
1c00719e:	cc22                	sw	s0,24(sp)
1c0071a0:	4500                	lw	s0,8(a0)
1c0071a2:	ce06                	sw	ra,28(sp)
1c0071a4:	ca26                	sw	s1,20(sp)
1c0071a6:	13042683          	lw	a3,304(s0)
1c0071aa:	c84a                	sw	s2,16(sp)
1c0071ac:	e699                	bnez	a3,1c0071ba <hyperflash_program_resume+0x1e>
1c0071ae:	4462                	lw	s0,24(sp)
1c0071b0:	40f2                	lw	ra,28(sp)
1c0071b2:	44d2                	lw	s1,20(sp)
1c0071b4:	4942                	lw	s2,16(sp)
1c0071b6:	6105                	addi	sp,sp,32
1c0071b8:	bd0d                	j	1c006fea <hyperflash_handle_pending_task>
1c0071ba:	12842783          	lw	a5,296(s0)
1c0071be:	6905                	lui	s2,0x1
1c0071c0:	84aa                	mv	s1,a0
1c0071c2:	ec97b733          	p.bclr	a4,a5,22,9
1c0071c6:	20000793          	li	a5,512
1c0071ca:	8f99                	sub	a5,a5,a4
1c0071cc:	04f6d6b3          	p.minu	a3,a3,a5
1c0071d0:	aaa90593          	addi	a1,s2,-1366 # aaa <__rt_stack_size+0x2aa>
1c0071d4:	8522                	mv	a0,s0
1c0071d6:	0aa00613          	li	a2,170
1c0071da:	c636                	sw	a3,12(sp)
1c0071dc:	b57ff0ef          	jal	ra,1c006d32 <hyperflash_set_reg_exec>
1c0071e0:	8522                	mv	a0,s0
1c0071e2:	05500613          	li	a2,85
1c0071e6:	55400593          	li	a1,1364
1c0071ea:	b49ff0ef          	jal	ra,1c006d32 <hyperflash_set_reg_exec>
1c0071ee:	aaa90593          	addi	a1,s2,-1366
1c0071f2:	8522                	mv	a0,s0
1c0071f4:	0a000613          	li	a2,160
1c0071f8:	b3bff0ef          	jal	ra,1c006d32 <hyperflash_set_reg_exec>
1c0071fc:	46b2                	lw	a3,12(sp)
1c0071fe:	12842583          	lw	a1,296(s0)
1c007202:	12c42603          	lw	a2,300(s0)
1c007206:	02040e23          	sb	zero,60(s0)
1c00720a:	00d587b3          	add	a5,a1,a3
1c00720e:	12f42423          	sw	a5,296(s0)
1c007212:	00d607b3          	add	a5,a2,a3
1c007216:	12f42623          	sw	a5,300(s0)
1c00721a:	13042783          	lw	a5,304(s0)
1c00721e:	d804                	sw	s1,48(s0)
1c007220:	04042023          	sw	zero,64(s0)
1c007224:	8f95                	sub	a5,a5,a3
1c007226:	12f42823          	sw	a5,304(s0)
1c00722a:	1c0077b7          	lui	a5,0x1c007
1c00722e:	65078793          	addi	a5,a5,1616 # 1c007650 <hyperflash_check_program>
1c007232:	d45c                	sw	a5,44(s0)
1c007234:	4785                	li	a5,1
1c007236:	c83c                	sw	a5,80(s0)
1c007238:	02840713          	addi	a4,s0,40
1c00723c:	8522                	mv	a0,s0
1c00723e:	4462                	lw	s0,24(sp)
1c007240:	40f2                	lw	ra,28(sp)
1c007242:	44d2                	lw	s1,20(sp)
1c007244:	4942                	lw	s2,16(sp)
1c007246:	6105                	addi	sp,sp,32
1c007248:	7460306f          	j	1c00a98e <pi_hyper_write_async>

1c00724c <hyperflash_program_async>:
1c00724c:	1101                	addi	sp,sp,-32
1c00724e:	cc22                	sw	s0,24(sp)
1c007250:	4500                	lw	s0,8(a0)
1c007252:	c452                	sw	s4,8(sp)
1c007254:	8a2e                	mv	s4,a1
1c007256:	ca26                	sw	s1,20(sp)
1c007258:	c84a                	sw	s2,16(sp)
1c00725a:	c64e                	sw	s3,12(sp)
1c00725c:	84aa                	mv	s1,a0
1c00725e:	89b2                	mv	s3,a2
1c007260:	8936                	mv	s2,a3
1c007262:	85ba                	mv	a1,a4
1c007264:	87b6                	mv	a5,a3
1c007266:	8732                	mv	a4,a2
1c007268:	4881                	li	a7,0
1c00726a:	4801                	li	a6,0
1c00726c:	86d2                	mv	a3,s4
1c00726e:	4601                	li	a2,0
1c007270:	8522                	mv	a0,s0
1c007272:	ce06                	sw	ra,28(sp)
1c007274:	acdff0ef          	jal	ra,1c006d40 <hyperflash_stall_task>
1c007278:	e105                	bnez	a0,1c007298 <hyperflash_program_async+0x4c>
1c00727a:	13442423          	sw	s4,296(s0)
1c00727e:	13342623          	sw	s3,300(s0)
1c007282:	13242823          	sw	s2,304(s0)
1c007286:	4462                	lw	s0,24(sp)
1c007288:	40f2                	lw	ra,28(sp)
1c00728a:	4942                	lw	s2,16(sp)
1c00728c:	49b2                	lw	s3,12(sp)
1c00728e:	4a22                	lw	s4,8(sp)
1c007290:	8526                	mv	a0,s1
1c007292:	44d2                	lw	s1,20(sp)
1c007294:	6105                	addi	sp,sp,32
1c007296:	b719                	j	1c00719c <hyperflash_program_resume>
1c007298:	40f2                	lw	ra,28(sp)
1c00729a:	4462                	lw	s0,24(sp)
1c00729c:	44d2                	lw	s1,20(sp)
1c00729e:	4942                	lw	s2,16(sp)
1c0072a0:	49b2                	lw	s3,12(sp)
1c0072a2:	4a22                	lw	s4,8(sp)
1c0072a4:	6105                	addi	sp,sp,32
1c0072a6:	8082                	ret

1c0072a8 <hyperflash_copy_async>:
1c0072a8:	1141                	addi	sp,sp,-16
1c0072aa:	c606                	sw	ra,12(sp)
1c0072ac:	e719                	bnez	a4,1c0072ba <hyperflash_copy_async+0x12>
1c0072ae:	873e                	mv	a4,a5
1c0072b0:	3f71                	jal	1c00724c <hyperflash_program_async>
1c0072b2:	40b2                	lw	ra,12(sp)
1c0072b4:	4501                	li	a0,0
1c0072b6:	0141                	addi	sp,sp,16
1c0072b8:	8082                	ret
1c0072ba:	873e                	mv	a4,a5
1c0072bc:	cbbff0ef          	jal	ra,1c006f76 <hyperflash_read_async>
1c0072c0:	bfcd                	j	1c0072b2 <hyperflash_copy_async+0xa>

1c0072c2 <hyperflash_close>:
1c0072c2:	1141                	addi	sp,sp,-16
1c0072c4:	c422                	sw	s0,8(sp)
1c0072c6:	4500                	lw	s0,8(a0)
1c0072c8:	c606                	sw	ra,12(sp)
1c0072ca:	8522                	mv	a0,s0
1c0072cc:	4f8030ef          	jal	ra,1c00a7c4 <pi_hyper_close>
1c0072d0:	8522                	mv	a0,s0
1c0072d2:	4422                	lw	s0,8(sp)
1c0072d4:	40b2                	lw	ra,12(sp)
1c0072d6:	13c00593          	li	a1,316
1c0072da:	0141                	addi	sp,sp,16
1c0072dc:	16c0206f          	j	1c009448 <pi_l2_free>

1c0072e0 <hyperflash_open>:
1c0072e0:	7179                	addi	sp,sp,-48
1c0072e2:	d226                	sw	s1,36(sp)
1c0072e4:	d04a                	sw	s2,32(sp)
1c0072e6:	84aa                	mv	s1,a0
1c0072e8:	00452903          	lw	s2,4(a0)
1c0072ec:	13c00513          	li	a0,316
1c0072f0:	d606                	sw	ra,44(sp)
1c0072f2:	d422                	sw	s0,40(sp)
1c0072f4:	146020ef          	jal	ra,1c00943a <pi_l2_malloc>
1c0072f8:	c92d                	beqz	a0,1c00736a <hyperflash_open+0x8a>
1c0072fa:	c488                	sw	a0,8(s1)
1c0072fc:	842a                	mv	s0,a0
1c0072fe:	854a                	mv	a0,s2
1c007300:	64a010ef          	jal	ra,1c00894a <bsp_hyperflash_open>
1c007304:	84aa                	mv	s1,a0
1c007306:	e939                	bnez	a0,1c00735c <hyperflash_open+0x7c>
1c007308:	4671                	li	a2,28
1c00730a:	4581                	li	a1,0
1c00730c:	0048                	addi	a0,sp,4
1c00730e:	0de040ef          	jal	ra,1c00b3ec <memset>
1c007312:	0048                	addi	a0,sp,4
1c007314:	340030ef          	jal	ra,1c00a654 <pi_hyper_conf_init>
1c007318:	00492783          	lw	a5,4(s2)
1c00731c:	8522                	mv	a0,s0
1c00731e:	004c                	addi	a1,sp,4
1c007320:	00f10423          	sb	a5,8(sp)
1c007324:	00892783          	lw	a5,8(s2)
1c007328:	c802                	sw	zero,16(sp)
1c00732a:	c63e                	sw	a5,12(sp)
1c00732c:	00c92783          	lw	a5,12(s2)
1c007330:	ca3e                	sw	a5,20(sp)
1c007332:	7dc010ef          	jal	ra,1c008b0e <pi_open_from_conf>
1c007336:	8522                	mv	a0,s0
1c007338:	32c030ef          	jal	ra,1c00a664 <pi_hyper_open>
1c00733c:	e105                	bnez	a0,1c00735c <hyperflash_open+0x7c>
1c00733e:	00042c23          	sw	zero,24(s0)
1c007342:	00042823          	sw	zero,16(s0)
1c007346:	02042223          	sw	zero,36(s0)
1c00734a:	00042e23          	sw	zero,28(s0)
1c00734e:	50b2                	lw	ra,44(sp)
1c007350:	5422                	lw	s0,40(sp)
1c007352:	8526                	mv	a0,s1
1c007354:	5902                	lw	s2,32(sp)
1c007356:	5492                	lw	s1,36(sp)
1c007358:	6145                	addi	sp,sp,48
1c00735a:	8082                	ret
1c00735c:	13c00593          	li	a1,316
1c007360:	8522                	mv	a0,s0
1c007362:	0e6020ef          	jal	ra,1c009448 <pi_l2_free>
1c007366:	54f9                	li	s1,-2
1c007368:	b7dd                	j	1c00734e <hyperflash_open+0x6e>
1c00736a:	54fd                	li	s1,-1
1c00736c:	b7cd                	j	1c00734e <hyperflash_open+0x6e>

1c00736e <pi_task_wait_on.isra.3>:
1c00736e:	1141                	addi	sp,sp,-16
1c007370:	c422                	sw	s0,8(sp)
1c007372:	c226                	sw	s1,4(sp)
1c007374:	c606                	sw	ra,12(sp)
1c007376:	c04a                	sw	s2,0(sp)
1c007378:	842a                	mv	s0,a0
1c00737a:	00040783          	lb	a5,0(s0)
1c00737e:	c799                	beqz	a5,1c00738c <pi_task_wait_on.isra.3+0x1e>
1c007380:	40b2                	lw	ra,12(sp)
1c007382:	4422                	lw	s0,8(sp)
1c007384:	4492                	lw	s1,4(sp)
1c007386:	4902                	lw	s2,0(sp)
1c007388:	0141                	addi	sp,sp,16
1c00738a:	8082                	ret
1c00738c:	30047973          	csrrci	s2,mstatus,8
1c007390:	4585                	li	a1,1
1c007392:	01c00513          	li	a0,28
1c007396:	5f9010ef          	jal	ra,1c00918e <__rt_event_execute>
1c00739a:	30091073          	csrw	mstatus,s2
1c00739e:	bff1                	j	1c00737a <pi_task_wait_on.isra.3+0xc>

1c0073a0 <hyperflash_copy_2d>:
1c0073a0:	7175                	addi	sp,sp,-144
1c0073a2:	4885                	li	a7,1
1c0073a4:	c706                	sw	ra,140(sp)
1c0073a6:	cc46                	sw	a7,24(sp)
1c0073a8:	c202                	sw	zero,4(sp)
1c0073aa:	d446                	sw	a7,40(sp)
1c0073ac:	00010a23          	sb	zero,20(sp)
1c0073b0:	00080b63          	beqz	a6,1c0073c6 <hyperflash_copy_2d+0x26>
1c0073b4:	880a                	mv	a6,sp
1c0073b6:	9cbff0ef          	jal	ra,1c006d80 <hyperflash_read_2d_async>
1c0073ba:	0848                	addi	a0,sp,20
1c0073bc:	3f4d                	jal	1c00736e <pi_task_wait_on.isra.3>
1c0073be:	4501                	li	a0,0
1c0073c0:	40ba                	lw	ra,140(sp)
1c0073c2:	6149                	addi	sp,sp,144
1c0073c4:	8082                	ret
1c0073c6:	557d                	li	a0,-1
1c0073c8:	bfe5                	j	1c0073c0 <hyperflash_copy_2d+0x20>

1c0073ca <hyperflash_erase_sector>:
1c0073ca:	7175                	addi	sp,sp,-144
1c0073cc:	4785                	li	a5,1
1c0073ce:	860a                	mv	a2,sp
1c0073d0:	c706                	sw	ra,140(sp)
1c0073d2:	cc3e                	sw	a5,24(sp)
1c0073d4:	d43e                	sw	a5,40(sp)
1c0073d6:	c202                	sw	zero,4(sp)
1c0073d8:	00010a23          	sb	zero,20(sp)
1c0073dc:	a45ff0ef          	jal	ra,1c006e20 <hyperflash_erase_sector_async>
1c0073e0:	0848                	addi	a0,sp,20
1c0073e2:	3771                	jal	1c00736e <pi_task_wait_on.isra.3>
1c0073e4:	40ba                	lw	ra,140(sp)
1c0073e6:	4501                	li	a0,0
1c0073e8:	6149                	addi	sp,sp,144
1c0073ea:	8082                	ret

1c0073ec <hyperflash_erase_chip>:
1c0073ec:	7175                	addi	sp,sp,-144
1c0073ee:	4785                	li	a5,1
1c0073f0:	858a                	mv	a1,sp
1c0073f2:	c706                	sw	ra,140(sp)
1c0073f4:	cc3e                	sw	a5,24(sp)
1c0073f6:	d43e                	sw	a5,40(sp)
1c0073f8:	c202                	sw	zero,4(sp)
1c0073fa:	00010a23          	sb	zero,20(sp)
1c0073fe:	ad3ff0ef          	jal	ra,1c006ed0 <hyperflash_erase_chip_async>
1c007402:	0848                	addi	a0,sp,20
1c007404:	37ad                	jal	1c00736e <pi_task_wait_on.isra.3>
1c007406:	40ba                	lw	ra,140(sp)
1c007408:	4501                	li	a0,0
1c00740a:	6149                	addi	sp,sp,144
1c00740c:	8082                	ret

1c00740e <hyperflash_read>:
1c00740e:	7175                	addi	sp,sp,-144
1c007410:	4785                	li	a5,1
1c007412:	870a                	mv	a4,sp
1c007414:	c706                	sw	ra,140(sp)
1c007416:	cc3e                	sw	a5,24(sp)
1c007418:	d43e                	sw	a5,40(sp)
1c00741a:	c202                	sw	zero,4(sp)
1c00741c:	00010a23          	sb	zero,20(sp)
1c007420:	b57ff0ef          	jal	ra,1c006f76 <hyperflash_read_async>
1c007424:	0848                	addi	a0,sp,20
1c007426:	37a1                	jal	1c00736e <pi_task_wait_on.isra.3>
1c007428:	40ba                	lw	ra,140(sp)
1c00742a:	4501                	li	a0,0
1c00742c:	6149                	addi	sp,sp,144
1c00742e:	8082                	ret

1c007430 <hyperflash_reg_get>:
1c007430:	7175                	addi	sp,sp,-144
1c007432:	4785                	li	a5,1
1c007434:	868a                	mv	a3,sp
1c007436:	c706                	sw	ra,140(sp)
1c007438:	cc3e                	sw	a5,24(sp)
1c00743a:	d43e                	sw	a5,40(sp)
1c00743c:	c202                	sw	zero,4(sp)
1c00743e:	00010a23          	sb	zero,20(sp)
1c007442:	ca9ff0ef          	jal	ra,1c0070ea <hyperflash_reg_get_async>
1c007446:	0848                	addi	a0,sp,20
1c007448:	371d                	jal	1c00736e <pi_task_wait_on.isra.3>
1c00744a:	40ba                	lw	ra,140(sp)
1c00744c:	4501                	li	a0,0
1c00744e:	6149                	addi	sp,sp,144
1c007450:	8082                	ret

1c007452 <hyperflash_reg_set>:
1c007452:	7175                	addi	sp,sp,-144
1c007454:	4785                	li	a5,1
1c007456:	868a                	mv	a3,sp
1c007458:	c706                	sw	ra,140(sp)
1c00745a:	cc3e                	sw	a5,24(sp)
1c00745c:	d43e                	sw	a5,40(sp)
1c00745e:	c202                	sw	zero,4(sp)
1c007460:	00010a23          	sb	zero,20(sp)
1c007464:	ce5ff0ef          	jal	ra,1c007148 <hyperflash_reg_set_async>
1c007468:	0848                	addi	a0,sp,20
1c00746a:	3711                	jal	1c00736e <pi_task_wait_on.isra.3>
1c00746c:	40ba                	lw	ra,140(sp)
1c00746e:	4501                	li	a0,0
1c007470:	6149                	addi	sp,sp,144
1c007472:	8082                	ret

1c007474 <hyperflash_program>:
1c007474:	7175                	addi	sp,sp,-144
1c007476:	4785                	li	a5,1
1c007478:	870a                	mv	a4,sp
1c00747a:	c706                	sw	ra,140(sp)
1c00747c:	cc3e                	sw	a5,24(sp)
1c00747e:	d43e                	sw	a5,40(sp)
1c007480:	c202                	sw	zero,4(sp)
1c007482:	00010a23          	sb	zero,20(sp)
1c007486:	dc7ff0ef          	jal	ra,1c00724c <hyperflash_program_async>
1c00748a:	0848                	addi	a0,sp,20
1c00748c:	35cd                	jal	1c00736e <pi_task_wait_on.isra.3>
1c00748e:	40ba                	lw	ra,140(sp)
1c007490:	4501                	li	a0,0
1c007492:	6149                	addi	sp,sp,144
1c007494:	8082                	ret

1c007496 <hyperflash_copy>:
1c007496:	7175                	addi	sp,sp,-144
1c007498:	4785                	li	a5,1
1c00749a:	cc3e                	sw	a5,24(sp)
1c00749c:	d43e                	sw	a5,40(sp)
1c00749e:	878a                	mv	a5,sp
1c0074a0:	c522                	sw	s0,136(sp)
1c0074a2:	c706                	sw	ra,140(sp)
1c0074a4:	c202                	sw	zero,4(sp)
1c0074a6:	00010a23          	sb	zero,20(sp)
1c0074aa:	3bfd                	jal	1c0072a8 <hyperflash_copy_async>
1c0074ac:	547d                	li	s0,-1
1c0074ae:	e501                	bnez	a0,1c0074b6 <hyperflash_copy+0x20>
1c0074b0:	842a                	mv	s0,a0
1c0074b2:	0848                	addi	a0,sp,20
1c0074b4:	3d6d                	jal	1c00736e <pi_task_wait_on.isra.3>
1c0074b6:	8522                	mv	a0,s0
1c0074b8:	40ba                	lw	ra,140(sp)
1c0074ba:	442a                	lw	s0,136(sp)
1c0074bc:	6149                	addi	sp,sp,144
1c0074be:	8082                	ret

1c0074c0 <hyperflash_erase_resume>:
1c0074c0:	1101                	addi	sp,sp,-32
1c0074c2:	cc22                	sw	s0,24(sp)
1c0074c4:	4500                	lw	s0,8(a0)
1c0074c6:	ca26                	sw	s1,20(sp)
1c0074c8:	c84a                	sw	s2,16(sp)
1c0074ca:	13842483          	lw	s1,312(s0)
1c0074ce:	ce06                	sw	ra,28(sp)
1c0074d0:	c64e                	sw	s3,12(sp)
1c0074d2:	892a                	mv	s2,a0
1c0074d4:	ec8d                	bnez	s1,1c00750e <hyperflash_erase_resume+0x4e>
1c0074d6:	300474f3          	csrrci	s1,mstatus,8
1c0074da:	5048                	lw	a0,36(s0)
1c0074dc:	300479f3          	csrrci	s3,mstatus,8
1c0074e0:	829ff0ef          	jal	ra,1c006d08 <__rt_event_enqueue>
1c0074e4:	30099073          	csrw	mstatus,s3
1c0074e8:	4c54                	lw	a3,28(s0)
1c0074ea:	02042223          	sw	zero,36(s0)
1c0074ee:	c299                	beqz	a3,1c0074f4 <hyperflash_erase_resume+0x34>
1c0074f0:	4edc                	lw	a5,28(a3)
1c0074f2:	cc5c                	sw	a5,28(s0)
1c0074f4:	30049073          	csrw	mstatus,s1
1c0074f8:	c2b5                	beqz	a3,1c00755c <hyperflash_erase_resume+0x9c>
1c0074fa:	4462                	lw	s0,24(sp)
1c0074fc:	40f2                	lw	ra,28(sp)
1c0074fe:	44d2                	lw	s1,20(sp)
1c007500:	49b2                	lw	s3,12(sp)
1c007502:	42b0                	lw	a2,64(a3)
1c007504:	5ecc                	lw	a1,60(a3)
1c007506:	854a                	mv	a0,s2
1c007508:	4942                	lw	s2,16(sp)
1c00750a:	6105                	addi	sp,sp,32
1c00750c:	a8b9                	j	1c00756a <hyperflash_erase_async>
1c00750e:	13442583          	lw	a1,308(s0)
1c007512:	000407b7          	lui	a5,0x40
1c007516:	0c042023          	sw	zero,192(s0)
1c00751a:	db25b733          	p.bclr	a4,a1,13,18
1c00751e:	8f99                	sub	a5,a5,a4
1c007520:	04f4d4b3          	p.minu	s1,s1,a5
1c007524:	1c0077b7          	lui	a5,0x1c007
1c007528:	4c078793          	addi	a5,a5,1216 # 1c0074c0 <hyperflash_erase_resume>
1c00752c:	0af42623          	sw	a5,172(s0)
1c007530:	4785                	li	a5,1
1c007532:	0cf42823          	sw	a5,208(s0)
1c007536:	0aa42823          	sw	a0,176(s0)
1c00753a:	0a040e23          	sb	zero,188(s0)
1c00753e:	0a840613          	addi	a2,s0,168
1c007542:	8dfff0ef          	jal	ra,1c006e20 <hyperflash_erase_sector_async>
1c007546:	13442783          	lw	a5,308(s0)
1c00754a:	97a6                	add	a5,a5,s1
1c00754c:	12f42a23          	sw	a5,308(s0)
1c007550:	13842783          	lw	a5,312(s0)
1c007554:	409784b3          	sub	s1,a5,s1
1c007558:	12942c23          	sw	s1,312(s0)
1c00755c:	40f2                	lw	ra,28(sp)
1c00755e:	4462                	lw	s0,24(sp)
1c007560:	44d2                	lw	s1,20(sp)
1c007562:	4942                	lw	s2,16(sp)
1c007564:	49b2                	lw	s3,12(sp)
1c007566:	6105                	addi	sp,sp,32
1c007568:	8082                	ret

1c00756a <hyperflash_erase_async>:
1c00756a:	451c                	lw	a5,8(a0)
1c00756c:	30047773          	csrrci	a4,mstatus,8
1c007570:	0247a803          	lw	a6,36(a5)
1c007574:	02080463          	beqz	a6,1c00759c <hyperflash_erase_async+0x32>
1c007578:	450d                	li	a0,3
1c00757a:	de88                	sw	a0,56(a3)
1c00757c:	decc                	sw	a1,60(a3)
1c00757e:	c2b0                	sw	a2,64(a3)
1c007580:	0406a223          	sw	zero,68(a3)
1c007584:	4fd0                	lw	a2,28(a5)
1c007586:	ca09                	beqz	a2,1c007598 <hyperflash_erase_async+0x2e>
1c007588:	5390                	lw	a2,32(a5)
1c00758a:	ce54                	sw	a3,28(a2)
1c00758c:	d394                	sw	a3,32(a5)
1c00758e:	0006ae23          	sw	zero,28(a3)
1c007592:	30071073          	csrw	mstatus,a4
1c007596:	8082                	ret
1c007598:	cfd4                	sw	a3,28(a5)
1c00759a:	bfcd                	j	1c00758c <hyperflash_erase_async+0x22>
1c00759c:	d3d4                	sw	a3,36(a5)
1c00759e:	30071073          	csrw	mstatus,a4
1c0075a2:	12b7aa23          	sw	a1,308(a5)
1c0075a6:	12c7ac23          	sw	a2,312(a5)
1c0075aa:	bf19                	j	1c0074c0 <hyperflash_erase_resume>

1c0075ac <hyperflash_erase>:
1c0075ac:	7175                	addi	sp,sp,-144
1c0075ae:	4785                	li	a5,1
1c0075b0:	868a                	mv	a3,sp
1c0075b2:	c706                	sw	ra,140(sp)
1c0075b4:	cc3e                	sw	a5,24(sp)
1c0075b6:	d43e                	sw	a5,40(sp)
1c0075b8:	c202                	sw	zero,4(sp)
1c0075ba:	00010a23          	sb	zero,20(sp)
1c0075be:	3775                	jal	1c00756a <hyperflash_erase_async>
1c0075c0:	0848                	addi	a0,sp,20
1c0075c2:	dadff0ef          	jal	ra,1c00736e <pi_task_wait_on.isra.3>
1c0075c6:	40ba                	lw	ra,140(sp)
1c0075c8:	4501                	li	a0,0
1c0075ca:	6149                	addi	sp,sp,144
1c0075cc:	8082                	ret

1c0075ce <hyperflash_get_status_reg>:
1c0075ce:	6585                	lui	a1,0x1
1c0075d0:	1141                	addi	sp,sp,-16
1c0075d2:	07000613          	li	a2,112
1c0075d6:	aaa58593          	addi	a1,a1,-1366 # aaa <__rt_stack_size+0x2aa>
1c0075da:	c606                	sw	ra,12(sp)
1c0075dc:	c422                	sw	s0,8(sp)
1c0075de:	842a                	mv	s0,a0
1c0075e0:	f52ff0ef          	jal	ra,1c006d32 <hyperflash_set_reg_exec>
1c0075e4:	8522                	mv	a0,s0
1c0075e6:	00c40613          	addi	a2,s0,12
1c0075ea:	4691                	li	a3,4
1c0075ec:	4581                	li	a1,0
1c0075ee:	37e030ef          	jal	ra,1c00a96c <pi_hyper_read>
1c0075f2:	00c45503          	lhu	a0,12(s0)
1c0075f6:	40b2                	lw	ra,12(sp)
1c0075f8:	4422                	lw	s0,8(sp)
1c0075fa:	0141                	addi	sp,sp,16
1c0075fc:	8082                	ret

1c0075fe <hyperflash_check_erase>:
1c0075fe:	1141                	addi	sp,sp,-16
1c007600:	c422                	sw	s0,8(sp)
1c007602:	4500                	lw	s0,8(a0)
1c007604:	c226                	sw	s1,4(sp)
1c007606:	84aa                	mv	s1,a0
1c007608:	8522                	mv	a0,s0
1c00760a:	c606                	sw	ra,12(sp)
1c00760c:	37c9                	jal	1c0075ce <hyperflash_get_status_reg>
1c00760e:	c0751533          	p.extractu	a0,a0,0,7
1c007612:	e905                	bnez	a0,1c007642 <hyperflash_check_erase+0x44>
1c007614:	1c0077b7          	lui	a5,0x1c007
1c007618:	5fe78793          	addi	a5,a5,1534 # 1c0075fe <hyperflash_check_erase>
1c00761c:	02040e23          	sb	zero,60(s0)
1c007620:	d45c                	sw	a5,44(s0)
1c007622:	4785                	li	a5,1
1c007624:	d804                	sw	s1,48(s0)
1c007626:	04042023          	sw	zero,64(s0)
1c00762a:	c83c                	sw	a5,80(s0)
1c00762c:	02840513          	addi	a0,s0,40
1c007630:	4422                	lw	s0,8(sp)
1c007632:	40b2                	lw	ra,12(sp)
1c007634:	4492                	lw	s1,4(sp)
1c007636:	65e1                	lui	a1,0x18
1c007638:	6a058593          	addi	a1,a1,1696 # 186a0 <__L1Cl+0x86a0>
1c00763c:	0141                	addi	sp,sp,16
1c00763e:	40f0106f          	j	1c00924c <pi_task_push_delayed_us>
1c007642:	4422                	lw	s0,8(sp)
1c007644:	40b2                	lw	ra,12(sp)
1c007646:	8526                	mv	a0,s1
1c007648:	4492                	lw	s1,4(sp)
1c00764a:	0141                	addi	sp,sp,16
1c00764c:	99fff06f          	j	1c006fea <hyperflash_handle_pending_task>

1c007650 <hyperflash_check_program>:
1c007650:	1141                	addi	sp,sp,-16
1c007652:	c422                	sw	s0,8(sp)
1c007654:	4500                	lw	s0,8(a0)
1c007656:	c226                	sw	s1,4(sp)
1c007658:	84aa                	mv	s1,a0
1c00765a:	8522                	mv	a0,s0
1c00765c:	c606                	sw	ra,12(sp)
1c00765e:	3f85                	jal	1c0075ce <hyperflash_get_status_reg>
1c007660:	08057513          	andi	a0,a0,128
1c007664:	e51d                	bnez	a0,1c007692 <hyperflash_check_program+0x42>
1c007666:	1c0077b7          	lui	a5,0x1c007
1c00766a:	65078793          	addi	a5,a5,1616 # 1c007650 <hyperflash_check_program>
1c00766e:	02040e23          	sb	zero,60(s0)
1c007672:	d45c                	sw	a5,44(s0)
1c007674:	4785                	li	a5,1
1c007676:	d804                	sw	s1,48(s0)
1c007678:	04042023          	sw	zero,64(s0)
1c00767c:	c83c                	sw	a5,80(s0)
1c00767e:	02840513          	addi	a0,s0,40
1c007682:	4422                	lw	s0,8(sp)
1c007684:	40b2                	lw	ra,12(sp)
1c007686:	4492                	lw	s1,4(sp)
1c007688:	0fa00593          	li	a1,250
1c00768c:	0141                	addi	sp,sp,16
1c00768e:	3bf0106f          	j	1c00924c <pi_task_push_delayed_us>
1c007692:	4422                	lw	s0,8(sp)
1c007694:	40b2                	lw	ra,12(sp)
1c007696:	8526                	mv	a0,s1
1c007698:	4492                	lw	s1,4(sp)
1c00769a:	0141                	addi	sp,sp,16
1c00769c:	b01ff06f          	j	1c00719c <hyperflash_program_resume>

1c0076a0 <pi_hyperflash_conf_init>:
};



void pi_hyperflash_conf_init(struct pi_hyperflash_conf *conf)
{
1c0076a0:	1141                	addi	sp,sp,-16
  conf->flash.api = &hyperflash_api;
1c0076a2:	1c00d7b7          	lui	a5,0x1c00d
{
1c0076a6:	c606                	sw	ra,12(sp)
1c0076a8:	c422                	sw	s0,8(sp)
  conf->flash.api = &hyperflash_api;
1c0076aa:	2c478793          	addi	a5,a5,708 # 1c00d2c4 <hyperflash_api>
1c0076ae:	c11c                	sw	a5,0(a0)
{
1c0076b0:	842a                	mv	s0,a0
#if defined(__GAP9__)
  conf->flash.aes_conf.enabled = 0;
  conf->flash.aes_conf.qk_en = 0;
#endif
  bsp_hyperflash_conf_init(conf);
1c0076b2:	28e010ef          	jal	ra,1c008940 <bsp_hyperflash_conf_init>
  __flash_conf_init(&conf->flash);
1c0076b6:	8522                	mv	a0,s0
1c0076b8:	d1ffe0ef          	jal	ra,1c0063d6 <__flash_conf_init>
  conf->xip_en = 0;
  conf->baudrate = 50000000;
1c0076bc:	02faf7b7          	lui	a5,0x2faf
1c0076c0:	08078793          	addi	a5,a5,128 # 2faf080 <__L2+0x2f2f080>
  conf->xip_en = 0;
1c0076c4:	00042823          	sw	zero,16(s0)
  conf->baudrate = 50000000;
1c0076c8:	c45c                	sw	a5,12(s0)
}
1c0076ca:	40b2                	lw	ra,12(sp)
1c0076cc:	4422                	lw	s0,8(sp)
1c0076ce:	0141                	addi	sp,sp,16
1c0076d0:	8082                	ret

1c0076d2 <hyperram_alloc>:

int hyperram_alloc(struct pi_device *device, uint32_t *addr, uint32_t size)
{
  void *chunk;
  hyperram_t *hyperram = (hyperram_t *)device->data;
  int err = extern_alloc(&hyperram->alloc, size, &chunk);
1c0076d2:	4508                	lw	a0,8(a0)
{
1c0076d4:	1101                	addi	sp,sp,-32
1c0076d6:	cc22                	sw	s0,24(sp)
  int err = extern_alloc(&hyperram->alloc, size, &chunk);
1c0076d8:	0531                	addi	a0,a0,12
{
1c0076da:	842e                	mv	s0,a1
1c0076dc:	85b2                	mv	a1,a2
  int err = extern_alloc(&hyperram->alloc, size, &chunk);
1c0076de:	0070                	addi	a2,sp,12
{
1c0076e0:	ce06                	sw	ra,28(sp)
  int err = extern_alloc(&hyperram->alloc, size, &chunk);
1c0076e2:	262d                	jal	1c007a0c <extern_alloc>
  *addr = (uint32_t)chunk;
1c0076e4:	47b2                	lw	a5,12(sp)
  return err;
}
1c0076e6:	40f2                	lw	ra,28(sp)
  *addr = (uint32_t)chunk;
1c0076e8:	c01c                	sw	a5,0(s0)
}
1c0076ea:	4462                	lw	s0,24(sp)
1c0076ec:	6105                	addi	sp,sp,32
1c0076ee:	8082                	ret

1c0076f0 <hyperram_free>:


int hyperram_free(struct pi_device *device, uint32_t addr, uint32_t size)
{
  hyperram_t *hyperram = (hyperram_t *)device->data;
  return extern_free(&hyperram->alloc, size, (void *)addr);
1c0076f0:	4508                	lw	a0,8(a0)
{
1c0076f2:	87b2                	mv	a5,a2
  return extern_free(&hyperram->alloc, size, (void *)addr);
1c0076f4:	862e                	mv	a2,a1
1c0076f6:	0531                	addi	a0,a0,12
1c0076f8:	85be                	mv	a1,a5
1c0076fa:	ae85                	j	1c007a6a <extern_free>

1c0076fc <hyperram_copy_2d_async>:
{
1c0076fc:	4508                	lw	a0,8(a0)
  if (ext2loc)
1c0076fe:	00080563          	beqz	a6,1c007708 <hyperram_copy_2d_async+0xc>
    pi_hyper_read_2d_async(&hyperram->hyper_device, addr, data, size, stride, length, task);
1c007702:	8846                	mv	a6,a7
1c007704:	64a0306f          	j	1c00ad4e <pi_hyper_read_2d_async>
    pi_hyper_write_2d_async(&hyperram->hyper_device, addr, data, size, stride, length, task);
1c007708:	8846                	mv	a6,a7
1c00770a:	65c0306f          	j	1c00ad66 <pi_hyper_write_2d_async>

1c00770e <hyperram_copy_async>:
{
1c00770e:	4508                	lw	a0,8(a0)
  if (ext2loc)
1c007710:	c701                	beqz	a4,1c007718 <hyperram_copy_async+0xa>
    pi_hyper_read_async(&hyperram->hyper_device, addr, data, size, task);
1c007712:	873e                	mv	a4,a5
1c007714:	2420306f          	j	1c00a956 <pi_hyper_read_async>
    pi_hyper_write_async(&hyperram->hyper_device, addr, data, size, task);
1c007718:	873e                	mv	a4,a5
1c00771a:	2740306f          	j	1c00a98e <pi_hyper_write_async>

1c00771e <hyperram_close>:
{
1c00771e:	1141                	addi	sp,sp,-16
1c007720:	c422                	sw	s0,8(sp)
  hyperram_t *hyperram = (hyperram_t *)device->data;
1c007722:	4500                	lw	s0,8(a0)
{
1c007724:	c606                	sw	ra,12(sp)
  pi_hyper_close(&hyperram->hyper_device);
1c007726:	8522                	mv	a0,s0
1c007728:	09c030ef          	jal	ra,1c00a7c4 <pi_hyper_close>
  extern_alloc_deinit(&hyperram->alloc);
1c00772c:	00c40513          	addi	a0,s0,12
1c007730:	2cd1                	jal	1c007a04 <extern_alloc_deinit>
  pmsis_l2_malloc_free(hyperram, sizeof(hyperram_t));
1c007732:	8522                	mv	a0,s0
}
1c007734:	4422                	lw	s0,8(sp)
1c007736:	40b2                	lw	ra,12(sp)
  pmsis_l2_malloc_free(hyperram, sizeof(hyperram_t));
1c007738:	45d1                	li	a1,20
}
1c00773a:	0141                	addi	sp,sp,16
  pmsis_l2_malloc_free(hyperram, sizeof(hyperram_t));
1c00773c:	50d0106f          	j	1c009448 <pi_l2_free>

1c007740 <hyperram_open>:
{
1c007740:	7139                	addi	sp,sp,-64
1c007742:	da26                	sw	s1,52(sp)
1c007744:	d84a                	sw	s2,48(sp)
  struct pi_hyperram_conf *conf = (struct pi_hyperram_conf *)device->config;
1c007746:	4144                	lw	s1,4(a0)
{
1c007748:	892a                	mv	s2,a0
  hyperram_t *hyperram = (hyperram_t *)pmsis_l2_malloc(sizeof(hyperram_t));
1c00774a:	4551                	li	a0,20
{
1c00774c:	de06                	sw	ra,60(sp)
1c00774e:	dc22                	sw	s0,56(sp)
1c007750:	d64e                	sw	s3,44(sp)
  hyperram_t *hyperram = (hyperram_t *)pmsis_l2_malloc(sizeof(hyperram_t));
1c007752:	4e9010ef          	jal	ra,1c00943a <pi_l2_malloc>
  if (hyperram == NULL)
1c007756:	cd2d                	beqz	a0,1c0077d0 <hyperram_open+0x90>
  if (conf->reserve_addr_0)
1c007758:	509c                	lw	a5,32(s1)
  device->data = (void *)hyperram;
1c00775a:	00a92423          	sw	a0,8(s2)
1c00775e:	842a                	mv	s0,a0
  int size = conf->ram_size;
1c007760:	4c90                	lw	a2,24(s1)
  uint32_t start_addr = 0;
1c007762:	4581                	li	a1,0
  if (conf->reserve_addr_0)
1c007764:	c399                	beqz	a5,1c00776a <hyperram_open+0x2a>
    size -= 4;
1c007766:	1671                	addi	a2,a2,-4
    start_addr = 4;
1c007768:	4591                	li	a1,4
  if (extern_alloc_init(&hyperram->alloc, (void *)start_addr, size))
1c00776a:	00c40993          	addi	s3,s0,12
1c00776e:	854e                	mv	a0,s3
1c007770:	2489                	jal	1c0079b2 <extern_alloc_init>
1c007772:	e901                	bnez	a0,1c007782 <hyperram_open+0x42>
  if (bsp_hyperram_open(conf))
1c007774:	8526                	mv	a0,s1
1c007776:	1bc010ef          	jal	ra,1c008932 <bsp_hyperram_open>
1c00777a:	892a                	mv	s2,a0
1c00777c:	c909                	beqz	a0,1c00778e <hyperram_open+0x4e>
  extern_alloc_deinit(&hyperram->alloc);
1c00777e:	854e                	mv	a0,s3
1c007780:	2451                	jal	1c007a04 <extern_alloc_deinit>
  pmsis_l2_malloc_free(hyperram, sizeof(hyperram_t));
1c007782:	45d1                	li	a1,20
1c007784:	8522                	mv	a0,s0
1c007786:	4c3010ef          	jal	ra,1c009448 <pi_l2_free>
  return -2;
1c00778a:	5979                	li	s2,-2
1c00778c:	a815                	j	1c0077c0 <hyperram_open+0x80>
  pi_hyper_conf_init(&hyper_conf);
1c00778e:	0048                	addi	a0,sp,4
1c007790:	6c5020ef          	jal	ra,1c00a654 <pi_hyper_conf_init>
  hyper_conf.burst_length = 4000;
1c007794:	6785                	lui	a5,0x1
1c007796:	fa078793          	addi	a5,a5,-96 # fa0 <__rt_stack_size+0x7a0>
1c00779a:	cc3e                	sw	a5,24(sp)
  hyper_conf.id = conf->hyper_itf;
1c00779c:	40dc                	lw	a5,4(s1)
1c00779e:	00f10423          	sb	a5,8(sp)
  hyper_conf.cs = conf->hyper_cs;
1c0077a2:	449c                	lw	a5,8(s1)
1c0077a4:	c63e                	sw	a5,12(sp)
  hyper_conf.type = PI_HYPER_TYPE_RAM;
1c0077a6:	4785                	li	a5,1
1c0077a8:	c83e                	sw	a5,16(sp)
  if (conf->baudrate)
1c0077aa:	4cdc                	lw	a5,28(s1)
1c0077ac:	c391                	beqz	a5,1c0077b0 <hyperram_open+0x70>
      hyper_conf.baudrate = conf->baudrate;
1c0077ae:	ca3e                	sw	a5,20(sp)
  pi_open_from_conf(&hyperram->hyper_device, &hyper_conf);
1c0077b0:	8522                	mv	a0,s0
1c0077b2:	004c                	addi	a1,sp,4
1c0077b4:	35a010ef          	jal	ra,1c008b0e <pi_open_from_conf>
  int32_t error = pi_hyper_open(&hyperram->hyper_device);
1c0077b8:	8522                	mv	a0,s0
1c0077ba:	6ab020ef          	jal	ra,1c00a664 <pi_hyper_open>
  if (error)
1c0077be:	f161                	bnez	a0,1c00777e <hyperram_open+0x3e>
}
1c0077c0:	50f2                	lw	ra,60(sp)
1c0077c2:	5462                	lw	s0,56(sp)
1c0077c4:	854a                	mv	a0,s2
1c0077c6:	54d2                	lw	s1,52(sp)
1c0077c8:	5942                	lw	s2,48(sp)
1c0077ca:	59b2                	lw	s3,44(sp)
1c0077cc:	6121                	addi	sp,sp,64
1c0077ce:	8082                	ret
      return -1;
1c0077d0:	597d                	li	s2,-1
1c0077d2:	b7fd                	j	1c0077c0 <hyperram_open+0x80>

1c0077d4 <pi_hyperram_conf_init>:
};


void pi_hyperram_conf_init(struct pi_hyperram_conf *conf)
{
  conf->ram.api = &hyperram_api;
1c0077d4:	1c00d737          	lui	a4,0x1c00d
1c0077d8:	31870713          	addi	a4,a4,792 # 1c00d318 <hyperram_api>
1c0077dc:	c118                	sw	a4,0(a0)
  conf->ram.aes_conf.enabled = 0;
  conf->ram.aes_conf.qk_en = 0;
#endif
  conf->baudrate = 0;
  conf->xip_en = 0;
  conf->reserve_addr_0 = 1;
1c0077de:	4705                	li	a4,1
  conf->baudrate = 0;
1c0077e0:	00052e23          	sw	zero,28(a0)
  conf->xip_en = 0;
1c0077e4:	00052823          	sw	zero,16(a0)
  conf->reserve_addr_0 = 1;
1c0077e8:	d118                	sw	a4,32(a0)
  bsp_hyperram_conf_init(conf);
1c0077ea:	1300106f          	j	1c00891a <bsp_hyperram_conf_init>

1c0077ee <__pi_ram_free_cluster_req>:
    #if defined(PMSIS_DRIVERS) && defined(__GAP8__)
    pi_task_irq_callback(&(req->event),__pi_ram_cluster_req, req);
    #else
    pi_task_callback(&req->event, __pi_ram_cluster_req, (void *) req);
    #endif  /* PMSIS_DRIVERS && __GAP8__ */
    pi_cl_send_task_to_fc(&req->event);
1c0077ee:	1141                	addi	sp,sp,-16
1c0077f0:	c422                	sw	s0,8(sp)
1c0077f2:	842a                	mv	s0,a0
1c0077f4:	4108                	lw	a0,0(a0)
1c0077f6:	4410                	lw	a2,8(s0)
1c0077f8:	444c                	lw	a1,12(s0)
1c0077fa:	411c                	lw	a5,0(a0)
1c0077fc:	c606                	sw	ra,12(sp)
1c0077fe:	4bdc                	lw	a5,20(a5)
1c007800:	9782                	jalr	a5
1c007802:	09144783          	lbu	a5,145(s0)
1c007806:	4705                	li	a4,1
1c007808:	08e40823          	sb	a4,144(s0)
1c00780c:	08a40923          	sb	a0,146(s0)
1c007810:	40b2                	lw	ra,12(sp)
1c007812:	4422                	lw	s0,8(sp)
1c007814:	04078793          	addi	a5,a5,64
1c007818:	00201737          	lui	a4,0x201
1c00781c:	07da                	slli	a5,a5,0x16
1c00781e:	e0470713          	addi	a4,a4,-508 # 200e04 <__L2+0x180e04>
1c007822:	0007e723          	p.sw	zero,a4(a5)
1c007826:	0141                	addi	sp,sp,16
1c007828:	8082                	ret

1c00782a <__pi_ram_cluster_req>:
1c00782a:	832a                	mv	t1,a0
1c00782c:	09f34783          	lbu	a5,159(t1)
1c007830:	1c008e37          	lui	t3,0x1c008
1c007834:	4108                	lw	a0,0(a0)
1c007836:	00832583          	lw	a1,8(t1)
1c00783a:	00432603          	lw	a2,4(t1)
1c00783e:	00c32683          	lw	a3,12(t1)
1c007842:	09e34803          	lbu	a6,158(t1)
1c007846:	01830893          	addi	a7,t1,24
1c00784a:	89ae0e13          	addi	t3,t3,-1894 # 1c00789a <__pi_ram_cluster_req_done>
1c00784e:	c78d                	beqz	a5,1c007878 <__pi_ram_cluster_req+0x4e>
1c007850:	01c32e23          	sw	t3,28(t1)
1c007854:	02030623          	sb	zero,44(t1)
1c007858:	4e05                	li	t3,1
1c00785a:	01032703          	lw	a4,16(t1)
1c00785e:	01432783          	lw	a5,20(t1)
1c007862:	02032823          	sw	zero,48(t1)
1c007866:	02632023          	sw	t1,32(t1)
1c00786a:	05c32023          	sw	t3,64(t1)
1c00786e:	00052303          	lw	t1,0(a0)
1c007872:	00c32303          	lw	t1,12(t1)
1c007876:	8302                	jr	t1
1c007878:	4785                	li	a5,1
1c00787a:	02030623          	sb	zero,44(t1)
1c00787e:	04f32023          	sw	a5,64(t1)
1c007882:	411c                	lw	a5,0(a0)
1c007884:	02032823          	sw	zero,48(t1)
1c007888:	01c32e23          	sw	t3,28(t1)
1c00788c:	02632023          	sw	t1,32(t1)
1c007890:	0087a303          	lw	t1,8(a5)
1c007894:	8742                	mv	a4,a6
1c007896:	87c6                	mv	a5,a7
1c007898:	8302                	jr	t1

1c00789a <__pi_ram_cluster_req_done>:
1c00789a:	09d54783          	lbu	a5,157(a0)
1c00789e:	4705                	li	a4,1
1c0078a0:	08e50e23          	sb	a4,156(a0)
1c0078a4:	04078793          	addi	a5,a5,64
1c0078a8:	00201737          	lui	a4,0x201
1c0078ac:	07da                	slli	a5,a5,0x16
1c0078ae:	e0470713          	addi	a4,a4,-508 # 200e04 <__L2+0x180e04>
1c0078b2:	0007e723          	p.sw	zero,a4(a5)
1c0078b6:	8082                	ret

1c0078b8 <__pi_ram_alloc_cluster_req>:
1c0078b8:	1141                	addi	sp,sp,-16
1c0078ba:	c422                	sw	s0,8(sp)
1c0078bc:	842a                	mv	s0,a0
1c0078be:	4108                	lw	a0,0(a0)
1c0078c0:	4410                	lw	a2,8(s0)
1c0078c2:	c606                	sw	ra,12(sp)
1c0078c4:	411c                	lw	a5,0(a0)
1c0078c6:	00440593          	addi	a1,s0,4
1c0078ca:	4b9c                	lw	a5,16(a5)
1c0078cc:	9782                	jalr	a5
1c0078ce:	08d44783          	lbu	a5,141(s0)
1c0078d2:	4705                	li	a4,1
1c0078d4:	08e40623          	sb	a4,140(s0)
1c0078d8:	08a40723          	sb	a0,142(s0)
1c0078dc:	40b2                	lw	ra,12(sp)
1c0078de:	4422                	lw	s0,8(sp)
1c0078e0:	04078793          	addi	a5,a5,64
1c0078e4:	00201737          	lui	a4,0x201
1c0078e8:	07da                	slli	a5,a5,0x16
1c0078ea:	e0470713          	addi	a4,a4,-508 # 200e04 <__L2+0x180e04>
1c0078ee:	0007e723          	p.sw	zero,a4(a5)
1c0078f2:	0141                	addi	sp,sp,16
1c0078f4:	8082                	ret

1c0078f6 <pi_ram_open>:
1c0078f6:	415c                	lw	a5,4(a0)
1c0078f8:	439c                	lw	a5,0(a5)
1c0078fa:	0007a303          	lw	t1,0(a5)
1c0078fe:	c11c                	sw	a5,0(a0)
1c007900:	8302                	jr	t1

1c007902 <pi_cl_ram_copy>:
1c007902:	c7d4                	sw	a3,12(a5)
1c007904:	08e78f23          	sb	a4,158(a5)
1c007908:	014026f3          	csrr	a3,uhartid
1c00790c:	1c008737          	lui	a4,0x1c008
1c007910:	8695                	srai	a3,a3,0x5
1c007912:	82a70713          	addi	a4,a4,-2006 # 1c00782a <__pi_ram_cluster_req>
1c007916:	f266b6b3          	p.bclr	a3,a3,25,6
1c00791a:	cfd8                	sw	a4,28(a5)
1c00791c:	4705                	li	a4,1
1c00791e:	c388                	sw	a0,0(a5)
1c007920:	c3d0                	sw	a2,4(a5)
1c007922:	c78c                	sw	a1,8(a5)
1c007924:	08d78ea3          	sb	a3,157(a5)
1c007928:	08078e23          	sb	zero,156(a5)
1c00792c:	08078fa3          	sb	zero,159(a5)
1c007930:	0207a823          	sw	zero,48(a5)
1c007934:	d39c                	sw	a5,32(a5)
1c007936:	c3b8                	sw	a4,64(a5)
1c007938:	02078623          	sb	zero,44(a5)
1c00793c:	01878513          	addi	a0,a5,24
1c007940:	10f0106f          	j	1c00924e <pi_cl_send_task_to_fc>

1c007944 <pi_cl_ram_alloc>:
}

static inline unsigned int cluster_id() {  int hart_id;
#if RISCV_VERSION >= 4 && !defined(RISCV_1_7)
#if PULP_CHIP_FAMILY == CHIP_GAP
  asm("csrr %0, 0x014" : "=r" (hart_id) : );
1c007944:	014027f3          	csrr	a5,uhartid
#endif
#else
  asm("csrr %0, 0xF10" : "=r" (hart_id) : );
#endif
  // in PULP the hart id is {22'b0, cluster_id, core_id}
  return (hart_id >> 5) & 0x3f;
1c007948:	8795                	srai	a5,a5,0x5
1c00794a:	f267b7b3          	p.bclr	a5,a5,25,6

void pi_cl_ram_alloc(struct pi_device *device, uint32_t size, pi_cl_ram_alloc_req_t *req)
{
    req->device = device;
    req->size = size;
    req->cid = pi_cluster_id();
1c00794e:	08f606a3          	sb	a5,141(a2)
  task->arg[0] = (uint32_t)callback;
1c007952:	1c0087b7          	lui	a5,0x1c008
1c007956:	8b878793          	addi	a5,a5,-1864 # 1c0078b8 <__pi_ram_alloc_cluster_req>
1c00795a:	ca1c                	sw	a5,16(a2)
  task->implem.keep = 1;
1c00795c:	4785                	li	a5,1
    req->device = device;
1c00795e:	c208                	sw	a0,0(a2)
    req->size = size;
1c007960:	c60c                	sw	a1,8(a2)
    req->done = 0;
1c007962:	08060623          	sb	zero,140(a2)
  task->id = PI_TASK_CALLBACK_ID;
1c007966:	02062223          	sw	zero,36(a2)
  task->arg[1] = (uint32_t)arg;
1c00796a:	ca50                	sw	a2,20(a2)
  task->implem.keep = 1;
1c00796c:	da5c                	sw	a5,52(a2)
  task->done = 0;
1c00796e:	02060023          	sb	zero,32(a2)
    pi_task_callback(&req->event, __pi_ram_alloc_cluster_req, (void *) req);
    pi_cl_send_task_to_fc(&(req->event));
1c007972:	00c60513          	addi	a0,a2,12
1c007976:	0d90106f          	j	1c00924e <pi_cl_send_task_to_fc>

1c00797a <pi_cl_ram_free>:
  asm("csrr %0, 0x014" : "=r" (hart_id) : );
1c00797a:	014027f3          	csrr	a5,uhartid
  return (hart_id >> 5) & 0x3f;
1c00797e:	8795                	srai	a5,a5,0x5
1c007980:	f267b7b3          	p.bclr	a5,a5,25,6
void pi_cl_ram_free(struct pi_device *device, uint32_t chunk, uint32_t size, pi_cl_ram_free_req_t *req)
{
    req->device = device;
    req->size = size;
    req->chunk = chunk;
    req->cid = pi_cluster_id();
1c007984:	08f688a3          	sb	a5,145(a3)
  task->arg[0] = (uint32_t)callback;
1c007988:	1c0077b7          	lui	a5,0x1c007
1c00798c:	7ee78793          	addi	a5,a5,2030 # 1c0077ee <__pi_ram_free_cluster_req>
1c007990:	cadc                	sw	a5,20(a3)
  task->implem.keep = 1;
1c007992:	4785                	li	a5,1
    req->device = device;
1c007994:	c288                	sw	a0,0(a3)
    req->size = size;
1c007996:	c690                	sw	a2,8(a3)
    req->chunk = chunk;
1c007998:	c6cc                	sw	a1,12(a3)
    req->done = 0;
1c00799a:	08068823          	sb	zero,144(a3)
  task->id = PI_TASK_CALLBACK_ID;
1c00799e:	0206a423          	sw	zero,40(a3)
  task->arg[1] = (uint32_t)arg;
1c0079a2:	ce94                	sw	a3,24(a3)
  task->implem.keep = 1;
1c0079a4:	de9c                	sw	a5,56(a3)
1c0079a6:	02068223          	sb	zero,36(a3)
    pi_task_callback(&req->event, __pi_ram_free_cluster_req, (void *) req);
    pi_cl_send_task_to_fc(&(req->event));
1c0079aa:	01068513          	addi	a0,a3,16
1c0079ae:	0a10106f          	j	1c00924e <pi_cl_send_task_to_fc>

1c0079b2 <extern_alloc_init>:
  }
  printf("=============================================\n");
}

int extern_alloc_init(extern_alloc_t *a, void *addr, int size)
{
1c0079b2:	1101                	addi	sp,sp,-32
1c0079b4:	ca26                	sw	s1,20(sp)
1c0079b6:	ce06                	sw	ra,28(sp)
1c0079b8:	cc22                	sw	s0,24(sp)
1c0079ba:	84aa                	mv	s1,a0
  if (size)
1c0079bc:	ce1d                	beqz	a2,1c0079fa <extern_alloc_init+0x48>
  return (alloc_chunk_extern_t *)pmsis_l2_malloc(sizeof(alloc_chunk_extern_t));
1c0079be:	4531                	li	a0,12
  {
    unsigned int staaddr = ALIGN_UP((int)addr, MIN_CHUNK_SIZE);
1c0079c0:	00758413          	addi	s0,a1,7
  return (alloc_chunk_extern_t *)pmsis_l2_malloc(sizeof(alloc_chunk_extern_t));
1c0079c4:	c62e                	sw	a1,12(sp)
1c0079c6:	c432                	sw	a2,8(sp)
1c0079c8:	273010ef          	jal	ra,1c00943a <pi_l2_malloc>
    unsigned int staaddr = ALIGN_UP((int)addr, MIN_CHUNK_SIZE);
1c0079cc:	c4043433          	p.bclr	s0,s0,2,0
    alloc_chunk_extern_t *chunk = __alloc_chunk();
    if (chunk == NULL) return -1;
1c0079d0:	45b2                	lw	a1,12(sp)
1c0079d2:	4622                	lw	a2,8(sp)
1c0079d4:	c515                	beqz	a0,1c007a00 <extern_alloc_init+0x4e>
    size = size - (staaddr - (unsigned int)addr);
1c0079d6:	95b2                	add	a1,a1,a2
1c0079d8:	8d81                	sub	a1,a1,s0
  }
  else
  {
    a->first_free = NULL;
  }
  return 0;
1c0079da:	4601                	li	a2,0
    if (size > 0) {
1c0079dc:	00b05963          	blez	a1,1c0079ee <extern_alloc_init+0x3c>
      a->first_free = chunk;
1c0079e0:	c088                	sw	a0,0(s1)
      chunk->size = ALIGN_DOWN(size, MIN_CHUNK_SIZE);
1c0079e2:	c405b5b3          	p.bclr	a1,a1,2,0
1c0079e6:	c10c                	sw	a1,0(a0)
      chunk->next = NULL;
1c0079e8:	00052223          	sw	zero,4(a0)
      chunk->addr = staaddr;
1c0079ec:	c500                	sw	s0,8(a0)
}
1c0079ee:	40f2                	lw	ra,28(sp)
1c0079f0:	4462                	lw	s0,24(sp)
1c0079f2:	44d2                	lw	s1,20(sp)
1c0079f4:	8532                	mv	a0,a2
1c0079f6:	6105                	addi	sp,sp,32
1c0079f8:	8082                	ret
    a->first_free = NULL;
1c0079fa:	00052023          	sw	zero,0(a0)
1c0079fe:	bfc5                	j	1c0079ee <extern_alloc_init+0x3c>
    if (chunk == NULL) return -1;
1c007a00:	567d                	li	a2,-1
1c007a02:	b7f5                	j	1c0079ee <extern_alloc_init+0x3c>

1c007a04 <extern_alloc_deinit>:
  pmsis_l2_malloc_free((void *)pt, sizeof(alloc_chunk_extern_t));
1c007a04:	4108                	lw	a0,0(a0)
1c007a06:	45b1                	li	a1,12
1c007a08:	2410106f          	j	1c009448 <pi_l2_free>

1c007a0c <extern_alloc>:



int extern_alloc(extern_alloc_t *a, int size, void **chunk)
{
  alloc_chunk_extern_t *pt = a->first_free, *prev = 0;
1c007a0c:	411c                	lw	a5,0(a0)

  size = ALIGN_UP(size, MIN_CHUNK_SIZE);
1c007a0e:	059d                	addi	a1,a1,7
1c007a10:	c405b5b3          	p.bclr	a1,a1,2,0
  alloc_chunk_extern_t *pt = a->first_free, *prev = 0;
1c007a14:	4681                	li	a3,0

  while (pt && (pt->size < size)) { prev = pt; pt = pt->next; }
1c007a16:	c7b1                	beqz	a5,1c007a62 <extern_alloc+0x56>
1c007a18:	4398                	lw	a4,0(a5)
1c007a1a:	02b74863          	blt	a4,a1,1c007a4a <extern_alloc+0x3e>
{
1c007a1e:	1141                	addi	sp,sp,-16
1c007a20:	c226                	sw	s1,4(sp)
1c007a22:	c606                	sw	ra,12(sp)
1c007a24:	c422                	sw	s0,8(sp)
1c007a26:	4784                	lw	s1,8(a5)

  if (pt) {
    if (pt->size == size) {
1c007a28:	02b71663          	bne	a4,a1,1c007a54 <extern_alloc+0x48>
1c007a2c:	43d8                	lw	a4,4(a5)
      // Special case where the whole block disappears
      // This special case is interesting to support when we allocate aligned pages, to limit fragmentation
      if (prev) prev->next = pt->next; else a->first_free = pt->next;
1c007a2e:	c28d                	beqz	a3,1c007a50 <extern_alloc+0x44>
1c007a30:	c2d8                	sw	a4,4(a3)
1c007a32:	8432                	mv	s0,a2
  pmsis_l2_malloc_free((void *)pt, sizeof(alloc_chunk_extern_t));
1c007a34:	45b1                	li	a1,12
1c007a36:	853e                	mv	a0,a5
1c007a38:	211010ef          	jal	ra,1c009448 <pi_l2_free>
      void *addr = (void *)pt->addr;
      __free_chunk(pt);
      *chunk = addr;
1c007a3c:	c004                	sw	s1,0(s0)
  } else {
    //warning("Not enough memory to allocate\n");
    *chunk = (void *)0xffffffff;
    return -1;
  }
}
1c007a3e:	40b2                	lw	ra,12(sp)
1c007a40:	4422                	lw	s0,8(sp)
1c007a42:	4492                	lw	s1,4(sp)
      return 0;
1c007a44:	4501                	li	a0,0
}
1c007a46:	0141                	addi	sp,sp,16
1c007a48:	8082                	ret
  while (pt && (pt->size < size)) { prev = pt; pt = pt->next; }
1c007a4a:	86be                	mv	a3,a5
1c007a4c:	43dc                	lw	a5,4(a5)
1c007a4e:	b7e1                	j	1c007a16 <extern_alloc+0xa>
      if (prev) prev->next = pt->next; else a->first_free = pt->next;
1c007a50:	c118                	sw	a4,0(a0)
1c007a52:	b7c5                	j	1c007a32 <extern_alloc+0x26>
      pt->size = pt->size - size;
1c007a54:	40b706b3          	sub	a3,a4,a1
      void *result = (void *)((char *)pt->addr + pt->size - size);
1c007a58:	9726                	add	a4,a4,s1
      pt->size = pt->size - size;
1c007a5a:	c394                	sw	a3,0(a5)
      void *result = (void *)((char *)pt->addr + pt->size - size);
1c007a5c:	8f0d                	sub	a4,a4,a1
      *chunk = result;
1c007a5e:	c218                	sw	a4,0(a2)
1c007a60:	bff9                	j	1c007a3e <extern_alloc+0x32>
    *chunk = (void *)0xffffffff;
1c007a62:	57fd                	li	a5,-1
1c007a64:	c21c                	sw	a5,0(a2)
    return -1;
1c007a66:	557d                	li	a0,-1
}
1c007a68:	8082                	ret

1c007a6a <extern_free>:
  return 0;
}

int __attribute__((noinline)) extern_free(extern_alloc_t *a, int size, void *addr)

{
1c007a6a:	7179                	addi	sp,sp,-48
1c007a6c:	d422                	sw	s0,40(sp)
  alloc_chunk_extern_t *chunk;
  alloc_chunk_extern_t *next = a->first_free, *prev = 0;
1c007a6e:	4100                	lw	s0,0(a0)
  size = ALIGN_UP(size, MIN_CHUNK_SIZE);
1c007a70:	059d                	addi	a1,a1,7
{
1c007a72:	d226                	sw	s1,36(sp)
1c007a74:	d04a                	sw	s2,32(sp)
1c007a76:	ce4e                	sw	s3,28(sp)
1c007a78:	d606                	sw	ra,44(sp)
1c007a7a:	89aa                	mv	s3,a0
  size = ALIGN_UP(size, MIN_CHUNK_SIZE);
1c007a7c:	c405b933          	p.bclr	s2,a1,2,0
  alloc_chunk_extern_t *next = a->first_free, *prev = 0;
1c007a80:	4481                	li	s1,0

  while (next && next->addr < (unsigned int)addr) {
1c007a82:	c439                	beqz	s0,1c007ad0 <extern_free+0x66>
1c007a84:	441c                	lw	a5,8(s0)
1c007a86:	04c7e263          	bltu	a5,a2,1c007aca <extern_free+0x60>
    prev = next; next = next->next; 
  }

  if (next && ((char *)addr + size) == (char *)next->addr) {
1c007a8a:	01260733          	add	a4,a2,s2
1c007a8e:	04f71163          	bne	a4,a5,1c007ad0 <extern_free+0x66>
    /* Coalesce with next */
    next->size = size + next->size;
1c007a92:	400c                	lw	a1,0(s0)
    next->addr = (unsigned int)addr;
1c007a94:	c410                	sw	a2,8(s0)
    next->size = size + next->size;
1c007a96:	992e                	add	s2,s2,a1
1c007a98:	01242023          	sw	s2,0(s0)
    chunk->size = size;
    chunk->next = next;
    chunk->addr = (unsigned int)addr;
  }

  if (prev) {
1c007a9c:	c8b1                	beqz	s1,1c007af0 <extern_free+0x86>
    if (((char *)prev->addr + prev->size) == (char *)addr) {
1c007a9e:	4094                	lw	a3,0(s1)
1c007aa0:	4498                	lw	a4,8(s1)
1c007aa2:	9736                	add	a4,a4,a3
1c007aa4:	04e61463          	bne	a2,a4,1c007aec <extern_free+0x82>
      /* Coalesce with previous */
      prev->size += chunk->size;
1c007aa8:	401c                	lw	a5,0(s0)
  pmsis_l2_malloc_free((void *)pt, sizeof(alloc_chunk_extern_t));
1c007aaa:	45b1                	li	a1,12
1c007aac:	8522                	mv	a0,s0
      prev->size += chunk->size;
1c007aae:	97b6                	add	a5,a5,a3
1c007ab0:	c09c                	sw	a5,0(s1)
      prev->next = chunk->next;
1c007ab2:	405c                	lw	a5,4(s0)
1c007ab4:	c0dc                	sw	a5,4(s1)
  pmsis_l2_malloc_free((void *)pt, sizeof(alloc_chunk_extern_t));
1c007ab6:	193010ef          	jal	ra,1c009448 <pi_l2_free>
    }
  } else {
    a->first_free = chunk;
  }

  return 0;
1c007aba:	4501                	li	a0,0
}
1c007abc:	50b2                	lw	ra,44(sp)
1c007abe:	5422                	lw	s0,40(sp)
1c007ac0:	5492                	lw	s1,36(sp)
1c007ac2:	5902                	lw	s2,32(sp)
1c007ac4:	49f2                	lw	s3,28(sp)
1c007ac6:	6145                	addi	sp,sp,48
1c007ac8:	8082                	ret
    prev = next; next = next->next; 
1c007aca:	84a2                	mv	s1,s0
1c007acc:	4040                	lw	s0,4(s0)
1c007ace:	bf55                	j	1c007a82 <extern_free+0x18>
  return (alloc_chunk_extern_t *)pmsis_l2_malloc(sizeof(alloc_chunk_extern_t));
1c007ad0:	4531                	li	a0,12
1c007ad2:	c632                	sw	a2,12(sp)
1c007ad4:	167010ef          	jal	ra,1c00943a <pi_l2_malloc>
1c007ad8:	87aa                	mv	a5,a0
    if (chunk == NULL) return -1;
1c007ada:	4632                	lw	a2,12(sp)
1c007adc:	557d                	li	a0,-1
1c007ade:	dff9                	beqz	a5,1c007abc <extern_free+0x52>
    chunk->next = next;
1c007ae0:	c3c0                	sw	s0,4(a5)
    chunk->size = size;
1c007ae2:	0127a023          	sw	s2,0(a5)
    chunk->addr = (unsigned int)addr;
1c007ae6:	c790                	sw	a2,8(a5)
1c007ae8:	843e                	mv	s0,a5
1c007aea:	bf4d                	j	1c007a9c <extern_free+0x32>
      prev->next = chunk;
1c007aec:	c0c0                	sw	s0,4(s1)
1c007aee:	b7f1                	j	1c007aba <extern_free+0x50>
    a->first_free = chunk;
1c007af0:	0089a023          	sw	s0,0(s3)
1c007af4:	b7d9                	j	1c007aba <extern_free+0x50>

1c007af6 <pi_partition_get_flash_offset>:
        return 0;
}

uint32_t pi_partition_get_flash_offset(const pi_partition_t *partition)
{
    if(partition)
1c007af6:	c119                	beqz	a0,1c007afc <pi_partition_get_flash_offset+0x6>
        return partition->offset;
1c007af8:	4548                	lw	a0,12(a0)
1c007afa:	8082                	ret
    else
        return UINT32_MAX;
1c007afc:	557d                	li	a0,-1
}
1c007afe:	8082                	ret

1c007b00 <pi_partition_table_free>:

void pi_partition_table_free(pi_partition_table_t table)
{
    flash_partition_table_free((flash_partition_table_t *) table);
1c007b00:	aaf1                	j	1c007cdc <flash_partition_table_free>

1c007b02 <pi_partition_table_load>:

pi_err_t pi_partition_table_load(pi_device_t *flash, const pi_partition_table_t *table)
{
    pi_err_t rc;
    
    rc = flash_partition_table_load(flash, (const flash_partition_table_t **) table, NULL);
1c007b02:	4601                	li	a2,0
1c007b04:	a8d1                	j	1c007bd8 <flash_partition_table_load>

1c007b06 <pi_partition_find_first>:

const pi_partition_t *
pi_partition_find_first(const pi_partition_table_t table, const pi_partition_type_t type,
                        const pi_partition_subtype_t subtype,
                        const char *label)
{
1c007b06:	1141                	addi	sp,sp,-16
1c007b08:	c226                	sw	s1,4(sp)
1c007b0a:	c606                	sw	ra,12(sp)
1c007b0c:	c422                	sw	s0,8(sp)
1c007b0e:	84aa                	mv	s1,a0
    pi_partition_t *partition;
    const flash_partition_info_t *info;
    
    info = flash_partition_find_first((const flash_partition_table_t *) table, type, subtype, label);
1c007b10:	2ac5                	jal	1c007d00 <flash_partition_find_first>
    if(info == NULL)
1c007b12:	c539                	beqz	a0,1c007b60 <pi_partition_find_first+0x5a>
1c007b14:	842a                	mv	s0,a0
        return NULL;
    
    partition = pi_l2_malloc(sizeof(pi_partition_t));
1c007b16:	02800513          	li	a0,40
1c007b1a:	121010ef          	jal	ra,1c00943a <pi_l2_malloc>
    partition->type = info->type;
1c007b1e:	00244783          	lbu	a5,2(s0)
    partition->subtype = info->subtype;
    partition->size = info->pos.size;
    partition->offset = info->pos.offset;
    partition->flash = ((const flash_partition_table_t *)table)->flash;
1c007b22:	4098                	lw	a4,0(s1)
    partition->type = info->type;
1c007b24:	c15c                	sw	a5,4(a0)
    partition->subtype = info->subtype;
1c007b26:	00344783          	lbu	a5,3(s0)
1c007b2a:	c51c                	sw	a5,8(a0)
    partition->size = info->pos.size;
1c007b2c:	441c                	lw	a5,8(s0)
1c007b2e:	c91c                	sw	a5,16(a0)
    partition->offset = info->pos.offset;
1c007b30:	405c                	lw	a5,4(s0)
1c007b32:	c55c                	sw	a5,12(a0)
    partition->flash = ((const flash_partition_table_t *)table)->flash;
1c007b34:	87aa                	mv	a5,a0
1c007b36:	00e7aa2b          	p.sw	a4,20(a5!)
    memcpy(partition->label, info->label, 16);
1c007b3a:	4458                	lw	a4,12(s0)
1c007b3c:	c398                	sw	a4,0(a5)
1c007b3e:	481c                	lw	a5,16(s0)
1c007b40:	cd1c                	sw	a5,24(a0)
1c007b42:	485c                	lw	a5,20(s0)
1c007b44:	cd5c                	sw	a5,28(a0)
1c007b46:	4c1c                	lw	a5,24(s0)
    partition->label[16] = 0;
1c007b48:	02050223          	sb	zero,36(a0)
    partition->encrypted = false;
1c007b4c:	020502a3          	sb	zero,37(a0)
    memcpy(partition->label, info->label, 16);
1c007b50:	d11c                	sw	a5,32(a0)
    partition->read_only = false;
1c007b52:	02050323          	sb	zero,38(a0)
    
    return (const pi_partition_t *) partition;
}
1c007b56:	40b2                	lw	ra,12(sp)
1c007b58:	4422                	lw	s0,8(sp)
1c007b5a:	4492                	lw	s1,4(sp)
1c007b5c:	0141                	addi	sp,sp,16
1c007b5e:	8082                	ret
        return NULL;
1c007b60:	4501                	li	a0,0
1c007b62:	bfd5                	j	1c007b56 <pi_partition_find_first+0x50>

1c007b64 <flash_partition_table_verify>:
    }
    printf("\n");
}
#endif

pi_err_t flash_partition_table_verify(const flash_partition_table_t *table)
1c007b64:	514c                	lw	a1,36(a0)
{
    const flash_partition_info_t *part;
    const flash_partition_table_header_t *header = &table->header;
    const flash_partition_info_t *partition_table = table->partitions;
    MD5_CTX context;
1c007b66:	00754683          	lbu	a3,7(a0)
1c007b6a:	4781                	li	a5,0
1c007b6c:	872e                	mv	a4,a1
    uint8_t digest[16];

    // Check magic number for each partition
1c007b6e:	1ba00613          	li	a2,442
    MD5_CTX context;
1c007b72:	04f69663          	bne	a3,a5,1c007bbe <flash_partition_table_verify+0x5a>
    for (uint8_t num_parts = 0; num_parts < header->nbr_of_entries; num_parts++)
    {
        part = partition_table + num_parts;
        if (part->magic_bytes != PI_PARTITION_MAGIC)
        {
            return PI_ERR_INVALID_STATE;
1c007b76:	00854783          	lbu	a5,8(a0)
1c007b7a:	cfa9                	beqz	a5,1c007bd4 <flash_partition_table_verify+0x70>
}
1c007b7c:	7155                	addi	sp,sp,-208
1c007b7e:	c5a2                	sw	s0,200(sp)
1c007b80:	842a                	mv	s0,a0
        }
    }
1c007b82:	1028                	addi	a0,sp,40
}
1c007b84:	c786                	sw	ra,204(sp)
    }
1c007b86:	c62e                	sw	a1,12(sp)
1c007b88:	2bb000ef          	jal	ra,1c008642 <MD5_Init>

    if (header->crc_flags)
1c007b8c:	00744603          	lbu	a2,7(s0)

1c007b90:	45b2                	lw	a1,12(sp)
1c007b92:	1028                	addi	a0,sp,40
1c007b94:	0616                	slli	a2,a2,0x5
1c007b96:	2df000ef          	jal	ra,1c008674 <MD5_Update>
    {
1c007b9a:	102c                	addi	a1,sp,40
1c007b9c:	0828                	addi	a0,sp,24
1c007b9e:	373000ef          	jal	ra,1c008710 <MD5_Final>
        MD5_Init(&context);
        MD5_Update(&context, (unsigned char *) partition_table,
1c007ba2:	4641                	li	a2,16
1c007ba4:	082c                	addi	a1,sp,24
1c007ba6:	01440513          	addi	a0,s0,20
1c007baa:	00d030ef          	jal	ra,1c00b3b6 <strncmp>
                   header->nbr_of_entries * sizeof(flash_partition_info_t));
        MD5_Final(digest, &context);
1c007bae:	47a1                	li	a5,8
        MD5_Update(&context, (unsigned char *) partition_table,
1c007bb0:	e111                	bnez	a0,1c007bb4 <flash_partition_table_verify+0x50>

        if (strncmp((const char *) header->md5, (const char *) digest, sizeof(digest)))
        {
            return PI_ERR_INVALID_CRC;
1c007bb2:	4781                	li	a5,0
        }
1c007bb4:	40be                	lw	ra,204(sp)
1c007bb6:	442e                	lw	s0,200(sp)
1c007bb8:	853e                	mv	a0,a5
1c007bba:	6169                	addi	sp,sp,208
1c007bbc:	8082                	ret
    // Check magic number for each partition
1c007bbe:	0207580b          	p.lhu	a6,32(a4!)
1c007bc2:	00c81663          	bne	a6,a2,1c007bce <flash_partition_table_verify+0x6a>
    MD5_CTX context;
1c007bc6:	0785                	addi	a5,a5,1
1c007bc8:	0ff7f793          	andi	a5,a5,255
1c007bcc:	b75d                	j	1c007b72 <flash_partition_table_verify+0xe>
    {
1c007bce:	478d                	li	a5,3
        }
1c007bd0:	853e                	mv	a0,a5
1c007bd2:	8082                	ret
            return PI_ERR_INVALID_CRC;
1c007bd4:	4781                	li	a5,0
1c007bd6:	bfed                	j	1c007bd0 <flash_partition_table_verify+0x6c>

1c007bd8 <flash_partition_table_load>:
    }

    return PI_OK;
}
1c007bd8:	1101                	addi	sp,sp,-32
1c007bda:	ca26                	sw	s1,20(sp)
1c007bdc:	ce06                	sw	ra,28(sp)
1c007bde:	cc22                	sw	s0,24(sp)
1c007be0:	c84a                	sw	s2,16(sp)
1c007be2:	c64e                	sw	s3,12(sp)
1c007be4:	c452                	sw	s4,8(sp)
1c007be6:	c256                	sw	s5,4(sp)
    pi_err_t rc = PI_OK;
    uint32_t *table_offset_l2 = NULL;
    uint32_t _table_offset;
    flash_partition_table_t *table = NULL;
    flash_partition_info_t *partitions = NULL;

1c007be8:	4489                	li	s1,2
    uint32_t _table_offset;
1c007bea:	c9e1                	beqz	a1,1c007cba <flash_partition_table_load+0xe2>
1c007bec:	892a                	mv	s2,a0
    if(partition_table == NULL)
    {
        PARTITION_TRACE_ERR("Table argument is NULL");
        return PI_ERR_INVALID_ARG;
1c007bee:	02800513          	li	a0,40
1c007bf2:	89b2                	mv	s3,a2
1c007bf4:	8aae                	mv	s5,a1
1c007bf6:	045010ef          	jal	ra,1c00943a <pi_l2_malloc>
1c007bfa:	842a                	mv	s0,a0
    }

// Alloc table containing header
    table = pi_l2_malloc(sizeof(*table));
1c007bfc:	20100493          	li	s1,513
    }
1c007c00:	cd4d                	beqz	a0,1c007cba <flash_partition_table_load+0xe2>
    if(table == NULL)
    {
        PARTITION_TRACE_ERR("Unable to allocate partition table in L2.");
        rc = PI_ERR_L2_NO_MEM;
1c007c02:	4511                	li	a0,4
1c007c04:	037010ef          	jal	ra,1c00943a <pi_l2_malloc>
1c007c08:	84aa                	mv	s1,a0
        goto mount_error;
1c007c0a:	c171                	beqz	a0,1c007cce <flash_partition_table_load+0xf6>
  api->read(device, pi_flash_addr, data, size);
1c007c0c:	00092783          	lw	a5,0(s2)
1c007c10:	862a                	mv	a2,a0
1c007c12:	4581                	li	a1,0
1c007c14:	5b9c                	lw	a5,48(a5)
1c007c16:	4691                	li	a3,4
1c007c18:	854a                	mv	a0,s2
1c007c1a:	9782                	jalr	a5
    table_offset_l2 = pi_l2_malloc(sizeof(*table_offset_l2));
    if(table_offset_l2 == NULL)
    {
        PARTITION_TRACE_ERR("Unable to allocate table offset variable in L2.");
        rc = PI_ERR_L2_NO_MEM;
        goto mount_error;
1c007c1c:	0004aa03          	lw	s4,0(s1)
      table->partitions[i].pos.offset += FS_PARTITIONTABLE_OFFSET;
    }

    table->flash = flash;

    *partition_table = table;
1c007c20:	4591                	li	a1,4
1c007c22:	8526                	mv	a0,s1
        goto mount_error;
1c007c24:	0a0a0863          	beqz	s4,1c007cd4 <flash_partition_table_load+0xfc>
    }
1c007c28:	021010ef          	jal	ra,1c009448 <pi_l2_free>
1c007c2c:	00092783          	lw	a5,0(s2)
1c007c30:	02000693          	li	a3,32
1c007c34:	00440613          	addi	a2,s0,4
1c007c38:	5b9c                	lw	a5,48(a5)
1c007c3a:	85d2                	mv	a1,s4
1c007c3c:	854a                	mv	a0,s2
1c007c3e:	9782                	jalr	a5
    pi_flash_read(flash, _table_offset, &table->header, sizeof(flash_partition_table_header_t));
1c007c40:	00445703          	lhu	a4,4(s0)
1c007c44:	2ba00793          	li	a5,698

1c007c48:	4495                	li	s1,5
    pi_flash_read(flash, _table_offset, &table->header, sizeof(flash_partition_table_header_t));
1c007c4a:	04f71763          	bne	a4,a5,1c007c98 <flash_partition_table_load+0xc0>
        rc = PI_ERR_NOT_FOUND;
1c007c4e:	00644783          	lbu	a5,6(s0)
    {
1c007c52:	44a5                	li	s1,9
        rc = PI_ERR_NOT_FOUND;
1c007c54:	0417b263          	p.bneimm	a5,1,1c007c98 <flash_partition_table_load+0xc0>
        goto mount_error;
1c007c58:	00744503          	lbu	a0,7(s0)
1c007c5c:	0516                	slli	a0,a0,0x5
1c007c5e:	7dc010ef          	jal	ra,1c00943a <pi_l2_malloc>
1c007c62:	d048                	sw	a0,36(s0)
1c007c64:	862a                	mv	a2,a0
    }
1c007c66:	c525                	beqz	a0,1c007cce <flash_partition_table_load+0xf6>
1c007c68:	00092783          	lw	a5,0(s2)
        goto mount_error;
1c007c6c:	00744683          	lbu	a3,7(s0)
1c007c70:	020a0593          	addi	a1,s4,32
1c007c74:	5b9c                	lw	a5,48(a5)
1c007c76:	0696                	slli	a3,a3,0x5
1c007c78:	854a                	mv	a0,s2
1c007c7a:	9782                	jalr	a5
    pi_flash_read(flash, _table_offset + PI_PARTITION_HEADER_SIZE, table->partitions,
1c007c7c:	00844783          	lbu	a5,8(s0)
1c007c80:	c395                	beqz	a5,1c007ca4 <flash_partition_table_load+0xcc>

1c007c82:	8522                	mv	a0,s0
1c007c84:	ee1ff0ef          	jal	ra,1c007b64 <flash_partition_table_verify>
1c007c88:	84aa                	mv	s1,a0

1c007c8a:	cd09                	beqz	a0,1c007ca4 <flash_partition_table_load+0xcc>
        rc = flash_partition_table_verify(table);
1c007c8c:	00744583          	lbu	a1,7(s0)
1c007c90:	5048                	lw	a0,36(s0)
1c007c92:	0596                	slli	a1,a1,0x5
1c007c94:	7b4010ef          	jal	ra,1c009448 <pi_l2_free>
    if(nbr_of_entries)
        *nbr_of_entries = table->header.nbr_of_entries;
1c007c98:	02800593          	li	a1,40
1c007c9c:	8522                	mv	a0,s0
1c007c9e:	7aa010ef          	jal	ra,1c009448 <pi_l2_free>
1c007ca2:	a821                	j	1c007cba <flash_partition_table_load+0xe2>
            goto mount_error;
1c007ca4:	01242023          	sw	s2,0(s0)
    }
1c007ca8:	008aa023          	sw	s0,0(s5)
    }
1c007cac:	4481                	li	s1,0

1c007cae:	00098663          	beqz	s3,1c007cba <flash_partition_table_load+0xe2>
    for (int i = 0; i < table->header.nbr_of_entries; i++) {
1c007cb2:	00744783          	lbu	a5,7(s0)
1c007cb6:	00f98023          	sb	a5,0(s3)

    return PI_OK;
1c007cba:	40f2                	lw	ra,28(sp)
1c007cbc:	4462                	lw	s0,24(sp)
1c007cbe:	8526                	mv	a0,s1
1c007cc0:	4942                	lw	s2,16(sp)
1c007cc2:	44d2                	lw	s1,20(sp)
1c007cc4:	49b2                	lw	s3,12(sp)
1c007cc6:	4a22                	lw	s4,8(sp)
1c007cc8:	4a92                	lw	s5,4(sp)
1c007cca:	6105                	addi	sp,sp,32
1c007ccc:	8082                	ret
    table_offset_l2 = pi_l2_malloc(sizeof(*table_offset_l2));
1c007cce:	20100493          	li	s1,513
1c007cd2:	b7d9                	j	1c007c98 <flash_partition_table_load+0xc0>
    *partition_table = table;
1c007cd4:	774010ef          	jal	ra,1c009448 <pi_l2_free>
    pi_flash_read(flash, FS_PARTITIONTABLE_OFFSET, table_offset_l2, 4);
1c007cd8:	4495                	li	s1,5
1c007cda:	bf7d                	j	1c007c98 <flash_partition_table_load+0xc0>

1c007cdc <flash_partition_table_free>:

    mount_error:
    if(table_offset_l2)
1c007cdc:	1141                	addi	sp,sp,-16
1c007cde:	c422                	sw	s0,8(sp)
1c007ce0:	c606                	sw	ra,12(sp)
        pi_l2_free(table_offset_l2, sizeof(*table_offset_l2));
1c007ce2:	00754583          	lbu	a1,7(a0)
    if(table_offset_l2)
1c007ce6:	842a                	mv	s0,a0
        pi_l2_free(table_offset_l2, sizeof(*table_offset_l2));
1c007ce8:	5148                	lw	a0,36(a0)
1c007cea:	0596                	slli	a1,a1,0x5
1c007cec:	75c010ef          	jal	ra,1c009448 <pi_l2_free>
    if(table)
1c007cf0:	8522                	mv	a0,s0
        pi_l2_free(table, sizeof(*table));
1c007cf2:	4422                	lw	s0,8(sp)
1c007cf4:	40b2                	lw	ra,12(sp)
    if(table)
1c007cf6:	02800593          	li	a1,40
        pi_l2_free(table, sizeof(*table));
1c007cfa:	0141                	addi	sp,sp,16
    if(table)
1c007cfc:	74c0106f          	j	1c009448 <pi_l2_free>

1c007d00 <flash_partition_find_first>:
    return rc;
}

void flash_partition_table_free(const flash_partition_table_t *table)
{
1c007d00:	7179                	addi	sp,sp,-48
1c007d02:	d226                	sw	s1,36(sp)
1c007d04:	d04a                	sw	s2,32(sp)
1c007d06:	cc52                	sw	s4,24(sp)
1c007d08:	ca56                	sw	s5,20(sp)
1c007d0a:	d606                	sw	ra,44(sp)
1c007d0c:	d422                	sw	s0,40(sp)
1c007d0e:	ce4e                	sw	s3,28(sp)
    pi_l2_free((void *) table->partitions, sizeof(flash_partition_info_t) * table->header.nbr_of_entries);
    pi_l2_free((void *) table, sizeof(flash_partition_table_t));
}
1c007d10:	00754983          	lbu	s3,7(a0)
{
1c007d14:	892a                	mv	s2,a0
1c007d16:	8a2e                	mv	s4,a1
1c007d18:	8ab2                	mv	s5,a2
}
1c007d1a:	4481                	li	s1,0
1c007d1c:	0ff4f793          	andi	a5,s1,255
1c007d20:	0137ed63          	bltu	a5,s3,1c007d3a <flash_partition_find_first+0x3a>
{
    const flash_partition_info_t *part = NULL;

    for (uint8_t i = 0; i < table->header.nbr_of_entries; i++)
    {
        part = table->partitions + i;
1c007d24:	4401                	li	s0,0
        if(part->type != type || part->subtype != subtype)
1c007d26:	8522                	mv	a0,s0
1c007d28:	50b2                	lw	ra,44(sp)
1c007d2a:	5422                	lw	s0,40(sp)
1c007d2c:	5492                	lw	s1,36(sp)
1c007d2e:	5902                	lw	s2,32(sp)
1c007d30:	49f2                	lw	s3,28(sp)
1c007d32:	4a62                	lw	s4,24(sp)
1c007d34:	4ad2                	lw	s5,20(sp)
1c007d36:	6145                	addi	sp,sp,48
1c007d38:	8082                	ret

1c007d3a:	02492783          	lw	a5,36(s2)
1c007d3e:	00549413          	slli	s0,s1,0x5
1c007d42:	943e                	add	s0,s0,a5
const flash_partition_info_t *flash_partition_find_first(const flash_partition_table_t *table, pi_partition_type_t type,
1c007d44:	00244783          	lbu	a5,2(s0)
1c007d48:	03479063          	bne	a5,s4,1c007d68 <flash_partition_find_first+0x68>
1c007d4c:	00344783          	lbu	a5,3(s0)
1c007d50:	01579c63          	bne	a5,s5,1c007d68 <flash_partition_find_first+0x68>
{
1c007d54:	dae9                	beqz	a3,1c007d26 <flash_partition_find_first+0x26>

1c007d56:	8536                	mv	a0,a3
1c007d58:	4641                	li	a2,16
1c007d5a:	00c40593          	addi	a1,s0,12
1c007d5e:	c636                	sw	a3,12(sp)
1c007d60:	656030ef          	jal	ra,1c00b3b6 <strncmp>
1c007d64:	46b2                	lw	a3,12(sp)
1c007d66:	d161                	beqz	a0,1c007d26 <flash_partition_find_first+0x26>
1c007d68:	0485                	addi	s1,s1,1
1c007d6a:	bf4d                	j	1c007d1c <flash_partition_find_first+0x1c>

1c007d6c <body>:
/*
 * This processes one or more 64-byte data blocks, but does NOT update the bit
 * counters.  There are no alignment requirements.
 */
static const void *body(MD5_CTX *ctx, const void *data, unsigned long size)
{
1c007d6c:	715d                	addi	sp,sp,-80
	MD5_u32plus a, b, c, d;
	MD5_u32plus saved_a, saved_b, saved_c, saved_d;

	ptr = (const unsigned char *)data;

	a = ctx->a;
1c007d6e:	00852283          	lw	t0,8(a0)
1c007d72:	fc060613          	addi	a2,a2,-64
{
1c007d76:	de52                	sw	s4,60(sp)
1c007d78:	dc56                	sw	s5,56(sp)
1c007d7a:	8219                	srli	a2,a2,0x6
	b = ctx->b;
1c007d7c:	00c52803          	lw	a6,12(a0)
	c = ctx->c;
1c007d80:	01052a03          	lw	s4,16(a0)
	d = ctx->d;
1c007d84:	01452a83          	lw	s5,20(a0)
1c007d88:	0605                	addi	a2,a2,1
{
1c007d8a:	c6a2                	sw	s0,76(sp)
1c007d8c:	c4a6                	sw	s1,72(sp)
1c007d8e:	c2ca                	sw	s2,68(sp)
1c007d90:	c0ce                	sw	s3,64(sp)
1c007d92:	da5a                	sw	s6,52(sp)
1c007d94:	d85e                	sw	s7,48(sp)
1c007d96:	d662                	sw	s8,44(sp)
1c007d98:	d466                	sw	s9,40(sp)
1c007d9a:	d26a                	sw	s10,36(sp)
1c007d9c:	d06e                	sw	s11,32(sp)
1c007d9e:	87aa                	mv	a5,a0
	a = ctx->a;
1c007da0:	cc16                	sw	t0,24(sp)
1c007da2:	ce32                	sw	a2,28(sp)
1c007da4:	4362                	lw	t1,24(sp)
		saved_b = b;
		saved_c = c;
		saved_d = d;

/* Round 1 */
		STEP(F, a, b, c, d, SET(0), 0xd76aa478, 7)
1c007da6:	0005a983          	lw	s3,0(a1)
1c007daa:	d76aa537          	lui	a0,0xd76aa
1c007dae:	47850513          	addi	a0,a0,1144 # d76aa478 <pulp__FC+0xd76aa479>
1c007db2:	00a30733          	add	a4,t1,a0
1c007db6:	013706b3          	add	a3,a4,s3
1c007dba:	015a4733          	xor	a4,s4,s5
1c007dbe:	01077733          	and	a4,a4,a6
1c007dc2:	0537ac23          	sw	s3,88(a5)
1c007dc6:	01574733          	xor	a4,a4,s5
		STEP(F, d, a, b, c, SET(1), 0xe8c7b756, 12)
1c007dca:	41d0                	lw	a2,4(a1)
		STEP(F, a, b, c, d, SET(0), 0xd76aa478, 7)
1c007dcc:	9736                	add	a4,a4,a3
1c007dce:	e8c7b6b7          	lui	a3,0xe8c7b
1c007dd2:	4365                	li	t1,25
1c007dd4:	75668693          	addi	a3,a3,1878 # e8c7b756 <pulp__FC+0xe8c7b757>
1c007dd8:	00da8e33          	add	t3,s5,a3
1c007ddc:	08675733          	p.ror	a4,a4,t1
1c007de0:	9742                	add	a4,a4,a6
1c007de2:	00ce06b3          	add	a3,t3,a2
		STEP(F, d, a, b, c, SET(1), 0xe8c7b756, 12)
1c007de6:	01484e33          	xor	t3,a6,s4
1c007dea:	cff0                	sw	a2,92(a5)
1c007dec:	00ee7e33          	and	t3,t3,a4
		STEP(F, c, d, a, b, SET(2), 0x242070db, 17)
1c007df0:	0085a883          	lw	a7,8(a1)
		STEP(F, d, a, b, c, SET(1), 0xe8c7b756, 12)
1c007df4:	014e4e33          	xor	t3,t3,s4
1c007df8:	24207bb7          	lui	s7,0x24207
1c007dfc:	4d51                	li	s10,20
1c007dfe:	9e36                	add	t3,t3,a3
1c007e00:	0dbb8b93          	addi	s7,s7,219 # 242070db <__l2_end+0x81f975b>
1c007e04:	017a0533          	add	a0,s4,s7
1c007e08:	09ae5e33          	p.ror	t3,t3,s10
1c007e0c:	9e3a                	add	t3,t3,a4
1c007e0e:	011506b3          	add	a3,a0,a7
		STEP(F, c, d, a, b, SET(2), 0x242070db, 17)
1c007e12:	00e84533          	xor	a0,a6,a4
1c007e16:	0717a023          	sw	a7,96(a5)
1c007e1a:	01c57533          	and	a0,a0,t3
		STEP(F, b, c, d, a, SET(3), 0xc1bdceee, 22)
1c007e1e:	00c5a283          	lw	t0,12(a1)
		STEP(F, c, d, a, b, SET(2), 0x242070db, 17)
1c007e22:	01054533          	xor	a0,a0,a6
1c007e26:	c1bddc37          	lui	s8,0xc1bdd
1c007e2a:	4cbd                	li	s9,15
1c007e2c:	9536                	add	a0,a0,a3
1c007e2e:	eeec0c13          	addi	s8,s8,-274 # c1bdceee <pulp__FC+0xc1bdceef>
		STEP(F, d, a, b, c, SET(1), 0xe8c7b756, 12)
1c007e32:	c432                	sw	a2,8(sp)
		STEP(F, c, d, a, b, SET(2), 0x242070db, 17)
1c007e34:	09955533          	p.ror	a0,a0,s9
1c007e38:	01880633          	add	a2,a6,s8
		STEP(F, b, c, d, a, SET(3), 0xc1bdceee, 22)
1c007e3c:	0657a223          	sw	t0,100(a5)
		STEP(F, c, d, a, b, SET(2), 0x242070db, 17)
1c007e40:	9572                	add	a0,a0,t3
1c007e42:	005606b3          	add	a3,a2,t0
		STEP(F, b, c, d, a, SET(3), 0xc1bdceee, 22)
1c007e46:	01c74633          	xor	a2,a4,t3
		STEP(F, a, b, c, d, SET(4), 0xf57c0faf, 7)
1c007e4a:	0105ad83          	lw	s11,16(a1)
		STEP(F, b, c, d, a, SET(3), 0xc1bdceee, 22)
1c007e4e:	8e69                	and	a2,a2,a0
1c007e50:	8e39                	xor	a2,a2,a4
1c007e52:	f57c1eb7          	lui	t4,0xf57c1
1c007e56:	4c29                	li	s8,10
1c007e58:	9636                	add	a2,a2,a3
1c007e5a:	fafe8e93          	addi	t4,t4,-81 # f57c0faf <pulp__FC+0xf57c0fb0>
1c007e5e:	01dd86b3          	add	a3,s11,t4
1c007e62:	09865633          	p.ror	a2,a2,s8
1c007e66:	962a                	add	a2,a2,a0
1c007e68:	9736                	add	a4,a4,a3
		STEP(F, a, b, c, d, SET(4), 0xf57c0faf, 7)
1c007e6a:	00ae46b3          	xor	a3,t3,a0
1c007e6e:	07b7a423          	sw	s11,104(a5)
1c007e72:	8ef1                	and	a3,a3,a2
		STEP(F, d, a, b, c, SET(5), 0x4787c62a, 12)
1c007e74:	49c0                	lw	s0,20(a1)
		STEP(F, a, b, c, d, SET(4), 0xf57c0faf, 7)
1c007e76:	01c6c6b3          	xor	a3,a3,t3
1c007e7a:	9736                	add	a4,a4,a3
1c007e7c:	4787c6b7          	lui	a3,0x4787c
1c007e80:	62a68693          	addi	a3,a3,1578 # 4787c62a <__l2_end+0x2b86ecaa>
1c007e84:	00d40fb3          	add	t6,s0,a3
1c007e88:	08675733          	p.ror	a4,a4,t1
1c007e8c:	9732                	add	a4,a4,a2
1c007e8e:	9e7e                	add	t3,t3,t6
		STEP(F, d, a, b, c, SET(5), 0x4787c62a, 12)
1c007e90:	00c54fb3          	xor	t6,a0,a2
1c007e94:	00efffb3          	and	t6,t6,a4
1c007e98:	d7e0                	sw	s0,108(a5)
1c007e9a:	00afcfb3          	xor	t6,t6,a0
1c007e9e:	9ff2                	add	t6,t6,t3
		STEP(F, c, d, a, b, SET(6), 0xa8304613, 17)
1c007ea0:	0185ae03          	lw	t3,24(a1)
1c007ea4:	a8304bb7          	lui	s7,0xa8304
1c007ea8:	613b8b93          	addi	s7,s7,1555 # a8304613 <pulp__FC+0xa8304614>
		STEP(F, c, d, a, b, SET(2), 0x242070db, 17)
1c007eac:	c646                	sw	a7,12(sp)
		STEP(F, d, a, b, c, SET(5), 0x4787c62a, 12)
1c007eae:	09afdfb3          	p.ror	t6,t6,s10
1c007eb2:	017e08b3          	add	a7,t3,s7
		STEP(F, c, d, a, b, SET(6), 0xa8304613, 17)
1c007eb6:	07c7a823          	sw	t3,112(a5)
		STEP(F, d, a, b, c, SET(5), 0x4787c62a, 12)
1c007eba:	9fba                	add	t6,t6,a4
1c007ebc:	9546                	add	a0,a0,a7
		STEP(F, c, d, a, b, SET(6), 0xa8304613, 17)
1c007ebe:	00e648b3          	xor	a7,a2,a4
		STEP(F, b, c, d, a, SET(7), 0xfd469501, 22)
1c007ec2:	01c5a903          	lw	s2,28(a1)
		STEP(F, c, d, a, b, SET(6), 0xa8304613, 17)
1c007ec6:	01f8f8b3          	and	a7,a7,t6
		STEP(F, a, b, c, d, SET(4), 0xf57c0faf, 7)
1c007eca:	c86e                	sw	s11,16(sp)
		STEP(F, c, d, a, b, SET(6), 0xa8304613, 17)
1c007ecc:	00c8c8b3          	xor	a7,a7,a2
1c007ed0:	fd469db7          	lui	s11,0xfd469
1c007ed4:	98aa                	add	a7,a7,a0
1c007ed6:	501d8d93          	addi	s11,s11,1281 # fd469501 <pulp__FC+0xfd469502>
1c007eda:	01b906b3          	add	a3,s2,s11
1c007ede:	0998d8b3          	p.ror	a7,a7,s9
		STEP(F, b, c, d, a, SET(7), 0xfd469501, 22)
1c007ee2:	0727aa23          	sw	s2,116(a5)
		STEP(F, c, d, a, b, SET(6), 0xa8304613, 17)
1c007ee6:	98fe                	add	a7,a7,t6
1c007ee8:	9636                	add	a2,a2,a3
		STEP(F, b, c, d, a, SET(7), 0xfd469501, 22)
1c007eea:	01f746b3          	xor	a3,a4,t6
		STEP(F, a, b, c, d, SET(8), 0x698098d8, 7)
1c007eee:	0205af03          	lw	t5,32(a1)
		STEP(F, b, c, d, a, SET(7), 0xfd469501, 22)
1c007ef2:	0116f6b3          	and	a3,a3,a7
1c007ef6:	8eb9                	xor	a3,a3,a4
1c007ef8:	6980aeb7          	lui	t4,0x6980a
1c007efc:	9636                	add	a2,a2,a3
1c007efe:	8d8e8e93          	addi	t4,t4,-1832 # 698098d8 <__l2_end+0x4d7fbf58>
1c007f02:	01df06b3          	add	a3,t5,t4
1c007f06:	09865633          	p.ror	a2,a2,s8
1c007f0a:	9646                	add	a2,a2,a7
1c007f0c:	9736                	add	a4,a4,a3
		STEP(F, a, b, c, d, SET(8), 0x698098d8, 7)
1c007f0e:	011fc6b3          	xor	a3,t6,a7
1c007f12:	07e7ac23          	sw	t5,120(a5)
1c007f16:	8ef1                	and	a3,a3,a2
		STEP(F, d, a, b, c, SET(9), 0x8b44f7af, 12)
1c007f18:	51c8                	lw	a0,36(a1)
		STEP(F, a, b, c, d, SET(8), 0x698098d8, 7)
1c007f1a:	01f6c6b3          	xor	a3,a3,t6
1c007f1e:	96ba                	add	a3,a3,a4
1c007f20:	8b44f737          	lui	a4,0x8b44f
1c007f24:	7af70713          	addi	a4,a4,1967 # 8b44f7af <pulp__FC+0x8b44f7b0>
1c007f28:	00e504b3          	add	s1,a0,a4
1c007f2c:	0866d6b3          	p.ror	a3,a3,t1
1c007f30:	96b2                	add	a3,a3,a2
1c007f32:	9fa6                	add	t6,t6,s1
		STEP(F, d, a, b, c, SET(9), 0x8b44f7af, 12)
1c007f34:	00c8c4b3          	xor	s1,a7,a2
1c007f38:	8cf5                	and	s1,s1,a3
1c007f3a:	dfe8                	sw	a0,124(a5)
1c007f3c:	0114c4b3          	xor	s1,s1,a7
1c007f40:	94fe                	add	s1,s1,t6
		STEP(F, c, d, a, b, SET(10), 0xffff5bb1, 17)
1c007f42:	0285af83          	lw	t6,40(a1)
1c007f46:	7bd9                	lui	s7,0xffff6
1c007f48:	bb1b8b93          	addi	s7,s7,-1103 # ffff5bb1 <pulp__FC+0xffff5bb2>
1c007f4c:	017f8eb3          	add	t4,t6,s7
		STEP(F, d, a, b, c, SET(9), 0x8b44f7af, 12)
1c007f50:	09a4d4b3          	p.ror	s1,s1,s10
1c007f54:	94b6                	add	s1,s1,a3
1c007f56:	98f6                	add	a7,a7,t4
		STEP(F, c, d, a, b, SET(10), 0xffff5bb1, 17)
1c007f58:	00d64eb3          	xor	t4,a2,a3
1c007f5c:	009efeb3          	and	t4,t4,s1
1c007f60:	09f7a023          	sw	t6,128(a5)
1c007f64:	00ceceb3          	xor	t4,t4,a2
1c007f68:	9ec6                	add	t4,t4,a7
		STEP(F, b, c, d, a, SET(11), 0x895cd7be, 22)
1c007f6a:	02c5a883          	lw	a7,44(a1)
1c007f6e:	895cddb7          	lui	s11,0x895cd
1c007f72:	7bed8d93          	addi	s11,s11,1982 # 895cd7be <pulp__FC+0x895cd7bf>
		STEP(F, d, a, b, c, SET(9), 0x8b44f7af, 12)
1c007f76:	ca2a                	sw	a0,20(sp)
		STEP(F, c, d, a, b, SET(10), 0xffff5bb1, 17)
1c007f78:	099edeb3          	p.ror	t4,t4,s9
1c007f7c:	01b88533          	add	a0,a7,s11
1c007f80:	9ea6                	add	t4,t4,s1
		STEP(F, b, c, d, a, SET(11), 0x895cd7be, 22)
1c007f82:	0917a223          	sw	a7,132(a5)
1c007f86:	962a                	add	a2,a2,a0
1c007f88:	0096c533          	xor	a0,a3,s1
		STEP(F, a, b, c, d, SET(12), 0x6b901122, 7)
1c007f8c:	0305a383          	lw	t2,48(a1)
		STEP(F, b, c, d, a, SET(11), 0x895cd7be, 22)
1c007f90:	01d57533          	and	a0,a0,t4
1c007f94:	8d35                	xor	a0,a0,a3
1c007f96:	6b901737          	lui	a4,0x6b901
1c007f9a:	9532                	add	a0,a0,a2
1c007f9c:	12270713          	addi	a4,a4,290 # 6b901122 <__l2_end+0x4f8f37a2>
1c007fa0:	00e38633          	add	a2,t2,a4
1c007fa4:	09855533          	p.ror	a0,a0,s8
1c007fa8:	9576                	add	a0,a0,t4
1c007faa:	96b2                	add	a3,a3,a2
		STEP(F, a, b, c, d, SET(12), 0x6b901122, 7)
1c007fac:	01d4c633          	xor	a2,s1,t4
1c007fb0:	8e69                	and	a2,a2,a0
1c007fb2:	8e25                	xor	a2,a2,s1
1c007fb4:	0877a423          	sw	t2,136(a5)
1c007fb8:	96b2                	add	a3,a3,a2
1c007fba:	0866d6b3          	p.ror	a3,a3,t1
		STEP(F, d, a, b, c, SET(13), 0xfd987193, 12)
1c007fbe:	0345a303          	lw	t1,52(a1)
1c007fc2:	fd987db7          	lui	s11,0xfd987
1c007fc6:	193d8d93          	addi	s11,s11,403 # fd987193 <pulp__FC+0xfd987194>
1c007fca:	01b30bb3          	add	s7,t1,s11
		STEP(F, a, b, c, d, SET(12), 0x6b901122, 7)
1c007fce:	00d50733          	add	a4,a0,a3
1c007fd2:	94de                	add	s1,s1,s7
		STEP(F, d, a, b, c, SET(13), 0xfd987193, 12)
1c007fd4:	00aecbb3          	xor	s7,t4,a0
1c007fd8:	00ebfbb3          	and	s7,s7,a4
1c007fdc:	01dbcbb3          	xor	s7,s7,t4
1c007fe0:	94de                	add	s1,s1,s7
1c007fe2:	0867a623          	sw	t1,140(a5)
1c007fe6:	09a4dbb3          	p.ror	s7,s1,s10
		STEP(F, c, d, a, b, SET(14), 0xa679438e, 17)
1c007fea:	5d84                	lw	s1,56(a1)
1c007fec:	a6794637          	lui	a2,0xa6794
1c007ff0:	38e60613          	addi	a2,a2,910 # a679438e <pulp__FC+0xa679438f>
1c007ff4:	00c48b33          	add	s6,s1,a2
		STEP(F, d, a, b, c, SET(13), 0xfd987193, 12)
1c007ff8:	9bba                	add	s7,s7,a4
1c007ffa:	9eda                	add	t4,t4,s6
		STEP(F, c, d, a, b, SET(14), 0xa679438e, 17)
1c007ffc:	00e54b33          	xor	s6,a0,a4
1c008000:	017b7b33          	and	s6,s6,s7
1c008004:	00ab4b33          	xor	s6,s6,a0
1c008008:	0897a823          	sw	s1,144(a5)
1c00800c:	9eda                	add	t4,t4,s6
1c00800e:	099edb33          	p.ror	s6,t4,s9
		STEP(F, b, c, d, a, SET(15), 0x49b40821, 22)
1c008012:	03c5ae83          	lw	t4,60(a1)
1c008016:	49b416b7          	lui	a3,0x49b41
1c00801a:	82168693          	addi	a3,a3,-2015 # 49b40821 <__l2_end+0x2db32ea1>
1c00801e:	00de8633          	add	a2,t4,a3
		STEP(F, c, d, a, b, SET(14), 0xa679438e, 17)
1c008022:	9b5e                	add	s6,s6,s7
1c008024:	9532                	add	a0,a0,a2
		STEP(F, b, c, d, a, SET(15), 0x49b40821, 22)
1c008026:	01774633          	xor	a2,a4,s7
1c00802a:	01667633          	and	a2,a2,s6
1c00802e:	8e39                	xor	a2,a2,a4
1c008030:	9532                	add	a0,a0,a2
1c008032:	09855633          	p.ror	a2,a0,s8
1c008036:	4c22                	lw	s8,8(sp)
1c008038:	f61e2d37          	lui	s10,0xf61e2
1c00803c:	562d0d13          	addi	s10,s10,1378 # f61e2562 <pulp__FC+0xf61e2563>
1c008040:	965a                	add	a2,a2,s6
1c008042:	01ac06b3          	add	a3,s8,s10
1c008046:	9736                	add	a4,a4,a3

/* Round 2 */
		STEP(G, a, b, c, d, GET(1), 0xf61e2562, 5)
1c008048:	00cb46b3          	xor	a3,s6,a2
1c00804c:	0176f6b3          	and	a3,a3,s7
1c008050:	0166c6b3          	xor	a3,a3,s6
1c008054:	4ded                	li	s11,27
1c008056:	96ba                	add	a3,a3,a4
1c008058:	c040b537          	lui	a0,0xc040b
1c00805c:	09b6d6b3          	p.ror	a3,a3,s11
1c008060:	34050513          	addi	a0,a0,832 # c040b340 <pulp__FC+0xc040b341>
1c008064:	96b2                	add	a3,a3,a2
1c008066:	00ae0733          	add	a4,t3,a0
1c00806a:	9bba                	add	s7,s7,a4
		STEP(G, d, a, b, c, GET(6), 0xc040b340, 9)
1c00806c:	00d64733          	xor	a4,a2,a3
1c008070:	01677733          	and	a4,a4,s6
1c008074:	8f31                	xor	a4,a4,a2
1c008076:	4d5d                	li	s10,23
1c008078:	975e                	add	a4,a4,s7
1c00807a:	265e6bb7          	lui	s7,0x265e6
1c00807e:	09a75733          	p.ror	a4,a4,s10
1c008082:	a51b8b93          	addi	s7,s7,-1455 # 265e5a51 <__l2_end+0xa5d80d1>
1c008086:	9736                	add	a4,a4,a3
1c008088:	01788533          	add	a0,a7,s7
1c00808c:	955a                	add	a0,a0,s6
		STEP(G, c, d, a, b, GET(11), 0x265e5a51, 14)
1c00808e:	00e6cb33          	xor	s6,a3,a4
1c008092:	00cb7b33          	and	s6,s6,a2
1c008096:	00db4b33          	xor	s6,s6,a3
1c00809a:	4cc9                	li	s9,18
1c00809c:	9b2a                	add	s6,s6,a0
1c00809e:	e9b6cc37          	lui	s8,0xe9b6c
1c0080a2:	099b5b33          	p.ror	s6,s6,s9
1c0080a6:	7aac0c13          	addi	s8,s8,1962 # e9b6c7aa <pulp__FC+0xe9b6c7ab>
1c0080aa:	9b3a                	add	s6,s6,a4
1c0080ac:	01898533          	add	a0,s3,s8
1c0080b0:	962a                	add	a2,a2,a0
		STEP(G, b, c, d, a, GET(0), 0xe9b6c7aa, 20)
1c0080b2:	01674533          	xor	a0,a4,s6
1c0080b6:	8d75                	and	a0,a0,a3
1c0080b8:	8d39                	xor	a0,a0,a4
1c0080ba:	4c31                	li	s8,12
1c0080bc:	9532                	add	a0,a0,a2
1c0080be:	d62f1bb7          	lui	s7,0xd62f1
1c0080c2:	09855533          	p.ror	a0,a0,s8
1c0080c6:	05db8b93          	addi	s7,s7,93 # d62f105d <pulp__FC+0xd62f105e>
1c0080ca:	955a                	add	a0,a0,s6
1c0080cc:	01740633          	add	a2,s0,s7
1c0080d0:	96b2                	add	a3,a3,a2
		STEP(G, a, b, c, d, GET(5), 0xd62f105d, 5)
1c0080d2:	00ab4633          	xor	a2,s6,a0
1c0080d6:	8e79                	and	a2,a2,a4
1c0080d8:	01664633          	xor	a2,a2,s6
1c0080dc:	96b2                	add	a3,a3,a2
1c0080de:	02441bb7          	lui	s7,0x2441
1c0080e2:	09b6d6b3          	p.ror	a3,a3,s11
1c0080e6:	453b8b93          	addi	s7,s7,1107 # 2441453 <__L2+0x23c1453>
1c0080ea:	96aa                	add	a3,a3,a0
1c0080ec:	017f8633          	add	a2,t6,s7
1c0080f0:	9732                	add	a4,a4,a2
		STEP(G, d, a, b, c, GET(10), 0x02441453, 9)
1c0080f2:	00d54633          	xor	a2,a0,a3
1c0080f6:	01667633          	and	a2,a2,s6
1c0080fa:	8e29                	xor	a2,a2,a0
1c0080fc:	9732                	add	a4,a4,a2
1c0080fe:	d8a1ebb7          	lui	s7,0xd8a1e
1c008102:	09a75733          	p.ror	a4,a4,s10
1c008106:	681b8b93          	addi	s7,s7,1665 # d8a1e681 <pulp__FC+0xd8a1e682>
1c00810a:	9736                	add	a4,a4,a3
1c00810c:	017e8633          	add	a2,t4,s7
1c008110:	9b32                	add	s6,s6,a2
		STEP(G, c, d, a, b, GET(15), 0xd8a1e681, 14)
1c008112:	00e6c633          	xor	a2,a3,a4
1c008116:	8e69                	and	a2,a2,a0
1c008118:	8e35                	xor	a2,a2,a3
1c00811a:	4bc2                	lw	s7,16(sp)
1c00811c:	9b32                	add	s6,s6,a2
1c00811e:	e7d40637          	lui	a2,0xe7d40
1c008122:	099b5b33          	p.ror	s6,s6,s9
1c008126:	bc860613          	addi	a2,a2,-1080 # e7d3fbc8 <pulp__FC+0xe7d3fbc9>
1c00812a:	9b3a                	add	s6,s6,a4
1c00812c:	965e                	add	a2,a2,s7
1c00812e:	9532                	add	a0,a0,a2
		STEP(G, b, c, d, a, GET(4), 0xe7d3fbc8, 20)
1c008130:	01674633          	xor	a2,a4,s6
1c008134:	8e75                	and	a2,a2,a3
1c008136:	8e39                	xor	a2,a2,a4
1c008138:	9532                	add	a0,a0,a2
1c00813a:	4652                	lw	a2,20(sp)
1c00813c:	21e1dbb7          	lui	s7,0x21e1d
1c008140:	09855533          	p.ror	a0,a0,s8
1c008144:	de6b8b93          	addi	s7,s7,-538 # 21e1cde6 <__l2_end+0x5e0f466>
1c008148:	955a                	add	a0,a0,s6
1c00814a:	9bb2                	add	s7,s7,a2
1c00814c:	96de                	add	a3,a3,s7
		STEP(G, a, b, c, d, GET(9), 0x21e1cde6, 5)
1c00814e:	00ab4bb3          	xor	s7,s6,a0
1c008152:	00ebfbb3          	and	s7,s7,a4
1c008156:	016bcbb3          	xor	s7,s7,s6
1c00815a:	9bb6                	add	s7,s7,a3
1c00815c:	c3370637          	lui	a2,0xc3370
1c008160:	09bbdbb3          	p.ror	s7,s7,s11
1c008164:	7d660613          	addi	a2,a2,2006 # c33707d6 <pulp__FC+0xc33707d7>
1c008168:	9baa                	add	s7,s7,a0
1c00816a:	9626                	add	a2,a2,s1
1c00816c:	9732                	add	a4,a4,a2
		STEP(G, d, a, b, c, GET(14), 0xc33707d6, 9)
1c00816e:	01754633          	xor	a2,a0,s7
1c008172:	01667633          	and	a2,a2,s6
1c008176:	8e29                	xor	a2,a2,a0
1c008178:	963a                	add	a2,a2,a4
1c00817a:	f4d51737          	lui	a4,0xf4d51
1c00817e:	09a65633          	p.ror	a2,a2,s10
1c008182:	d8770713          	addi	a4,a4,-633 # f4d50d87 <pulp__FC+0xf4d50d88>
1c008186:	965e                	add	a2,a2,s7
1c008188:	9716                	add	a4,a4,t0
1c00818a:	9b3a                	add	s6,s6,a4
		STEP(G, c, d, a, b, GET(3), 0xf4d50d87, 14)
1c00818c:	00cbc733          	xor	a4,s7,a2
1c008190:	8f69                	and	a4,a4,a0
1c008192:	01774733          	xor	a4,a4,s7
1c008196:	9b3a                	add	s6,s6,a4
1c008198:	455a1737          	lui	a4,0x455a1
1c00819c:	099b5b33          	p.ror	s6,s6,s9
1c0081a0:	4ed70713          	addi	a4,a4,1261 # 455a14ed <__l2_end+0x29593b6d>
1c0081a4:	9b32                	add	s6,s6,a2
1c0081a6:	977a                	add	a4,a4,t5
1c0081a8:	953a                	add	a0,a0,a4
		STEP(G, b, c, d, a, GET(8), 0x455a14ed, 20)
1c0081aa:	01664733          	xor	a4,a2,s6
1c0081ae:	01777733          	and	a4,a4,s7
1c0081b2:	8f31                	xor	a4,a4,a2
1c0081b4:	953a                	add	a0,a0,a4
1c0081b6:	a9e3f6b7          	lui	a3,0xa9e3f
1c0081ba:	09855533          	p.ror	a0,a0,s8
1c0081be:	90568693          	addi	a3,a3,-1787 # a9e3e905 <pulp__FC+0xa9e3e906>
1c0081c2:	955a                	add	a0,a0,s6
1c0081c4:	969a                	add	a3,a3,t1
1c0081c6:	9bb6                	add	s7,s7,a3
		STEP(G, a, b, c, d, GET(13), 0xa9e3e905, 5)
1c0081c8:	00ab46b3          	xor	a3,s6,a0
1c0081cc:	8ef1                	and	a3,a3,a2
1c0081ce:	0166c6b3          	xor	a3,a3,s6
1c0081d2:	9bb6                	add	s7,s7,a3
1c0081d4:	09bbd6b3          	p.ror	a3,s7,s11
1c0081d8:	4bb2                	lw	s7,12(sp)
1c0081da:	fcefa737          	lui	a4,0xfcefa
1c0081de:	3f870713          	addi	a4,a4,1016 # fcefa3f8 <pulp__FC+0xfcefa3f9>
1c0081e2:	96aa                	add	a3,a3,a0
1c0081e4:	975e                	add	a4,a4,s7
1c0081e6:	963a                	add	a2,a2,a4
		STEP(G, d, a, b, c, GET(2), 0xfcefa3f8, 9)
1c0081e8:	00d54733          	xor	a4,a0,a3
1c0081ec:	01677733          	and	a4,a4,s6
1c0081f0:	8f29                	xor	a4,a4,a0
1c0081f2:	963a                	add	a2,a2,a4
1c0081f4:	09a65733          	p.ror	a4,a2,s10
1c0081f8:	676f0637          	lui	a2,0x676f0
1c0081fc:	2d960613          	addi	a2,a2,729 # 676f02d9 <__l2_end+0x4b6e2959>
1c008200:	9736                	add	a4,a4,a3
1c008202:	964a                	add	a2,a2,s2
1c008204:	9b32                	add	s6,s6,a2
		STEP(G, c, d, a, b, GET(7), 0x676f02d9, 14)
1c008206:	00e6c633          	xor	a2,a3,a4
1c00820a:	8e69                	and	a2,a2,a0
1c00820c:	8e35                	xor	a2,a2,a3
1c00820e:	9b32                	add	s6,s6,a2
1c008210:	8d2a5637          	lui	a2,0x8d2a5
1c008214:	099b5b33          	p.ror	s6,s6,s9
1c008218:	c8a60613          	addi	a2,a2,-886 # 8d2a4c8a <pulp__FC+0x8d2a4c8b>
1c00821c:	9b3a                	add	s6,s6,a4
1c00821e:	961e                	add	a2,a2,t2
1c008220:	9532                	add	a0,a0,a2
		STEP(G, b, c, d, a, GET(12), 0x8d2a4c8a, 20)
1c008222:	01674633          	xor	a2,a4,s6
1c008226:	8e75                	and	a2,a2,a3
1c008228:	8e39                	xor	a2,a2,a4
1c00822a:	9532                	add	a0,a0,a2
1c00822c:	09855533          	p.ror	a0,a0,s8
1c008230:	fffa4637          	lui	a2,0xfffa4
1c008234:	955a                	add	a0,a0,s6
1c008236:	94260613          	addi	a2,a2,-1726 # fffa3942 <pulp__FC+0xfffa3943>

/* Round 3 */
		STEP(H, a, b, c, d, GET(5), 0xfffa3942, 4)
1c00823a:	00ab4bb3          	xor	s7,s6,a0
1c00823e:	9622                	add	a2,a2,s0
1c008240:	96b2                	add	a3,a3,a2
1c008242:	00ebc633          	xor	a2,s7,a4
1c008246:	4cf1                	li	s9,28
1c008248:	96b2                	add	a3,a3,a2
1c00824a:	8771f637          	lui	a2,0x8771f
1c00824e:	0996d6b3          	p.ror	a3,a3,s9
1c008252:	68160613          	addi	a2,a2,1665 # 8771f681 <pulp__FC+0x8771f682>
1c008256:	96aa                	add	a3,a3,a0
1c008258:	967a                	add	a2,a2,t5
1c00825a:	9732                	add	a4,a4,a2
		STEP(H2, d, a, b, c, GET(8), 0x8771f681, 11)
1c00825c:	00dbc633          	xor	a2,s7,a3
1c008260:	4c55                	li	s8,21
1c008262:	963a                	add	a2,a2,a4
1c008264:	09865633          	p.ror	a2,a2,s8
1c008268:	6d9d6737          	lui	a4,0x6d9d6
1c00826c:	9636                	add	a2,a2,a3
1c00826e:	12270713          	addi	a4,a4,290 # 6d9d6122 <__l2_end+0x519c87a2>
		STEP(H, c, d, a, b, GET(11), 0x6d9d6122, 16)
1c008272:	00c6cd33          	xor	s10,a3,a2
1c008276:	9746                	add	a4,a4,a7
1c008278:	975a                	add	a4,a4,s6
1c00827a:	00ad4b33          	xor	s6,s10,a0
1c00827e:	4bc1                	li	s7,16
1c008280:	975a                	add	a4,a4,s6
1c008282:	fde54b37          	lui	s6,0xfde54
1c008286:	09775733          	p.ror	a4,a4,s7
1c00828a:	80cb0b13          	addi	s6,s6,-2036 # fde5380c <pulp__FC+0xfde5380d>
1c00828e:	9732                	add	a4,a4,a2
1c008290:	9b26                	add	s6,s6,s1
		STEP(H2, b, c, d, a, GET(14), 0xfde5380c, 23)
1c008292:	00ed4d33          	xor	s10,s10,a4
1c008296:	955a                	add	a0,a0,s6
1c008298:	956a                	add	a0,a0,s10
1c00829a:	4b25                	li	s6,9
1c00829c:	09655533          	p.ror	a0,a0,s6
1c0082a0:	953a                	add	a0,a0,a4
		STEP(H, a, b, c, d, GET(1), 0xa4beea44, 4)
1c0082a2:	00a74d33          	xor	s10,a4,a0
1c0082a6:	4da2                	lw	s11,8(sp)
1c0082a8:	c06a                	sw	s10,0(sp)
1c0082aa:	a4befd37          	lui	s10,0xa4bef
1c0082ae:	a44d0d13          	addi	s10,s10,-1468 # a4beea44 <pulp__FC+0xa4beea45>
1c0082b2:	9dea                	add	s11,s11,s10
1c0082b4:	96ee                	add	a3,a3,s11
1c0082b6:	4d82                	lw	s11,0(sp)
		STEP(F, b, c, d, a, SET(15), 0x49b40821, 22)
1c0082b8:	09d7aa23          	sw	t4,148(a5)
		a += saved_a;
		b += saved_b;
		c += saved_c;
		d += saved_d;

		ptr += 64;
1c0082bc:	04058593          	addi	a1,a1,64
		STEP(H, a, b, c, d, GET(1), 0xa4beea44, 4)
1c0082c0:	00cdcd33          	xor	s10,s11,a2
1c0082c4:	96ea                	add	a3,a3,s10
1c0082c6:	4d42                	lw	s10,16(sp)
1c0082c8:	4bdeddb7          	lui	s11,0x4bded
1c0082cc:	fa9d8d93          	addi	s11,s11,-87 # 4bdecfa9 <__l2_end+0x2fddf629>
1c0082d0:	9d6e                	add	s10,s10,s11
1c0082d2:	966a                	add	a2,a2,s10
		STEP(H2, d, a, b, c, GET(4), 0x4bdecfa9, 11)
1c0082d4:	4d02                	lw	s10,0(sp)
		STEP(H, a, b, c, d, GET(1), 0xa4beea44, 4)
1c0082d6:	0996d6b3          	p.ror	a3,a3,s9
1c0082da:	96aa                	add	a3,a3,a0
		STEP(H2, d, a, b, c, GET(4), 0x4bdecfa9, 11)
1c0082dc:	00dd4db3          	xor	s11,s10,a3
1c0082e0:	966e                	add	a2,a2,s11
1c0082e2:	09865633          	p.ror	a2,a2,s8
1c0082e6:	f6bb5db7          	lui	s11,0xf6bb5
1c0082ea:	9636                	add	a2,a2,a3
1c0082ec:	b60d8d93          	addi	s11,s11,-1184 # f6bb4b60 <pulp__FC+0xf6bb4b61>
		STEP(H, c, d, a, b, GET(7), 0xf6bb4b60, 16)
1c0082f0:	00c6cd33          	xor	s10,a3,a2
1c0082f4:	9dca                	add	s11,s11,s2
1c0082f6:	976e                	add	a4,a4,s11
1c0082f8:	00ad4db3          	xor	s11,s10,a0
1c0082fc:	976e                	add	a4,a4,s11
1c0082fe:	bebfcdb7          	lui	s11,0xbebfc
1c008302:	09775733          	p.ror	a4,a4,s7
1c008306:	c70d8d93          	addi	s11,s11,-912 # bebfbc70 <pulp__FC+0xbebfbc71>
1c00830a:	9732                	add	a4,a4,a2
1c00830c:	9dfe                	add	s11,s11,t6
		STEP(H2, b, c, d, a, GET(10), 0xbebfbc70, 23)
1c00830e:	00ed4d33          	xor	s10,s10,a4
1c008312:	956e                	add	a0,a0,s11
1c008314:	956a                	add	a0,a0,s10
1c008316:	09655533          	p.ror	a0,a0,s6
1c00831a:	289b8d37          	lui	s10,0x289b8
1c00831e:	953a                	add	a0,a0,a4
1c008320:	ec6d0d13          	addi	s10,s10,-314 # 289b7ec6 <__l2_end+0xc9aa546>
		STEP(H, a, b, c, d, GET(13), 0x289b7ec6, 4)
1c008324:	00a74db3          	xor	s11,a4,a0
1c008328:	9d1a                	add	s10,s10,t1
1c00832a:	96ea                	add	a3,a3,s10
1c00832c:	00cdcd33          	xor	s10,s11,a2
1c008330:	9d36                	add	s10,s10,a3
1c008332:	eaa126b7          	lui	a3,0xeaa12
1c008336:	099d5d33          	p.ror	s10,s10,s9
1c00833a:	7fa68693          	addi	a3,a3,2042 # eaa127fa <pulp__FC+0xeaa127fb>
1c00833e:	9d2a                	add	s10,s10,a0
1c008340:	96ce                	add	a3,a3,s3
		STEP(H2, d, a, b, c, GET(0), 0xeaa127fa, 11)
1c008342:	01adcdb3          	xor	s11,s11,s10
1c008346:	9636                	add	a2,a2,a3
1c008348:	966e                	add	a2,a2,s11
1c00834a:	09865633          	p.ror	a2,a2,s8
1c00834e:	d4ef3db7          	lui	s11,0xd4ef3
1c008352:	966a                	add	a2,a2,s10
1c008354:	085d8d93          	addi	s11,s11,133 # d4ef3085 <pulp__FC+0xd4ef3086>
		STEP(H, c, d, a, b, GET(3), 0xd4ef3085, 16)
1c008358:	00cd46b3          	xor	a3,s10,a2
1c00835c:	9d96                	add	s11,s11,t0
1c00835e:	976e                	add	a4,a4,s11
1c008360:	00a6cdb3          	xor	s11,a3,a0
1c008364:	9dba                	add	s11,s11,a4
1c008366:	04882737          	lui	a4,0x4882
1c00836a:	097dddb3          	p.ror	s11,s11,s7
1c00836e:	d0570713          	addi	a4,a4,-763 # 4881d05 <__L2+0x4801d05>
1c008372:	9db2                	add	s11,s11,a2
1c008374:	9772                	add	a4,a4,t3
1c008376:	953a                	add	a0,a0,a4
		STEP(H2, b, c, d, a, GET(6), 0x04881d05, 23)
1c008378:	01b6c6b3          	xor	a3,a3,s11
1c00837c:	96aa                	add	a3,a3,a0
1c00837e:	0966d6b3          	p.ror	a3,a3,s6
1c008382:	96ee                	add	a3,a3,s11
		STEP(H, a, b, c, d, GET(9), 0xd9d4d039, 4)
1c008384:	00ddc533          	xor	a0,s11,a3
1c008388:	4752                	lw	a4,20(sp)
1c00838a:	c02a                	sw	a0,0(sp)
1c00838c:	d9d4d537          	lui	a0,0xd9d4d
1c008390:	03950513          	addi	a0,a0,57 # d9d4d039 <pulp__FC+0xd9d4d03a>
1c008394:	972a                	add	a4,a4,a0
1c008396:	9d3a                	add	s10,s10,a4
1c008398:	4702                	lw	a4,0(sp)
1c00839a:	00c74533          	xor	a0,a4,a2
1c00839e:	9d2a                	add	s10,s10,a0
1c0083a0:	e6dba537          	lui	a0,0xe6dba
1c0083a4:	099d5cb3          	p.ror	s9,s10,s9
1c0083a8:	9e550513          	addi	a0,a0,-1563 # e6db99e5 <pulp__FC+0xe6db99e6>
1c0083ac:	9cb6                	add	s9,s9,a3
1c0083ae:	951e                	add	a0,a0,t2
		STEP(H2, d, a, b, c, GET(12), 0xe6db99e5, 11)
1c0083b0:	01974733          	xor	a4,a4,s9
1c0083b4:	962a                	add	a2,a2,a0
1c0083b6:	963a                	add	a2,a2,a4
1c0083b8:	09865c33          	p.ror	s8,a2,s8
1c0083bc:	1fa28737          	lui	a4,0x1fa28
1c0083c0:	9c66                	add	s8,s8,s9
1c0083c2:	cf870713          	addi	a4,a4,-776 # 1fa27cf8 <__l2_end+0x3a1a378>
		STEP(H, c, d, a, b, GET(15), 0x1fa27cf8, 16)
1c0083c6:	018ccd33          	xor	s10,s9,s8
1c0083ca:	9776                	add	a4,a4,t4
1c0083cc:	9dba                	add	s11,s11,a4
1c0083ce:	00dd4733          	xor	a4,s10,a3
1c0083d2:	9dba                	add	s11,s11,a4
1c0083d4:	097ddbb3          	p.ror	s7,s11,s7
1c0083d8:	4db2                	lw	s11,12(sp)
1c0083da:	c4ac5737          	lui	a4,0xc4ac5
1c0083de:	66570713          	addi	a4,a4,1637 # c4ac5665 <pulp__FC+0xc4ac5666>
1c0083e2:	9be2                	add	s7,s7,s8
1c0083e4:	976e                	add	a4,a4,s11
		STEP(H2, b, c, d, a, GET(2), 0xc4ac5665, 23)
1c0083e6:	017d4d33          	xor	s10,s10,s7
1c0083ea:	96ba                	add	a3,a3,a4
1c0083ec:	f4292737          	lui	a4,0xf4292
1c0083f0:	96ea                	add	a3,a3,s10
1c0083f2:	24470713          	addi	a4,a4,580 # f4292244 <pulp__FC+0xf4292245>
1c0083f6:	0966db33          	p.ror	s6,a3,s6
1c0083fa:	99ba                	add	s3,s3,a4
1c0083fc:	9b5e                	add	s6,s6,s7
1c0083fe:	99e6                	add	s3,s3,s9
		STEP(I, a, b, c, d, GET(0), 0xf4292244, 6)
1c008400:	fffc4c93          	not	s9,s8
1c008404:	016cecb3          	or	s9,s9,s6
1c008408:	017cccb3          	xor	s9,s9,s7
1c00840c:	432b0737          	lui	a4,0x432b0
1c008410:	4669                	li	a2,26
1c008412:	f9770713          	addi	a4,a4,-105 # 432aff97 <__l2_end+0x272a2617>
1c008416:	9cce                	add	s9,s9,s3
1c008418:	08ccdcb3          	p.ror	s9,s9,a2
1c00841c:	993a                	add	s2,s2,a4
1c00841e:	9cda                	add	s9,s9,s6
1c008420:	9962                	add	s2,s2,s8
		STEP(I, d, a, b, c, GET(7), 0x432aff97, 10)
1c008422:	fffbcc13          	not	s8,s7
1c008426:	019c6c33          	or	s8,s8,s9
1c00842a:	016c4c33          	xor	s8,s8,s6
1c00842e:	ab942737          	lui	a4,0xab942
1c008432:	4559                	li	a0,22
1c008434:	9c4a                	add	s8,s8,s2
1c008436:	3a770713          	addi	a4,a4,935 # ab9423a7 <pulp__FC+0xab9423a8>
1c00843a:	08ac5c33          	p.ror	s8,s8,a0
1c00843e:	94ba                	add	s1,s1,a4
1c008440:	9c66                	add	s8,s8,s9
1c008442:	94de                	add	s1,s1,s7
		STEP(I, c, d, a, b, GET(14), 0xab9423a7, 15)
1c008444:	fffb4b93          	not	s7,s6
1c008448:	018bebb3          	or	s7,s7,s8
1c00844c:	019bcbb3          	xor	s7,s7,s9
1c008450:	fc93a737          	lui	a4,0xfc93a
1c008454:	4945                	li	s2,17
1c008456:	9ba6                	add	s7,s7,s1
1c008458:	03970713          	addi	a4,a4,57 # fc93a039 <pulp__FC+0xfc93a03a>
1c00845c:	9722                	add	a4,a4,s0
1c00845e:	092bdbb3          	p.ror	s7,s7,s2
1c008462:	9be2                	add	s7,s7,s8
1c008464:	9b3a                	add	s6,s6,a4
		STEP(I, b, c, d, a, GET(5), 0xfc93a039, 21)
1c008466:	fffcc713          	not	a4,s9
1c00846a:	01776733          	or	a4,a4,s7
1c00846e:	01874733          	xor	a4,a4,s8
1c008472:	46ad                	li	a3,11
1c008474:	975a                	add	a4,a4,s6
1c008476:	08d75733          	p.ror	a4,a4,a3
1c00847a:	655b6437          	lui	s0,0x655b6
1c00847e:	975e                	add	a4,a4,s7
1c008480:	9c340413          	addi	s0,s0,-1597 # 655b59c3 <__l2_end+0x495a8043>
		STEP(I, a, b, c, d, GET(12), 0x655b59c3, 6)
1c008484:	fffc4493          	not	s1,s8
1c008488:	93a2                	add	t2,t2,s0
1c00848a:	8cd9                	or	s1,s1,a4
1c00848c:	9c9e                	add	s9,s9,t2
1c00848e:	0174c4b3          	xor	s1,s1,s7
1c008492:	9ca6                	add	s9,s9,s1
1c008494:	08ccdcb3          	p.ror	s9,s9,a2
1c008498:	8f0cd3b7          	lui	t2,0x8f0cd
1c00849c:	9cba                	add	s9,s9,a4
1c00849e:	c9238393          	addi	t2,t2,-878 # 8f0ccc92 <pulp__FC+0x8f0ccc93>
		STEP(I, d, a, b, c, GET(3), 0x8f0ccc92, 10)
1c0084a2:	fffbc413          	not	s0,s7
1c0084a6:	929e                	add	t0,t0,t2
1c0084a8:	01946433          	or	s0,s0,s9
1c0084ac:	9c16                	add	s8,s8,t0
1c0084ae:	8c39                	xor	s0,s0,a4
1c0084b0:	9c22                	add	s8,s8,s0
1c0084b2:	08ac5c33          	p.ror	s8,s8,a0
1c0084b6:	ffeff2b7          	lui	t0,0xffeff
1c0084ba:	9c66                	add	s8,s8,s9
1c0084bc:	47d28293          	addi	t0,t0,1149 # ffeff47d <pulp__FC+0xffeff47e>
		STEP(I, c, d, a, b, GET(10), 0xffeff47d, 15)
1c0084c0:	fff74393          	not	t2,a4
1c0084c4:	9f96                	add	t6,t6,t0
1c0084c6:	0183e3b3          	or	t2,t2,s8
1c0084ca:	9bfe                	add	s7,s7,t6
1c0084cc:	0193c3b3          	xor	t2,t2,s9
1c0084d0:	42a2                	lw	t0,8(sp)
1c0084d2:	9b9e                	add	s7,s7,t2
1c0084d4:	85846fb7          	lui	t6,0x85846
1c0084d8:	092bdbb3          	p.ror	s7,s7,s2
1c0084dc:	dd1f8f93          	addi	t6,t6,-559 # 85845dd1 <pulp__FC+0x85845dd2>
1c0084e0:	9be2                	add	s7,s7,s8
1c0084e2:	9f96                	add	t6,t6,t0
		STEP(I, b, c, d, a, GET(1), 0x85845dd1, 21)
1c0084e4:	fffcc293          	not	t0,s9
1c0084e8:	0172e2b3          	or	t0,t0,s7
1c0084ec:	0182c2b3          	xor	t0,t0,s8
1c0084f0:	977e                	add	a4,a4,t6
1c0084f2:	9716                	add	a4,a4,t0
1c0084f4:	08d75733          	p.ror	a4,a4,a3
1c0084f8:	6fa88fb7          	lui	t6,0x6fa88
1c0084fc:	975e                	add	a4,a4,s7
1c0084fe:	e4ff8f93          	addi	t6,t6,-433 # 6fa87e4f <__l2_end+0x53a7a4cf>
		STEP(I, a, b, c, d, GET(8), 0x6fa87e4f, 6)
1c008502:	fffc4293          	not	t0,s8
1c008506:	9f7e                	add	t5,t5,t6
1c008508:	00e2e2b3          	or	t0,t0,a4
1c00850c:	9cfa                	add	s9,s9,t5
1c00850e:	0172c2b3          	xor	t0,t0,s7
1c008512:	9c96                	add	s9,s9,t0
1c008514:	08ccdcb3          	p.ror	s9,s9,a2
1c008518:	fe2cef37          	lui	t5,0xfe2ce
1c00851c:	9cba                	add	s9,s9,a4
1c00851e:	6e0f0f13          	addi	t5,t5,1760 # fe2ce6e0 <pulp__FC+0xfe2ce6e1>
		STEP(I, d, a, b, c, GET(15), 0xfe2ce6e0, 10)
1c008522:	fffbcf93          	not	t6,s7
1c008526:	9efa                	add	t4,t4,t5
1c008528:	019fefb3          	or	t6,t6,s9
1c00852c:	9c76                	add	s8,s8,t4
1c00852e:	00efcfb3          	xor	t6,t6,a4
1c008532:	9c7e                	add	s8,s8,t6
1c008534:	08ac5c33          	p.ror	s8,s8,a0
1c008538:	a3014eb7          	lui	t4,0xa3014
1c00853c:	9c66                	add	s8,s8,s9
1c00853e:	314e8e93          	addi	t4,t4,788 # a3014314 <pulp__FC+0xa3014315>
		STEP(I, c, d, a, b, GET(6), 0xa3014314, 15)
1c008542:	fff74f13          	not	t5,a4
1c008546:	9e76                	add	t3,t3,t4
1c008548:	018f6f33          	or	t5,t5,s8
1c00854c:	9bf2                	add	s7,s7,t3
1c00854e:	019f4f33          	xor	t5,t5,s9
1c008552:	9bfa                	add	s7,s7,t5
1c008554:	092bdbb3          	p.ror	s7,s7,s2
1c008558:	4e081e37          	lui	t3,0x4e081
1c00855c:	9be2                	add	s7,s7,s8
1c00855e:	1a1e0e13          	addi	t3,t3,417 # 4e0811a1 <__l2_end+0x32073821>
		STEP(I, b, c, d, a, GET(13), 0x4e0811a1, 21)
1c008562:	fffcce93          	not	t4,s9
1c008566:	9372                	add	t1,t1,t3
1c008568:	017eeeb3          	or	t4,t4,s7
1c00856c:	018eceb3          	xor	t4,t4,s8
1c008570:	971a                	add	a4,a4,t1
1c008572:	9776                	add	a4,a4,t4
1c008574:	4d42                	lw	s10,16(sp)
1c008576:	08d75733          	p.ror	a4,a4,a3
1c00857a:	f7538337          	lui	t1,0xf7538
1c00857e:	975e                	add	a4,a4,s7
		STEP(I, a, b, c, d, GET(4), 0xf7537e82, 6)
1c008580:	fffc4e13          	not	t3,s8
1c008584:	e8230313          	addi	t1,t1,-382 # f7537e82 <pulp__FC+0xf7537e83>
1c008588:	936a                	add	t1,t1,s10
1c00858a:	00ee6e33          	or	t3,t3,a4
1c00858e:	017e4e33          	xor	t3,t3,s7
1c008592:	9c9a                	add	s9,s9,t1
1c008594:	9cf2                	add	s9,s9,t3
1c008596:	08ccd633          	p.ror	a2,s9,a2
1c00859a:	bd3af337          	lui	t1,0xbd3af
1c00859e:	963a                	add	a2,a2,a4
1c0085a0:	23530313          	addi	t1,t1,565 # bd3af235 <pulp__FC+0xbd3af236>
		STEP(I, d, a, b, c, GET(11), 0xbd3af235, 10)
1c0085a4:	fffbce13          	not	t3,s7
1c0085a8:	989a                	add	a7,a7,t1
1c0085aa:	00ce6e33          	or	t3,t3,a2
1c0085ae:	00ee4e33          	xor	t3,t3,a4
1c0085b2:	9c46                	add	s8,s8,a7
1c0085b4:	9c72                	add	s8,s8,t3
1c0085b6:	08ac5533          	p.ror	a0,s8,a0
1c0085ba:	2ad7d8b7          	lui	a7,0x2ad7d
1c0085be:	9532                	add	a0,a0,a2
		STEP(I, c, d, a, b, GET(2), 0x2ad7d2bb, 15)
1c0085c0:	fff74313          	not	t1,a4
1c0085c4:	2bb88893          	addi	a7,a7,699 # 2ad7d2bb <__l2_end+0xed6f93b>
1c0085c8:	98ee                	add	a7,a7,s11
1c0085ca:	00a36333          	or	t1,t1,a0
1c0085ce:	9bc6                	add	s7,s7,a7
1c0085d0:	00c34333          	xor	t1,t1,a2
1c0085d4:	9b9a                	add	s7,s7,t1
1c0085d6:	4dd2                	lw	s11,20(sp)
1c0085d8:	092bd933          	p.ror	s2,s7,s2
1c0085dc:	eb86d8b7          	lui	a7,0xeb86d
1c0085e0:	992a                	add	s2,s2,a0
1c0085e2:	39188893          	addi	a7,a7,913 # eb86d391 <pulp__FC+0xeb86d392>
		STEP(I, b, c, d, a, GET(9), 0xeb86d391, 21)
1c0085e6:	fff64313          	not	t1,a2
		a += saved_a;
1c0085ea:	4e62                	lw	t3,24(sp)
	} while (size -= 64);
1c0085ec:	4ef2                	lw	t4,28(sp)
1c0085ee:	98ee                	add	a7,a7,s11
		STEP(I, b, c, d, a, GET(9), 0xeb86d391, 21)
1c0085f0:	01236333          	or	t1,t1,s2
1c0085f4:	9746                	add	a4,a4,a7
1c0085f6:	00a34333          	xor	t1,t1,a0
1c0085fa:	971a                	add	a4,a4,t1
1c0085fc:	08d75733          	p.ror	a4,a4,a3
		a += saved_a;
1c008600:	9e32                	add	t3,t3,a2
	} while (size -= 64);
1c008602:	1efd                	addi	t4,t4,-1
		STEP(I, b, c, d, a, GET(9), 0xeb86d391, 21)
1c008604:	974a                	add	a4,a4,s2
		a += saved_a;
1c008606:	cc72                	sw	t3,24(sp)
	} while (size -= 64);
1c008608:	ce76                	sw	t4,28(sp)
		b += saved_b;
1c00860a:	983a                	add	a6,a6,a4
		c += saved_c;
1c00860c:	9a4a                	add	s4,s4,s2
		d += saved_d;
1c00860e:	9aaa                	add	s5,s5,a0
	} while (size -= 64);
1c008610:	f80e9a63          	bnez	t4,1c007da4 <body+0x38>
	ctx->b = b;
	ctx->c = c;
	ctx->d = d;

	return ptr;
}
1c008614:	4436                	lw	s0,76(sp)
	ctx->c = c;
1c008616:	0147a823          	sw	s4,16(a5)
	ctx->d = d;
1c00861a:	0157aa23          	sw	s5,20(a5)
	ctx->a = a;
1c00861e:	01c7a423          	sw	t3,8(a5)
	ctx->b = b;
1c008622:	0107a623          	sw	a6,12(a5)
}
1c008626:	44a6                	lw	s1,72(sp)
1c008628:	4916                	lw	s2,68(sp)
1c00862a:	4986                	lw	s3,64(sp)
1c00862c:	5a72                	lw	s4,60(sp)
1c00862e:	5ae2                	lw	s5,56(sp)
1c008630:	5b52                	lw	s6,52(sp)
1c008632:	5bc2                	lw	s7,48(sp)
1c008634:	5c32                	lw	s8,44(sp)
1c008636:	5ca2                	lw	s9,40(sp)
1c008638:	5d12                	lw	s10,36(sp)
1c00863a:	5d82                	lw	s11,32(sp)
1c00863c:	852e                	mv	a0,a1
1c00863e:	6161                	addi	sp,sp,80
1c008640:	8082                	ret

1c008642 <MD5_Init>:

void MD5_Init(MD5_CTX *ctx)
{
	ctx->a = 0x67452301;
1c008642:	674527b7          	lui	a5,0x67452
1c008646:	30178793          	addi	a5,a5,769 # 67452301 <__l2_end+0x4b444981>
1c00864a:	c51c                	sw	a5,8(a0)
	ctx->b = 0xefcdab89;
1c00864c:	efcdb7b7          	lui	a5,0xefcdb
1c008650:	b8978793          	addi	a5,a5,-1143 # efcdab89 <pulp__FC+0xefcdab8a>
1c008654:	c55c                	sw	a5,12(a0)
	ctx->c = 0x98badcfe;
1c008656:	98bae7b7          	lui	a5,0x98bae
1c00865a:	cfe78793          	addi	a5,a5,-770 # 98badcfe <pulp__FC+0x98badcff>
1c00865e:	c91c                	sw	a5,16(a0)
	ctx->d = 0x10325476;
1c008660:	103257b7          	lui	a5,0x10325
1c008664:	47678793          	addi	a5,a5,1142 # 10325476 <__l1_end+0x325456>
1c008668:	c95c                	sw	a5,20(a0)

	ctx->lo = 0;
1c00866a:	00052023          	sw	zero,0(a0)
	ctx->hi = 0;
1c00866e:	00052223          	sw	zero,4(a0)
}
1c008672:	8082                	ret

1c008674 <MD5_Update>:

void MD5_Update(MD5_CTX *ctx, const void *data, unsigned long size)
{
1c008674:	1101                	addi	sp,sp,-32
1c008676:	cc22                	sw	s0,24(sp)
1c008678:	842a                	mv	s0,a0
	MD5_u32plus saved_lo;
	unsigned long used, available;

	saved_lo = ctx->lo;
1c00867a:	4108                	lw	a0,0(a0)
{
1c00867c:	ca26                	sw	s1,20(sp)
1c00867e:	c84a                	sw	s2,16(sp)
	if ((ctx->lo = (saved_lo + size) & 0x1fffffff) < saved_lo)
1c008680:	00c507b3          	add	a5,a0,a2
{
1c008684:	ce06                	sw	ra,28(sp)
1c008686:	c64e                	sw	s3,12(sp)
	if ((ctx->lo = (saved_lo + size) & 0x1fffffff) < saved_lo)
1c008688:	c5d7b7b3          	p.bclr	a5,a5,2,29
1c00868c:	c01c                	sw	a5,0(s0)
{
1c00868e:	892e                	mv	s2,a1
1c008690:	84b2                	mv	s1,a2
	if ((ctx->lo = (saved_lo + size) & 0x1fffffff) < saved_lo)
1c008692:	00a7f563          	bleu	a0,a5,1c00869c <MD5_Update+0x28>
		ctx->hi++;
1c008696:	405c                	lw	a5,4(s0)
1c008698:	0785                	addi	a5,a5,1
1c00869a:	c05c                	sw	a5,4(s0)
	ctx->hi += size >> 29;
1c00869c:	4058                	lw	a4,4(s0)
1c00869e:	01d4d793          	srli	a5,s1,0x1d

	used = saved_lo & 0x3f;
1c0086a2:	f2653533          	p.bclr	a0,a0,25,6
	ctx->hi += size >> 29;
1c0086a6:	97ba                	add	a5,a5,a4
1c0086a8:	c05c                	sw	a5,4(s0)

	if (used) {
1c0086aa:	c129                	beqz	a0,1c0086ec <MD5_Update+0x78>
		available = 64 - used;
1c0086ac:	04000993          	li	s3,64
1c0086b0:	40a989b3          	sub	s3,s3,a0
1c0086b4:	0561                	addi	a0,a0,24
1c0086b6:	9522                	add	a0,a0,s0

		if (size < available) {
1c0086b8:	0134fc63          	bleu	s3,s1,1c0086d0 <MD5_Update+0x5c>
			memcpy(&ctx->buffer[used], data, size);
1c0086bc:	8626                	mv	a2,s1
1c0086be:	85ca                	mv	a1,s2
		data = body(ctx, data, size & ~(unsigned long)0x3f);
		size &= 0x3f;
	}

	memcpy(ctx->buffer, data, size);
}
1c0086c0:	4462                	lw	s0,24(sp)
1c0086c2:	40f2                	lw	ra,28(sp)
1c0086c4:	44d2                	lw	s1,20(sp)
1c0086c6:	4942                	lw	s2,16(sp)
1c0086c8:	49b2                	lw	s3,12(sp)
1c0086ca:	6105                	addi	sp,sp,32
	memcpy(ctx->buffer, data, size);
1c0086cc:	5310206f          	j	1c00b3fc <memcpy>
		memcpy(&ctx->buffer[used], data, available);
1c0086d0:	85ca                	mv	a1,s2
1c0086d2:	864e                	mv	a2,s3
1c0086d4:	529020ef          	jal	ra,1c00b3fc <memcpy>
		body(ctx, ctx->buffer, 64);
1c0086d8:	04000613          	li	a2,64
1c0086dc:	01840593          	addi	a1,s0,24
1c0086e0:	8522                	mv	a0,s0
		data = (const unsigned char *)data + available;
1c0086e2:	994e                	add	s2,s2,s3
		size -= available;
1c0086e4:	413484b3          	sub	s1,s1,s3
		body(ctx, ctx->buffer, 64);
1c0086e8:	e84ff0ef          	jal	ra,1c007d6c <body>
	if (size >= 64) {
1c0086ec:	03f00793          	li	a5,63
1c0086f0:	0097fb63          	bleu	s1,a5,1c008706 <MD5_Update+0x92>
		data = body(ctx, data, size & ~(unsigned long)0x3f);
1c0086f4:	ca04b633          	p.bclr	a2,s1,5,0
1c0086f8:	85ca                	mv	a1,s2
1c0086fa:	8522                	mv	a0,s0
1c0086fc:	e70ff0ef          	jal	ra,1c007d6c <body>
1c008700:	892a                	mv	s2,a0
		size &= 0x3f;
1c008702:	f264b4b3          	p.bclr	s1,s1,25,6
	memcpy(ctx->buffer, data, size);
1c008706:	8626                	mv	a2,s1
1c008708:	85ca                	mv	a1,s2
1c00870a:	01840513          	addi	a0,s0,24
1c00870e:	bf4d                	j	1c0086c0 <MD5_Update+0x4c>

1c008710 <MD5_Final>:
	(dst)[1] = (unsigned char)((src) >> 8); \
	(dst)[2] = (unsigned char)((src) >> 16); \
	(dst)[3] = (unsigned char)((src) >> 24);

void MD5_Final(unsigned char *result, MD5_CTX *ctx)
{
1c008710:	1141                	addi	sp,sp,-16
1c008712:	c226                	sw	s1,4(sp)
1c008714:	84aa                	mv	s1,a0
	unsigned long used, available;

	used = ctx->lo & 0x3f;
1c008716:	4188                	lw	a0,0(a1)
{
1c008718:	c422                	sw	s0,8(sp)
1c00871a:	c04a                	sw	s2,0(sp)
	used = ctx->lo & 0x3f;
1c00871c:	f2653533          	p.bclr	a0,a0,25,6

	ctx->buffer[used++] = 0x80;
1c008720:	00a58733          	add	a4,a1,a0
{
1c008724:	c606                	sw	ra,12(sp)
	ctx->buffer[used++] = 0x80;
1c008726:	00150793          	addi	a5,a0,1
1c00872a:	f8000693          	li	a3,-128

	available = 64 - used;
1c00872e:	04000613          	li	a2,64
	ctx->buffer[used++] = 0x80;
1c008732:	00d70c23          	sb	a3,24(a4)
	available = 64 - used;
1c008736:	8e1d                	sub	a2,a2,a5

	if (available < 8) {
1c008738:	471d                	li	a4,7
{
1c00873a:	842e                	mv	s0,a1
1c00873c:	01858913          	addi	s2,a1,24
	if (available < 8) {
1c008740:	02c76063          	bltu	a4,a2,1c008760 <MD5_Final+0x50>
		memset(&ctx->buffer[used], 0, available);
1c008744:	0565                	addi	a0,a0,25
1c008746:	4581                	li	a1,0
1c008748:	9522                	add	a0,a0,s0
1c00874a:	4a3020ef          	jal	ra,1c00b3ec <memset>
		body(ctx, ctx->buffer, 64);
1c00874e:	04000613          	li	a2,64
1c008752:	85ca                	mv	a1,s2
1c008754:	8522                	mv	a0,s0
1c008756:	e16ff0ef          	jal	ra,1c007d6c <body>
		used = 0;
		available = 64;
1c00875a:	04000613          	li	a2,64
		used = 0;
1c00875e:	4781                	li	a5,0
	}

	memset(&ctx->buffer[used], 0, available - 8);
1c008760:	01878513          	addi	a0,a5,24
1c008764:	1661                	addi	a2,a2,-8
1c008766:	4581                	li	a1,0
1c008768:	9522                	add	a0,a0,s0
1c00876a:	483020ef          	jal	ra,1c00b3ec <memset>

	ctx->lo <<= 3;
1c00876e:	401c                	lw	a5,0(s0)
	OUT(&ctx->buffer[56], ctx->lo)
	OUT(&ctx->buffer[60], ctx->hi)

	body(ctx, ctx->buffer, 64);
1c008770:	85ca                	mv	a1,s2
1c008772:	04000613          	li	a2,64
	ctx->lo <<= 3;
1c008776:	078e                	slli	a5,a5,0x3
	OUT(&ctx->buffer[56], ctx->lo)
1c008778:	873e                	mv	a4,a5
1c00877a:	04e40823          	sb	a4,80(s0)
1c00877e:	0087d713          	srli	a4,a5,0x8
	ctx->lo <<= 3;
1c008782:	c01c                	sw	a5,0(s0)
	OUT(&ctx->buffer[56], ctx->lo)
1c008784:	04e408a3          	sb	a4,81(s0)
1c008788:	0107d713          	srli	a4,a5,0x10
1c00878c:	83e1                	srli	a5,a5,0x18
1c00878e:	04f409a3          	sb	a5,83(s0)
	OUT(&ctx->buffer[60], ctx->hi)
1c008792:	405c                	lw	a5,4(s0)
	OUT(&ctx->buffer[56], ctx->lo)
1c008794:	04e40923          	sb	a4,82(s0)
	OUT(&ctx->buffer[60], ctx->hi)
1c008798:	873e                	mv	a4,a5
1c00879a:	04e40a23          	sb	a4,84(s0)
1c00879e:	0087d713          	srli	a4,a5,0x8
1c0087a2:	04e40aa3          	sb	a4,85(s0)
1c0087a6:	0107d713          	srli	a4,a5,0x10
1c0087aa:	83e1                	srli	a5,a5,0x18
1c0087ac:	04f40ba3          	sb	a5,87(s0)
1c0087b0:	04e40b23          	sb	a4,86(s0)
	body(ctx, ctx->buffer, 64);
1c0087b4:	8522                	mv	a0,s0
1c0087b6:	db6ff0ef          	jal	ra,1c007d6c <body>

	OUT(&result[0], ctx->a)
1c0087ba:	441c                	lw	a5,8(s0)
	OUT(&result[4], ctx->b)
	OUT(&result[8], ctx->c)
	OUT(&result[12], ctx->d)

	memset(ctx, 0, sizeof(*ctx));
1c0087bc:	8522                	mv	a0,s0
1c0087be:	09800613          	li	a2,152
	OUT(&result[0], ctx->a)
1c0087c2:	00f48023          	sb	a5,0(s1)
1c0087c6:	441c                	lw	a5,8(s0)
	memset(ctx, 0, sizeof(*ctx));
1c0087c8:	4581                	li	a1,0
	OUT(&result[0], ctx->a)
1c0087ca:	83a1                	srli	a5,a5,0x8
1c0087cc:	00f480a3          	sb	a5,1(s1)
1c0087d0:	00a45783          	lhu	a5,10(s0)
1c0087d4:	00f48123          	sb	a5,2(s1)
1c0087d8:	00b44783          	lbu	a5,11(s0)
1c0087dc:	00f481a3          	sb	a5,3(s1)
	OUT(&result[4], ctx->b)
1c0087e0:	445c                	lw	a5,12(s0)
1c0087e2:	00f48223          	sb	a5,4(s1)
1c0087e6:	445c                	lw	a5,12(s0)
1c0087e8:	83a1                	srli	a5,a5,0x8
1c0087ea:	00f482a3          	sb	a5,5(s1)
1c0087ee:	00e45783          	lhu	a5,14(s0)
1c0087f2:	00f48323          	sb	a5,6(s1)
1c0087f6:	00f44783          	lbu	a5,15(s0)
1c0087fa:	00f483a3          	sb	a5,7(s1)
	OUT(&result[8], ctx->c)
1c0087fe:	481c                	lw	a5,16(s0)
1c008800:	00f48423          	sb	a5,8(s1)
1c008804:	481c                	lw	a5,16(s0)
1c008806:	83a1                	srli	a5,a5,0x8
1c008808:	00f484a3          	sb	a5,9(s1)
1c00880c:	01245783          	lhu	a5,18(s0)
1c008810:	00f48523          	sb	a5,10(s1)
1c008814:	01344783          	lbu	a5,19(s0)
1c008818:	00f485a3          	sb	a5,11(s1)
	OUT(&result[12], ctx->d)
1c00881c:	485c                	lw	a5,20(s0)
1c00881e:	00f48623          	sb	a5,12(s1)
1c008822:	485c                	lw	a5,20(s0)
1c008824:	83a1                	srli	a5,a5,0x8
1c008826:	00f486a3          	sb	a5,13(s1)
1c00882a:	01645783          	lhu	a5,22(s0)
1c00882e:	00f48723          	sb	a5,14(s1)
1c008832:	01744783          	lbu	a5,23(s0)
1c008836:	00f487a3          	sb	a5,15(s1)
}
1c00883a:	40b2                	lw	ra,12(sp)
1c00883c:	4422                	lw	s0,8(sp)
1c00883e:	4492                	lw	s1,4(sp)
1c008840:	4902                	lw	s2,0(sp)
1c008842:	0141                	addi	sp,sp,16
	memset(ctx, 0, sizeof(*ctx));
1c008844:	3a90206f          	j	1c00b3ec <memset>

1c008848 <__internal_semihost>:
    return __internal_semihost(SEMIHOSTING_SYS_SEEK, (long) args);
}

int semihost_flen(int fd)
{
    return __internal_semihost(SEMIHOSTING_SYS_FLEN, (long) fd);
1c008848:	01f01013          	slli	zero,zero,0x1f
1c00884c:	00100073          	ebreak
1c008850:	40705013          	srai	zero,zero,0x7
1c008854:	8082                	ret

1c008856 <semihost_write0>:
1c008856:	85aa                	mv	a1,a0
1c008858:	4511                	li	a0,4
1c00885a:	b7fd                	j	1c008848 <__internal_semihost>

1c00885c <semihost_open>:
1c00885c:	7139                	addi	sp,sp,-64
1c00885e:	de06                	sw	ra,60(sp)
1c008860:	dc22                	sw	s0,56(sp)
1c008862:	c62e                	sw	a1,12(sp)
1c008864:	842a                	mv	s0,a0
1c008866:	371020ef          	jal	ra,1c00b3d6 <strlen>
1c00886a:	45b2                	lw	a1,12(sp)
1c00886c:	083c                	addi	a5,sp,24
1c00886e:	c380                	sw	s0,0(a5)
1c008870:	087c                	addi	a5,sp,28
1c008872:	c38c                	sw	a1,0(a5)
1c008874:	101c                	addi	a5,sp,32
1c008876:	c388                	sw	a0,0(a5)
1c008878:	082c                	addi	a1,sp,24
1c00887a:	4505                	li	a0,1
1c00887c:	37f1                	jal	1c008848 <__internal_semihost>
1c00887e:	50f2                	lw	ra,60(sp)
1c008880:	5462                	lw	s0,56(sp)
1c008882:	6121                	addi	sp,sp,64
1c008884:	8082                	ret

1c008886 <semihost_close>:
1c008886:	85aa                	mv	a1,a0
1c008888:	4509                	li	a0,2
1c00888a:	bf7d                	j	1c008848 <__internal_semihost>

1c00888c <semihost_read>:
1c00888c:	7179                	addi	sp,sp,-48
1c00888e:	d606                	sw	ra,44(sp)
1c008890:	003c                	addi	a5,sp,8
1c008892:	c388                	sw	a0,0(a5)
1c008894:	007c                	addi	a5,sp,12
1c008896:	c38c                	sw	a1,0(a5)
1c008898:	4519                	li	a0,6
1c00889a:	081c                	addi	a5,sp,16
1c00889c:	002c                	addi	a1,sp,8
1c00889e:	c390                	sw	a2,0(a5)
1c0088a0:	3765                	jal	1c008848 <__internal_semihost>
1c0088a2:	50b2                	lw	ra,44(sp)
1c0088a4:	6145                	addi	sp,sp,48
1c0088a6:	8082                	ret

1c0088a8 <semihost_write>:
1c0088a8:	7179                	addi	sp,sp,-48
1c0088aa:	d606                	sw	ra,44(sp)
1c0088ac:	003c                	addi	a5,sp,8
1c0088ae:	c388                	sw	a0,0(a5)
1c0088b0:	007c                	addi	a5,sp,12
1c0088b2:	c38c                	sw	a1,0(a5)
1c0088b4:	4515                	li	a0,5
1c0088b6:	081c                	addi	a5,sp,16
1c0088b8:	002c                	addi	a1,sp,8
1c0088ba:	c390                	sw	a2,0(a5)
1c0088bc:	3771                	jal	1c008848 <__internal_semihost>
1c0088be:	50b2                	lw	ra,44(sp)
1c0088c0:	6145                	addi	sp,sp,48
1c0088c2:	8082                	ret

1c0088c4 <semihost_seek>:
1c0088c4:	1101                	addi	sp,sp,-32
1c0088c6:	c42a                	sw	a0,8(sp)
1c0088c8:	c62e                	sw	a1,12(sp)
1c0088ca:	4529                	li	a0,10
1c0088cc:	002c                	addi	a1,sp,8
1c0088ce:	ce06                	sw	ra,28(sp)
1c0088d0:	3fa5                	jal	1c008848 <__internal_semihost>
1c0088d2:	40f2                	lw	ra,28(sp)
1c0088d4:	6105                	addi	sp,sp,32
1c0088d6:	8082                	ret

1c0088d8 <semihost_exit>:
}

int semihost_exit(int code)
{
    return __internal_semihost(SEMIHOSTING_SYS_EXIT, (long) code);
1c0088d8:	85aa                	mv	a1,a0
1c0088da:	4561                	li	a0,24
1c0088dc:	b7b5                	j	1c008848 <__internal_semihost>

1c0088de <__bsp_init_pads>:

static int __bsp_init_pads_done = 0;

static void __bsp_init_pads()
{
  if (!__bsp_init_pads_done)
1c0088de:	1c00e7b7          	lui	a5,0x1c00e
1c0088e2:	8ec78793          	addi	a5,a5,-1812 # 1c00d8ec <__bsp_init_pads_done>
1c0088e6:	4398                	lw	a4,0(a5)
1c0088e8:	eb05                	bnez	a4,1c008918 <__bsp_init_pads+0x3a>
{
1c0088ea:	1101                	addi	sp,sp,-32
1c0088ec:	ce06                	sw	ra,28(sp)
  {
    __bsp_init_pads_done = 1;
1c0088ee:	4705                	li	a4,1
1c0088f0:	c398                	sw	a4,0(a5)
    uint32_t pads_value[] = {0x00055500, 0x0f000000, 0x003fffff, 0x00000000};
1c0088f2:	000557b7          	lui	a5,0x55
1c0088f6:	50078793          	addi	a5,a5,1280 # 55500 <__L1Cl+0x45500>
1c0088fa:	c03e                	sw	a5,0(sp)
1c0088fc:	0f0007b7          	lui	a5,0xf000
1c008900:	c23e                	sw	a5,4(sp)
1c008902:	004007b7          	lui	a5,0x400
1c008906:	17fd                	addi	a5,a5,-1
    pi_pad_init(pads_value);
1c008908:	850a                	mv	a0,sp
    uint32_t pads_value[] = {0x00055500, 0x0f000000, 0x003fffff, 0x00000000};
1c00890a:	c43e                	sw	a5,8(sp)
1c00890c:	c602                	sw	zero,12(sp)
    pi_pad_init(pads_value);
1c00890e:	467010ef          	jal	ra,1c00a574 <pi_pad_init>
  }
}
1c008912:	40f2                	lw	ra,28(sp)
1c008914:	6105                	addi	sp,sp,32
1c008916:	8082                	ret
1c008918:	8082                	ret

1c00891a <bsp_hyperram_conf_init>:

void bsp_hyperram_conf_init(struct pi_hyperram_conf *conf)
{
  conf->ram_start = CONFIG_HYPERRAM_START;
  conf->ram_size = CONFIG_HYPERRAM_SIZE;
1c00891a:	008007b7          	lui	a5,0x800
  conf->ram_start = CONFIG_HYPERRAM_START;
1c00891e:	00052a23          	sw	zero,20(a0)
  conf->ram_size = CONFIG_HYPERRAM_SIZE;
1c008922:	cd1c                	sw	a5,24(a0)
  conf->skip_pads_config = 0;
1c008924:	00050623          	sb	zero,12(a0)
  conf->hyper_itf = CONFIG_HYPERRAM_HYPER_ITF;
1c008928:	00052223          	sw	zero,4(a0)
  conf->hyper_cs = CONFIG_HYPERRAM_HYPER_CS;
1c00892c:	00052423          	sw	zero,8(a0)
}
1c008930:	8082                	ret

1c008932 <bsp_hyperram_open>:
1c008932:	1141                	addi	sp,sp,-16
1c008934:	c606                	sw	ra,12(sp)
1c008936:	3765                	jal	1c0088de <__bsp_init_pads>
1c008938:	40b2                	lw	ra,12(sp)
1c00893a:	4501                	li	a0,0
1c00893c:	0141                	addi	sp,sp,16
1c00893e:	8082                	ret

1c008940 <bsp_hyperflash_conf_init>:


void bsp_hyperflash_conf_init(struct pi_hyperflash_conf *conf)
{
  conf->hyper_itf = CONFIG_HYPERFLASH_HYPER_ITF;
  conf->hyper_cs = CONFIG_HYPERFLASH_HYPER_CS;
1c008940:	4785                	li	a5,1
  conf->hyper_itf = CONFIG_HYPERFLASH_HYPER_ITF;
1c008942:	00052223          	sw	zero,4(a0)
  conf->hyper_cs = CONFIG_HYPERFLASH_HYPER_CS;
1c008946:	c51c                	sw	a5,8(a0)
}
1c008948:	8082                	ret

1c00894a <bsp_hyperflash_open>:
1c00894a:	1141                	addi	sp,sp,-16
1c00894c:	c606                	sw	ra,12(sp)
1c00894e:	3f41                	jal	1c0088de <__bsp_init_pads>
1c008950:	40b2                	lw	ra,12(sp)
1c008952:	4501                	li	a0,0
1c008954:	0141                	addi	sp,sp,16
1c008956:	8082                	ret

1c008958 <cluster_start>:
  This is useful when the mask must be updated before waiting for a specific event without modifying the other events (this saves a few instructions)
  \param evtMask Bit mask used to update the event mask. There is 1 bit per event, 1 means the corresponding bit is set in the event mask.
  */
static inline void eu_evt_maskSet(unsigned int evtMask)
{
  ARCHI_WRITE(ARCHI_EU_DEMUX_ADDR, EU_CORE_MASK_OR, evtMask);
1c008958:	002047b7          	lui	a5,0x204
1c00895c:	00070737          	lui	a4,0x70
1c008960:	00e7a423          	sw	a4,8(a5) # 204008 <__L2+0x184008>
  IP_WRITE_PTR(base, EU_DISPATCH_FIFO_ACCESS, value);
}

static inline void eu_dispatch_team_config(unsigned value)
{
  IP_WRITE(ARCHI_EU_DEMUX_ADDR, EU_DISPATCH_DEMUX_OFFSET + EU_DISPATCH_TEAM_CONFIG, value);
1c008964:	0ff00713          	li	a4,255
1c008968:	002046b7          	lui	a3,0x204
1c00896c:	08e6a223          	sw	a4,132(a3) # 204084 <__L2+0x184084>
  IP_WRITE(barAddr, EU_HW_BARR_TRIGGER_MASK, coreMask);
1c008970:	20078793          	addi	a5,a5,512
1c008974:	00e7a023          	sw	a4,0(a5)
  IP_WRITE(barAddr, EU_HW_BARR_TARGET_MASK, targetMask);
1c008978:	00e7a623          	sw	a4,12(a5)
    __rt_team_config(rt_nb_active_pe());
  }

#endif

}
1c00897c:	8082                	ret

1c00897e <__rt_init>:
{
1c00897e:	1101                	addi	sp,sp,-32
static inline void hal_pmu_bypass_set(unsigned int Value) {
  IP_WRITE(ARCHI_APB_SOC_CTRL_ADDR, APB_SOC_CL_BYPASS_OFFSET, Value);
}

static inline unsigned int hal_pmu_bypass_get() {
  return IP_READ(ARCHI_APB_SOC_CTRL_ADDR, APB_SOC_CL_BYPASS_OFFSET);
1c008980:	1a104737          	lui	a4,0x1a104
1c008984:	ce06                	sw	ra,28(sp)
1c008986:	cc22                	sw	s0,24(sp)
1c008988:	ca26                	sw	s1,20(sp)
1c00898a:	07072783          	lw	a5,112(a4) # 1a104070 <__l1_end+0xa104050>
  hal_pmu_bypass_set (ARCHI_REG_FIELD_SET (hal_pmu_bypass_get (), 1, 11, 1) );
1c00898e:	c0b7c7b3          	p.bset	a5,a5,0,11
  IP_WRITE(ARCHI_APB_SOC_CTRL_ADDR, APB_SOC_CL_BYPASS_OFFSET, Value);
1c008992:	06f72823          	sw	a5,112(a4)
  __rt_bridge_set_available();
1c008996:	2b49                	jal	1c008f28 <__rt_bridge_set_available>
  cpu_stack_check_enable((int)__rt_fc_stack, (int)__rt_fc_stack + __rt_fc_stack_size);
1c008998:	1b0007b7          	lui	a5,0x1b000
1c00899c:	39878793          	addi	a5,a5,920 # 1b000398 <__rt_fc_stack>
 * Stack checking
 */

static inline void cpu_stack_check_enable(unsigned int base, unsigned int end)
{
  asm volatile ("csrwi 0x7D0, 0" :: );
1c0089a0:	7d005073          	csrwi	0x7d0,0
  asm volatile ("csrw  0x7D1, %0" :: "r" (base));
1c0089a4:	7d179073          	csrw	0x7d1,a5
1c0089a8:	1c00d737          	lui	a4,0x1c00d
1c0089ac:	44472703          	lw	a4,1092(a4) # 1c00d444 <__rt_fc_stack_size>
1c0089b0:	97ba                	add	a5,a5,a4
  asm volatile ("csrw  0x7D2, %0" :: "r" (end));
1c0089b2:	7d279073          	csrw	0x7d2,a5
  asm volatile ("csrwi 0x7D0, 1" :: );
1c0089b6:	7d00d073          	csrwi	0x7d0,1
  __rt_irq_init();
1c0089ba:	2add                	jal	1c008bb0 <__rt_irq_init>

#include "archi/pulp.h"
#include "archi/soc_eu/soc_eu_v1.h"

static inline void soc_eu_eventMask_set(unsigned int reg, unsigned int value) {
  ARCHI_WRITE(ARCHI_SOC_EU_ADDR, reg, value);
1c0089bc:	54fd                	li	s1,-1
1c0089be:	1a1067b7          	lui	a5,0x1a106
1c0089c2:	0097a223          	sw	s1,4(a5) # 1a106004 <__l1_end+0xa105fe4>
1c0089c6:	0097a423          	sw	s1,8(a5)
  rt_irq_set_handler(ARCHI_FC_EVT_SOC_EVT, __rt_fc_socevents_handler);
1c0089ca:	1c0055b7          	lui	a1,0x1c005
1c0089ce:	25858593          	addi	a1,a1,600 # 1c005258 <__rt_fc_socevents_handler>
1c0089d2:	456d                	li	a0,27
1c0089d4:	2a3d                	jal	1c008b12 <rt_irq_set_handler>
  ARCHI_WRITE(base, EU_CORE_MASK_IRQ_OR, irqMask);
1c0089d6:	080007b7          	lui	a5,0x8000
1c0089da:	00204737          	lui	a4,0x204
1c0089de:	00f72a23          	sw	a5,20(a4) # 204014 <__L2+0x184014>
  ARCHI_WRITE(ARCHI_EU_DEMUX_ADDR, EU_CORE_MASK_OR, evtMask);
1c0089e2:	00f72423          	sw	a5,8(a4)
  __rt_pmu_init();
1c0089e6:	46a010ef          	jal	ra,1c009e50 <__rt_pmu_init>
  __rt_freq_init();
1c0089ea:	71f000ef          	jal	ra,1c009908 <__rt_freq_init>
1c0089ee:	002017b7          	lui	a5,0x201
1c0089f2:	40078793          	addi	a5,a5,1024 # 201400 <__L2+0x181400>
  pulp_write32(ARCHI_CLUSTER_PERIPHERALS_GLOBAL_ADDR(cid) + ARCHI_ICACHE_CTRL_OFFSET, 0xFFFFFFFF);
}

static inline void icache_enable(unsigned int base)
{
  pulp_write32(base, 0xFFFFFFFF);
1c0089f6:	c384                	sw	s1,0(a5)
  asm("csrr %0, 0x014" : "=r" (hart_id) : );
1c0089f8:	01402473          	csrr	s0,uhartid
1c0089fc:	1c00d4b7          	lui	s1,0x1c00d
  return (hart_id >> 5) & 0x3f;
1c008a00:	8415                	srai	s0,s0,0x5
  __rt_utils_init();
1c008a02:	24ed                	jal	1c008cec <__rt_utils_init>
1c008a04:	f2643433          	p.bclr	s0,s0,25,6
  __rt_allocs_init();
1c008a08:	1af000ef          	jal	ra,1c0093b6 <__rt_allocs_init>
1c008a0c:	80848493          	addi	s1,s1,-2040 # 1c00c808 <ctor_list+0x4>
  __rt_event_sched_init();
1c008a10:	029000ef          	jal	ra,1c009238 <__rt_event_sched_init>
  __rt_padframe_init();
1c008a14:	3ce020ef          	jal	ra,1c00ade2 <__rt_padframe_init>
  for(fpp = ctor_list+1;  *fpp != 0;  ++fpp) {
1c008a18:	0044a78b          	p.lw	a5,4(s1!)
1c008a1c:	ebad                	bnez	a5,1c008a8e <__rt_init+0x110>
  return __builtin_pulp_read_then_spr_bit_set(reg, val);
1c008a1e:	300467f3          	csrrsi	a5,mstatus,8
  if (__rt_cbsys_exec(RT_CBSYS_START)) goto error;
1c008a22:	4501                	li	a0,0
1c008a24:	2c61                	jal	1c008cbc <__rt_cbsys_exec>
1c008a26:	e539                	bnez	a0,1c008a74 <__rt_init+0xf6>
  asm("csrr %0, 0x014" : "=r" (hart_id) : );
1c008a28:	014027f3          	csrr	a5,uhartid
  return (hart_id >> 5) & 0x3f;
1c008a2c:	8795                	srai	a5,a5,0x5
1c008a2e:	f267b7b3          	p.bclr	a5,a5,25,6
        exit(retval);
      }
    }
    else
      return cluster_master_start(NULL);
  } else if (!rt_is_fc()) {
1c008a32:	02000713          	li	a4,32
1c008a36:	0ae78363          	beq	a5,a4,1c008adc <__rt_init+0x15e>
    rt_cluster_mount(1, cid, 0, NULL);
1c008a3a:	4681                	li	a3,0
1c008a3c:	4601                	li	a2,0
1c008a3e:	4581                	li	a1,0
1c008a40:	4505                	li	a0,1
  if (rt_cluster_id() != cid)
1c008a42:	cba1                	beqz	a5,1c008a92 <__rt_init+0x114>
    rt_cluster_mount(1, cid, 0, NULL);
1c008a44:	15d010ef          	jal	ra,1c00a3a0 <rt_cluster_mount>
    void *stacks = rt_alloc(RT_ALLOC_CL_DATA+cid, 0x800*rt_nb_active_pe());
1c008a48:	6591                	lui	a1,0x4
1c008a4a:	4509                	li	a0,2
1c008a4c:	0bf000ef          	jal	ra,1c00930a <rt_alloc>
1c008a50:	872a                	mv	a4,a0
    if (stacks == NULL) return -1;
1c008a52:	c10d                	beqz	a0,1c008a74 <__rt_init+0xf6>
    if (rt_cluster_call(NULL, cid, cluster_start, NULL, stacks, 0x800, 0x800, rt_nb_active_pe(), event)) return -1;
1c008a54:	6805                	lui	a6,0x1
1c008a56:	80080813          	addi	a6,a6,-2048 # 800 <__rt_stack_size>
1c008a5a:	1c009637          	lui	a2,0x1c009
1c008a5e:	c002                	sw	zero,0(sp)
1c008a60:	48a1                	li	a7,8
1c008a62:	87c2                	mv	a5,a6
1c008a64:	4681                	li	a3,0
1c008a66:	95860613          	addi	a2,a2,-1704 # 1c008958 <cluster_start>
1c008a6a:	4581                	li	a1,0
1c008a6c:	4501                	li	a0,0
1c008a6e:	0a3010ef          	jal	ra,1c00a310 <rt_cluster_call>
1c008a72:	c52d                	beqz	a0,1c008adc <__rt_init+0x15e>
  rt_fatal("There was an error during runtime initialization\n");
1c008a74:	1c00d537          	lui	a0,0x1c00d
  asm("csrr %0, 0x014" : "=r" (hart_id) : );
1c008a78:	01402673          	csrr	a2,uhartid
1c008a7c:	85a2                	mv	a1,s0
1c008a7e:	f4563633          	p.bclr	a2,a2,26,5
1c008a82:	fe450513          	addi	a0,a0,-28 # 1c00cfe4 <__clz_tab+0x5cc>
1c008a86:	4a3020ef          	jal	ra,1c00b728 <printf>
1c008a8a:	423020ef          	jal	ra,1c00b6ac <abort>
    (**fpp)();
1c008a8e:	9782                	jalr	a5
1c008a90:	b761                	j	1c008a18 <__rt_init+0x9a>
    rt_cluster_mount(1, cid, 0, NULL);
1c008a92:	10f010ef          	jal	ra,1c00a3a0 <rt_cluster_mount>
    void *stacks = rt_alloc(RT_ALLOC_CL_DATA+cid, 0x800*(rt_nb_active_pe()-1));
1c008a96:	6591                	lui	a1,0x4
1c008a98:	80058593          	addi	a1,a1,-2048 # 3800 <__rt_stack_size+0x3000>
1c008a9c:	4509                	li	a0,2
1c008a9e:	06d000ef          	jal	ra,1c00930a <rt_alloc>
    if (stacks == NULL) return -1;
1c008aa2:	d969                	beqz	a0,1c008a74 <__rt_init+0xf6>
  IP_WRITE(ARCHI_EU_DEMUX_ADDR, EU_DISPATCH_DEMUX_OFFSET + EU_DISPATCH_TEAM_CONFIG, value);
1c008aa4:	00204737          	lui	a4,0x204
1c008aa8:	0ff00793          	li	a5,255
1c008aac:	08f72223          	sw	a5,132(a4) # 204084 <__L2+0x184084>
    eu_dispatch_push((unsigned int)__rt_set_slave_stack | 1);
1c008ab0:	1c00c7b7          	lui	a5,0x1c00c
1c008ab4:	74c78793          	addi	a5,a5,1868 # 1c00c74c <__rt_set_slave_stack>
1c008ab8:	c007c7b3          	p.bset	a5,a5,0,0
  IP_WRITE_PTR(ARCHI_EU_DEMUX_ADDR, EU_DISPATCH_DEMUX_OFFSET + EU_DISPATCH_FIFO_ACCESS, value);
1c008abc:	08f72023          	sw	a5,128(a4)
1c008ac0:	6785                	lui	a5,0x1
1c008ac2:	80078793          	addi	a5,a5,-2048 # 800 <__rt_stack_size>
1c008ac6:	08f72023          	sw	a5,128(a4)
1c008aca:	08a72023          	sw	a0,128(a4)
}
1c008ace:	4462                	lw	s0,24(sp)
1c008ad0:	40f2                	lw	ra,28(sp)
1c008ad2:	44d2                	lw	s1,20(sp)
    cluster_start(NULL);
1c008ad4:	4501                	li	a0,0
}
1c008ad6:	6105                	addi	sp,sp,32
    cluster_start(NULL);
1c008ad8:	e81ff06f          	j	1c008958 <cluster_start>
}
1c008adc:	40f2                	lw	ra,28(sp)
1c008ade:	4462                	lw	s0,24(sp)
1c008ae0:	44d2                	lw	s1,20(sp)
1c008ae2:	6105                	addi	sp,sp,32
1c008ae4:	8082                	ret

1c008ae6 <__rt_deinit>:
{
1c008ae6:	1141                	addi	sp,sp,-16
1c008ae8:	c606                	sw	ra,12(sp)
1c008aea:	c422                	sw	s0,8(sp)
}

static inline void cpu_stack_check_disable()
{
  asm volatile ("csrwi 0x7D0, 0" :: );
1c008aec:	7d005073          	csrwi	0x7d0,0
  __rt_cbsys_exec(RT_CBSYS_STOP);
1c008af0:	4505                	li	a0,1
1c008af2:	1c00d437          	lui	s0,0x1c00d
1c008af6:	22d9                	jal	1c008cbc <__rt_cbsys_exec>
1c008af8:	84440413          	addi	s0,s0,-1980 # 1c00c844 <dtor_list+0x4>
  for(fpp = dtor_list + 1;  *fpp != 0;  ++fpp) (**fpp)();
1c008afc:	0044278b          	p.lw	a5,4(s0!)
1c008b00:	e789                	bnez	a5,1c008b0a <__rt_deinit+0x24>
}
1c008b02:	40b2                	lw	ra,12(sp)
1c008b04:	4422                	lw	s0,8(sp)
1c008b06:	0141                	addi	sp,sp,16
1c008b08:	8082                	ret
  for(fpp = dtor_list + 1;  *fpp != 0;  ++fpp) (**fpp)();
1c008b0a:	9782                	jalr	a5
1c008b0c:	bfc5                	j	1c008afc <__rt_deinit+0x16>

1c008b0e <pi_open_from_conf>:
#endif


void pi_open_from_conf(struct pi_device *device, void *conf)
{
  device->config = conf;
1c008b0e:	c14c                	sw	a1,4(a0)
}
1c008b10:	8082                	ret

1c008b12 <rt_irq_set_handler>:
  asm("csrr %0, 0x014" : "=r" (hart_id) : );
1c008b12:	014027f3          	csrr	a5,uhartid
  return hal_spr_read(0x305) & ~1;
#else
#if defined(APB_SOC_VERSION) && APB_SOC_VERSION == 1
  return ARCHI_L2_ADDR;
#else
  if (rt_is_fc()) {
1c008b16:	02000713          	li	a4,32
  return (hart_id >> 5) & 0x3f;
1c008b1a:	ca5797b3          	p.extractu	a5,a5,5,5
1c008b1e:	02e79c63          	bne	a5,a4,1c008b56 <rt_irq_set_handler+0x44>
#if defined(ARCHI_CORE_HAS_SECURITY) && !defined(ARCHI_CORE_HAS_1_10)
    return __builtin_pulp_spr_read(SR_MTVEC);
1c008b22:	30502773          	csrr	a4,mtvec
  irq -= 16;
#endif

  unsigned int base = __rt_get_fc_vector_base();

  unsigned int jmpAddr = base + 0x4 * irq;
1c008b26:	050a                	slli	a0,a0,0x2
  unsigned int S = ((unsigned int) ItHandler - (ItBaseAddr+ItIndex*4));
1c008b28:	8d89                	sub	a1,a1,a0
1c008b2a:	8d99                	sub	a1,a1,a4
  R = __BITINSERT(R, __BITEXTRACT(S,  1, 20),  1, 31);
1c008b2c:	c14586b3          	p.extract	a3,a1,0,20
1c008b30:	06f00793          	li	a5,111
1c008b34:	c1f6a7b3          	p.insert	a5,a3,0,31
  R = __BITINSERT(R, __BITEXTRACT(S, 10,  1), 10, 21);
1c008b38:	d21586b3          	p.extract	a3,a1,9,1
1c008b3c:	d356a7b3          	p.insert	a5,a3,9,21
  R = __BITINSERT(R, __BITEXTRACT(S,  1, 11),  1, 20);
1c008b40:	c0b586b3          	p.extract	a3,a1,0,11
1c008b44:	c146a7b3          	p.insert	a5,a3,0,20
  R = __BITINSERT(R, __BITEXTRACT(S,  8, 12),  8, 12);
1c008b48:	cec585b3          	p.extract	a1,a1,7,12
1c008b4c:	cec5a7b3          	p.insert	a5,a1,7,12

  *(volatile unsigned int *)jmpAddr = __rt_get_itvec(base, irq, (unsigned int)handler);
1c008b50:	00f56723          	p.sw	a5,a4(a0)

#if defined(PLP_FC_HAS_ICACHE)
  flush_all_icache_banks_common(plp_icache_fc_base());
#endif

}
1c008b54:	8082                	ret
static inline void plp_ctrl_core_bootaddr_set_remote(int cid, int core, unsigned int bootAddr) {
  pulp_write32(ARCHI_CLUSTER_PERIPHERALS_GLOBAL_ADDR(cid) + ARCHI_CLUSTER_CTRL_OFFSET + 0x40 + core*4, bootAddr);
}

static inline unsigned int plp_ctrl_bootaddr_get() {
  return pulp_read32(ARCHI_CLUSTER_CTRL_ADDR + 0x40);
1c008b56:	002007b7          	lui	a5,0x200
1c008b5a:	43b8                	lw	a4,64(a5)
1c008b5c:	b7e9                	j	1c008b26 <rt_irq_set_handler+0x14>

1c008b5e <illegal_insn_handler_c>:
#include <stdlib.h>

void __attribute__((weak)) illegal_insn_handler_c()
{

}
1c008b5e:	8082                	ret

1c008b60 <__rt_handle_illegal_instr>:


extern RT_FC_GLOBAL_DATA unsigned int __rt_debug_config;
extern RT_FC_GLOBAL_DATA unsigned int __rt_debug_config_trace;

static inline unsigned int rt_debug_config() { return __rt_debug_config; }
1c008b60:	1b0017b7          	lui	a5,0x1b001

static inline unsigned int rt_debug_config_trace() { return __rt_debug_config_trace; }

static inline int rt_debug_config_warnings() {
  return ARCHI_REG_FIELD_GET(rt_debug_config(), RT_DEBUG_WARNING_BIT, 1);
1c008b64:	b9c7a703          	lw	a4,-1124(a5) # 1b000b9c <__rt_debug_config>

void __rt_handle_illegal_instr()
{
1c008b68:	1141                	addi	sp,sp,-16
1c008b6a:	c422                	sw	s0,8(sp)
1c008b6c:	c606                	sw	ra,12(sp)
1c008b6e:	fc173733          	p.bclr	a4,a4,30,1
1c008b72:	843e                	mv	s0,a5
#ifdef __riscv__
  unsigned int mepc = hal_mepc_read();
  rt_warning("Reached illegal instruction (PC: 0x%x, opcode: 0x%x\n", mepc, *(int *)mepc);
1c008b74:	c315                	beqz	a4,1c008b98 <__rt_handle_illegal_instr+0x38>
1c008b76:	341026f3          	csrr	a3,mepc
  asm("csrr %0, 0x014" : "=r" (hart_id) : );
1c008b7a:	01402673          	csrr	a2,uhartid
1c008b7e:	1c00d537          	lui	a0,0x1c00d
1c008b82:	4298                	lw	a4,0(a3)
  return (hart_id >> 5) & 0x3f;
1c008b84:	40565593          	srai	a1,a2,0x5
1c008b88:	f265b5b3          	p.bclr	a1,a1,25,6
1c008b8c:	f4563633          	p.bclr	a2,a2,26,5
1c008b90:	03c50513          	addi	a0,a0,60 # 1c00d03c <__clz_tab+0x624>
1c008b94:	395020ef          	jal	ra,1c00b728 <printf>
}

static inline int rt_debug_config_werror() {
  return ARCHI_REG_FIELD_GET(rt_debug_config(), RT_DEBUG_WERROR_BIT, 1);
1c008b98:	b9c42783          	lw	a5,-1124(s0)
1c008b9c:	c01797b3          	p.extractu	a5,a5,0,1
1c008ba0:	c399                	beqz	a5,1c008ba6 <__rt_handle_illegal_instr+0x46>
1c008ba2:	30b020ef          	jal	ra,1c00b6ac <abort>
  illegal_insn_handler_c();
#endif
}
1c008ba6:	4422                	lw	s0,8(sp)
1c008ba8:	40b2                	lw	ra,12(sp)
1c008baa:	0141                	addi	sp,sp,16
  illegal_insn_handler_c();
1c008bac:	fb3ff06f          	j	1c008b5e <illegal_insn_handler_c>

1c008bb0 <__rt_irq_init>:
  ARCHI_WRITE(ARCHI_EU_DEMUX_ADDR, EU_CORE_MASK_IRQ_AND, irqMask);
1c008bb0:	57fd                	li	a5,-1
1c008bb2:	00204737          	lui	a4,0x204
1c008bb6:	00f72823          	sw	a5,16(a4) # 204010 <__L2+0x184010>
  else eu_irq_maskClr(mask);
#elif defined(ITC_VERSION)
  hal_itc_enable_clr(mask);
#elif defined(EU_VERSION)
  eu_irq_maskClr(mask);
  if (hal_is_fc()) eu_evt_maskClr(mask);
1c008bba:	02000713          	li	a4,32
  asm("csrr %0, 0x014" : "=r" (hart_id) : );
1c008bbe:	014027f3          	csrr	a5,uhartid
  return (hart_id >> 5) & 0x3f;
1c008bc2:	ca5797b3          	p.extractu	a5,a5,5,5
1c008bc6:	00e79763          	bne	a5,a4,1c008bd4 <__rt_irq_init+0x24>
  ARCHI_WRITE(ARCHI_EU_DEMUX_ADDR, EU_CORE_MASK_AND, evtMask);
1c008bca:	57fd                	li	a5,-1
1c008bcc:	00204737          	lui	a4,0x204
1c008bd0:	00f72223          	sw	a5,4(a4) # 204004 <__L2+0x184004>
  asm("csrr %0, 0x014" : "=r" (hart_id) : );
1c008bd4:	014027f3          	csrr	a5,uhartid
#if defined(ARCHI_CORE_RISCV_ITC)
  hal_spr_write(0x305, base);
#else
#if defined(APB_SOC_VERSION) && APB_SOC_VERSION == 1
#else
  if (rt_is_fc()) {
1c008bd8:	02000713          	li	a4,32
  return (hart_id >> 5) & 0x3f;
1c008bdc:	ca5797b3          	p.extractu	a5,a5,5,5
1c008be0:	00e79963          	bne	a5,a4,1c008bf2 <__rt_irq_init+0x42>
#if defined(ARCHI_CORE_HAS_SECURITY)
    __builtin_pulp_spr_write(SR_MTVEC, base);
1c008be4:	1c0007b7          	lui	a5,0x1c000
1c008be8:	00078793          	mv	a5,a5
1c008bec:	30579073          	csrw	mtvec,a5
1c008bf0:	8082                	ret
  pulp_write32(ARCHI_CLUSTER_CTRL_ADDR + 0x40, bootAddr);
1c008bf2:	1c0007b7          	lui	a5,0x1c000
1c008bf6:	00200737          	lui	a4,0x200
1c008bfa:	00078793          	mv	a5,a5
1c008bfe:	c33c                	sw	a5,64(a4)
  rt_irq_mask_clr(-1);

  // As the FC code may not be at the beginning of the L2, set the
  // vector base to get proper interrupt handlers
  __rt_set_fc_vector_base((int)rt_irq_vector_base());
}
1c008c00:	8082                	ret

1c008c02 <__rt_fc_cluster_lock_req>:
      rt_free(RT_ALLOC_FC_RET_DATA, (void *)cbsys, sizeof(rt_cbsys_t));     
      return;
    }

    prev = cbsys;
    cbsys = cbsys->next;
1c008c02:	300476f3          	csrrci	a3,mstatus,8
1c008c06:	08a54703          	lbu	a4,138(a0)
1c008c0a:	411c                	lw	a5,0(a0)
1c008c0c:	c321                	beqz	a4,1c008c4c <__rt_fc_cluster_lock_req+0x4a>
1c008c0e:	4398                	lw	a4,0(a5)
1c008c10:	cf09                	beqz	a4,1c008c2a <__rt_fc_cluster_lock_req+0x28>
1c008c12:	43d8                	lw	a4,4(a5)
1c008c14:	cb09                	beqz	a4,1c008c26 <__rt_fc_cluster_lock_req+0x24>
1c008c16:	4798                	lw	a4,8(a5)
1c008c18:	c348                	sw	a0,4(a4)
1c008c1a:	c788                	sw	a0,8(a5)
1c008c1c:	00052223          	sw	zero,4(a0)
1c008c20:	30069073          	csrw	mstatus,a3
1c008c24:	8082                	ret
1c008c26:	c3c8                	sw	a0,4(a5)
1c008c28:	bfcd                	j	1c008c1a <__rt_fc_cluster_lock_req+0x18>
1c008c2a:	4705                	li	a4,1
1c008c2c:	08e50423          	sb	a4,136(a0)
1c008c30:	4705                	li	a4,1
1c008c32:	c398                	sw	a4,0(a5)
1c008c34:	08954783          	lbu	a5,137(a0)
1c008c38:	00201737          	lui	a4,0x201
1c008c3c:	e0470713          	addi	a4,a4,-508 # 200e04 <__L2+0x180e04>
1c008c40:	04078793          	addi	a5,a5,64 # 1c000040 <__irq_vector_base+0x40>
1c008c44:	07da                	slli	a5,a5,0x16
1c008c46:	0007e723          	p.sw	zero,a4(a5)
1c008c4a:	bfd9                	j	1c008c20 <__rt_fc_cluster_lock_req+0x1e>
1c008c4c:	43d8                	lw	a4,4(a5)
1c008c4e:	e719                	bnez	a4,1c008c5c <__rt_fc_cluster_lock_req+0x5a>
1c008c50:	0007a023          	sw	zero,0(a5)
1c008c54:	4785                	li	a5,1
1c008c56:	08f50423          	sb	a5,136(a0)
1c008c5a:	bfe9                	j	1c008c34 <__rt_fc_cluster_lock_req+0x32>
1c008c5c:	4350                	lw	a2,4(a4)
1c008c5e:	c3d0                	sw	a2,4(a5)
1c008c60:	4785                	li	a5,1
1c008c62:	08f70423          	sb	a5,136(a4)
1c008c66:	08974783          	lbu	a5,137(a4)
1c008c6a:	00201737          	lui	a4,0x201
1c008c6e:	e0470713          	addi	a4,a4,-508 # 200e04 <__L2+0x180e04>
1c008c72:	04078793          	addi	a5,a5,64
1c008c76:	07da                	slli	a5,a5,0x16
1c008c78:	0007e723          	p.sw	zero,a4(a5)
1c008c7c:	bfe1                	j	1c008c54 <__rt_fc_cluster_lock_req+0x52>

1c008c7e <__rt_cbsys_add>:
  }
}

int __rt_cbsys_add(__rt_cbsys_e cbsys_id, int (*cb)(void *), void *cb_arg)
{
1c008c7e:	1101                	addi	sp,sp,-32
1c008c80:	cc22                	sw	s0,24(sp)
1c008c82:	ca26                	sw	s1,20(sp)
1c008c84:	842a                	mv	s0,a0
1c008c86:	84ae                	mv	s1,a1
  rt_cbsys_t *cbsys = (rt_cbsys_t *)rt_alloc(RT_ALLOC_FC_RET_DATA, sizeof(rt_cbsys_t));
1c008c88:	4501                	li	a0,0
1c008c8a:	45b1                	li	a1,12
1c008c8c:	c632                	sw	a2,12(sp)
{
1c008c8e:	ce06                	sw	ra,28(sp)
  rt_cbsys_t *cbsys = (rt_cbsys_t *)rt_alloc(RT_ALLOC_FC_RET_DATA, sizeof(rt_cbsys_t));
1c008c90:	2dad                	jal	1c00930a <rt_alloc>
  if (cbsys == NULL) return -1;
1c008c92:	4632                	lw	a2,12(sp)
1c008c94:	c115                	beqz	a0,1c008cb8 <__rt_cbsys_add+0x3a>

  cbsys->callback = cb;
  cbsys->arg = cb_arg;
  cbsys->next = cbsys_first[cbsys_id];
1c008c96:	1b0017b7          	lui	a5,0x1b001
1c008c9a:	040a                	slli	s0,s0,0x2
1c008c9c:	ba078793          	addi	a5,a5,-1120 # 1b000ba0 <cbsys_first>
1c008ca0:	97a2                	add	a5,a5,s0
1c008ca2:	4398                	lw	a4,0(a5)
  cbsys->callback = cb;
1c008ca4:	c104                	sw	s1,0(a0)
  cbsys->arg = cb_arg;
1c008ca6:	c150                	sw	a2,4(a0)
  cbsys->next = cbsys_first[cbsys_id];
1c008ca8:	c518                	sw	a4,8(a0)
  cbsys_first[cbsys_id] = cbsys;
1c008caa:	c388                	sw	a0,0(a5)

  return 0;
1c008cac:	4501                	li	a0,0
}
1c008cae:	40f2                	lw	ra,28(sp)
1c008cb0:	4462                	lw	s0,24(sp)
1c008cb2:	44d2                	lw	s1,20(sp)
1c008cb4:	6105                	addi	sp,sp,32
1c008cb6:	8082                	ret
  if (cbsys == NULL) return -1;
1c008cb8:	557d                	li	a0,-1
1c008cba:	bfd5                	j	1c008cae <__rt_cbsys_add+0x30>

1c008cbc <__rt_cbsys_exec>:


int __rt_cbsys_exec(__rt_cbsys_e cbsys_id)
{
1c008cbc:	1141                	addi	sp,sp,-16
1c008cbe:	c422                	sw	s0,8(sp)
  rt_cbsys_t *cbsys = cbsys_first[cbsys_id];
1c008cc0:	1b001437          	lui	s0,0x1b001
1c008cc4:	050a                	slli	a0,a0,0x2
1c008cc6:	ba040413          	addi	s0,s0,-1120 # 1b000ba0 <cbsys_first>
1c008cca:	20a47403          	p.lw	s0,a0(s0)
{
1c008cce:	c606                	sw	ra,12(sp)
  while (cbsys)
1c008cd0:	e411                	bnez	s0,1c008cdc <__rt_cbsys_exec+0x20>
  {
    if (cbsys->callback(cbsys->arg)) return -1;
    cbsys = cbsys->next;
  }

  return 0;
1c008cd2:	4501                	li	a0,0
}
1c008cd4:	40b2                	lw	ra,12(sp)
1c008cd6:	4422                	lw	s0,8(sp)
1c008cd8:	0141                	addi	sp,sp,16
1c008cda:	8082                	ret
    if (cbsys->callback(cbsys->arg)) return -1;
1c008cdc:	401c                	lw	a5,0(s0)
1c008cde:	4048                	lw	a0,4(s0)
1c008ce0:	9782                	jalr	a5
1c008ce2:	e119                	bnez	a0,1c008ce8 <__rt_cbsys_exec+0x2c>
    cbsys = cbsys->next;
1c008ce4:	4400                	lw	s0,8(s0)
1c008ce6:	b7ed                	j	1c008cd0 <__rt_cbsys_exec+0x14>
    if (cbsys->callback(cbsys->arg)) return -1;
1c008ce8:	557d                	li	a0,-1
1c008cea:	b7ed                	j	1c008cd4 <__rt_cbsys_exec+0x18>

1c008cec <__rt_utils_init>:

RT_FC_BOOT_CODE void __rt_utils_init()
{
  for (int i=0; i<RT_CBSYS_NB; i++)
  {
    cbsys_first[i] = NULL;
1c008cec:	1b0017b7          	lui	a5,0x1b001
1c008cf0:	ba078793          	addi	a5,a5,-1120 # 1b000ba0 <cbsys_first>
1c008cf4:	0007a023          	sw	zero,0(a5)
1c008cf8:	0007a223          	sw	zero,4(a5)
1c008cfc:	0007a423          	sw	zero,8(a5)
1c008d00:	0007a623          	sw	zero,12(a5)
1c008d04:	0007a823          	sw	zero,16(a5)
1c008d08:	0007aa23          	sw	zero,20(a5)
  }
}
1c008d0c:	8082                	ret

1c008d0e <__rt_fc_lock>:

void __rt_fc_lock(rt_fc_lock_t *lock)
{
1c008d0e:	1141                	addi	sp,sp,-16
1c008d10:	c422                	sw	s0,8(sp)
1c008d12:	842a                	mv	s0,a0
1c008d14:	c606                	sw	ra,12(sp)
1c008d16:	c226                	sw	s1,4(sp)
1c008d18:	c04a                	sw	s2,0(sp)
  return __builtin_pulp_read_then_spr_bit_clr(reg, val);
1c008d1a:	300474f3          	csrrci	s1,mstatus,8
#if defined(ARCHI_HAS_FC)
  int irq = rt_irq_disable();
  while(lock->locked)
1c008d1e:	401c                	lw	a5,0(s0)
1c008d20:	eb99                	bnez	a5,1c008d36 <__rt_fc_lock+0x28>
  {
    //lock->fc_wait = __rt_thread_current;
    __rt_event_execute(rt_event_internal_sched(), 1);
  }
  lock->locked = 1;
1c008d22:	4785                	li	a5,1
1c008d24:	c01c                	sw	a5,0(s0)
  __builtin_pulp_spr_write(reg, val);
1c008d26:	30049073          	csrw	mstatus,s1
  while (rt_tas_lock_32((uint32_t)&lock->lock) == -1)
  {

  }
#endif
}
1c008d2a:	40b2                	lw	ra,12(sp)
1c008d2c:	4422                	lw	s0,8(sp)
1c008d2e:	4492                	lw	s1,4(sp)
1c008d30:	4902                	lw	s2,0(sp)
1c008d32:	0141                	addi	sp,sp,16
1c008d34:	8082                	ret
    __rt_event_execute(rt_event_internal_sched(), 1);
1c008d36:	4585                	li	a1,1
1c008d38:	01c00513          	li	a0,28
1c008d3c:	2989                	jal	1c00918e <__rt_event_execute>
1c008d3e:	b7c5                	j	1c008d1e <__rt_fc_lock+0x10>

1c008d40 <__rt_fc_unlock>:
  return __builtin_pulp_read_then_spr_bit_clr(reg, val);
1c008d40:	300476f3          	csrrci	a3,mstatus,8

static int __rt_fc_unlock_to_cluster(rt_fc_lock_t *lock)
{
#if defined(ARCHI_HAS_CLUSTER)
  if (lock->waiting) {
1c008d44:	415c                	lw	a5,4(a0)
1c008d46:	e791                	bnez	a5,1c008d52 <__rt_fc_unlock+0x12>
{
#if defined(ARCHI_HAS_FC)
  int irq = rt_irq_disable();
  if (!__rt_fc_unlock_to_cluster(lock))
  {
    lock->locked = 0;    
1c008d48:	00052023          	sw	zero,0(a0)
  __builtin_pulp_spr_write(reg, val);
1c008d4c:	30069073          	csrw	mstatus,a3
  }
  rt_irq_restore(irq);
#else
  rt_tas_unlock_32((uint32_t)&lock->lock, 0);
#endif
}
1c008d50:	8082                	ret
    lock->waiting = req->next;
1c008d52:	43d8                	lw	a4,4(a5)
1c008d54:	c158                	sw	a4,4(a0)
    req->done = 1;
1c008d56:	4705                	li	a4,1
1c008d58:	08e78423          	sb	a4,136(a5)
    __rt_cluster_notif_req_done(req->cid);
1c008d5c:	0897c783          	lbu	a5,137(a5)
  pulp_write32(evtAddr, coreSet);
1c008d60:	00201737          	lui	a4,0x201
1c008d64:	e0470713          	addi	a4,a4,-508 # 200e04 <__L2+0x180e04>
  return ARCHI_CLUSTER_PERIPHERALS_GLOBAL_ADDR(cluster) + ARCHI_EU_OFFSET + EU_SW_EVENTS_AREA_BASE + EU_CORE_TRIGG_SW_EVENT + (event << 2);
1c008d68:	04078793          	addi	a5,a5,64
1c008d6c:	07da                	slli	a5,a5,0x16
  pulp_write32(evtAddr, coreSet);
1c008d6e:	0007e723          	p.sw	zero,a4(a5)
1c008d72:	bfe9                	j	1c008d4c <__rt_fc_unlock+0xc>

1c008d74 <__rt_fc_cluster_lock>:
  asm("csrr %0, 0x014" : "=r" (hart_id) : );
1c008d74:	014027f3          	csrr	a5,uhartid
  return (hart_id >> 5) & 0x3f;
1c008d78:	8795                	srai	a5,a5,0x5
1c008d7a:	f267b7b3          	p.bclr	a5,a5,25,6
#if defined(ARCHI_HAS_FC)

void __rt_fc_cluster_lock(rt_fc_lock_t *lock, rt_fc_lock_req_t *req)
{
  req->lock = lock;
  req->cid = rt_cluster_id();
1c008d7e:	08f584a3          	sb	a5,137(a1)
  req->done = 0;
  req->req_lock = 1;
1c008d82:	4785                	li	a5,1
1c008d84:	08f58523          	sb	a5,138(a1)
  event->arg[0] = (uintptr_t)callback;
1c008d88:	1c0097b7          	lui	a5,0x1c009
1c008d8c:	c0278793          	addi	a5,a5,-1022 # 1c008c02 <__rt_fc_cluster_lock_req>
  req->lock = lock;
1c008d90:	c188                	sw	a0,0(a1)
  req->done = 0;
1c008d92:	08058423          	sb	zero,136(a1)
  event->implem.pending = 0;
1c008d96:	0205a623          	sw	zero,44(a1)
  event->implem.keep = 0;
1c008d9a:	0205a823          	sw	zero,48(a1)
  event->arg[0] = (uintptr_t)callback;
1c008d9e:	c5dc                	sw	a5,12(a1)
  event->arg[1] = (uintptr_t)arg;
1c008da0:	c98c                	sw	a1,16(a1)
  __rt_init_event(&req->event, __rt_cluster_sched_get(), __rt_fc_cluster_lock_req, (void *)req);
1c008da2:	05a1                	addi	a1,a1,8

// This function will push an event from cluster to FC and the event callback
// will be executed directly from within the interrupt handler
static inline void __rt_cluster_push_fc_irq_event(rt_event_t *event)
{
  __rt_cluster_push_fc_event((rt_event_t *)(((unsigned int)event) | 0x1));
1c008da4:	c005c533          	p.bset	a0,a1,0,0
1c008da8:	4800106f          	j	1c00a228 <__rt_cluster_push_fc_event>

1c008dac <__rt_fc_cluster_unlock>:
  asm("csrr %0, 0x014" : "=r" (hart_id) : );
1c008dac:	014027f3          	csrr	a5,uhartid
  return (hart_id >> 5) & 0x3f;
1c008db0:	8795                	srai	a5,a5,0x5
1c008db2:	f267b7b3          	p.bclr	a5,a5,25,6
}

void __rt_fc_cluster_unlock(rt_fc_lock_t *lock, rt_fc_lock_req_t *req)
{
  req->lock = lock;
  req->cid = rt_cluster_id();
1c008db6:	08f584a3          	sb	a5,137(a1)
  event->arg[0] = (uintptr_t)callback;
1c008dba:	1c0097b7          	lui	a5,0x1c009
1c008dbe:	c0278793          	addi	a5,a5,-1022 # 1c008c02 <__rt_fc_cluster_lock_req>
  req->lock = lock;
1c008dc2:	c188                	sw	a0,0(a1)
  req->done = 0;
1c008dc4:	08058423          	sb	zero,136(a1)
  req->req_lock = 0;
1c008dc8:	08058523          	sb	zero,138(a1)
  event->implem.pending = 0;
1c008dcc:	0205a623          	sw	zero,44(a1)
  event->implem.keep = 0;
1c008dd0:	0205a823          	sw	zero,48(a1)
  event->arg[0] = (uintptr_t)callback;
1c008dd4:	c5dc                	sw	a5,12(a1)
  event->arg[1] = (uintptr_t)arg;
1c008dd6:	c98c                	sw	a1,16(a1)
  __rt_init_event(&req->event, __rt_cluster_sched_get(), __rt_fc_cluster_lock_req, (void *)req);
1c008dd8:	05a1                	addi	a1,a1,8
1c008dda:	c005c533          	p.bset	a0,a1,0,0
1c008dde:	44a0106f          	j	1c00a228 <__rt_cluster_push_fc_event>

1c008de2 <__rt_event_enqueue>:

    __rt_wait_event_check(event, call_event);
  }

  rt_irq_restore(irq);
}
1c008de2:	01c02683          	lw	a3,28(zero) # 1c <_l1_preload_size>
1c008de6:	00052023          	sw	zero,0(a0)
1c008dea:	01c00713          	li	a4,28
1c008dee:	c689                	beqz	a3,1c008df8 <__rt_event_enqueue+0x16>
1c008df0:	435c                	lw	a5,4(a4)
1c008df2:	c388                	sw	a0,0(a5)
1c008df4:	c348                	sw	a0,4(a4)
1c008df6:	8082                	ret
1c008df8:	00a02e23          	sw	a0,28(zero) # 1c <_l1_preload_size>
1c008dfc:	bfe5                	j	1c008df4 <__rt_event_enqueue+0x12>

1c008dfe <__rt_bridge_check_bridge_req.part.5>:
1c008dfe:	1c00d737          	lui	a4,0x1c00d
1c008e02:	37870793          	addi	a5,a4,888 # 1c00d378 <__hal_debug_struct>
1c008e06:	0a47a783          	lw	a5,164(a5)
1c008e0a:	37870713          	addi	a4,a4,888
1c008e0e:	c789                	beqz	a5,1c008e18 <__rt_bridge_check_bridge_req.part.5+0x1a>
1c008e10:	4f94                	lw	a3,24(a5)
1c008e12:	e681                	bnez	a3,1c008e1a <__rt_bridge_check_bridge_req.part.5+0x1c>
1c008e14:	0af72623          	sw	a5,172(a4)
1c008e18:	8082                	ret
1c008e1a:	479c                	lw	a5,8(a5)
1c008e1c:	bfcd                	j	1c008e0e <__rt_bridge_check_bridge_req.part.5+0x10>

1c008e1e <__rt_bridge_wait>:
1c008e1e:	014027f3          	csrr	a5,uhartid
1c008e22:	02000713          	li	a4,32
1c008e26:	ca5797b3          	p.extractu	a5,a5,5,5
1c008e2a:	02e79c63          	bne	a5,a4,1c008e62 <__rt_bridge_wait+0x44>
1c008e2e:	1141                	addi	sp,sp,-16
1c008e30:	c422                	sw	s0,8(sp)
1c008e32:	1a106437          	lui	s0,0x1a106
1c008e36:	c606                	sw	ra,12(sp)
1c008e38:	00442783          	lw	a5,4(s0) # 1a106004 <__l1_end+0xa105fe4>
1c008e3c:	c187b7b3          	p.bclr	a5,a5,0,24
1c008e40:	00f42223          	sw	a5,4(s0)
1c008e44:	4585                	li	a1,1
1c008e46:	03800513          	li	a0,56
1c008e4a:	1c1000ef          	jal	ra,1c00980a <__rt_periph_wait_event>
1c008e4e:	00442783          	lw	a5,4(s0)
1c008e52:	c187c7b3          	p.bset	a5,a5,0,24
1c008e56:	00f42223          	sw	a5,4(s0)
1c008e5a:	40b2                	lw	ra,12(sp)
1c008e5c:	4422                	lw	s0,8(sp)
1c008e5e:	0141                	addi	sp,sp,16
1c008e60:	8082                	ret
1c008e62:	8082                	ret

1c008e64 <__rt_bridge_handle_notif>:
1c008e64:	1141                	addi	sp,sp,-16
1c008e66:	c422                	sw	s0,8(sp)
1c008e68:	1c00d437          	lui	s0,0x1c00d
1c008e6c:	37840793          	addi	a5,s0,888 # 1c00d378 <__hal_debug_struct>
1c008e70:	0a47a783          	lw	a5,164(a5)
1c008e74:	c606                	sw	ra,12(sp)
1c008e76:	c226                	sw	s1,4(sp)
1c008e78:	c04a                	sw	s2,0(sp)
1c008e7a:	37840413          	addi	s0,s0,888
1c008e7e:	c399                	beqz	a5,1c008e84 <__rt_bridge_handle_notif+0x20>
1c008e80:	4bd8                	lw	a4,20(a5)
1c008e82:	e31d                	bnez	a4,1c008ea8 <__rt_bridge_handle_notif+0x44>
1c008e84:	0b442783          	lw	a5,180(s0)
1c008e88:	c791                	beqz	a5,1c008e94 <__rt_bridge_handle_notif+0x30>
1c008e8a:	43a8                	lw	a0,64(a5)
1c008e8c:	0a042a23          	sw	zero,180(s0)
1c008e90:	f53ff0ef          	jal	ra,1c008de2 <__rt_event_enqueue>
1c008e94:	0ac42783          	lw	a5,172(s0)
1c008e98:	ef85                	bnez	a5,1c008ed0 <__rt_bridge_handle_notif+0x6c>
1c008e9a:	4422                	lw	s0,8(sp)
1c008e9c:	40b2                	lw	ra,12(sp)
1c008e9e:	4492                	lw	s1,4(sp)
1c008ea0:	4902                	lw	s2,0(sp)
1c008ea2:	0141                	addi	sp,sp,16
1c008ea4:	f5bff06f          	j	1c008dfe <__rt_bridge_check_bridge_req.part.5>
1c008ea8:	4784                	lw	s1,8(a5)
1c008eaa:	4fd8                	lw	a4,28(a5)
1c008eac:	0a942223          	sw	s1,164(s0)
1c008eb0:	cb01                	beqz	a4,1c008ec0 <__rt_bridge_handle_notif+0x5c>
1c008eb2:	0b042703          	lw	a4,176(s0)
1c008eb6:	c798                	sw	a4,8(a5)
1c008eb8:	0af42823          	sw	a5,176(s0)
1c008ebc:	87a6                	mv	a5,s1
1c008ebe:	b7c1                	j	1c008e7e <__rt_bridge_handle_notif+0x1a>
1c008ec0:	43a8                	lw	a0,64(a5)
1c008ec2:	30047973          	csrrci	s2,mstatus,8
1c008ec6:	f1dff0ef          	jal	ra,1c008de2 <__rt_event_enqueue>
1c008eca:	30091073          	csrw	mstatus,s2
1c008ece:	b7fd                	j	1c008ebc <__rt_bridge_handle_notif+0x58>
1c008ed0:	40b2                	lw	ra,12(sp)
1c008ed2:	4422                	lw	s0,8(sp)
1c008ed4:	4492                	lw	s1,4(sp)
1c008ed6:	4902                	lw	s2,0(sp)
1c008ed8:	0141                	addi	sp,sp,16
1c008eda:	8082                	ret

1c008edc <__rt_bridge_check_connection>:
1c008edc:	1c00d6b7          	lui	a3,0x1c00d
1c008ee0:	37868693          	addi	a3,a3,888 # 1c00d378 <__hal_debug_struct>
1c008ee4:	469c                	lw	a5,8(a3)
1c008ee6:	e3a1                	bnez	a5,1c008f26 <__rt_bridge_check_connection+0x4a>
1c008ee8:	1a1047b7          	lui	a5,0x1a104
1c008eec:	07478793          	addi	a5,a5,116 # 1a104074 <__l1_end+0xa104054>
1c008ef0:	4398                	lw	a4,0(a5)
1c008ef2:	8325                	srli	a4,a4,0x9
1c008ef4:	f8373733          	p.bclr	a4,a4,28,3
1c008ef8:	02773763          	p.bneimm	a4,7,1c008f26 <__rt_bridge_check_connection+0x4a>
1c008efc:	1141                	addi	sp,sp,-16
1c008efe:	c422                	sw	s0,8(sp)
1c008f00:	c606                	sw	ra,12(sp)
1c008f02:	4705                	li	a4,1
1c008f04:	c698                	sw	a4,8(a3)
1c008f06:	4709                	li	a4,2
1c008f08:	c398                	sw	a4,0(a5)
1c008f0a:	843e                	mv	s0,a5
1c008f0c:	401c                	lw	a5,0(s0)
1c008f0e:	83a5                	srli	a5,a5,0x9
1c008f10:	f837b7b3          	p.bclr	a5,a5,28,3
1c008f14:	0077a663          	p.beqimm	a5,7,1c008f20 <__rt_bridge_check_connection+0x44>
1c008f18:	40b2                	lw	ra,12(sp)
1c008f1a:	4422                	lw	s0,8(sp)
1c008f1c:	0141                	addi	sp,sp,16
1c008f1e:	8082                	ret
1c008f20:	effff0ef          	jal	ra,1c008e1e <__rt_bridge_wait>
1c008f24:	b7e5                	j	1c008f0c <__rt_bridge_check_connection+0x30>
1c008f26:	8082                	ret

1c008f28 <__rt_bridge_set_available>:
1c008f28:	1c00d7b7          	lui	a5,0x1c00d
1c008f2c:	37878793          	addi	a5,a5,888 # 1c00d378 <__hal_debug_struct>
1c008f30:	4798                	lw	a4,8(a5)
1c008f32:	1a1047b7          	lui	a5,0x1a104
1c008f36:	07478793          	addi	a5,a5,116 # 1a104074 <__l1_end+0xa104054>
1c008f3a:	e701                	bnez	a4,1c008f42 <__rt_bridge_set_available+0x1a>
1c008f3c:	4721                	li	a4,8
1c008f3e:	c398                	sw	a4,0(a5)
1c008f40:	8082                	ret
1c008f42:	4709                	li	a4,2
1c008f44:	bfed                	j	1c008f3e <__rt_bridge_set_available+0x16>

1c008f46 <__rt_bridge_send_notif>:
1c008f46:	1141                	addi	sp,sp,-16
1c008f48:	c606                	sw	ra,12(sp)
1c008f4a:	f93ff0ef          	jal	ra,1c008edc <__rt_bridge_check_connection>
1c008f4e:	1c00d7b7          	lui	a5,0x1c00d
1c008f52:	37878793          	addi	a5,a5,888 # 1c00d378 <__hal_debug_struct>
1c008f56:	479c                	lw	a5,8(a5)
1c008f58:	c789                	beqz	a5,1c008f62 <__rt_bridge_send_notif+0x1c>
1c008f5a:	1a1047b7          	lui	a5,0x1a104
1c008f5e:	4719                	li	a4,6
1c008f60:	dbf8                	sw	a4,116(a5)
1c008f62:	40b2                	lw	ra,12(sp)
1c008f64:	0141                	addi	sp,sp,16
1c008f66:	8082                	ret

1c008f68 <__rt_bridge_clear_notif>:
  #endif
  }
}

void __rt_bridge_clear_notif()
{
1c008f68:	1141                	addi	sp,sp,-16
1c008f6a:	c606                	sw	ra,12(sp)
  hal_debug_struct_t *debug_struct = hal_debug_struct_get();

  __rt_bridge_check_connection();
1c008f6c:	f71ff0ef          	jal	ra,1c008edc <__rt_bridge_check_connection>

  if (debug_struct->bridge.connected)
1c008f70:	1c00d7b7          	lui	a5,0x1c00d
1c008f74:	37878793          	addi	a5,a5,888 # 1c00d378 <__hal_debug_struct>
1c008f78:	479c                	lw	a5,8(a5)
1c008f7a:	c789                	beqz	a5,1c008f84 <__rt_bridge_clear_notif+0x1c>
  {
    __rt_bridge_set_available();
  }
}
1c008f7c:	40b2                	lw	ra,12(sp)
1c008f7e:	0141                	addi	sp,sp,16
    __rt_bridge_set_available();
1c008f80:	fa9ff06f          	j	1c008f28 <__rt_bridge_set_available>
}
1c008f84:	40b2                	lw	ra,12(sp)
1c008f86:	0141                	addi	sp,sp,16
1c008f88:	8082                	ret

1c008f8a <__rt_bridge_printf_flush>:
{
1c008f8a:	1141                	addi	sp,sp,-16
1c008f8c:	c422                	sw	s0,8(sp)
1c008f8e:	c606                	sw	ra,12(sp)
  if (debug_struct->bridge.connected)
1c008f90:	1c00d437          	lui	s0,0x1c00d
  __rt_bridge_check_connection();
1c008f94:	f49ff0ef          	jal	ra,1c008edc <__rt_bridge_check_connection>
  if (debug_struct->bridge.connected)
1c008f98:	37840793          	addi	a5,s0,888 # 1c00d378 <__hal_debug_struct>
1c008f9c:	479c                	lw	a5,8(a5)
1c008f9e:	c39d                	beqz	a5,1c008fc4 <__rt_bridge_printf_flush+0x3a>
1c008fa0:	37840413          	addi	s0,s0,888
  return *(volatile uint32_t *)&debug_struct->putc_current == 0;
}

static inline int hal_debug_is_busy(hal_debug_struct_t *debug_struct)
{
  return *(volatile uint32_t *)&debug_struct->pending_putchar;
1c008fa4:	485c                	lw	a5,20(s0)
    if (hal_debug_is_busy(hal_debug_struct_get()) || !hal_debug_is_empty(hal_debug_struct_get()))
1c008fa6:	e399                	bnez	a5,1c008fac <__rt_bridge_printf_flush+0x22>
  return *(volatile uint32_t *)&debug_struct->putc_current == 0;
1c008fa8:	4c1c                	lw	a5,24(s0)
1c008faa:	cf89                	beqz	a5,1c008fc4 <__rt_bridge_printf_flush+0x3a>
      __rt_bridge_send_notif();
1c008fac:	f9bff0ef          	jal	ra,1c008f46 <__rt_bridge_send_notif>
  return *(volatile uint32_t *)&debug_struct->pending_putchar;
1c008fb0:	485c                	lw	a5,20(s0)
      while(hal_debug_is_busy(hal_debug_struct_get()))
1c008fb2:	e791                	bnez	a5,1c008fbe <__rt_bridge_printf_flush+0x34>
}
1c008fb4:	4422                	lw	s0,8(sp)
1c008fb6:	40b2                	lw	ra,12(sp)
1c008fb8:	0141                	addi	sp,sp,16
      __rt_bridge_clear_notif();
1c008fba:	fafff06f          	j	1c008f68 <__rt_bridge_clear_notif>
        __rt_bridge_wait();
1c008fbe:	e61ff0ef          	jal	ra,1c008e1e <__rt_bridge_wait>
1c008fc2:	b7fd                	j	1c008fb0 <__rt_bridge_printf_flush+0x26>
}
1c008fc4:	40b2                	lw	ra,12(sp)
1c008fc6:	4422                	lw	s0,8(sp)
1c008fc8:	0141                	addi	sp,sp,16
1c008fca:	8082                	ret

1c008fcc <__rt_bridge_req_shutdown>:
{
1c008fcc:	1141                	addi	sp,sp,-16
1c008fce:	c606                	sw	ra,12(sp)
1c008fd0:	c422                	sw	s0,8(sp)
  __rt_bridge_check_connection();
1c008fd2:	f0bff0ef          	jal	ra,1c008edc <__rt_bridge_check_connection>
  if (debug_struct->bridge.connected)
1c008fd6:	1c00d7b7          	lui	a5,0x1c00d
1c008fda:	37878793          	addi	a5,a5,888 # 1c00d378 <__hal_debug_struct>
1c008fde:	479c                	lw	a5,8(a5)
1c008fe0:	c7a9                	beqz	a5,1c00902a <__rt_bridge_req_shutdown+0x5e>




static inline unsigned int apb_soc_jtag_reg_read() {
  return pulp_read32(ARCHI_APB_SOC_CTRL_ADDR + APB_SOC_JTAGREG_OFFSET);
1c008fe2:	1a104437          	lui	s0,0x1a104
    __rt_bridge_printf_flush();
1c008fe6:	fa5ff0ef          	jal	ra,1c008f8a <__rt_bridge_printf_flush>
1c008fea:	07440413          	addi	s0,s0,116 # 1a104074 <__l1_end+0xa104054>
1c008fee:	401c                	lw	a5,0(s0)
    while((apb_soc_jtag_reg_ext(apb_soc_jtag_reg_read()) >> 1) == 7)
1c008ff0:	83a5                	srli	a5,a5,0x9
1c008ff2:	f837b7b3          	p.bclr	a5,a5,28,3
1c008ff6:	0277ae63          	p.beqimm	a5,7,1c009032 <__rt_bridge_req_shutdown+0x66>
}

static inline void apb_soc_jtag_reg_write(unsigned int value) {
  pulp_write32(ARCHI_APB_SOC_CTRL_ADDR + APB_SOC_JTAGREG_OFFSET, value);
1c008ffa:	4791                	li	a5,4
1c008ffc:	c01c                	sw	a5,0(s0)
  return pulp_read32(ARCHI_APB_SOC_CTRL_ADDR + APB_SOC_JTAGREG_OFFSET);
1c008ffe:	1a104437          	lui	s0,0x1a104
1c009002:	07440413          	addi	s0,s0,116 # 1a104074 <__l1_end+0xa104054>
1c009006:	401c                	lw	a5,0(s0)
    while((apb_soc_jtag_reg_ext(apb_soc_jtag_reg_read()) >> 1) != 7)
1c009008:	83a5                	srli	a5,a5,0x9
1c00900a:	f837b7b3          	p.bclr	a5,a5,28,3
1c00900e:	0277b563          	p.bneimm	a5,7,1c009038 <__rt_bridge_req_shutdown+0x6c>
  pulp_write32(ARCHI_APB_SOC_CTRL_ADDR + APB_SOC_JTAGREG_OFFSET, value);
1c009012:	00042023          	sw	zero,0(s0)
  return pulp_read32(ARCHI_APB_SOC_CTRL_ADDR + APB_SOC_JTAGREG_OFFSET);
1c009016:	1a104437          	lui	s0,0x1a104
1c00901a:	07440413          	addi	s0,s0,116 # 1a104074 <__l1_end+0xa104054>
1c00901e:	401c                	lw	a5,0(s0)
    while((apb_soc_jtag_reg_ext(apb_soc_jtag_reg_read()) >> 1) == 7)
1c009020:	83a5                	srli	a5,a5,0x9
1c009022:	f837b7b3          	p.bclr	a5,a5,28,3
1c009026:	0077ac63          	p.beqimm	a5,7,1c00903e <__rt_bridge_req_shutdown+0x72>
}
1c00902a:	40b2                	lw	ra,12(sp)
1c00902c:	4422                	lw	s0,8(sp)
1c00902e:	0141                	addi	sp,sp,16
1c009030:	8082                	ret
      __rt_bridge_wait();
1c009032:	dedff0ef          	jal	ra,1c008e1e <__rt_bridge_wait>
1c009036:	bf65                	j	1c008fee <__rt_bridge_req_shutdown+0x22>
      __rt_bridge_wait();
1c009038:	de7ff0ef          	jal	ra,1c008e1e <__rt_bridge_wait>
1c00903c:	b7e9                	j	1c009006 <__rt_bridge_req_shutdown+0x3a>
      __rt_bridge_wait();
1c00903e:	de1ff0ef          	jal	ra,1c008e1e <__rt_bridge_wait>
1c009042:	bff1                	j	1c00901e <__rt_bridge_req_shutdown+0x52>

1c009044 <__rt_bridge_init>:

RT_FC_BOOT_CODE void __attribute__((constructor)) __rt_bridge_init()
{
  hal_bridge_t *bridge = hal_bridge_get();
  
  bridge->first_req = 0;
1c009044:	1c00d7b7          	lui	a5,0x1c00d
  bridge->notif_req_addr = ARCHI_FC_ITC_ADDR + ITC_STATUS_SET_OFFSET;
  bridge->notif_req_value = 1<<RT_BRIDGE_ENQUEUE_EVENT;
#else
#if defined(EU_VERSION) && EU_VERSION >= 3
#if defined(ARCHI_HAS_FC)
  bridge->notif_req_addr = ARCHI_FC_GLOBAL_ADDR + ARCHI_FC_PERIPHERALS_OFFSET + ARCHI_FC_EU_OFFSET + EU_SW_EVENTS_AREA_BASE + EU_CORE_TRIGG_SW_EVENT + (RT_BRIDGE_ENQUEUE_EVENT << 2);
1c009048:	1b201737          	lui	a4,0x1b201
  bridge->first_req = 0;
1c00904c:	37878793          	addi	a5,a5,888 # 1c00d378 <__hal_debug_struct>
  bridge->notif_req_addr = ARCHI_FC_GLOBAL_ADDR + ARCHI_FC_PERIPHERALS_OFFSET + ARCHI_FC_EU_OFFSET + EU_SW_EVENTS_AREA_BASE + EU_CORE_TRIGG_SW_EVENT + (RT_BRIDGE_ENQUEUE_EVENT << 2);
1c009050:	e1070713          	addi	a4,a4,-496 # 1b200e10 <__fc_tcdm_end+0x1ffa40>
1c009054:	0ae7ac23          	sw	a4,184(a5)
  bridge->notif_req_value = 1;
1c009058:	4705                	li	a4,1
  bridge->first_req = 0;
1c00905a:	0a07a223          	sw	zero,164(a5)
  bridge->first_bridge_req = 0;
1c00905e:	0a07a623          	sw	zero,172(a5)
  bridge->target_req = 0;
1c009062:	0a07aa23          	sw	zero,180(a5)
  bridge->notif_req_value = 1;
1c009066:	0ae7ae23          	sw	a4,188(a5)
#endif
#endif
#endif

  __rt_bridge_eeprom_handle = NULL;
1c00906a:	00400793          	li	a5,4
1c00906e:	0007a823          	sw	zero,16(a5)
  __rt_bridge_flash_handle = NULL;
1c009072:	0007a023          	sw	zero,0(a5)
}
1c009076:	8082                	ret

1c009078 <__rt_event_init>:
{
  __rt_event_execute(sched, 0);
  rt_wait_for_interrupt();
  rt_irq_enable();
  rt_irq_disable();
}
1c009078:	1141                	addi	sp,sp,-16
1c00907a:	c422                	sw	s0,8(sp)
1c00907c:	c606                	sw	ra,12(sp)
1c00907e:	842a                	mv	s0,a0
1c009080:	02052223          	sw	zero,36(a0)
1c009084:	02052423          	sw	zero,40(a0)
1c009088:	45c1                	li	a1,16
1c00908a:	4501                	li	a0,0
1c00908c:	2cbd                	jal	1c00930a <rt_alloc>
1c00908e:	dc68                	sw	a0,124(s0)
1c009090:	02042a23          	sw	zero,52(s0)
1c009094:	00042223          	sw	zero,4(s0)
1c009098:	40b2                	lw	ra,12(sp)
1c00909a:	4422                	lw	s0,8(sp)
1c00909c:	0141                	addi	sp,sp,16
1c00909e:	8082                	ret

1c0090a0 <__rt_wait_event_prepare_blocking>:
1c0090a0:	01800793          	li	a5,24
1c0090a4:	4388                	lw	a0,0(a5)
1c0090a6:	4118                	lw	a4,0(a0)
1c0090a8:	02052423          	sw	zero,40(a0)
1c0090ac:	00052223          	sw	zero,4(a0)
1c0090b0:	c398                	sw	a4,0(a5)
1c0090b2:	4785                	li	a5,1
1c0090b4:	d15c                	sw	a5,36(a0)
1c0090b6:	8082                	ret

1c0090b8 <rt_event_alloc>:
1c0090b8:	1101                	addi	sp,sp,-32
1c0090ba:	c64e                	sw	s3,12(sp)
1c0090bc:	89ae                	mv	s3,a1
1c0090be:	ce06                	sw	ra,28(sp)
1c0090c0:	cc22                	sw	s0,24(sp)
1c0090c2:	ca26                	sw	s1,20(sp)
1c0090c4:	c84a                	sw	s2,16(sp)
1c0090c6:	c452                	sw	s4,8(sp)
1c0090c8:	c256                	sw	s5,4(sp)
1c0090ca:	30047a73          	csrrci	s4,mstatus,8
1c0090ce:	014027f3          	csrr	a5,uhartid
1c0090d2:	8795                	srai	a5,a5,0x5
1c0090d4:	f267b7b3          	p.bclr	a5,a5,25,6
1c0090d8:	02000713          	li	a4,32
1c0090dc:	00278513          	addi	a0,a5,2
1c0090e0:	00e79363          	bne	a5,a4,1c0090e6 <rt_event_alloc+0x2e>
1c0090e4:	4505                	li	a0,1
1c0090e6:	00799593          	slli	a1,s3,0x7
1c0090ea:	2405                	jal	1c00930a <rt_alloc>
1c0090ec:	842a                	mv	s0,a0
1c0090ee:	557d                	li	a0,-1
1c0090f0:	c819                	beqz	s0,1c009106 <rt_event_alloc+0x4e>
1c0090f2:	01800493          	li	s1,24
1c0090f6:	4901                	li	s2,0
1c0090f8:	00448a93          	addi	s5,s1,4
1c0090fc:	01394e63          	blt	s2,s3,1c009118 <rt_event_alloc+0x60>
1c009100:	300a1073          	csrw	mstatus,s4
1c009104:	4501                	li	a0,0
1c009106:	40f2                	lw	ra,28(sp)
1c009108:	4462                	lw	s0,24(sp)
1c00910a:	44d2                	lw	s1,20(sp)
1c00910c:	4942                	lw	s2,16(sp)
1c00910e:	49b2                	lw	s3,12(sp)
1c009110:	4a22                	lw	s4,8(sp)
1c009112:	4a92                	lw	s5,4(sp)
1c009114:	6105                	addi	sp,sp,32
1c009116:	8082                	ret
1c009118:	8522                	mv	a0,s0
1c00911a:	85d6                	mv	a1,s5
1c00911c:	f5dff0ef          	jal	ra,1c009078 <__rt_event_init>
1c009120:	409c                	lw	a5,0(s1)
1c009122:	0905                	addi	s2,s2,1
1c009124:	c01c                	sw	a5,0(s0)
1c009126:	c080                	sw	s0,0(s1)
1c009128:	08040413          	addi	s0,s0,128
1c00912c:	bfc1                	j	1c0090fc <rt_event_alloc+0x44>

1c00912e <rt_event_get>:
1c00912e:	30047773          	csrrci	a4,mstatus,8
1c009132:	01800793          	li	a5,24
1c009136:	4388                	lw	a0,0(a5)
1c009138:	c509                	beqz	a0,1c009142 <rt_event_get+0x14>
1c00913a:	4114                	lw	a3,0(a0)
1c00913c:	c14c                	sw	a1,4(a0)
1c00913e:	c510                	sw	a2,8(a0)
1c009140:	c394                	sw	a3,0(a5)
1c009142:	30071073          	csrw	mstatus,a4
1c009146:	8082                	ret

1c009148 <rt_event_get_blocking>:
1c009148:	30047773          	csrrci	a4,mstatus,8
1c00914c:	01800793          	li	a5,24
1c009150:	4388                	lw	a0,0(a5)
1c009152:	c909                	beqz	a0,1c009164 <rt_event_get_blocking+0x1c>
1c009154:	4114                	lw	a3,0(a0)
1c009156:	00052223          	sw	zero,4(a0)
1c00915a:	00052423          	sw	zero,8(a0)
1c00915e:	c394                	sw	a3,0(a5)
1c009160:	4785                	li	a5,1
1c009162:	d15c                	sw	a5,36(a0)
1c009164:	30071073          	csrw	mstatus,a4
1c009168:	8082                	ret

1c00916a <rt_event_push>:
1c00916a:	30047773          	csrrci	a4,mstatus,8
1c00916e:	01800693          	li	a3,24
1c009172:	42d4                	lw	a3,4(a3)
1c009174:	00052023          	sw	zero,0(a0)
1c009178:	01800793          	li	a5,24
1c00917c:	e691                	bnez	a3,1c009188 <rt_event_push+0x1e>
1c00917e:	c3c8                	sw	a0,4(a5)
1c009180:	c788                	sw	a0,8(a5)
1c009182:	30071073          	csrw	mstatus,a4
1c009186:	8082                	ret
1c009188:	4794                	lw	a3,8(a5)
1c00918a:	c288                	sw	a0,0(a3)
1c00918c:	bfd5                	j	1c009180 <rt_event_push+0x16>

1c00918e <__rt_event_execute>:
1c00918e:	1141                	addi	sp,sp,-16
1c009190:	c422                	sw	s0,8(sp)
1c009192:	01800793          	li	a5,24
1c009196:	43dc                	lw	a5,4(a5)
1c009198:	c606                	sw	ra,12(sp)
1c00919a:	c226                	sw	s1,4(sp)
1c00919c:	01800413          	li	s0,24
1c0091a0:	ef81                	bnez	a5,1c0091b8 <__rt_event_execute+0x2a>
1c0091a2:	c1b9                	beqz	a1,1c0091e8 <__rt_event_execute+0x5a>
1c0091a4:	002047b7          	lui	a5,0x204
1c0091a8:	0387e703          	p.elw	a4,56(a5) # 204038 <__L2+0x184038>
1c0091ac:	300467f3          	csrrsi	a5,mstatus,8
1c0091b0:	300477f3          	csrrci	a5,mstatus,8
1c0091b4:	405c                	lw	a5,4(s0)
1c0091b6:	cb8d                	beqz	a5,1c0091e8 <__rt_event_execute+0x5a>
1c0091b8:	4485                	li	s1,1
1c0091ba:	4398                	lw	a4,0(a5)
1c0091bc:	5794                	lw	a3,40(a5)
1c0091be:	00978a23          	sb	s1,20(a5)
1c0091c2:	c058                	sw	a4,4(s0)
1c0091c4:	4788                	lw	a0,8(a5)
1c0091c6:	43d8                	lw	a4,4(a5)
1c0091c8:	e691                	bnez	a3,1c0091d4 <__rt_event_execute+0x46>
1c0091ca:	53d4                	lw	a3,36(a5)
1c0091cc:	e681                	bnez	a3,1c0091d4 <__rt_event_execute+0x46>
1c0091ce:	4014                	lw	a3,0(s0)
1c0091d0:	c394                	sw	a3,0(a5)
1c0091d2:	c01c                	sw	a5,0(s0)
1c0091d4:	0207a223          	sw	zero,36(a5)
1c0091d8:	c711                	beqz	a4,1c0091e4 <__rt_event_execute+0x56>
1c0091da:	300467f3          	csrrsi	a5,mstatus,8
1c0091de:	9702                	jalr	a4
1c0091e0:	300477f3          	csrrci	a5,mstatus,8
1c0091e4:	405c                	lw	a5,4(s0)
1c0091e6:	fbf1                	bnez	a5,1c0091ba <__rt_event_execute+0x2c>
1c0091e8:	40b2                	lw	ra,12(sp)
1c0091ea:	4422                	lw	s0,8(sp)
1c0091ec:	4492                	lw	s1,4(sp)
1c0091ee:	0141                	addi	sp,sp,16
1c0091f0:	8082                	ret

1c0091f2 <__rt_wait_event>:
  } while(event);

}

void __rt_wait_event(rt_event_t *event)
{
1c0091f2:	1141                	addi	sp,sp,-16
1c0091f4:	c422                	sw	s0,8(sp)
1c0091f6:	c606                	sw	ra,12(sp)
1c0091f8:	842a                	mv	s0,a0
  while (event->implem.pending || event->implem.saved_pending) {
1c0091fa:	505c                	lw	a5,36(s0)
1c0091fc:	ef81                	bnez	a5,1c009214 <__rt_wait_event+0x22>
1c0091fe:	585c                	lw	a5,52(s0)
1c009200:	eb91                	bnez	a5,1c009214 <__rt_wait_event+0x22>
    __rt_event_execute(NULL, 1);
  }

  event->next = __rt_first_free;
1c009202:	01800793          	li	a5,24
1c009206:	4398                	lw	a4,0(a5)
  __rt_first_free = event;
}
1c009208:	40b2                	lw	ra,12(sp)
  event->next = __rt_first_free;
1c00920a:	c018                	sw	a4,0(s0)
  __rt_first_free = event;
1c00920c:	c380                	sw	s0,0(a5)
}
1c00920e:	4422                	lw	s0,8(sp)
1c009210:	0141                	addi	sp,sp,16
1c009212:	8082                	ret
    __rt_event_execute(NULL, 1);
1c009214:	4585                	li	a1,1
1c009216:	4501                	li	a0,0
1c009218:	f77ff0ef          	jal	ra,1c00918e <__rt_event_execute>
1c00921c:	bff9                	j	1c0091fa <__rt_wait_event+0x8>

1c00921e <rt_event_wait>:

void rt_event_wait(rt_event_t *event)
{
1c00921e:	1141                	addi	sp,sp,-16
1c009220:	c606                	sw	ra,12(sp)
1c009222:	c422                	sw	s0,8(sp)
  return __builtin_pulp_read_then_spr_bit_clr(reg, val);
1c009224:	30047473          	csrrci	s0,mstatus,8
  int irq = rt_irq_disable();
__rt_wait_event(event);
1c009228:	fcbff0ef          	jal	ra,1c0091f2 <__rt_wait_event>
  __builtin_pulp_spr_write(reg, val);
1c00922c:	30041073          	csrw	mstatus,s0
  rt_irq_restore(irq);
}
1c009230:	40b2                	lw	ra,12(sp)
1c009232:	4422                	lw	s0,8(sp)
1c009234:	0141                	addi	sp,sp,16
1c009236:	8082                	ret

1c009238 <__rt_event_sched_init>:

void __rt_event_sched_init()
{
  __rt_first_free = NULL;
1c009238:	01800513          	li	a0,24
1c00923c:	00052023          	sw	zero,0(a0)
  sched->first = NULL;
1c009240:	00052223          	sw	zero,4(a0)
  rt_event_sched_init(&__rt_sched);
  // Push one event ot the runtime scheduler as some runtime services need
  // one event.
  rt_event_alloc(&__rt_sched, 1);
1c009244:	4585                	li	a1,1
1c009246:	0511                	addi	a0,a0,4
1c009248:	e71ff06f          	j	1c0090b8 <rt_event_alloc>

1c00924c <pi_task_push_delayed_us>:
}

void pi_task_push_delayed_us(pi_task_t *task, uint32_t delay)
{
  rt_event_push_delayed(task, delay);
1c00924c:	ac35                	j	1c009488 <rt_event_push_delayed>

1c00924e <pi_cl_send_task_to_fc>:
}

static inline void __rt_task_init_from_cluster(pi_task_t *task)
{
  task->implem.keep = 1;
1c00924e:	4785                	li	a5,1
1c009250:	d51c                	sw	a5,40(a0)
#ifdef ARCHI_HAS_CLUSTER

void pi_cl_send_task_to_fc(pi_task_t *task)
{
  __rt_task_init_from_cluster(task);
  __rt_cluster_push_fc_event(task);
1c009252:	7d70006f          	j	1c00a228 <__rt_cluster_push_fc_event>

1c009256 <rt_user_alloc_init>:
  rt_alloc_cluster(RT_ALLOC_PERIPH, size, (rt_alloc_req_t *)req);
}

void pi_cl_l2_free(void *chunk, int size, pi_cl_free_req_t *req)
{
  rt_free_cluster(RT_ALLOC_PERIPH, chunk, size, (rt_free_req_t *)req);
1c009256:	00758793          	addi	a5,a1,7
1c00925a:	c407b7b3          	p.bclr	a5,a5,2,0
1c00925e:	40b785b3          	sub	a1,a5,a1
1c009262:	c11c                	sw	a5,0(a0)
1c009264:	8e0d                	sub	a2,a2,a1
1c009266:	00c05763          	blez	a2,1c009274 <rt_user_alloc_init+0x1e>
1c00926a:	c4063633          	p.bclr	a2,a2,2,0
1c00926e:	c390                	sw	a2,0(a5)
1c009270:	0007a223          	sw	zero,4(a5)
1c009274:	8082                	ret

1c009276 <rt_user_alloc>:
1c009276:	411c                	lw	a5,0(a0)
1c009278:	059d                	addi	a1,a1,7
1c00927a:	c405b5b3          	p.bclr	a1,a1,2,0
1c00927e:	4701                	li	a4,0
1c009280:	cb89                	beqz	a5,1c009292 <rt_user_alloc+0x1c>
1c009282:	4394                	lw	a3,0(a5)
1c009284:	43d0                	lw	a2,4(a5)
1c009286:	00b6c863          	blt	a3,a1,1c009296 <rt_user_alloc+0x20>
1c00928a:	00b69b63          	bne	a3,a1,1c0092a0 <rt_user_alloc+0x2a>
1c00928e:	c719                	beqz	a4,1c00929c <rt_user_alloc+0x26>
1c009290:	c350                	sw	a2,4(a4)
1c009292:	853e                	mv	a0,a5
1c009294:	8082                	ret
1c009296:	873e                	mv	a4,a5
1c009298:	87b2                	mv	a5,a2
1c00929a:	b7dd                	j	1c009280 <rt_user_alloc+0xa>
1c00929c:	c110                	sw	a2,0(a0)
1c00929e:	bfd5                	j	1c009292 <rt_user_alloc+0x1c>
1c0092a0:	00b78833          	add	a6,a5,a1
1c0092a4:	40b685b3          	sub	a1,a3,a1
1c0092a8:	00b82023          	sw	a1,0(a6)
1c0092ac:	00c82223          	sw	a2,4(a6)
1c0092b0:	c701                	beqz	a4,1c0092b8 <rt_user_alloc+0x42>
1c0092b2:	01072223          	sw	a6,4(a4)
1c0092b6:	bff1                	j	1c009292 <rt_user_alloc+0x1c>
1c0092b8:	01052023          	sw	a6,0(a0)
1c0092bc:	bfd9                	j	1c009292 <rt_user_alloc+0x1c>

1c0092be <rt_user_free>:
1c0092be:	411c                	lw	a5,0(a0)
1c0092c0:	061d                	addi	a2,a2,7
1c0092c2:	c4063633          	p.bclr	a2,a2,2,0
1c0092c6:	4701                	li	a4,0
1c0092c8:	c399                	beqz	a5,1c0092ce <rt_user_free+0x10>
1c0092ca:	02b7e763          	bltu	a5,a1,1c0092f8 <rt_user_free+0x3a>
1c0092ce:	00c586b3          	add	a3,a1,a2
1c0092d2:	02d79663          	bne	a5,a3,1c0092fe <rt_user_free+0x40>
1c0092d6:	4394                	lw	a3,0(a5)
1c0092d8:	43dc                	lw	a5,4(a5)
1c0092da:	9636                	add	a2,a2,a3
1c0092dc:	c190                	sw	a2,0(a1)
1c0092de:	c1dc                	sw	a5,4(a1)
1c0092e0:	c31d                	beqz	a4,1c009306 <rt_user_free+0x48>
1c0092e2:	4314                	lw	a3,0(a4)
1c0092e4:	00d707b3          	add	a5,a4,a3
1c0092e8:	00f59d63          	bne	a1,a5,1c009302 <rt_user_free+0x44>
1c0092ec:	419c                	lw	a5,0(a1)
1c0092ee:	97b6                	add	a5,a5,a3
1c0092f0:	c31c                	sw	a5,0(a4)
1c0092f2:	41dc                	lw	a5,4(a1)
1c0092f4:	c35c                	sw	a5,4(a4)
1c0092f6:	8082                	ret
1c0092f8:	873e                	mv	a4,a5
1c0092fa:	43dc                	lw	a5,4(a5)
1c0092fc:	b7f1                	j	1c0092c8 <rt_user_free+0xa>
1c0092fe:	c190                	sw	a2,0(a1)
1c009300:	bff9                	j	1c0092de <rt_user_free+0x20>
1c009302:	c34c                	sw	a1,4(a4)
1c009304:	8082                	ret
1c009306:	c10c                	sw	a1,0(a0)
1c009308:	8082                	ret

1c00930a <rt_alloc>:
1c00930a:	4785                	li	a5,1
1c00930c:	00a7fb63          	bleu	a0,a5,1c009322 <rt_alloc+0x18>
1c009310:	1c00e7b7          	lui	a5,0x1c00e
1c009314:	91c7a783          	lw	a5,-1764(a5) # 1c00d91c <__rt_alloc_l1>
1c009318:	1579                	addi	a0,a0,-2
1c00931a:	050a                	slli	a0,a0,0x2
1c00931c:	953e                	add	a0,a0,a5
1c00931e:	f59ff06f          	j	1c009276 <rt_user_alloc>
1c009322:	00153763          	p.bneimm	a0,1,1c009330 <rt_alloc+0x26>
1c009326:	1c00e537          	lui	a0,0x1c00e
1c00932a:	92450513          	addi	a0,a0,-1756 # 1c00d924 <__rt_alloc_fc_tcdm>
1c00932e:	bfc5                	j	1c00931e <rt_alloc+0x14>
1c009330:	1c00e537          	lui	a0,0x1c00e
1c009334:	92050513          	addi	a0,a0,-1760 # 1c00d920 <__rt_alloc_l2>
1c009338:	b7dd                	j	1c00931e <rt_alloc+0x14>

1c00933a <rt_free>:
1c00933a:	4785                	li	a5,1
1c00933c:	00a7fb63          	bleu	a0,a5,1c009352 <rt_free+0x18>
1c009340:	1c00e7b7          	lui	a5,0x1c00e
1c009344:	91c7a783          	lw	a5,-1764(a5) # 1c00d91c <__rt_alloc_l1>
1c009348:	1579                	addi	a0,a0,-2
1c00934a:	050a                	slli	a0,a0,0x2
1c00934c:	953e                	add	a0,a0,a5
1c00934e:	f71ff06f          	j	1c0092be <rt_user_free>
1c009352:	c511                	beqz	a0,1c00935e <rt_free+0x24>
1c009354:	1c00e537          	lui	a0,0x1c00e
1c009358:	92450513          	addi	a0,a0,-1756 # 1c00d924 <__rt_alloc_fc_tcdm>
1c00935c:	bfcd                	j	1c00934e <rt_free+0x14>
1c00935e:	1c00e537          	lui	a0,0x1c00e
1c009362:	92050513          	addi	a0,a0,-1760 # 1c00d920 <__rt_alloc_l2>
1c009366:	b7e5                	j	1c00934e <rt_free+0x14>

1c009368 <__rt_alloc_init_l1>:
1c009368:	1c00e7b7          	lui	a5,0x1c00e
1c00936c:	91c7a703          	lw	a4,-1764(a5) # 1c00d91c <__rt_alloc_l1>
1c009370:	100007b7          	lui	a5,0x10000
1c009374:	01651593          	slli	a1,a0,0x16
1c009378:	6641                	lui	a2,0x10
1c00937a:	050a                	slli	a0,a0,0x2
1c00937c:	02078793          	addi	a5,a5,32 # 10000020 <__l1_end>
1c009380:	fe060613          	addi	a2,a2,-32 # ffe0 <__l1_heap_size>
1c009384:	95be                	add	a1,a1,a5
1c009386:	953a                	add	a0,a0,a4
1c009388:	ecfff06f          	j	1c009256 <rt_user_alloc_init>

1c00938c <__rt_alloc_init_l1_for_fc>:
1c00938c:	100005b7          	lui	a1,0x10000
1c009390:	01651793          	slli	a5,a0,0x16
1c009394:	02058593          	addi	a1,a1,32 # 10000020 <__l1_end>
1c009398:	00b78733          	add	a4,a5,a1
1c00939c:	050a                	slli	a0,a0,0x2
1c00939e:	0791                	addi	a5,a5,4
1c0093a0:	6641                	lui	a2,0x10
1c0093a2:	1c00e6b7          	lui	a3,0x1c00e
1c0093a6:	fdc60613          	addi	a2,a2,-36 # ffdc <__rt_stack_size+0xf7dc>
1c0093aa:	95be                	add	a1,a1,a5
1c0093ac:	953a                	add	a0,a0,a4
1c0093ae:	90e6ae23          	sw	a4,-1764(a3) # 1c00d91c <__rt_alloc_l1>
1c0093b2:	ea5ff06f          	j	1c009256 <rt_user_alloc_init>

1c0093b6 <__rt_allocs_init>:
1c0093b6:	1c00e5b7          	lui	a1,0x1c00e
1c0093ba:	98058793          	addi	a5,a1,-1664 # 1c00d980 <__l2_end>
1c0093be:	1c080637          	lui	a2,0x1c080
1c0093c2:	1c00e537          	lui	a0,0x1c00e
1c0093c6:	1141                	addi	sp,sp,-16
1c0093c8:	8e1d                	sub	a2,a2,a5
1c0093ca:	98058593          	addi	a1,a1,-1664
1c0093ce:	92050513          	addi	a0,a0,-1760 # 1c00d920 <__rt_alloc_l2>
1c0093d2:	c606                	sw	ra,12(sp)
1c0093d4:	c422                	sw	s0,8(sp)
1c0093d6:	e81ff0ef          	jal	ra,1c009256 <rt_user_alloc_init>
1c0093da:	1b0015b7          	lui	a1,0x1b001
1c0093de:	3d058793          	addi	a5,a1,976 # 1b0013d0 <__fc_tcdm_end>
1c0093e2:	1b004637          	lui	a2,0x1b004
1c0093e6:	1c00e437          	lui	s0,0x1c00e
1c0093ea:	8e1d                	sub	a2,a2,a5
1c0093ec:	3d058593          	addi	a1,a1,976
1c0093f0:	92440513          	addi	a0,s0,-1756 # 1c00d924 <__rt_alloc_fc_tcdm>
1c0093f4:	e63ff0ef          	jal	ra,1c009256 <rt_user_alloc_init>
1c0093f8:	014027f3          	csrr	a5,uhartid
1c0093fc:	ca5797b3          	p.extractu	a5,a5,5,5
1c009400:	e799                	bnez	a5,1c00940e <__rt_allocs_init+0x58>
1c009402:	4422                	lw	s0,8(sp)
1c009404:	40b2                	lw	ra,12(sp)
1c009406:	4501                	li	a0,0
1c009408:	0141                	addi	sp,sp,16
1c00940a:	f83ff06f          	j	1c00938c <__rt_alloc_init_l1_for_fc>
1c00940e:	92440513          	addi	a0,s0,-1756
1c009412:	4591                	li	a1,4
1c009414:	e63ff0ef          	jal	ra,1c009276 <rt_user_alloc>
1c009418:	40b2                	lw	ra,12(sp)
1c00941a:	4422                	lw	s0,8(sp)
1c00941c:	1c00e7b7          	lui	a5,0x1c00e
1c009420:	90a7ae23          	sw	a0,-1764(a5) # 1c00d91c <__rt_alloc_l1>
1c009424:	0141                	addi	sp,sp,16
1c009426:	8082                	ret

1c009428 <pi_cl_l1_malloc>:
}

void *pi_cl_l1_malloc(struct pi_device *device, uint32_t size)
{
  return rt_alloc(RT_ALLOC_CL_DATA, size);
1c009428:	4509                	li	a0,2
1c00942a:	ee1ff06f          	j	1c00930a <rt_alloc>

1c00942e <pi_cl_l1_free>:
  if (flags >= RT_ALLOC_CL_DATA) return rt_user_free(rt_alloc_l1(flags - RT_ALLOC_CL_DATA), _chunk, size);
1c00942e:	1c00e7b7          	lui	a5,0x1c00e
1c009432:	91c7a503          	lw	a0,-1764(a5) # 1c00d91c <__rt_alloc_l1>
1c009436:	e89ff06f          	j	1c0092be <rt_user_free>

1c00943a <pi_l2_malloc>:
    return rt_user_alloc(rt_alloc_l2(), size);
1c00943a:	85aa                	mv	a1,a0
1c00943c:	1c00e537          	lui	a0,0x1c00e
1c009440:	92050513          	addi	a0,a0,-1760 # 1c00d920 <__rt_alloc_l2>
1c009444:	e33ff06f          	j	1c009276 <rt_user_alloc>

1c009448 <pi_l2_free>:
    rt_user_free(rt_alloc_l2(), _chunk, size);
1c009448:	862e                	mv	a2,a1
1c00944a:	85aa                	mv	a1,a0
1c00944c:	1c00e537          	lui	a0,0x1c00e
1c009450:	92050513          	addi	a0,a0,-1760 # 1c00d920 <__rt_alloc_l2>
1c009454:	e6bff06f          	j	1c0092be <rt_user_free>

1c009458 <__rt_time_poweroff>:
  {
    timer->current_time += timer->period;
    __rt_event_set_pending(timer->event);
    rt_event_push_delayed(timer->event, timer->current_time - rt_time_get_us());
  }
}
1c009458:	002007b7          	lui	a5,0x200
1c00945c:	40478793          	addi	a5,a5,1028 # 200404 <__L2+0x180404>
1c009460:	0087a783          	lw	a5,8(a5)
1c009464:	1c00e737          	lui	a4,0x1c00e
1c009468:	8ef72823          	sw	a5,-1808(a4) # 1c00d8f0 <timer_count>
1c00946c:	4501                	li	a0,0
1c00946e:	8082                	ret

1c009470 <__rt_time_poweron>:
1c009470:	1c00e7b7          	lui	a5,0x1c00e
1c009474:	8f07a703          	lw	a4,-1808(a5) # 1c00d8f0 <timer_count>
1c009478:	002007b7          	lui	a5,0x200
1c00947c:	40478793          	addi	a5,a5,1028 # 200404 <__L2+0x180404>
1c009480:	00e7a423          	sw	a4,8(a5)
1c009484:	4501                	li	a0,0
1c009486:	8082                	ret

1c009488 <rt_event_push_delayed>:
1c009488:	30047373          	csrrci	t1,mstatus,8
1c00948c:	1c00e637          	lui	a2,0x1c00e
1c009490:	92862703          	lw	a4,-1752(a2) # 1c00d928 <first_delayed>
1c009494:	002007b7          	lui	a5,0x200
1c009498:	40478793          	addi	a5,a5,1028 # 200404 <__L2+0x180404>
1c00949c:	0087a783          	lw	a5,8(a5)
1c0094a0:	46f9                	li	a3,30
1c0094a2:	0405e5b3          	p.max	a1,a1,zero
1c0094a6:	02d5c5b3          	div	a1,a1,a3
1c0094aa:	800006b7          	lui	a3,0x80000
1c0094ae:	fff6c693          	not	a3,a3
1c0094b2:	00d7f833          	and	a6,a5,a3
1c0094b6:	0585                	addi	a1,a1,1
1c0094b8:	97ae                	add	a5,a5,a1
1c0094ba:	dd1c                	sw	a5,56(a0)
1c0094bc:	982e                	add	a6,a6,a1
1c0094be:	4781                	li	a5,0
1c0094c0:	c719                	beqz	a4,1c0094ce <rt_event_push_delayed+0x46>
1c0094c2:	03872883          	lw	a7,56(a4)
1c0094c6:	00d8f8b3          	and	a7,a7,a3
1c0094ca:	0108e863          	bltu	a7,a6,1c0094da <rt_event_push_delayed+0x52>
1c0094ce:	cb89                	beqz	a5,1c0094e0 <rt_event_push_delayed+0x58>
1c0094d0:	cfc8                	sw	a0,28(a5)
1c0094d2:	cd58                	sw	a4,28(a0)
1c0094d4:	30031073          	csrw	mstatus,t1
1c0094d8:	8082                	ret
1c0094da:	87ba                	mv	a5,a4
1c0094dc:	4f58                	lw	a4,28(a4)
1c0094de:	b7cd                	j	1c0094c0 <rt_event_push_delayed+0x38>
1c0094e0:	002007b7          	lui	a5,0x200
1c0094e4:	40478793          	addi	a5,a5,1028 # 200404 <__L2+0x180404>
1c0094e8:	92a62423          	sw	a0,-1752(a2)
1c0094ec:	cd58                	sw	a4,28(a0)
1c0094ee:	0087a703          	lw	a4,8(a5)
1c0094f2:	95ba                	add	a1,a1,a4
1c0094f4:	00b7a823          	sw	a1,16(a5)
1c0094f8:	08500713          	li	a4,133
1c0094fc:	00e7a023          	sw	a4,0(a5)
1c009500:	bfd1                	j	1c0094d4 <rt_event_push_delayed+0x4c>

1c009502 <rt_time_wait_us>:
{
1c009502:	1101                	addi	sp,sp,-32
1c009504:	85aa                	mv	a1,a0
  rt_event_t *event = rt_event_get_blocking(NULL);
1c009506:	4501                	li	a0,0
{
1c009508:	ce06                	sw	ra,28(sp)
1c00950a:	cc22                	sw	s0,24(sp)
  rt_event_t *event = rt_event_get_blocking(NULL);
1c00950c:	c62e                	sw	a1,12(sp)
1c00950e:	c3bff0ef          	jal	ra,1c009148 <rt_event_get_blocking>
  rt_event_push_delayed(event, time_us);
1c009512:	45b2                	lw	a1,12(sp)
  rt_event_t *event = rt_event_get_blocking(NULL);
1c009514:	842a                	mv	s0,a0
  rt_event_push_delayed(event, time_us);
1c009516:	f73ff0ef          	jal	ra,1c009488 <rt_event_push_delayed>
  rt_event_wait(event);
1c00951a:	8522                	mv	a0,s0
}
1c00951c:	4462                	lw	s0,24(sp)
1c00951e:	40f2                	lw	ra,28(sp)
1c009520:	6105                	addi	sp,sp,32
  rt_event_wait(event);
1c009522:	cfdff06f          	j	1c00921e <rt_event_wait>

1c009526 <pi_time_wait_us>:
  rt_time_wait_us(time_us);
1c009526:	fddff06f          	j	1c009502 <rt_time_wait_us>

1c00952a <__rt_time_init>:
  first_delayed = NULL;
1c00952a:	1c00e7b7          	lui	a5,0x1c00e
1c00952e:	9207a423          	sw	zero,-1752(a5) # 1c00d928 <first_delayed>
//

#ifndef LANGUAGE_ASSEMBLY

static inline uint32_t timer_cfg_lo_get(uint32_t base) { return ARCHI_READ(base, TIMER_CFG_LO_OFFSET); }
static inline void timer_cfg_lo_set(uint32_t base, uint32_t value) { ARCHI_WRITE(base, TIMER_CFG_LO_OFFSET, value); }
1c009532:	002007b7          	lui	a5,0x200
{
1c009536:	1141                	addi	sp,sp,-16
1c009538:	08300713          	li	a4,131
1c00953c:	40478793          	addi	a5,a5,1028 # 200404 <__L2+0x180404>
1c009540:	c606                	sw	ra,12(sp)
1c009542:	c422                	sw	s0,8(sp)
1c009544:	00e7a023          	sw	a4,0(a5)
  rt_irq_set_handler(ARCHI_FC_EVT_TIMER0_HI, __rt_timer_handler);
1c009548:	1c0095b7          	lui	a1,0x1c009
1c00954c:	5b658593          	addi	a1,a1,1462 # 1c0095b6 <__rt_timer_handler>
1c009550:	452d                	li	a0,11
1c009552:	dc0ff0ef          	jal	ra,1c008b12 <rt_irq_set_handler>
  ARCHI_WRITE(base, EU_CORE_MASK_IRQ_OR, irqMask);
1c009556:	6785                	lui	a5,0x1
1c009558:	80078793          	addi	a5,a5,-2048 # 800 <__rt_stack_size>
1c00955c:	00204737          	lui	a4,0x204
1c009560:	00f72a23          	sw	a5,20(a4) # 204014 <__L2+0x184014>
  ARCHI_WRITE(ARCHI_EU_DEMUX_ADDR, EU_CORE_MASK_OR, evtMask);
1c009564:	00f72423          	sw	a5,8(a4)
  err |= __rt_cbsys_add(RT_CBSYS_POWEROFF, __rt_time_poweroff, NULL);
1c009568:	1c0095b7          	lui	a1,0x1c009
1c00956c:	4601                	li	a2,0
1c00956e:	45858593          	addi	a1,a1,1112 # 1c009458 <__rt_time_poweroff>
1c009572:	4509                	li	a0,2
1c009574:	f0aff0ef          	jal	ra,1c008c7e <__rt_cbsys_add>
  err |= __rt_cbsys_add(RT_CBSYS_POWERON, __rt_time_poweron, NULL);
1c009578:	1c0095b7          	lui	a1,0x1c009
  err |= __rt_cbsys_add(RT_CBSYS_POWEROFF, __rt_time_poweroff, NULL);
1c00957c:	842a                	mv	s0,a0
  err |= __rt_cbsys_add(RT_CBSYS_POWERON, __rt_time_poweron, NULL);
1c00957e:	4601                	li	a2,0
1c009580:	47058593          	addi	a1,a1,1136 # 1c009470 <__rt_time_poweron>
1c009584:	450d                	li	a0,3
1c009586:	ef8ff0ef          	jal	ra,1c008c7e <__rt_cbsys_add>
1c00958a:	8d41                	or	a0,a0,s0
  if (err) rt_fatal("Unable to initialize time driver\n");
1c00958c:	c10d                	beqz	a0,1c0095ae <__rt_time_init+0x84>
  asm("csrr %0, 0x014" : "=r" (hart_id) : );
1c00958e:	01402673          	csrr	a2,uhartid
1c009592:	1c00d537          	lui	a0,0x1c00d
  return (hart_id >> 5) & 0x3f;
1c009596:	40565593          	srai	a1,a2,0x5
1c00959a:	f265b5b3          	p.bclr	a1,a1,25,6
1c00959e:	f4563633          	p.bclr	a2,a2,26,5
1c0095a2:	09850513          	addi	a0,a0,152 # 1c00d098 <__clz_tab+0x680>
1c0095a6:	182020ef          	jal	ra,1c00b728 <printf>
1c0095aa:	102020ef          	jal	ra,1c00b6ac <abort>
}
1c0095ae:	40b2                	lw	ra,12(sp)
1c0095b0:	4422                	lw	s0,8(sp)
1c0095b2:	0141                	addi	sp,sp,16
1c0095b4:	8082                	ret

1c0095b6 <__rt_timer_handler>:
#if defined(__LLVM__)
void __rt_timer_handler()
#else
void __attribute__((interrupt)) __rt_timer_handler()
#endif
{
1c0095b6:	7179                	addi	sp,sp,-48
1c0095b8:	d032                	sw	a2,32(sp)
  rt_event_t *event = first_delayed;
1c0095ba:	1c00e637          	lui	a2,0x1c00e
{
1c0095be:	ca3e                	sw	a5,20(sp)
  rt_event_t *event = first_delayed;
1c0095c0:	92862783          	lw	a5,-1752(a2) # 1c00d928 <first_delayed>
{
1c0095c4:	ce36                	sw	a3,28(sp)

static inline uint32_t timer_cfg_hi_get(uint32_t base) { return ARCHI_READ(base, TIMER_CFG_HI_OFFSET); }
static inline void timer_cfg_hi_set(uint32_t base, uint32_t value) { ARCHI_WRITE(base, TIMER_CFG_HI_OFFSET, value); }

static inline uint32_t timer_cnt_lo_get(uint32_t base) { return ARCHI_READ(base, TIMER_CNT_LO_OFFSET); }
1c0095c6:	002006b7          	lui	a3,0x200
1c0095ca:	40468693          	addi	a3,a3,1028 # 200404 <__L2+0x180404>
1c0095ce:	d61a                	sw	t1,44(sp)
1c0095d0:	d42a                	sw	a0,40(sp)
1c0095d2:	d22e                	sw	a1,36(sp)
1c0095d4:	cc3a                	sw	a4,24(sp)
1c0095d6:	c842                	sw	a6,16(sp)
1c0095d8:	c646                	sw	a7,12(sp)
1c0095da:	c472                	sw	t3,8(sp)
1c0095dc:	c276                	sw	t4,4(sp)
1c0095de:	0086a683          	lw	a3,8(a3)
1c0095e2:	01c00593          	li	a1,28
1c0095e6:	01c02503          	lw	a0,28(zero) # 1c <_l1_preload_size>
1c0095ea:	41cc                	lw	a1,4(a1)

  uint32_t current_time = timer_count_get(timer_base_fc(0, 1));

  // First dequeue and push to their scheduler all events with the same number of
  // ticks as they were waiting for the same time.
  while (event && (current_time - event->implem.time) < 0x7fffffff)
1c0095ec:	80000337          	lui	t1,0x80000
1c0095f0:	4801                	li	a6,0
1c0095f2:	4881                	li	a7,0
1c0095f4:	01c00e93          	li	t4,28
1c0095f8:	ffe34313          	xori	t1,t1,-2
1c0095fc:	e7ad                	bnez	a5,1c009666 <__rt_timer_handler+0xb0>
1c0095fe:	00088463          	beqz	a7,1c009606 <__rt_timer_handler+0x50>
1c009602:	00a02e23          	sw	a0,28(zero) # 1c <_l1_preload_size>
1c009606:	00080463          	beqz	a6,1c00960e <__rt_timer_handler+0x58>
1c00960a:	00bea223          	sw	a1,4(t4)
static inline void timer_cfg_lo_set(uint32_t base, uint32_t value) { ARCHI_WRITE(base, TIMER_CFG_LO_OFFSET, value); }
1c00960e:	002007b7          	lui	a5,0x200
1c009612:	08100713          	li	a4,129
1c009616:	40478793          	addi	a5,a5,1028 # 200404 <__L2+0x180404>
    event = next;
  }

  // Update the wait list with the next waiting event which has a different number
  // of ticks
  first_delayed = event;
1c00961a:	92062423          	sw	zero,-1752(a2)
1c00961e:	00e7a023          	sw	a4,0(a5)
  ARCHI_WRITE(ARCHI_EU_DEMUX_ADDR, EU_CORE_BUFFER_CLEAR, evtMask);
1c009622:	6785                	lui	a5,0x1
1c009624:	80078793          	addi	a5,a5,-2048 # 800 <__rt_stack_size>
1c009628:	00204737          	lui	a4,0x204
1c00962c:	02f72423          	sw	a5,40(a4) # 204028 <__L2+0x184028>
    rt_irq_clr(1 << ARCHI_FC_EVT_TIMER0_HI);
#else
    rt_irq_clr(1 << ARCHI_EVT_TIMER0_HI);
#endif
  }
}
1c009630:	5332                	lw	t1,44(sp)
1c009632:	5522                	lw	a0,40(sp)
1c009634:	5592                	lw	a1,36(sp)
1c009636:	5602                	lw	a2,32(sp)
1c009638:	46f2                	lw	a3,28(sp)
1c00963a:	4762                	lw	a4,24(sp)
1c00963c:	47d2                	lw	a5,20(sp)
1c00963e:	4842                	lw	a6,16(sp)
1c009640:	48b2                	lw	a7,12(sp)
1c009642:	4e22                	lw	t3,8(sp)
1c009644:	4e92                	lw	t4,4(sp)
1c009646:	6145                	addi	sp,sp,48
1c009648:	30200073          	mret
  event->next = NULL;
1c00964c:	0007a023          	sw	zero,0(a5)
    rt_event_t *next = event->implem.next;
1c009650:	01c7ae03          	lw	t3,28(a5)
  if (sched->first == NULL) {
1c009654:	c511                	beqz	a0,1c009660 <__rt_timer_handler+0xaa>
    sched->last->next = event;
1c009656:	c19c                	sw	a5,0(a1)
    event = next;
1c009658:	85be                	mv	a1,a5
1c00965a:	4805                	li	a6,1
1c00965c:	87f2                	mv	a5,t3
1c00965e:	bf79                	j	1c0095fc <__rt_timer_handler+0x46>
  if (sched->first == NULL) {
1c009660:	853e                	mv	a0,a5
1c009662:	4885                	li	a7,1
1c009664:	bfd5                	j	1c009658 <__rt_timer_handler+0xa2>
  while (event && (current_time - event->implem.time) < 0x7fffffff)
1c009666:	0387ae03          	lw	t3,56(a5)
1c00966a:	41c68e33          	sub	t3,a3,t3
1c00966e:	fdc37fe3          	bleu	t3,t1,1c00964c <__rt_timer_handler+0x96>
1c009672:	00088463          	beqz	a7,1c00967a <__rt_timer_handler+0xc4>
1c009676:	00a02e23          	sw	a0,28(zero) # 1c <_l1_preload_size>
1c00967a:	00080463          	beqz	a6,1c009682 <__rt_timer_handler+0xcc>
1c00967e:	00bea223          	sw	a1,4(t4)
static inline uint32_t timer_cnt_lo_get(uint32_t base) { return ARCHI_READ(base, TIMER_CNT_LO_OFFSET); }
1c009682:	00200737          	lui	a4,0x200
1c009686:	40470713          	addi	a4,a4,1028 # 200404 <__L2+0x180404>
  first_delayed = event;
1c00968a:	92f62423          	sw	a5,-1752(a2)
1c00968e:	00872603          	lw	a2,8(a4)
      first_delayed->implem.time - current_time
1c009692:	5f9c                	lw	a5,56(a5)
1c009694:	40d786b3          	sub	a3,a5,a3
1c009698:	96b2                	add	a3,a3,a2

static inline uint32_t timer_cnt_hi_get(uint32_t base) { return ARCHI_READ(base, TIMER_CNT_HI_OFFSET); }
static inline void timer_cnt_hi_set(uint32_t base, uint32_t value) { ARCHI_WRITE(base, TIMER_CNT_HI_OFFSET, value); }

static inline uint32_t timer_cmp_lo_get(uint32_t base) { return ARCHI_READ(base, TIMER_CMP_LO_OFFSET); }
static inline void timer_cmp_lo_set(uint32_t base, uint32_t value) { ARCHI_WRITE(base, TIMER_CMP_LO_OFFSET, value); }
1c00969a:	00d72823          	sw	a3,16(a4)
static inline void timer_cfg_lo_set(uint32_t base, uint32_t value) { ARCHI_WRITE(base, TIMER_CFG_LO_OFFSET, value); }
1c00969e:	08500793          	li	a5,133
1c0096a2:	00f72023          	sw	a5,0(a4)
}
1c0096a6:	b769                	j	1c009630 <__rt_timer_handler+0x7a>

1c0096a8 <rt_periph_copy>:
  }

  __rt_socevents_status[index] &= ~(1<<event);

  rt_irq_restore(irq);
}
1c0096a8:	7179                	addi	sp,sp,-48
1c0096aa:	d422                	sw	s0,40(sp)
1c0096ac:	842a                	mv	s0,a0
1c0096ae:	d606                	sw	ra,44(sp)
1c0096b0:	d226                	sw	s1,36(sp)
1c0096b2:	d04a                	sw	s2,32(sp)
1c0096b4:	30047973          	csrrci	s2,mstatus,8
1c0096b8:	4015d493          	srai	s1,a1,0x1
1c0096bc:	1a102537          	lui	a0,0x1a102
1c0096c0:	049e                	slli	s1,s1,0x7
1c0096c2:	94aa                	add	s1,s1,a0
1c0096c4:	00459513          	slli	a0,a1,0x4
1c0096c8:	8941                	andi	a0,a0,16
1c0096ca:	94aa                	add	s1,s1,a0
1c0096cc:	853e                	mv	a0,a5
1c0096ce:	ef89                	bnez	a5,1c0096e8 <rt_periph_copy+0x40>
1c0096d0:	ce2e                	sw	a1,28(sp)
1c0096d2:	cc32                	sw	a2,24(sp)
1c0096d4:	ca36                	sw	a3,20(sp)
1c0096d6:	c83a                	sw	a4,16(sp)
1c0096d8:	c63e                	sw	a5,12(sp)
1c0096da:	9c7ff0ef          	jal	ra,1c0090a0 <__rt_wait_event_prepare_blocking>
1c0096de:	47b2                	lw	a5,12(sp)
1c0096e0:	4742                	lw	a4,16(sp)
1c0096e2:	46d2                	lw	a3,20(sp)
1c0096e4:	4662                	lw	a2,24(sp)
1c0096e6:	45f2                	lw	a1,28(sp)
1c0096e8:	e419                	bnez	s0,1c0096f6 <rt_periph_copy+0x4e>
1c0096ea:	03850413          	addi	s0,a0,56 # 1a102038 <__l1_end+0xa102018>
1c0096ee:	04052223          	sw	zero,68(a0)
1c0096f2:	04052a23          	sw	zero,84(a0)
1c0096f6:	00c42803          	lw	a6,12(s0)
1c0096fa:	c054                	sw	a3,4(s0)
1c0096fc:	cc08                	sw	a0,24(s0)
1c0096fe:	f6483833          	p.bclr	a6,a6,27,4
1c009702:	4891                	li	a7,4
1c009704:	c0474733          	p.bset	a4,a4,0,4
1c009708:	0908e163          	bltu	a7,a6,1c00978a <rt_periph_copy+0xe2>
1c00970c:	03000893          	li	a7,48
1c009710:	0596                	slli	a1,a1,0x5
1c009712:	98ae                	add	a7,a7,a1
1c009714:	0008a303          	lw	t1,0(a7)
1c009718:	00042a23          	sw	zero,20(s0)
1c00971c:	03000813          	li	a6,48
1c009720:	02031b63          	bnez	t1,1c009756 <rt_periph_copy+0xae>
1c009724:	0088a023          	sw	s0,0(a7)
1c009728:	00b808b3          	add	a7,a6,a1
1c00972c:	0088a303          	lw	t1,8(a7)
1c009730:	0088a223          	sw	s0,4(a7)
1c009734:	02031663          	bnez	t1,1c009760 <rt_periph_copy+0xb8>
1c009738:	00848893          	addi	a7,s1,8
1c00973c:	0008a883          	lw	a7,0(a7)
1c009740:	0208f893          	andi	a7,a7,32
1c009744:	00089e63          	bnez	a7,1c009760 <rt_periph_copy+0xb8>
1c009748:	00c4a023          	sw	a2,0(s1)
1c00974c:	00d4a223          	sw	a3,4(s1)
1c009750:	00e4a423          	sw	a4,8(s1)
1c009754:	a005                	j	1c009774 <rt_periph_copy+0xcc>
1c009756:	0048a883          	lw	a7,4(a7)
1c00975a:	0088aa23          	sw	s0,20(a7)
1c00975e:	b7e9                	j	1c009728 <rt_periph_copy+0x80>
1c009760:	00042823          	sw	zero,16(s0)
1c009764:	c010                	sw	a2,0(s0)
1c009766:	c054                	sw	a3,4(s0)
1c009768:	c418                	sw	a4,8(s0)
1c00976a:	00031563          	bnez	t1,1c009774 <rt_periph_copy+0xcc>
1c00976e:	982e                	add	a6,a6,a1
1c009770:	00882423          	sw	s0,8(a6)
1c009774:	e399                	bnez	a5,1c00977a <rt_periph_copy+0xd2>
1c009776:	a7dff0ef          	jal	ra,1c0091f2 <__rt_wait_event>
1c00977a:	30091073          	csrw	mstatus,s2
1c00977e:	50b2                	lw	ra,44(sp)
1c009780:	5422                	lw	s0,40(sp)
1c009782:	5492                	lw	s1,36(sp)
1c009784:	5902                	lw	s2,32(sp)
1c009786:	6145                	addi	sp,sp,48
1c009788:	8082                	ret
1c00978a:	fe6835e3          	p.bneimm	a6,6,1c009774 <rt_periph_copy+0xcc>
1c00978e:	03000893          	li	a7,48
1c009792:	0596                	slli	a1,a1,0x5
1c009794:	98ae                	add	a7,a7,a1
1c009796:	0008a303          	lw	t1,0(a7)
1c00979a:	00042a23          	sw	zero,20(s0)
1c00979e:	03000813          	li	a6,48
1c0097a2:	00031f63          	bnez	t1,1c0097c0 <rt_periph_copy+0x118>
1c0097a6:	0088a023          	sw	s0,0(a7)
1c0097aa:	95c2                	add	a1,a1,a6
1c0097ac:	c1c0                	sw	s0,4(a1)
1c0097ae:	00031e63          	bnez	t1,1c0097ca <rt_periph_copy+0x122>
1c0097b2:	02442803          	lw	a6,36(s0)
1c0097b6:	1a1025b7          	lui	a1,0x1a102
1c0097ba:	1b05a023          	sw	a6,416(a1) # 1a1021a0 <__l1_end+0xa102180>
1c0097be:	b769                	j	1c009748 <rt_periph_copy+0xa0>
1c0097c0:	0048a883          	lw	a7,4(a7)
1c0097c4:	0088aa23          	sw	s0,20(a7)
1c0097c8:	b7cd                	j	1c0097aa <rt_periph_copy+0x102>
1c0097ca:	c418                	sw	a4,8(s0)
1c0097cc:	4598                	lw	a4,8(a1)
1c0097ce:	c010                	sw	a2,0(s0)
1c0097d0:	c054                	sw	a3,4(s0)
1c0097d2:	00042823          	sw	zero,16(s0)
1c0097d6:	ff59                	bnez	a4,1c009774 <rt_periph_copy+0xcc>
1c0097d8:	c580                	sw	s0,8(a1)
1c0097da:	bf69                	j	1c009774 <rt_periph_copy+0xcc>

1c0097dc <__rt_periph_get_event>:
1c0097dc:	300476f3          	csrrci	a3,mstatus,8
1c0097e0:	47fd                	li	a5,31
1c0097e2:	02a7d263          	ble	a0,a5,1c009806 <__rt_periph_get_event+0x2a>
1c0097e6:	1501                	addi	a0,a0,-32
1c0097e8:	4785                	li	a5,1
1c0097ea:	00279713          	slli	a4,a5,0x2
1c0097ee:	03000793          	li	a5,48
1c0097f2:	97ba                	add	a5,a5,a4
1c0097f4:	2807a783          	lw	a5,640(a5)
1c0097f8:	30069073          	csrw	mstatus,a3
1c0097fc:	00a7d533          	srl	a0,a5,a0
1c009800:	fc153533          	p.bclr	a0,a0,30,1
1c009804:	8082                	ret
1c009806:	4781                	li	a5,0
1c009808:	b7cd                	j	1c0097ea <__rt_periph_get_event+0xe>

1c00980a <__rt_periph_wait_event>:
1c00980a:	30047673          	csrrci	a2,mstatus,8
1c00980e:	477d                	li	a4,31
1c009810:	4781                	li	a5,0
1c009812:	00a75463          	ble	a0,a4,1c00981a <__rt_periph_wait_event+0x10>
1c009816:	1501                	addi	a0,a0,-32
1c009818:	4785                	li	a5,1
1c00981a:	00279713          	slli	a4,a5,0x2
1c00981e:	4685                	li	a3,1
1c009820:	03000793          	li	a5,48
1c009824:	00a696b3          	sll	a3,a3,a0
1c009828:	97ba                	add	a5,a5,a4
1c00982a:	00204837          	lui	a6,0x204
1c00982e:	2807a703          	lw	a4,640(a5)
1c009832:	8f75                	and	a4,a4,a3
1c009834:	cf19                	beqz	a4,1c009852 <__rt_periph_wait_event+0x48>
1c009836:	c999                	beqz	a1,1c00984c <__rt_periph_wait_event+0x42>
1c009838:	2807a683          	lw	a3,640(a5)
1c00983c:	4705                	li	a4,1
1c00983e:	00a71533          	sll	a0,a4,a0
1c009842:	fff54513          	not	a0,a0
1c009846:	8d75                	and	a0,a0,a3
1c009848:	28a7a023          	sw	a0,640(a5)
1c00984c:	30061073          	csrw	mstatus,a2
1c009850:	8082                	ret
1c009852:	03886703          	p.elw	a4,56(a6) # 204038 <__L2+0x184038>
1c009856:	30046773          	csrrsi	a4,mstatus,8
1c00985a:	30047773          	csrrci	a4,mstatus,8
1c00985e:	bfc1                	j	1c00982e <__rt_periph_wait_event+0x24>

1c009860 <__rt_periph_init>:
  for (unsigned int i=0; i<ARCHI_NB_PERIPH*2; i++) {
    rt_periph_channel_t *channel = &periph_channels[i];
    channel->first = NULL;
    channel->firstToEnqueue = NULL;
    channel->base = hal_udma_channel_base(i);
    channel->callback = udma_event_handler;
1c009860:	1c005537          	lui	a0,0x1c005
1c009864:	03000693          	li	a3,48
  for (unsigned int i=0; i<ARCHI_NB_PERIPH*2; i++) {
1c009868:	4601                	li	a2,0
1c00986a:	03000713          	li	a4,48
static inline unsigned int hal_udma_periph_base(int id) {
  return ARCHI_SOC_PERIPHERALS_ADDR + ARCHI_UDMA_OFFSET + UDMA_PERIPH_OFFSET(id);
}

static inline __attribute__((always_inline)) unsigned int hal_udma_channel_base(int id) {
  return ARCHI_SOC_PERIPHERALS_ADDR + ARCHI_UDMA_OFFSET + UDMA_PERIPH_OFFSET(id>>1) + UDMA_CHANNEL_OFFSET(id&1);
1c00986e:	1a1028b7          	lui	a7,0x1a102
    channel->callback = udma_event_handler;
1c009872:	11850513          	addi	a0,a0,280 # 1c005118 <udma_event_handler>
1c009876:	014950fb          	lp.setupi	x1,20,1c00989a <__rt_periph_init+0x3a>
1c00987a:	40165793          	srai	a5,a2,0x1
1c00987e:	00461813          	slli	a6,a2,0x4
1c009882:	079e                	slli	a5,a5,0x7
1c009884:	97c6                	add	a5,a5,a7
1c009886:	01087813          	andi	a6,a6,16
1c00988a:	97c2                	add	a5,a5,a6
    channel->first = NULL;
1c00988c:	0006a023          	sw	zero,0(a3)
    channel->firstToEnqueue = NULL;
1c009890:	0006a423          	sw	zero,8(a3)
    channel->base = hal_udma_channel_base(i);
1c009894:	c6dc                	sw	a5,12(a3)
    channel->callback = udma_event_handler;
1c009896:	cec8                	sw	a0,28(a3)
  for (unsigned int i=0; i<ARCHI_NB_PERIPH*2; i++) {
1c009898:	0605                	addi	a2,a2,1
1c00989a:	02068693          	addi	a3,a3,32
  }
  
  for (int i=0; i<ARCHI_SOC_EVENT_UDMA_NB_EXTRA_EVT; i++)
  {
    __rt_udma_extra_callback[i] = __rt_soc_evt_no_udma;
1c00989e:	1c0056b7          	lui	a3,0x1c005
1c0098a2:	28870613          	addi	a2,a4,648
1c0098a6:	2c268693          	addi	a3,a3,706 # 1c0052c2 <__rt_soc_evt_no_udma>
1c0098aa:	00a250fb          	lp.setupi	x1,10,1c0098b2 <__rt_periph_init+0x52>
1c0098ae:	00d6222b          	p.sw	a3,4(a2!)
1c0098b2:	0001                	nop
  }

  __rt_socevents_status[0] = 0;
1c0098b4:	28072023          	sw	zero,640(a4)
  __rt_socevents_status[1] = 0;
1c0098b8:	28072223          	sw	zero,644(a4)
}
1c0098bc:	8082                	ret

1c0098be <rt_freq_set_and_get>:
void rt_freq_wait_convergence(int fll)
{
}

int rt_freq_set_and_get(rt_freq_domain_e domain, unsigned int freq, unsigned int *out_freq)
{
1c0098be:	1141                	addi	sp,sp,-16
1c0098c0:	c226                	sw	s1,4(sp)
1c0098c2:	84ae                	mv	s1,a1
1c0098c4:	c606                	sw	ra,12(sp)
1c0098c6:	c422                	sw	s0,8(sp)
1c0098c8:	c04a                	sw	s2,0(sp)
  return __builtin_pulp_read_then_spr_bit_clr(reg, val);
1c0098ca:	30047973          	csrrci	s2,mstatus,8
  __asm__ __volatile__ ("" : : : "memory");
1c0098ce:	1c00e437          	lui	s0,0x1c00e
  int irq = rt_irq_disable();
  int err = 0;

  rt_trace(RT_TRACE_FREQ, "Setting domain frequency (domain: %d, freq: %d)\n", domain, freq);

  if (domain == RT_FREQ_DOMAIN_CL)
1c0098d2:	00153f63          	p.bneimm	a0,1,1c0098f0 <rt_freq_set_and_get+0x32>
  {
    // On cluster side, this is straight forward as the fll is not shared
    __rt_fll_set_freq(__RT_FLL_CL, freq);
    __rt_freq_domains[RT_FREQ_DOMAIN_CL] = freq;
1c0098d6:	92c40413          	addi	s0,s0,-1748 # 1c00d92c <__rt_freq_domains>
    __rt_fll_set_freq(__RT_FLL_CL, freq);
1c0098da:	25a1                	jal	1c009f22 <__rt_fll_set_freq>
    __rt_freq_domains[RT_FREQ_DOMAIN_CL] = freq;
1c0098dc:	c044                	sw	s1,4(s0)
  __builtin_pulp_spr_write(reg, val);
1c0098de:	30091073          	csrw	mstatus,s2
  }

  rt_irq_restore(irq);

  return err;
}
1c0098e2:	40b2                	lw	ra,12(sp)
1c0098e4:	4422                	lw	s0,8(sp)
1c0098e6:	4492                	lw	s1,4(sp)
1c0098e8:	4902                	lw	s2,0(sp)
1c0098ea:	4501                	li	a0,0
1c0098ec:	0141                	addi	sp,sp,16
1c0098ee:	8082                	ret
    __rt_cbsys_exec(RT_CBSYS_PERIPH_SETFREQ_BEFORE);
1c0098f0:	4511                	li	a0,4
1c0098f2:	bcaff0ef          	jal	ra,1c008cbc <__rt_cbsys_exec>
    __rt_fll_set_freq(0, freq);
1c0098f6:	85a6                	mv	a1,s1
1c0098f8:	4501                	li	a0,0
1c0098fa:	2525                	jal	1c009f22 <__rt_fll_set_freq>
    __rt_cbsys_exec(RT_CBSYS_PERIPH_SETFREQ_AFTER);
1c0098fc:	4515                	li	a0,5
    __rt_freq_domains[RT_FREQ_DOMAIN_FC] = freq;
1c0098fe:	92942623          	sw	s1,-1748(s0)
    __rt_cbsys_exec(RT_CBSYS_PERIPH_SETFREQ_AFTER);
1c009902:	bbaff0ef          	jal	ra,1c008cbc <__rt_cbsys_exec>
1c009906:	bfe1                	j	1c0098de <rt_freq_set_and_get+0x20>

1c009908 <__rt_freq_init>:

void __rt_freq_init()
{
1c009908:	1141                	addi	sp,sp,-16
1c00990a:	c422                	sw	s0,8(sp)
1c00990c:	c606                	sw	ra,12(sp)

  __rt_flls_constructor();
1c00990e:	2d09                	jal	1c009f20 <__rt_flls_constructor>
  return __rt_platform;
1c009910:	1c00d7b7          	lui	a5,0x1c00d

  // On all chips only FLL 0 is initialized here as it is shared between periph and soc
  // while FLL 1 is used for cluster only and thus is initialized when the cluster is set on.
  if (rt_platform() != ARCHI_PLATFORM_FPGA)
1c009914:	4387a783          	lw	a5,1080(a5) # 1c00d438 <__rt_platform>
1c009918:	1c00e437          	lui	s0,0x1c00e
1c00991c:	0017ae63          	p.beqimm	a5,1,1c009938 <__rt_freq_init+0x30>
  {
    __rt_freq_domains[RT_FREQ_DOMAIN_FC] = __rt_fll_init(__RT_FLL_FC);
1c009920:	4501                	li	a0,0
1c009922:	23ed                	jal	1c009f0c <__rt_fll_init>
1c009924:	92a42623          	sw	a0,-1748(s0) # 1c00d92c <__rt_freq_domains>
  }
  else
  {
    __rt_freq_domains[RT_FREQ_DOMAIN_FC] = 40000000;
  }
  __rt_freq_domains[RT_FREQ_DOMAIN_CL] = 0;
1c009928:	92c40413          	addi	s0,s0,-1748
1c00992c:	00042223          	sw	zero,4(s0)

}
1c009930:	40b2                	lw	ra,12(sp)
1c009932:	4422                	lw	s0,8(sp)
1c009934:	0141                	addi	sp,sp,16
1c009936:	8082                	ret
    __rt_freq_domains[RT_FREQ_DOMAIN_FC] = 40000000;
1c009938:	026267b7          	lui	a5,0x2626
1c00993c:	a0078793          	addi	a5,a5,-1536 # 2625a00 <__L2+0x25a5a00>
1c009940:	92f42623          	sw	a5,-1748(s0)
1c009944:	b7d5                	j	1c009928 <__rt_freq_init+0x20>

1c009946 <PMU_Control_Maestro.part.0>:
  if (PMURetentionState.Fields.BootType != COLD_BOOT && PMURetentionState.Fields.ClusterWakeUpState) {
          // ChangePowerSystemState(POWER_SYSTEM_STATE(PMURetentionState.Fields.WakeupState, PMURetentionState.Fields.ClusterWakeUpState), 0);
    __rt_pmu_cluster_power_up(NULL, NULL);
    if (PMU_ClusterIsRunning() && PMURetentionState.Fields.FllClusterRetention) InitOneFll(FLL_CLUSTER, 1);
  }
}
1c009946:	1c00d7b7          	lui	a5,0x1c00d
1c00994a:	44878793          	addi	a5,a5,1096 # 1c00d448 <SystemStateToSCUFastSeq>
1c00994e:	97ae                	add	a5,a5,a1
1c009950:	c2151533          	p.extractu	a0,a0,1,1
1c009954:	c21595b3          	p.extractu	a1,a1,1,1
1c009958:	0007c703          	lbu	a4,0(a5)
1c00995c:	06a58f63          	beq	a1,a0,1c0099da <PMU_Control_Maestro.part.0+0x94>
1c009960:	67c1                	lui	a5,0x10
1c009962:	00e797b3          	sll	a5,a5,a4
1c009966:	1141                	addi	sp,sp,-16
1c009968:	c407c7b3          	p.bset	a5,a5,2,0
1c00996c:	1a107737          	lui	a4,0x1a107
1c009970:	c606                	sw	ra,12(sp)
1c009972:	c422                	sw	s0,8(sp)
1c009974:	c226                	sw	s1,4(sp)
1c009976:	00f72023          	sw	a5,0(a4) # 1a107000 <__l1_end+0xa106fe0>
1c00997a:	002044b7          	lui	s1,0x204
1c00997e:	1a107437          	lui	s0,0x1a107
1c009982:	02500513          	li	a0,37
1c009986:	e57ff0ef          	jal	ra,1c0097dc <__rt_periph_get_event>
1c00998a:	cd01                	beqz	a0,1c0099a2 <PMU_Control_Maestro.part.0+0x5c>
1c00998c:	2b402783          	lw	a5,692(zero) # 2b4 <__rt_socevents_status+0x4>
1c009990:	40b2                	lw	ra,12(sp)
1c009992:	4422                	lw	s0,8(sp)
1c009994:	fc87f793          	andi	a5,a5,-56
1c009998:	2af02a23          	sw	a5,692(zero) # 2b4 <__rt_socevents_status+0x4>
1c00999c:	4492                	lw	s1,4(sp)
1c00999e:	0141                	addi	sp,sp,16
1c0099a0:	8082                	ret
1c0099a2:	0384e783          	p.elw	a5,56(s1) # 204038 <__L2+0x184038>
1c0099a6:	300467f3          	csrrsi	a5,mstatus,8
1c0099aa:	300477f3          	csrrci	a5,mstatus,8
1c0099ae:	01042783          	lw	a5,16(s0) # 1a107010 <__l1_end+0xa106ff0>
1c0099b2:	fc17b733          	p.bclr	a4,a5,30,1
1c0099b6:	c319                	beqz	a4,1c0099bc <PMU_Control_Maestro.part.0+0x76>
1c0099b8:	01442703          	lw	a4,20(s0)
1c0099bc:	0027f713          	andi	a4,a5,2
1c0099c0:	c319                	beqz	a4,1c0099c6 <PMU_Control_Maestro.part.0+0x80>
1c0099c2:	01842703          	lw	a4,24(s0)
1c0099c6:	0047f713          	andi	a4,a5,4
1c0099ca:	c319                	beqz	a4,1c0099d0 <PMU_Control_Maestro.part.0+0x8a>
1c0099cc:	01c42703          	lw	a4,28(s0)
1c0099d0:	8be1                	andi	a5,a5,24
1c0099d2:	dbc5                	beqz	a5,1c009982 <PMU_Control_Maestro.part.0+0x3c>
1c0099d4:	00f42823          	sw	a5,16(s0)
1c0099d8:	b76d                	j	1c009982 <PMU_Control_Maestro.part.0+0x3c>
1c0099da:	8082                	ret

1c0099dc <SetFllMultDivFactors>:
1c0099dc:	100517b3          	p.fl1	a5,a0
1c0099e0:	4769                	li	a4,26
1c0099e2:	8f1d                	sub	a4,a4,a5
1c0099e4:	4785                	li	a5,1
1c0099e6:	04f76733          	p.max	a4,a4,a5
1c0099ea:	47a1                	li	a5,8
1c0099ec:	04f74733          	p.min	a4,a4,a5
1c0099f0:	fff70693          	addi	a3,a4,-1
1c0099f4:	00f55793          	srli	a5,a0,0xf
1c0099f8:	00d797b3          	sll	a5,a5,a3
1c0099fc:	c19c                	sw	a5,0(a1)
1c0099fe:	07be                	slli	a5,a5,0xf
1c009a00:	c218                	sw	a4,0(a2)
1c009a02:	00d7d533          	srl	a0,a5,a3
1c009a06:	8082                	ret

1c009a08 <soc_eu_fcEventMask_setEvent>:
1c009a08:	47fd                	li	a5,31
1c009a0a:	4721                	li	a4,8
1c009a0c:	00f50463          	beq	a0,a5,1c009a14 <soc_eu_fcEventMask_setEvent+0xc>
1c009a10:	1501                	addi	a0,a0,-32
1c009a12:	4711                	li	a4,4
1c009a14:	1a1066b7          	lui	a3,0x1a106
1c009a18:	20e6f603          	p.lw	a2,a4(a3)
1c009a1c:	4785                	li	a5,1
1c009a1e:	00a79533          	sll	a0,a5,a0
1c009a22:	fff54513          	not	a0,a0
1c009a26:	8d71                	and	a0,a0,a2
1c009a28:	00a6e723          	p.sw	a0,a4(a3)
1c009a2c:	8082                	ret

1c009a2e <__rt_pmu_cluster_power_down>:
1c009a2e:	1c00d7b7          	lui	a5,0x1c00d
1c009a32:	4387a783          	lw	a5,1080(a5) # 1c00d438 <__rt_platform>
1c009a36:	0817a363          	p.beqimm	a5,1,1c009abc <__rt_pmu_cluster_power_down+0x8e>
1c009a3a:	1141                	addi	sp,sp,-16
1c009a3c:	1a1046b7          	lui	a3,0x1a104
1c009a40:	c606                	sw	ra,12(sp)
1c009a42:	c422                	sw	s0,8(sp)
1c009a44:	c226                	sw	s1,4(sp)
1c009a46:	c04a                	sw	s2,0(sp)
1c009a48:	0706a683          	lw	a3,112(a3) # 1a104070 <__l1_end+0xa104050>
1c009a4c:	1c00d737          	lui	a4,0x1c00d
1c009a50:	44870713          	addi	a4,a4,1096 # 1c00d448 <SystemStateToSCUFastSeq>
1c009a54:	00874783          	lbu	a5,8(a4)
1c009a58:	8436                	mv	s0,a3
1c009a5a:	c0079933          	p.extractu	s2,a5,0,0
1c009a5e:	04193963          	p.bneimm	s2,1,1c009ab0 <__rt_pmu_cluster_power_down+0x82>
1c009a62:	01069613          	slli	a2,a3,0x10
1c009a66:	04064563          	bltz	a2,1c009ab0 <__rt_pmu_cluster_power_down+0x82>
1c009a6a:	c007b7b3          	p.bclr	a5,a5,0,0
1c009a6e:	c0a92433          	p.insert	s0,s2,0,10
1c009a72:	1a1044b7          	lui	s1,0x1a104
1c009a76:	00f70423          	sb	a5,8(a4)
1c009a7a:	0684a823          	sw	s0,112(s1) # 1a104070 <__l1_end+0xa104050>
1c009a7e:	4585                	li	a1,1
1c009a80:	02300513          	li	a0,35
1c009a84:	d87ff0ef          	jal	ra,1c00980a <__rt_periph_wait_event>
1c009a88:	4785                	li	a5,1
1c009a8a:	00f4a623          	sw	a5,12(s1)
1c009a8e:	c0302433          	p.insert	s0,zero,0,3
1c009a92:	0684a823          	sw	s0,112(s1)
1c009a96:	c0d92433          	p.insert	s0,s2,0,13
1c009a9a:	0684a823          	sw	s0,112(s1)
1c009a9e:	4422                	lw	s0,8(sp)
1c009aa0:	40b2                	lw	ra,12(sp)
1c009aa2:	4492                	lw	s1,4(sp)
1c009aa4:	4902                	lw	s2,0(sp)
1c009aa6:	4585                	li	a1,1
1c009aa8:	457d                	li	a0,31
1c009aaa:	0141                	addi	sp,sp,16
1c009aac:	d5fff06f          	j	1c00980a <__rt_periph_wait_event>
1c009ab0:	40b2                	lw	ra,12(sp)
1c009ab2:	4422                	lw	s0,8(sp)
1c009ab4:	4492                	lw	s1,4(sp)
1c009ab6:	4902                	lw	s2,0(sp)
1c009ab8:	0141                	addi	sp,sp,16
1c009aba:	8082                	ret
1c009abc:	8082                	ret

1c009abe <PMU_set_voltage>:
1c009abe:	1c00d737          	lui	a4,0x1c00d
1c009ac2:	43872783          	lw	a5,1080(a4) # 1c00d438 <__rt_platform>
1c009ac6:	0017b563          	p.bneimm	a5,1,1c009ad0 <PMU_set_voltage+0x12>
1c009aca:	4781                	li	a5,0
1c009acc:	853e                	mv	a0,a5
1c009ace:	8082                	ret
1c009ad0:	1101                	addi	sp,sp,-32
1c009ad2:	ce06                	sw	ra,28(sp)
1c009ad4:	cc22                	sw	s0,24(sp)
1c009ad6:	ca26                	sw	s1,20(sp)
1c009ad8:	c84a                	sw	s2,16(sp)
1c009ada:	c64e                	sw	s3,12(sp)
1c009adc:	300479f3          	csrrci	s3,mstatus,8
1c009ae0:	03200813          	li	a6,50
1c009ae4:	dda50493          	addi	s1,a0,-550
1c009ae8:	0304d4b3          	divu	s1,s1,a6
1c009aec:	1c00d437          	lui	s0,0x1c00d
1c009af0:	44840793          	addi	a5,s0,1096 # 1c00d448 <SystemStateToSCUFastSeq>
1c009af4:	0087c683          	lbu	a3,8(a5)
1c009af8:	44840413          	addi	s0,s0,1096
1c009afc:	c2169633          	p.extractu	a2,a3,1,1
1c009b00:	97b2                	add	a5,a5,a2
1c009b02:	00a7c783          	lbu	a5,10(a5)
1c009b06:	04978e63          	beq	a5,s1,1c009b62 <PMU_set_voltage+0xa4>
1c009b0a:	c1850613          	addi	a2,a0,-1000
1c009b0e:	0c800813          	li	a6,200
1c009b12:	57fd                	li	a5,-1
1c009b14:	06c86763          	bltu	a6,a2,1c009b82 <PMU_set_voltage+0xc4>
1c009b18:	e5b9                	bnez	a1,1c009b66 <PMU_set_voltage+0xa8>
1c009b1a:	00844503          	lbu	a0,8(s0)
1c009b1e:	1a1046b7          	lui	a3,0x1a104
1c009b22:	10068693          	addi	a3,a3,256 # 1a104100 <__l1_end+0xa1040e0>
1c009b26:	c21517b3          	p.extractu	a5,a0,1,1
1c009b2a:	0017b793          	seqz	a5,a5
1c009b2e:	892a                	mv	s2,a0
1c009b30:	fc17a933          	p.insert	s2,a5,30,1
1c009b34:	97a2                	add	a5,a5,s0
1c009b36:	0187c783          	lbu	a5,24(a5)
1c009b3a:	4290                	lw	a2,0(a3)
1c009b3c:	c077c7b3          	p.bset	a5,a5,0,7
1c009b40:	80f4a633          	p.insertr	a2,s1,a5
1c009b44:	c290                	sw	a2,0(a3)
1c009b46:	43872783          	lw	a5,1080(a4)
1c009b4a:	0617b663          	p.bneimm	a5,1,1c009bb6 <PMU_set_voltage+0xf8>
1c009b4e:	87ca                	mv	a5,s2
1c009b50:	c2191933          	p.extractu	s2,s2,1,1
1c009b54:	00f40423          	sb	a5,8(s0)
1c009b58:	944a                	add	s0,s0,s2
1c009b5a:	00940523          	sb	s1,10(s0)
1c009b5e:	30099073          	csrw	mstatus,s3
1c009b62:	4781                	li	a5,0
1c009b64:	a839                	j	1c009b82 <PMU_set_voltage+0xc4>
1c009b66:	0007a637          	lui	a2,0x7a
1c009b6a:	eb2377b7          	lui	a5,0xeb237
1c009b6e:	12060613          	addi	a2,a2,288 # 7a120 <__L1Cl+0x6a120>
1c009b72:	c8078793          	addi	a5,a5,-896 # eb236c80 <pulp__FC+0xeb236c81>
1c009b76:	42c507b3          	p.mac	a5,a0,a2
1c009b7a:	4810                	lw	a2,16(s0)
1c009b7c:	00c7fb63          	bleu	a2,a5,1c009b92 <PMU_set_voltage+0xd4>
1c009b80:	4785                	li	a5,1
1c009b82:	40f2                	lw	ra,28(sp)
1c009b84:	4462                	lw	s0,24(sp)
1c009b86:	44d2                	lw	s1,20(sp)
1c009b88:	4942                	lw	s2,16(sp)
1c009b8a:	49b2                	lw	s3,12(sp)
1c009b8c:	853e                	mv	a0,a5
1c009b8e:	6105                	addi	sp,sp,32
1c009b90:	8082                	ret
1c009b92:	c00696b3          	p.extractu	a3,a3,0,0
1c009b96:	f816b2e3          	p.bneimm	a3,1,1c009b1a <PMU_set_voltage+0x5c>
1c009b9a:	0006b6b7          	lui	a3,0x6b
1c009b9e:	eaf5a7b7          	lui	a5,0xeaf5a
1c009ba2:	6c068693          	addi	a3,a3,1728 # 6b6c0 <__L1Cl+0x5b6c0>
1c009ba6:	5c078793          	addi	a5,a5,1472 # eaf5a5c0 <pulp__FC+0xeaf5a5c1>
1c009baa:	42d507b3          	p.mac	a5,a0,a3
1c009bae:	4854                	lw	a3,20(s0)
1c009bb0:	f6d7f5e3          	bleu	a3,a5,1c009b1a <PMU_set_voltage+0x5c>
1c009bb4:	b7f1                	j	1c009b80 <PMU_set_voltage+0xc2>
1c009bb6:	85ca                	mv	a1,s2
1c009bb8:	d8fff0ef          	jal	ra,1c009946 <PMU_Control_Maestro.part.0>
1c009bbc:	bf49                	j	1c009b4e <PMU_set_voltage+0x90>

1c009bbe <SetFllFrequency>:
1c009bbe:	7179                	addi	sp,sp,-48
1c009bc0:	d422                	sw	s0,40(sp)
1c009bc2:	d226                	sw	s1,36(sp)
1c009bc4:	1c00d437          	lui	s0,0x1c00d
1c009bc8:	84aa                	mv	s1,a0
1c009bca:	d606                	sw	ra,44(sp)
1c009bcc:	852e                	mv	a0,a1
1c009bce:	44840413          	addi	s0,s0,1096 # 1c00d448 <SystemStateToSCUFastSeq>
1c009bd2:	0014be63          	p.bneimm	s1,1,1c009bee <SetFllFrequency+0x30>
1c009bd6:	00844783          	lbu	a5,8(s0)
1c009bda:	c0079733          	p.extractu	a4,a5,0,0
1c009bde:	08172763          	p.beqimm	a4,1,1c009c6c <SetFllFrequency+0xae>
1c009be2:	4501                	li	a0,0
1c009be4:	50b2                	lw	ra,44(sp)
1c009be6:	5422                	lw	s0,40(sp)
1c009be8:	5492                	lw	s1,36(sp)
1c009bea:	6145                	addi	sp,sp,48
1c009bec:	8082                	ret
1c009bee:	ce2d                	beqz	a2,1c009c68 <SetFllFrequency+0xaa>
1c009bf0:	00844783          	lbu	a5,8(s0)
1c009bf4:	03200713          	li	a4,50
1c009bf8:	c21797b3          	p.extractu	a5,a5,1,1
1c009bfc:	97a2                	add	a5,a5,s0
1c009bfe:	00a7c783          	lbu	a5,10(a5)
1c009c02:	00e787db          	p.mac	a5,a5,a4,zero
1c009c06:	22678793          	addi	a5,a5,550
1c009c0a:	ecad                	bnez	s1,1c009c84 <SetFllFrequency+0xc6>
1c009c0c:	0007a6b7          	lui	a3,0x7a
1c009c10:	eb237737          	lui	a4,0xeb237
1c009c14:	12068693          	addi	a3,a3,288 # 7a120 <__L1Cl+0x6a120>
1c009c18:	c8070713          	addi	a4,a4,-896 # eb236c80 <pulp__FC+0xeb236c81>
1c009c1c:	42d78733          	p.mac	a4,a5,a3
1c009c20:	fcb761e3          	bltu	a4,a1,1c009be2 <SetFllFrequency+0x24>
1c009c24:	c62a                	sw	a0,12(sp)
1c009c26:	ba6ff0ef          	jal	ra,1c008fcc <__rt_bridge_req_shutdown>
1c009c2a:	4532                	lw	a0,12(sp)
1c009c2c:	0870                	addi	a2,sp,28
1c009c2e:	082c                	addi	a1,sp,24
1c009c30:	dadff0ef          	jal	ra,1c0099dc <SetFllMultDivFactors>
1c009c34:	4762                	lw	a4,24(sp)
1c009c36:	800007b7          	lui	a5,0x80000
1c009c3a:	1a1006b7          	lui	a3,0x1a100
1c009c3e:	de0727b3          	p.insert	a5,a4,15,0
1c009c42:	4772                	lw	a4,28(sp)
1c009c44:	c7a727b3          	p.insert	a5,a4,3,26
1c009c48:	00449713          	slli	a4,s1,0x4
1c009c4c:	0711                	addi	a4,a4,4
1c009c4e:	00f6e723          	p.sw	a5,a4(a3)
1c009c52:	00249793          	slli	a5,s1,0x2
1c009c56:	943e                	add	s0,s0,a5
1c009c58:	d008                	sw	a0,32(s0)
1c009c5a:	c808                	sw	a0,16(s0)
1c009c5c:	f4c1                	bnez	s1,1c009be4 <SetFllFrequency+0x26>
1c009c5e:	c62a                	sw	a0,12(sp)
1c009c60:	ac8ff0ef          	jal	ra,1c008f28 <__rt_bridge_set_available>
1c009c64:	4532                	lw	a0,12(sp)
1c009c66:	bfbd                	j	1c009be4 <SetFllFrequency+0x26>
1c009c68:	f0f1                	bnez	s1,1c009c2c <SetFllFrequency+0x6e>
1c009c6a:	bf6d                	j	1c009c24 <SetFllFrequency+0x66>
1c009c6c:	d261                	beqz	a2,1c009c2c <SetFllFrequency+0x6e>
1c009c6e:	c21797b3          	p.extractu	a5,a5,1,1
1c009c72:	97a2                	add	a5,a5,s0
1c009c74:	00a7c783          	lbu	a5,10(a5) # 8000000a <pulp__FC+0x8000000b>
1c009c78:	03200713          	li	a4,50
1c009c7c:	00e787db          	p.mac	a5,a5,a4,zero
1c009c80:	22678793          	addi	a5,a5,550
1c009c84:	0006b6b7          	lui	a3,0x6b
1c009c88:	eaf5a737          	lui	a4,0xeaf5a
1c009c8c:	6c068693          	addi	a3,a3,1728 # 6b6c0 <__L1Cl+0x5b6c0>
1c009c90:	5c070713          	addi	a4,a4,1472 # eaf5a5c0 <pulp__FC+0xeaf5a5c1>
1c009c94:	42d78733          	p.mac	a4,a5,a3
1c009c98:	f8a77ae3          	bleu	a0,a4,1c009c2c <SetFllFrequency+0x6e>
1c009c9c:	b799                	j	1c009be2 <SetFllFrequency+0x24>

1c009c9e <InitOneFll>:
1c009c9e:	7179                	addi	sp,sp,-48
1c009ca0:	00451713          	slli	a4,a0,0x4
1c009ca4:	ce4e                	sw	s3,28(sp)
1c009ca6:	1a1007b7          	lui	a5,0x1a100
1c009caa:	00470993          	addi	s3,a4,4
1c009cae:	d606                	sw	ra,44(sp)
1c009cb0:	d422                	sw	s0,40(sp)
1c009cb2:	d226                	sw	s1,36(sp)
1c009cb4:	d04a                	sw	s2,32(sp)
1c009cb6:	2137f783          	p.lw	a5,s3(a5)
1c009cba:	1c00d437          	lui	s0,0x1c00d
1c009cbe:	44840413          	addi	s0,s0,1096 # 1c00d448 <SystemStateToSCUFastSeq>
1c009cc2:	00251913          	slli	s2,a0,0x2
1c009cc6:	c585                	beqz	a1,1c009cee <InitOneFll+0x50>
1c009cc8:	c7a79733          	p.extractu	a4,a5,3,26
1c009ccc:	1007d7b3          	p.exthz	a5,a5
1c009cd0:	07be                	slli	a5,a5,0xf
1c009cd2:	c701                	beqz	a4,1c009cda <InitOneFll+0x3c>
1c009cd4:	177d                	addi	a4,a4,-1
1c009cd6:	00e7d7b3          	srl	a5,a5,a4
1c009cda:	944a                	add	s0,s0,s2
1c009cdc:	d01c                	sw	a5,32(s0)
1c009cde:	c81c                	sw	a5,16(s0)
1c009ce0:	50b2                	lw	ra,44(sp)
1c009ce2:	5422                	lw	s0,40(sp)
1c009ce4:	5492                	lw	s1,36(sp)
1c009ce6:	5902                	lw	s2,32(sp)
1c009ce8:	49f2                	lw	s3,28(sp)
1c009cea:	6145                	addi	sp,sp,48
1c009cec:	8082                	ret
1c009cee:	0007d363          	bgez	a5,1c009cf4 <InitOneFll+0x56>
1c009cf2:	c105                	beqz	a0,1c009d12 <InitOneFll+0x74>
1c009cf4:	810047b7          	lui	a5,0x81004
1c009cf8:	1a1006b7          	lui	a3,0x1a100
1c009cfc:	00870613          	addi	a2,a4,8
1c009d00:	10778793          	addi	a5,a5,263 # 81004107 <pulp__FC+0x81004108>
1c009d04:	00f6e623          	p.sw	a5,a2(a3)
1c009d08:	014c04b7          	lui	s1,0x14c0
1c009d0c:	0731                	addi	a4,a4,12
1c009d0e:	0096e723          	p.sw	s1,a4(a3)
1c009d12:	02faf537          	lui	a0,0x2faf
1c009d16:	0070                	addi	a2,sp,12
1c009d18:	002c                	addi	a1,sp,8
1c009d1a:	08050513          	addi	a0,a0,128 # 2faf080 <__L2+0x2f2f080>
1c009d1e:	cbfff0ef          	jal	ra,1c0099dc <SetFllMultDivFactors>
1c009d22:	47a2                	lw	a5,8(sp)
1c009d24:	c00004b7          	lui	s1,0xc0000
1c009d28:	de07a4b3          	p.insert	s1,a5,15,0
1c009d2c:	47b2                	lw	a5,12(sp)
1c009d2e:	c7a7a4b3          	p.insert	s1,a5,3,26
1c009d32:	1a1007b7          	lui	a5,0x1a100
1c009d36:	0097e9a3          	p.sw	s1,s3(a5)
1c009d3a:	944a                	add	s0,s0,s2
1c009d3c:	d008                	sw	a0,32(s0)
1c009d3e:	c808                	sw	a0,16(s0)
1c009d40:	b745                	j	1c009ce0 <InitOneFll+0x42>

1c009d42 <__rt_pmu_cluster_power_up>:
1c009d42:	1141                	addi	sp,sp,-16
1c009d44:	c226                	sw	s1,4(sp)
1c009d46:	1c00d4b7          	lui	s1,0x1c00d
1c009d4a:	c606                	sw	ra,12(sp)
1c009d4c:	c422                	sw	s0,8(sp)
1c009d4e:	c04a                	sw	s2,0(sp)
1c009d50:	44848793          	addi	a5,s1,1096 # 1c00d448 <SystemStateToSCUFastSeq>
1c009d54:	0087c783          	lbu	a5,8(a5) # 1a100008 <__l1_end+0xa0fffe8>
1c009d58:	4501                	li	a0,0
1c009d5a:	c00797b3          	p.extractu	a5,a5,0,0
1c009d5e:	e785                	bnez	a5,1c009d86 <__rt_pmu_cluster_power_up+0x44>
1c009d60:	1c00d7b7          	lui	a5,0x1c00d
1c009d64:	4387a783          	lw	a5,1080(a5) # 1c00d438 <__rt_platform>
1c009d68:	44848493          	addi	s1,s1,1096
1c009d6c:	0217b363          	p.bneimm	a5,1,1c009d92 <__rt_pmu_cluster_power_up+0x50>
1c009d70:	1a1047b7          	lui	a5,0x1a104
1c009d74:	0007a623          	sw	zero,12(a5) # 1a10400c <__l1_end+0xa103fec>
1c009d78:	0084c783          	lbu	a5,8(s1)
1c009d7c:	4505                	li	a0,1
1c009d7e:	c007c7b3          	p.bset	a5,a5,0,0
1c009d82:	00f48423          	sb	a5,8(s1)
1c009d86:	40b2                	lw	ra,12(sp)
1c009d88:	4422                	lw	s0,8(sp)
1c009d8a:	4492                	lw	s1,4(sp)
1c009d8c:	4902                	lw	s2,0(sp)
1c009d8e:	0141                	addi	sp,sp,16
1c009d90:	8082                	ret
1c009d92:	1a104437          	lui	s0,0x1a104
1c009d96:	07042403          	lw	s0,112(s0) # 1a104070 <__l1_end+0xa104050>
1c009d9a:	c0a417b3          	p.extractu	a5,s0,0,10
1c009d9e:	ef89                	bnez	a5,1c009db8 <__rt_pmu_cluster_power_up+0x76>
1c009da0:	4785                	li	a5,1
1c009da2:	c0a7a433          	p.insert	s0,a5,0,10
1c009da6:	1a1047b7          	lui	a5,0x1a104
1c009daa:	0687a823          	sw	s0,112(a5) # 1a104070 <__l1_end+0xa104050>
1c009dae:	4585                	li	a1,1
1c009db0:	02300513          	li	a0,35
1c009db4:	a57ff0ef          	jal	ra,1c00980a <__rt_periph_wait_event>
1c009db8:	4785                	li	a5,1
1c009dba:	c037a433          	p.insert	s0,a5,0,3
1c009dbe:	1a104937          	lui	s2,0x1a104
1c009dc2:	06892823          	sw	s0,112(s2) # 1a104070 <__l1_end+0xa104050>
1c009dc6:	4585                	li	a1,1
1c009dc8:	457d                	li	a0,31
1c009dca:	a41ff0ef          	jal	ra,1c00980a <__rt_periph_wait_event>
1c009dce:	00092623          	sw	zero,12(s2)
1c009dd2:	c0d02433          	p.insert	s0,zero,0,13
1c009dd6:	06892823          	sw	s0,112(s2)
1c009dda:	c0a02433          	p.insert	s0,zero,0,10
1c009dde:	06892823          	sw	s0,112(s2)
1c009de2:	4585                	li	a1,1
1c009de4:	02300513          	li	a0,35
1c009de8:	a23ff0ef          	jal	ra,1c00980a <__rt_periph_wait_event>
1c009dec:	01c4c783          	lbu	a5,28(s1)
1c009df0:	0207f793          	andi	a5,a5,32
1c009df4:	e789                	bnez	a5,1c009dfe <__rt_pmu_cluster_power_up+0xbc>
1c009df6:	4581                	li	a1,0
1c009df8:	4505                	li	a0,1
1c009dfa:	ea5ff0ef          	jal	ra,1c009c9e <InitOneFll>
1c009dfe:	c0e44433          	p.bset	s0,s0,0,14
1c009e02:	1a1047b7          	lui	a5,0x1a104
1c009e06:	0687a823          	sw	s0,112(a5) # 1a104070 <__l1_end+0xa104050>
1c009e0a:	b7bd                	j	1c009d78 <__rt_pmu_cluster_power_up+0x36>

1c009e0c <InitFlls>:

  }
}

void  __attribute__ ((noinline)) InitFlls()
{
1c009e0c:	1141                	addi	sp,sp,-16
1c009e0e:	c422                	sw	s0,8(sp)
  __rt_bridge_req_shutdown();

  InitOneFll(FLL_SOC, PMURetentionState.Fields.FllSoCRetention);
1c009e10:	1c00d437          	lui	s0,0x1c00d
{
1c009e14:	c606                	sw	ra,12(sp)
  InitOneFll(FLL_SOC, PMURetentionState.Fields.FllSoCRetention);
1c009e16:	44840413          	addi	s0,s0,1096 # 1c00d448 <SystemStateToSCUFastSeq>
  __rt_bridge_req_shutdown();
1c009e1a:	9b2ff0ef          	jal	ra,1c008fcc <__rt_bridge_req_shutdown>
  InitOneFll(FLL_SOC, PMURetentionState.Fields.FllSoCRetention);
1c009e1e:	01c44583          	lbu	a1,28(s0)
1c009e22:	4501                	li	a0,0
1c009e24:	c04595b3          	p.extractu	a1,a1,0,4
1c009e28:	e77ff0ef          	jal	ra,1c009c9e <InitOneFll>
#define PMU_ERROR_CLUSTER_STATE_CHANGE_FAILED   (0x1<<4)

extern void 		   InitPMUDriver();

static inline int 	   PMU_ClusterIsDown()    { return (CLUSTER_STATE(PMUState.State)==CLUSTER_OFF);}
static inline int 	   PMU_ClusterIsRunning() { return (CLUSTER_STATE(PMUState.State)==CLUSTER_ON);}
1c009e2c:	00844783          	lbu	a5,8(s0)
1c009e30:	c00797b3          	p.extractu	a5,a5,0,0
  if (PMU_ClusterIsRunning()) InitOneFll(FLL_CLUSTER, PMURetentionState.Fields.FllClusterRetention);
1c009e34:	0017b963          	p.bneimm	a5,1,1c009e46 <InitFlls+0x3a>
1c009e38:	01c44583          	lbu	a1,28(s0)
1c009e3c:	4505                	li	a0,1
1c009e3e:	c05595b3          	p.extractu	a1,a1,0,5
1c009e42:	e5dff0ef          	jal	ra,1c009c9e <InitOneFll>

#ifdef __RT_USE_BRIDGE
  __rt_bridge_set_available();
#endif
}
1c009e46:	4422                	lw	s0,8(sp)
1c009e48:	40b2                	lw	ra,12(sp)
1c009e4a:	0141                	addi	sp,sp,16
  __rt_bridge_set_available();
1c009e4c:	8dcff06f          	j	1c008f28 <__rt_bridge_set_available>

1c009e50 <__rt_pmu_init>:
1c009e50:	1c00d7b7          	lui	a5,0x1c00d
  if (rt_platform() == ARCHI_PLATFORM_FPGA) {
1c009e54:	4387a783          	lw	a5,1080(a5) # 1c00d438 <__rt_platform>
1c009e58:	0a17a963          	p.beqimm	a5,1,1c009f0a <__rt_pmu_init+0xba>
{
1c009e5c:	1141                	addi	sp,sp,-16
  __rt_wakeup_use_fast = 0;
1c009e5e:	1c00e7b7          	lui	a5,0x1c00e
  return IP_READ(ARCHI_APB_SOC_CTRL_ADDR, PMU_DCDC_CONFIG_OFFSET);
1c009e62:	1a104637          	lui	a2,0x1a104
{
1c009e66:	c606                	sw	ra,12(sp)
  __rt_wakeup_use_fast = 0;
1c009e68:	9207aa23          	sw	zero,-1740(a5) # 1c00d934 <__rt_wakeup_use_fast>
1c009e6c:	10062703          	lw	a4,256(a2) # 1a104100 <__l1_end+0xa1040e0>
  return IP_READ(ARCHI_APB_SOC_CTRL_ADDR, PMU_RETENTION_CONFIG_OFFSET);
1c009e70:	10462683          	lw	a3,260(a2)
  PMURetentionState.Raw = GetRetentiveState();
1c009e74:	1c00d7b7          	lui	a5,0x1c00d
1c009e78:	44878793          	addi	a5,a5,1096 # 1c00d448 <SystemStateToSCUFastSeq>
1c009e7c:	cfd4                	sw	a3,28(a5)
  PMUState.State = RetPMUStateToPMUState[PMURetentionState.Fields.WakeupState];
1c009e7e:	c2e696b3          	p.extractu	a3,a3,1,14
1c009e82:	96be                	add	a3,a3,a5
1c009e84:	0286c683          	lbu	a3,40(a3) # 1a100028 <__l1_end+0xa100008>
  PMUState.DCDC_Settings[REGU_OFF] = 0;
1c009e88:	000786a3          	sb	zero,13(a5)
  PMUState.State = RetPMUStateToPMUState[PMURetentionState.Fields.WakeupState];
1c009e8c:	00d78423          	sb	a3,8(a5)
  PMUState.DCDC_Settings[REGU_NV]  = __builtin_bitextractu(DCDCValue, DCDC_RANGE, DCDC_Nominal*8);
1c009e90:	c80716b3          	p.extractu	a3,a4,4,0
1c009e94:	00d78523          	sb	a3,10(a5)
  PMUState.DCDC_Settings[REGU_LV]  = __builtin_bitextractu(DCDCValue, DCDC_RANGE, DCDC_Low*8);
1c009e98:	c90716b3          	p.extractu	a3,a4,4,16
  PMUState.DCDC_Settings[REGU_RET] = __builtin_bitextractu(DCDCValue, DCDC_RANGE, DCDC_Retentive*8);
1c009e9c:	c9871733          	p.extractu	a4,a4,4,24
  PMUState.DCDC_Settings[REGU_LV]  = __builtin_bitextractu(DCDCValue, DCDC_RANGE, DCDC_Low*8);
1c009ea0:	00d785a3          	sb	a3,11(a5)
  PMUState.DCDC_Settings[REGU_RET] = __builtin_bitextractu(DCDCValue, DCDC_RANGE, DCDC_Retentive*8);
1c009ea4:	00e78623          	sb	a4,12(a5)
  Bypass.Raw = GetPMUBypass();
1c009ea8:	07062783          	lw	a5,112(a2)
  Bypass.Fields.Bypass = 1;
1c009eac:	4705                	li	a4,1
1c009eae:	c00727b3          	p.insert	a5,a4,0,0
  Bypass.Fields.BypassClock = 1;
1c009eb2:	c09727b3          	p.insert	a5,a4,0,9
  IP_WRITE(ARCHI_APB_SOC_CTRL_ADDR, APB_SOC_CL_BYPASS_OFFSET, Value);
1c009eb6:	06f62823          	sw	a5,112(a2)
  InitFlls();
1c009eba:	f53ff0ef          	jal	ra,1c009e0c <InitFlls>
  soc_eu_fcEventMask_setEvent(ARCHI_SOC_EVENT_CLUSTER_ON_OFF);
1c009ebe:	457d                	li	a0,31
1c009ec0:	b49ff0ef          	jal	ra,1c009a08 <soc_eu_fcEventMask_setEvent>
  soc_eu_fcEventMask_setEvent(ARCHI_SOC_EVENT_MSP);
1c009ec4:	02000513          	li	a0,32
1c009ec8:	b41ff0ef          	jal	ra,1c009a08 <soc_eu_fcEventMask_setEvent>
  soc_eu_fcEventMask_setEvent(ARCHI_SOC_EVENT_ICU_MODE_CHANGED);
1c009ecc:	02100513          	li	a0,33
1c009ed0:	b39ff0ef          	jal	ra,1c009a08 <soc_eu_fcEventMask_setEvent>
  soc_eu_fcEventMask_setEvent(ARCHI_SOC_EVENT_ICU_OK);
1c009ed4:	02200513          	li	a0,34
1c009ed8:	b31ff0ef          	jal	ra,1c009a08 <soc_eu_fcEventMask_setEvent>
  soc_eu_fcEventMask_setEvent(ARCHI_SOC_EVENT_ICU_DELAYED);
1c009edc:	02300513          	li	a0,35
1c009ee0:	b29ff0ef          	jal	ra,1c009a08 <soc_eu_fcEventMask_setEvent>
  soc_eu_fcEventMask_setEvent(ARCHI_SOC_EVENT_PICL_OK);
1c009ee4:	02400513          	li	a0,36
1c009ee8:	b21ff0ef          	jal	ra,1c009a08 <soc_eu_fcEventMask_setEvent>
  soc_eu_fcEventMask_setEvent(ARCHI_SOC_EVENT_SCU_OK);
1c009eec:	02500513          	li	a0,37
1c009ef0:	b19ff0ef          	jal	ra,1c009a08 <soc_eu_fcEventMask_setEvent>
  PMU_Write(DLC_IMR, 0x7);
1c009ef4:	1a1077b7          	lui	a5,0x1a107
1c009ef8:	471d                	li	a4,7
1c009efa:	00e7a623          	sw	a4,12(a5) # 1a10700c <__l1_end+0xa106fec>
  PMU_Write(DLC_IFR, (MAESTRO_EVENT_PICL_OK|MAESTRO_EVENT_SCU_OK));
1c009efe:	4761                	li	a4,24
1c009f00:	00e7a823          	sw	a4,16(a5)
}
1c009f04:	40b2                	lw	ra,12(sp)
1c009f06:	0141                	addi	sp,sp,16
1c009f08:	8082                	ret
1c009f0a:	8082                	ret

1c009f0c <__rt_fll_init>:


unsigned int __rt_fll_init(int fll)
{
  return FllsFrequency[fll];
1c009f0c:	00251793          	slli	a5,a0,0x2
1c009f10:	1c00d537          	lui	a0,0x1c00d
1c009f14:	44850513          	addi	a0,a0,1096 # 1c00d448 <SystemStateToSCUFastSeq>
1c009f18:	953e                	add	a0,a0,a5
}
1c009f1a:	5108                	lw	a0,32(a0)
1c009f1c:	8082                	ret

1c009f1e <__rt_fll_deinit>:

void __rt_fll_deinit(int fll)
{
}
1c009f1e:	8082                	ret

1c009f20 <__rt_flls_constructor>:

void __rt_flls_constructor()
{
}
1c009f20:	8082                	ret

1c009f22 <__rt_fll_set_freq>:

unsigned int __rt_fll_set_freq(int fll, unsigned int frequency)
{
  return SetFllFrequency(fll, frequency, 0);
1c009f22:	4601                	li	a2,0
1c009f24:	c9bff06f          	j	1c009bbe <SetFllFrequency>

1c009f28 <__rt_init_cluster_data>:
{
#if defined(EU_VERSION) && EU_VERSION >= 3
  eu_evt_maskSet((1<<PULP_DISPATCH_EVENT) | (1<<PULP_HW_BAR_EVENT) | (1<<PULP_MUTEX_EVENT));
  rt_team_fork(rt_nb_pe(), cluster_pe_start, NULL);
#endif
}
1c009f28:	04050713          	addi	a4,a0,64
1c009f2c:	00400793          	li	a5,4
1c009f30:	01671613          	slli	a2,a4,0x16
1c009f34:	e6c7b7b3          	p.bclr	a5,a5,19,12
1c009f38:	1c00e6b7          	lui	a3,0x1c00e
1c009f3c:	97b2                	add	a5,a5,a2
1c009f3e:	96468693          	addi	a3,a3,-1692 # 1c00d964 <_bss_end>
1c009f42:	01c00713          	li	a4,28
1c009f46:	8f95                	sub	a5,a5,a3
1c009f48:	00f685b3          	add	a1,a3,a5
1c009f4c:	02e04963          	bgtz	a4,1c009f7e <__rt_init_cluster_data+0x56>
1c009f50:	1c00e7b7          	lui	a5,0x1c00e
1c009f54:	02800713          	li	a4,40
1c009f58:	93c78793          	addi	a5,a5,-1732 # 1c00d93c <__rt_fc_cluster_data>
1c009f5c:	42e507b3          	p.mac	a5,a0,a4
1c009f60:	00201737          	lui	a4,0x201
1c009f64:	e0470713          	addi	a4,a4,-508 # 200e04 <__L2+0x180e04>
1c009f68:	9732                	add	a4,a4,a2
1c009f6a:	cb98                	sw	a4,16(a5)
1c009f6c:	00400713          	li	a4,4
1c009f70:	e6c73733          	p.bclr	a4,a4,19,12
1c009f74:	9732                	add	a4,a4,a2
1c009f76:	0007a423          	sw	zero,8(a5)
1c009f7a:	cbd8                	sw	a4,20(a5)
1c009f7c:	8082                	ret
1c009f7e:	0046a80b          	p.lw	a6,4(a3!)
1c009f82:	1771                	addi	a4,a4,-4
1c009f84:	0105a023          	sw	a6,0(a1)
1c009f88:	b7c1                	j	1c009f48 <__rt_init_cluster_data+0x20>

1c009f8a <__rt_cluster_init>:
1c009f8a:	1c00e537          	lui	a0,0x1c00e
1c009f8e:	1141                	addi	sp,sp,-16
1c009f90:	02800613          	li	a2,40
1c009f94:	4581                	li	a1,0
1c009f96:	93c50513          	addi	a0,a0,-1732 # 1c00d93c <__rt_fc_cluster_data>
1c009f9a:	c606                	sw	ra,12(sp)
1c009f9c:	450010ef          	jal	ra,1c00b3ec <memset>
1c009fa0:	1c00c5b7          	lui	a1,0x1c00c
1c009fa4:	77058593          	addi	a1,a1,1904 # 1c00c770 <__rt_dma_2d>
1c009fa8:	4525                	li	a0,9
1c009faa:	b69fe0ef          	jal	ra,1c008b12 <rt_irq_set_handler>
1c009fae:	1c0055b7          	lui	a1,0x1c005
1c009fb2:	fd858593          	addi	a1,a1,-40 # 1c004fd8 <__rt_remote_enqueue_event>
1c009fb6:	4505                	li	a0,1
1c009fb8:	b5bfe0ef          	jal	ra,1c008b12 <rt_irq_set_handler>
1c009fbc:	4789                	li	a5,2
1c009fbe:	00204737          	lui	a4,0x204
1c009fc2:	00f72a23          	sw	a5,20(a4) # 204014 <__L2+0x184014>
1c009fc6:	00f72423          	sw	a5,8(a4)
1c009fca:	1c0055b7          	lui	a1,0x1c005
1c009fce:	fa058593          	addi	a1,a1,-96 # 1c004fa0 <__rt_bridge_enqueue_event>
1c009fd2:	4511                	li	a0,4
1c009fd4:	b3ffe0ef          	jal	ra,1c008b12 <rt_irq_set_handler>
1c009fd8:	47c1                	li	a5,16
1c009fda:	00204737          	lui	a4,0x204
1c009fde:	00f72a23          	sw	a5,20(a4) # 204014 <__L2+0x184014>
1c009fe2:	00f72423          	sw	a5,8(a4)
1c009fe6:	40b2                	lw	ra,12(sp)
1c009fe8:	4501                	li	a0,0
1c009fea:	0141                	addi	sp,sp,16
1c009fec:	8082                	ret

1c009fee <__rt_cluster_mount_step>:
{
1c009fee:	7179                	addi	sp,sp,-48
1c009ff0:	ce4e                	sw	s3,28(sp)
1c009ff2:	cc52                	sw	s4,24(sp)
      plp_ctrl_core_bootaddr_set_remote(cid, i, ((int)_start) & 0xffffff00);
1c009ff4:	1c000a37          	lui	s4,0x1c000
  return (void *)(ARCHI_CLUSTER_GLOBAL_ADDR(cid) + ((int)data & 0xFFF));
1c009ff8:	00400993          	li	s3,4
1c009ffc:	080a0a13          	addi	s4,s4,128 # 1c000080 <_start>
{
1c00a000:	d422                	sw	s0,40(sp)
1c00a002:	d606                	sw	ra,44(sp)
1c00a004:	d226                	sw	s1,36(sp)
1c00a006:	d04a                	sw	s2,32(sp)
1c00a008:	ca56                	sw	s5,20(sp)
1c00a00a:	842a                	mv	s0,a0
1c00a00c:	e6c9b9b3          	p.bclr	s3,s3,19,12
      plp_ctrl_core_bootaddr_set_remote(cid, i, ((int)_start) & 0xffffff00);
1c00a010:	ce0a3a33          	p.bclr	s4,s4,7,0
    switch (cluster->state)
1c00a014:	4c5c                	lw	a5,28(s0)
1c00a016:	0217ad63          	p.beqimm	a5,1,1c00a050 <__rt_cluster_mount_step+0x62>
1c00a01a:	0c27a663          	p.beqimm	a5,2,1c00a0e6 <__rt_cluster_mount_step+0xf8>
1c00a01e:	e3e1                	bnez	a5,1c00a0de <__rt_cluster_mount_step+0xf0>
  int cid = cluster->cid;
1c00a020:	5018                	lw	a4,32(s0)
  cluster->powered_up = 0;
1c00a022:	00042c23          	sw	zero,24(s0)
  if (cid == 0)
1c00a026:	eb01                	bnez	a4,1c00a036 <__rt_cluster_mount_step+0x48>
    cluster->powered_up = __rt_pmu_cluster_power_up(cluster->mount_event, &pending);
1c00a028:	5048                	lw	a0,36(s0)
1c00a02a:	006c                	addi	a1,sp,12
    int pending = 0;
1c00a02c:	c602                	sw	zero,12(sp)
    cluster->powered_up = __rt_pmu_cluster_power_up(cluster->mount_event, &pending);
1c00a02e:	d15ff0ef          	jal	ra,1c009d42 <__rt_pmu_cluster_power_up>
    return pending;
1c00a032:	47b2                	lw	a5,12(sp)
    cluster->powered_up = __rt_pmu_cluster_power_up(cluster->mount_event, &pending);
1c00a034:	cc08                	sw	a0,24(s0)
    cluster->state++;
1c00a036:	4c58                	lw	a4,28(s0)
1c00a038:	0705                	addi	a4,a4,1
1c00a03a:	cc58                	sw	a4,28(s0)
  while(!end)
1c00a03c:	dfe1                	beqz	a5,1c00a014 <__rt_cluster_mount_step+0x26>
}
1c00a03e:	50b2                	lw	ra,44(sp)
1c00a040:	5422                	lw	s0,40(sp)
1c00a042:	5492                	lw	s1,36(sp)
1c00a044:	5902                	lw	s2,32(sp)
1c00a046:	49f2                	lw	s3,28(sp)
1c00a048:	4a62                	lw	s4,24(sp)
1c00a04a:	4ad2                	lw	s5,20(sp)
1c00a04c:	6145                	addi	sp,sp,48
1c00a04e:	8082                	ret
1c00a050:	02042a83          	lw	s5,32(s0)
1c00a054:	040a8493          	addi	s1,s5,64
1c00a058:	04da                	slli	s1,s1,0x16
1c00a05a:	009987b3          	add	a5,s3,s1
  pool->first_call_fc_for_cl = NULL;
1c00a05e:	0007a023          	sw	zero,0(a5)
  pool->first_call_fc = NULL;
1c00a062:	0007a223          	sw	zero,4(a5)
  pool->last_call_fc = NULL;
1c00a066:	0007a423          	sw	zero,8(a5)
  __rt_cluster_fc_task_lock = 0;
1c00a06a:	100007b7          	lui	a5,0x10000
1c00a06e:	0007ae23          	sw	zero,28(a5) # 1000001c <__rt_cluster_fc_task_lock>
  return __rt_platform;
1c00a072:	1c00d7b7          	lui	a5,0x1c00d
    if (rt_platform() != ARCHI_PLATFORM_FPGA)
1c00a076:	4387a783          	lw	a5,1080(a5) # 1c00d438 <__rt_platform>
1c00a07a:	0017af63          	p.beqimm	a5,1,1c00a098 <__rt_cluster_mount_step+0xaa>
      int init_freq = __rt_fll_init(__RT_FLL_CL);
1c00a07e:	4505                	li	a0,1
1c00a080:	e8dff0ef          	jal	ra,1c009f0c <__rt_fll_init>

  #if defined(FLL_VERSION)

  static inline int rt_freq_get(rt_freq_domain_e domain)
  {
    return __rt_freq_domains[domain];
1c00a084:	1c00e7b7          	lui	a5,0x1c00e
1c00a088:	92c78793          	addi	a5,a5,-1748 # 1c00d92c <__rt_freq_domains>
1c00a08c:	43cc                	lw	a1,4(a5)
      if (freq)
1c00a08e:	c9b1                	beqz	a1,1c00a0e2 <__rt_cluster_mount_step+0xf4>
    return rt_freq_set_and_get(domain, freq, NULL);
1c00a090:	4601                	li	a2,0
1c00a092:	4505                	li	a0,1
1c00a094:	82bff0ef          	jal	ra,1c0098be <rt_freq_set_and_get>
    IP_WRITE(ARCHI_CLUSTER_PERIPHERALS_GLOBAL_ADDR(cid), ARCHI_CLUSTER_CTRL_CLUSTER_CLK_GATE, 1);
1c00a098:	00200937          	lui	s2,0x200
1c00a09c:	01248733          	add	a4,s1,s2
1c00a0a0:	4785                	li	a5,1
1c00a0a2:	02f72023          	sw	a5,32(a4)
    __rt_init_cluster_data(cid);
1c00a0a6:	8556                	mv	a0,s5
1c00a0a8:	e81ff0ef          	jal	ra,1c009f28 <__rt_init_cluster_data>
    __rt_alloc_init_l1(cid);
1c00a0ac:	8556                	mv	a0,s5
1c00a0ae:	abaff0ef          	jal	ra,1c009368 <__rt_alloc_init_l1>
  pulp_write32(ARCHI_CLUSTER_PERIPHERALS_GLOBAL_ADDR(cid) + ARCHI_ICACHE_CTRL_OFFSET, 0xFFFFFFFF);
1c00a0b2:	002017b7          	lui	a5,0x201
1c00a0b6:	40078793          	addi	a5,a5,1024 # 201400 <__L2+0x181400>
1c00a0ba:	577d                	li	a4,-1
1c00a0bc:	04090913          	addi	s2,s2,64 # 200040 <__L2+0x180040>
1c00a0c0:	00e4e7a3          	p.sw	a4,a5(s1)
1c00a0c4:	9926                	add	s2,s2,s1
1c00a0c6:	008250fb          	lp.setupi	x1,8,1c00a0ce <__rt_cluster_mount_step+0xe0>
  pulp_write32(ARCHI_CLUSTER_PERIPHERALS_GLOBAL_ADDR(cid) + ARCHI_CLUSTER_CTRL_OFFSET + 0x40 + core*4, bootAddr);
1c00a0ca:	0149222b          	p.sw	s4,4(s2!)
1c00a0ce:	0001                	nop
  pulp_write32(ARCHI_CLUSTER_PERIPHERALS_GLOBAL_ADDR(cid) + ARCHI_CLUSTER_CTRL_OFFSET + EOC_FETCH_OFFSET, mask);
1c00a0d0:	002007b7          	lui	a5,0x200
1c00a0d4:	07a1                	addi	a5,a5,8
1c00a0d6:	0ff00713          	li	a4,255
1c00a0da:	00e4e7a3          	p.sw	a4,a5(s1)
    switch (cluster->state)
1c00a0de:	4781                	li	a5,0
1c00a0e0:	bf99                	j	1c00a036 <__rt_cluster_mount_step+0x48>
    __rt_freq_domains[domain] = freq;
1c00a0e2:	c3c8                	sw	a0,4(a5)
1c00a0e4:	bf55                	j	1c00a098 <__rt_cluster_mount_step+0xaa>
        __rt_event_restore(cluster->mount_event);
1c00a0e6:	505c                	lw	a5,36(s0)
  event->implem.pending = event->implem.saved_pending;
1c00a0e8:	5bd8                	lw	a4,52(a5)
1c00a0ea:	d3d8                	sw	a4,36(a5)
  event->arg[0] = (uintptr_t)event->implem.saved_callback;
1c00a0ec:	57d8                	lw	a4,44(a5)
1c00a0ee:	c3d8                	sw	a4,4(a5)
  event->arg[1] = (uintptr_t)event->implem.saved_arg;
1c00a0f0:	5b98                	lw	a4,48(a5)
1c00a0f2:	c798                	sw	a4,8(a5)
  event->implem.saved_pending = 0;
1c00a0f4:	0207aa23          	sw	zero,52(a5) # 200034 <__L2+0x180034>
        __rt_event_enqueue(cluster->mount_event);
1c00a0f8:	505c                	lw	a5,36(s0)
  if (sched->first) {
1c00a0fa:	01c02603          	lw	a2,28(zero) # 1c <_l1_preload_size>
1c00a0fe:	01c00693          	li	a3,28
  event->next = NULL;
1c00a102:	0007a023          	sw	zero,0(a5)
  if (sched->first) {
1c00a106:	c611                	beqz	a2,1c00a112 <__rt_cluster_mount_step+0x124>
    sched->last->next = event;
1c00a108:	42d8                	lw	a4,4(a3)
1c00a10a:	c31c                	sw	a5,0(a4)
  sched->last = event;
1c00a10c:	c2dc                	sw	a5,4(a3)
        end = 1;
1c00a10e:	4785                	li	a5,1
1c00a110:	b71d                	j	1c00a036 <__rt_cluster_mount_step+0x48>
    sched->first = event;
1c00a112:	00f02e23          	sw	a5,28(zero) # 1c <_l1_preload_size>
1c00a116:	bfdd                	j	1c00a10c <__rt_cluster_mount_step+0x11e>

1c00a118 <pi_cluster_conf_init>:
  conf->id = 0;
1c00a118:	00052223          	sw	zero,4(a0)
}
1c00a11c:	8082                	ret

1c00a11e <pi_cluster_open>:
{
1c00a11e:	1101                	addi	sp,sp,-32
1c00a120:	ce06                	sw	ra,28(sp)
1c00a122:	cc22                	sw	s0,24(sp)
1c00a124:	ca26                	sw	s1,20(sp)
1c00a126:	c84a                	sw	s2,16(sp)
1c00a128:	c64e                	sw	s3,12(sp)
  return __builtin_pulp_read_then_spr_bit_clr(reg, val);
1c00a12a:	30047973          	csrrci	s2,mstatus,8
  struct pi_cluster_conf *conf = (struct pi_cluster_conf *)cluster_dev->config;
1c00a12e:	00452983          	lw	s3,4(a0)
  cluster_dev->data = (void *)&__rt_fc_cluster_data[cid];
1c00a132:	1c00e4b7          	lui	s1,0x1c00e
1c00a136:	02800793          	li	a5,40
  int cid = conf->id;
1c00a13a:	0049a703          	lw	a4,4(s3)
  cluster_dev->data = (void *)&__rt_fc_cluster_data[cid];
1c00a13e:	93c48493          	addi	s1,s1,-1732 # 1c00d93c <__rt_fc_cluster_data>
1c00a142:	42f704b3          	p.mac	s1,a4,a5
1c00a146:	c504                	sw	s1,8(a0)
  rt_event_t *event = __rt_wait_event_prepare_blocking();
1c00a148:	f59fe0ef          	jal	ra,1c0090a0 <__rt_wait_event_prepare_blocking>
  if (rt_is_fc() || (cid && !rt_has_fc()))
1c00a14c:	02000713          	li	a4,32
  asm("csrr %0, 0x014" : "=r" (hart_id) : );
1c00a150:	014027f3          	csrr	a5,uhartid
  return (hart_id >> 5) & 0x3f;
1c00a154:	ca5797b3          	p.extractu	a5,a5,5,5
  rt_event_t *event = __rt_wait_event_prepare_blocking();
1c00a158:	842a                	mv	s0,a0
  if (rt_is_fc() || (cid && !rt_has_fc()))
1c00a15a:	04e79563          	bne	a5,a4,1c00a1a4 <pi_cluster_open+0x86>
  event->implem.saved_pending = event->implem.pending;
1c00a15e:	515c                	lw	a5,36(a0)
    cluster->state = RT_CLUSTER_MOUNT_START;
1c00a160:	0004ae23          	sw	zero,28(s1)
    cluster->mount_event = event;
1c00a164:	d0c8                	sw	a0,36(s1)
1c00a166:	d95c                	sw	a5,52(a0)
  event->implem.saved_callback = (void (*)(void *))event->arg[0];
1c00a168:	415c                	lw	a5,4(a0)
  event->implem.keep = 0;
1c00a16a:	02052423          	sw	zero,40(a0)
  event->implem.saved_callback = (void (*)(void *))event->arg[0];
1c00a16e:	d55c                	sw	a5,44(a0)
  event->implem.saved_arg = (void *)event->arg[1];
1c00a170:	451c                	lw	a5,8(a0)
  event->arg[1] = (uintptr_t)arg;
1c00a172:	c504                	sw	s1,8(a0)
  event->implem.saved_arg = (void *)event->arg[1];
1c00a174:	d91c                	sw	a5,48(a0)
  event->arg[0] = (uintptr_t)callback;
1c00a176:	1c00a7b7          	lui	a5,0x1c00a
1c00a17a:	fee78793          	addi	a5,a5,-18 # 1c009fee <__rt_cluster_mount_step>
1c00a17e:	c15c                	sw	a5,4(a0)
  event->implem.pending = 1;  
1c00a180:	4785                	li	a5,1
1c00a182:	d15c                	sw	a5,36(a0)
    __rt_cluster_mount_step((void *)cluster);
1c00a184:	8526                	mv	a0,s1
1c00a186:	e69ff0ef          	jal	ra,1c009fee <__rt_cluster_mount_step>
  __rt_wait_event(event);
1c00a18a:	8522                	mv	a0,s0
1c00a18c:	866ff0ef          	jal	ra,1c0091f2 <__rt_wait_event>
  __builtin_pulp_spr_write(reg, val);
1c00a190:	30091073          	csrw	mstatus,s2
}
1c00a194:	40f2                	lw	ra,28(sp)
1c00a196:	4462                	lw	s0,24(sp)
1c00a198:	44d2                	lw	s1,20(sp)
1c00a19a:	4942                	lw	s2,16(sp)
1c00a19c:	49b2                	lw	s3,12(sp)
1c00a19e:	4501                	li	a0,0
1c00a1a0:	6105                	addi	sp,sp,32
1c00a1a2:	8082                	ret
  if (__rt_cluster_mount(&__rt_fc_cluster_data[cid], conf->id, 0, event))
1c00a1a4:	0049a483          	lw	s1,4(s3)
    __rt_init_cluster_data(cid);
1c00a1a8:	8526                	mv	a0,s1
1c00a1aa:	d7fff0ef          	jal	ra,1c009f28 <__rt_init_cluster_data>
1c00a1ae:	04048513          	addi	a0,s1,64
1c00a1b2:	002017b7          	lui	a5,0x201
1c00a1b6:	055a                	slli	a0,a0,0x16
1c00a1b8:	40078793          	addi	a5,a5,1024 # 201400 <__L2+0x181400>
1c00a1bc:	577d                	li	a4,-1
1c00a1be:	00e567a3          	p.sw	a4,a5(a0)
1c00a1c2:	002007b7          	lui	a5,0x200
      plp_ctrl_core_bootaddr_set_remote(cid, i, ((int)_start) & 0xffffff00);
1c00a1c6:	1c000737          	lui	a4,0x1c000
1c00a1ca:	04478793          	addi	a5,a5,68 # 200044 <__L2+0x180044>
1c00a1ce:	08070713          	addi	a4,a4,128 # 1c000080 <_start>
1c00a1d2:	97aa                	add	a5,a5,a0
1c00a1d4:	ce073733          	p.bclr	a4,a4,7,0
1c00a1d8:	007250fb          	lp.setupi	x1,7,1c00a1e0 <pi_cluster_open+0xc2>
  pulp_write32(ARCHI_CLUSTER_PERIPHERALS_GLOBAL_ADDR(cid) + ARCHI_CLUSTER_CTRL_OFFSET + 0x40 + core*4, bootAddr);
1c00a1dc:	00e7a22b          	p.sw	a4,4(a5!)
1c00a1e0:	0001                	nop
  pulp_write32(ARCHI_CLUSTER_PERIPHERALS_GLOBAL_ADDR(cid) + ARCHI_CLUSTER_CTRL_OFFSET + EOC_FETCH_OFFSET, mask);
1c00a1e2:	002007b7          	lui	a5,0x200
1c00a1e6:	07a1                	addi	a5,a5,8
1c00a1e8:	577d                	li	a4,-1
1c00a1ea:	00e567a3          	p.sw	a4,a5(a0)
    rt_event_push(event);
1c00a1ee:	8522                	mv	a0,s0
1c00a1f0:	f7bfe0ef          	jal	ra,1c00916a <rt_event_push>
1c00a1f4:	bf59                	j	1c00a18a <pi_cluster_open+0x6c>

1c00a1f6 <pi_cluster_close>:
  __rt_cluster_unmount(data->cid, 0, NULL);
1c00a1f6:	451c                	lw	a5,8(a0)
{
1c00a1f8:	1101                	addi	sp,sp,-32
1c00a1fa:	cc22                	sw	s0,24(sp)
  __rt_cluster_unmount(data->cid, 0, NULL);
1c00a1fc:	5380                	lw	s0,32(a5)
1c00a1fe:	1c00d7b7          	lui	a5,0x1c00d
    if (rt_platform() != ARCHI_PLATFORM_FPGA)
1c00a202:	4387a783          	lw	a5,1080(a5) # 1c00d438 <__rt_platform>
{
1c00a206:	ce06                	sw	ra,28(sp)
    if (rt_platform() != ARCHI_PLATFORM_FPGA)
1c00a208:	0017a563          	p.beqimm	a5,1,1c00a212 <pi_cluster_close+0x1c>
      __rt_fll_deinit(__RT_FLL_CL);
1c00a20c:	4505                	li	a0,1
1c00a20e:	d11ff0ef          	jal	ra,1c009f1e <__rt_fll_deinit>
    int pending = 0;
1c00a212:	c602                	sw	zero,12(sp)
  if (cid == 0) __rt_pmu_cluster_power_down(event, &pending);
1c00a214:	e409                	bnez	s0,1c00a21e <pi_cluster_close+0x28>
1c00a216:	006c                	addi	a1,sp,12
1c00a218:	4501                	li	a0,0
1c00a21a:	815ff0ef          	jal	ra,1c009a2e <__rt_pmu_cluster_power_down>
}
1c00a21e:	40f2                	lw	ra,28(sp)
1c00a220:	4462                	lw	s0,24(sp)
1c00a222:	4501                	li	a0,0
1c00a224:	6105                	addi	sp,sp,32
1c00a226:	8082                	ret

1c00a228 <__rt_cluster_push_fc_event>:
  while (rt_tas_lock_32((int)&__rt_cluster_fc_task_lock) == -1)
1c00a228:	100006b7          	lui	a3,0x10000
1c00a22c:	01c68693          	addi	a3,a3,28 # 1000001c <__rt_cluster_fc_task_lock>
  return addr | (1<<ARCHI_L1_TAS_BIT);
1c00a230:	c146c5b3          	p.bset	a1,a3,0,20
  ARCHI_WRITE(ARCHI_EU_DEMUX_ADDR, EU_CORE_MASK_OR, evtMask);
1c00a234:	4709                	li	a4,2
1c00a236:	002047b7          	lui	a5,0x204
  signed int result = *(volatile signed int *)__rt_tas_addr(addr);
1c00a23a:	4190                	lw	a2,0(a1)
1c00a23c:	05f62063          	p.beqimm	a2,-1,1c00a27c <__rt_cluster_push_fc_event+0x54>
  asm("csrr %0, 0x014" : "=r" (hart_id) : );
1c00a240:	01402773          	csrr	a4,uhartid
  while(data->events != NULL)
1c00a244:	1c00e7b7          	lui	a5,0x1c00e
  return (hart_id >> 5) & 0x3f;
1c00a248:	8715                	srai	a4,a4,0x5
1c00a24a:	f2673733          	p.bclr	a4,a4,25,6
1c00a24e:	02800613          	li	a2,40
1c00a252:	93c78793          	addi	a5,a5,-1732 # 1c00d93c <__rt_fc_cluster_data>
1c00a256:	42c707b3          	p.mac	a5,a4,a2
1c00a25a:	4609                	li	a2,2
1c00a25c:	00204737          	lui	a4,0x204
1c00a260:	43cc                	lw	a1,4(a5)
1c00a262:	e585                	bnez	a1,1c00a28a <__rt_cluster_push_fc_event+0x62>
  data->events = event;
1c00a264:	c3c8                	sw	a0,4(a5)
  pulp_write32(evtAddr, coreSet);
1c00a266:	1b2017b7          	lui	a5,0x1b201
1c00a26a:	e007a223          	sw	zero,-508(a5) # 1b200e04 <__fc_tcdm_end+0x1ffa34>
  *(volatile signed int *)addr = value;
1c00a26e:	0006a023          	sw	zero,0(a3)
1c00a272:	002047b7          	lui	a5,0x204
1c00a276:	1007a223          	sw	zero,260(a5) # 204104 <__L2+0x184104>
}
1c00a27a:	8082                	ret
  ARCHI_WRITE(ARCHI_EU_DEMUX_ADDR, EU_CORE_MASK_OR, evtMask);
1c00a27c:	00e7a423          	sw	a4,8(a5)
  value = __builtin_pulp_event_unit_read_fenced((int *)base, offset);
1c00a280:	03c7e603          	p.elw	a2,60(a5)
  ARCHI_WRITE(ARCHI_EU_DEMUX_ADDR, EU_CORE_MASK_AND, evtMask);
1c00a284:	00e7a223          	sw	a4,4(a5)
1c00a288:	bf4d                	j	1c00a23a <__rt_cluster_push_fc_event+0x12>
  ARCHI_WRITE(ARCHI_EU_DEMUX_ADDR, EU_CORE_MASK_OR, evtMask);
1c00a28a:	00c72423          	sw	a2,8(a4) # 204008 <__L2+0x184008>
  value = __builtin_pulp_event_unit_read_fenced((int *)base, offset);
1c00a28e:	03c76583          	p.elw	a1,60(a4)
  ARCHI_WRITE(ARCHI_EU_DEMUX_ADDR, EU_CORE_MASK_AND, evtMask);
1c00a292:	00c72223          	sw	a2,4(a4)
1c00a296:	b7e9                	j	1c00a260 <__rt_cluster_push_fc_event+0x38>

1c00a298 <__rt_cluster_new>:
  err |= __rt_cbsys_add(RT_CBSYS_START, __rt_cluster_init, NULL);
1c00a298:	1c00a5b7          	lui	a1,0x1c00a
{
1c00a29c:	1141                	addi	sp,sp,-16
  err |= __rt_cbsys_add(RT_CBSYS_START, __rt_cluster_init, NULL);
1c00a29e:	4601                	li	a2,0
1c00a2a0:	f8a58593          	addi	a1,a1,-118 # 1c009f8a <__rt_cluster_init>
1c00a2a4:	4501                	li	a0,0
{
1c00a2a6:	c606                	sw	ra,12(sp)
  err |= __rt_cbsys_add(RT_CBSYS_START, __rt_cluster_init, NULL);
1c00a2a8:	9d7fe0ef          	jal	ra,1c008c7e <__rt_cbsys_add>
  if (err) rt_fatal("Unable to initialize time driver\n");
1c00a2ac:	c10d                	beqz	a0,1c00a2ce <__rt_cluster_new+0x36>
  asm("csrr %0, 0x014" : "=r" (hart_id) : );
1c00a2ae:	01402673          	csrr	a2,uhartid
1c00a2b2:	1c00d537          	lui	a0,0x1c00d
  return (hart_id >> 5) & 0x3f;
1c00a2b6:	40565593          	srai	a1,a2,0x5
1c00a2ba:	f265b5b3          	p.bclr	a1,a1,25,6
1c00a2be:	f4563633          	p.bclr	a2,a2,26,5
1c00a2c2:	09850513          	addi	a0,a0,152 # 1c00d098 <__clz_tab+0x680>
1c00a2c6:	462010ef          	jal	ra,1c00b728 <printf>
1c00a2ca:	3e2010ef          	jal	ra,1c00b6ac <abort>
}
1c00a2ce:	40b2                	lw	ra,12(sp)
1c00a2d0:	0141                	addi	sp,sp,16
1c00a2d2:	8082                	ret

1c00a2d4 <__rt_cluster_pulpos_emu_init>:
static struct pi_device *__rt_fc_cluster_device;
static struct pi_cluster_task __rt_pulpos_emu_global_cluster_task;


static void __attribute__((constructor)) __rt_cluster_pulpos_emu_init()
{
1c00a2d4:	1141                	addi	sp,sp,-16
  int nb_cluster = rt_nb_cluster();

  __rt_fc_cluster_device = rt_alloc(RT_ALLOC_FC_DATA, sizeof(struct pi_device)*nb_cluster);
1c00a2d6:	45b1                	li	a1,12
1c00a2d8:	4505                	li	a0,1
{
1c00a2da:	c606                	sw	ra,12(sp)
  __rt_fc_cluster_device = rt_alloc(RT_ALLOC_FC_DATA, sizeof(struct pi_device)*nb_cluster);
1c00a2dc:	82eff0ef          	jal	ra,1c00930a <rt_alloc>
1c00a2e0:	1c00e7b7          	lui	a5,0x1c00e
1c00a2e4:	8ea7aa23          	sw	a0,-1804(a5) # 1c00d8f4 <__rt_fc_cluster_device>
  if (__rt_fc_cluster_device == NULL) {
1c00a2e8:	e10d                	bnez	a0,1c00a30a <__rt_cluster_pulpos_emu_init+0x36>
  asm("csrr %0, 0x014" : "=r" (hart_id) : );
1c00a2ea:	01402673          	csrr	a2,uhartid
    rt_fatal("Unable to allocate cluster control structure\n");
1c00a2ee:	1c00d537          	lui	a0,0x1c00d
  return (hart_id >> 5) & 0x3f;
1c00a2f2:	40565593          	srai	a1,a2,0x5
1c00a2f6:	f265b5b3          	p.bclr	a1,a1,25,6
1c00a2fa:	f4563633          	p.bclr	a2,a2,26,5
1c00a2fe:	0e050513          	addi	a0,a0,224 # 1c00d0e0 <__clz_tab+0x6c8>
1c00a302:	426010ef          	jal	ra,1c00b728 <printf>
1c00a306:	3a6010ef          	jal	ra,1c00b6ac <abort>
    return;
  }
}
1c00a30a:	40b2                	lw	ra,12(sp)
1c00a30c:	0141                	addi	sp,sp,16
1c00a30e:	8082                	ret

1c00a310 <rt_cluster_call>:

int rt_cluster_call(rt_cluster_call_t *_call, int cid, void (*entry)(void *arg), void *arg, void *stacks, int master_stack_size, int slave_stack_size, int nb_pe, rt_event_t *event)
{
1c00a310:	7139                	addi	sp,sp,-64
1c00a312:	d84a                	sw	s2,48(sp)
1c00a314:	4906                	lw	s2,64(sp)
1c00a316:	dc22                	sw	s0,56(sp)
1c00a318:	842e                	mv	s0,a1
1c00a31a:	de06                	sw	ra,60(sp)
1c00a31c:	da26                	sw	s1,52(sp)
1c00a31e:	d64e                	sw	s3,44(sp)
  return __builtin_pulp_read_then_spr_bit_clr(reg, val);
1c00a320:	300479f3          	csrrci	s3,mstatus,8
  __asm__ __volatile__ ("" : : : "memory");
1c00a324:	84ca                	mv	s1,s2
  if (likely(event != NULL)) return event;
1c00a326:	02091163          	bnez	s2,1c00a348 <rt_cluster_call+0x38>
  return __rt_wait_event_prepare_blocking();
1c00a32a:	ce32                	sw	a2,28(sp)
1c00a32c:	cc36                	sw	a3,24(sp)
1c00a32e:	ca3a                	sw	a4,20(sp)
1c00a330:	c83e                	sw	a5,16(sp)
1c00a332:	c642                	sw	a6,12(sp)
1c00a334:	c446                	sw	a7,8(sp)
1c00a336:	d6bfe0ef          	jal	ra,1c0090a0 <__rt_wait_event_prepare_blocking>
1c00a33a:	48a2                	lw	a7,8(sp)
1c00a33c:	4832                	lw	a6,12(sp)
1c00a33e:	47c2                	lw	a5,16(sp)
1c00a340:	4752                	lw	a4,20(sp)
1c00a342:	46e2                	lw	a3,24(sp)
1c00a344:	4672                	lw	a2,28(sp)
1c00a346:	84aa                	mv	s1,a0
static inline struct pi_cluster_task *pi_cluster_task(struct pi_cluster_task *task, void (*entry)(void*), void *arg)
{
    #if defined(PMSIS_DRIVERS)
    memset(task, 0, sizeof(struct pi_cluster_task));
    #endif  /* PMSIS_DRIVERS */
    task->entry = entry;
1c00a348:	1c00d5b7          	lui	a1,0x1c00d
1c00a34c:	6ec58513          	addi	a0,a1,1772 # 1c00d6ec <__rt_pulpos_emu_global_cluster_task>
  struct pi_cluster_task *task = &__rt_pulpos_emu_global_cluster_task;

  pi_cluster_task(task, entry, arg);

  task->stacks = stacks;
  task->stack_size = master_stack_size;
1c00a350:	c55c                	sw	a5,12(a0)
  task->slave_stack_size = slave_stack_size;
  task->nb_cores = nb_pe;

  if (pi_cluster_send_task_to_cl_async(&__rt_fc_cluster_device[cid], task, call_event))
1c00a352:	1c00e7b7          	lui	a5,0x1c00e
1c00a356:	c110                	sw	a2,0(a0)
    task->arg = arg;
1c00a358:	c154                	sw	a3,4(a0)
  task->stacks = stacks;
1c00a35a:	c518                	sw	a4,8(a0)
  task->slave_stack_size = slave_stack_size;
1c00a35c:	01052823          	sw	a6,16(a0)
  task->nb_cores = nb_pe;
1c00a360:	01152a23          	sw	a7,20(a0)
  if (pi_cluster_send_task_to_cl_async(&__rt_fc_cluster_device[cid], task, call_event))
1c00a364:	8f47a503          	lw	a0,-1804(a5) # 1c00d8f4 <__rt_fc_cluster_device>
1c00a368:	47b1                	li	a5,12
1c00a36a:	8626                	mv	a2,s1
1c00a36c:	42f40533          	p.mac	a0,s0,a5
1c00a370:	6ec58593          	addi	a1,a1,1772
1c00a374:	2061                	jal	1c00a3fc <pi_cluster_send_task_to_cl_async>
1c00a376:	842a                	mv	s0,a0
1c00a378:	cd01                	beqz	a0,1c00a390 <rt_cluster_call+0x80>
  __builtin_pulp_spr_write(reg, val);
1c00a37a:	30099073          	csrw	mstatus,s3
  {
  	rt_irq_restore(irq);
  	return -1;
1c00a37e:	547d                	li	s0,-1
  __rt_wait_event_check(event, call_event);

  rt_irq_restore(irq);

  return 0;
}
1c00a380:	8522                	mv	a0,s0
1c00a382:	50f2                	lw	ra,60(sp)
1c00a384:	5462                	lw	s0,56(sp)
1c00a386:	54d2                	lw	s1,52(sp)
1c00a388:	5942                	lw	s2,48(sp)
1c00a38a:	59b2                	lw	s3,44(sp)
1c00a38c:	6121                	addi	sp,sp,64
1c00a38e:	8082                	ret
  if (event == NULL) __rt_wait_event(call_event);
1c00a390:	00091563          	bnez	s2,1c00a39a <rt_cluster_call+0x8a>
1c00a394:	8526                	mv	a0,s1
1c00a396:	e5dfe0ef          	jal	ra,1c0091f2 <__rt_wait_event>
1c00a39a:	30099073          	csrw	mstatus,s3
  return 0;
1c00a39e:	b7cd                	j	1c00a380 <rt_cluster_call+0x70>

1c00a3a0 <rt_cluster_mount>:

void rt_cluster_mount(int mount, int cid, int flags, rt_event_t *event)
{
1c00a3a0:	7139                	addi	sp,sp,-64
1c00a3a2:	dc22                	sw	s0,56(sp)
1c00a3a4:	da26                	sw	s1,52(sp)
1c00a3a6:	d84a                	sw	s2,48(sp)
1c00a3a8:	4431                	li	s0,12
1c00a3aa:	1c00e4b7          	lui	s1,0x1c00e
1c00a3ae:	de06                	sw	ra,60(sp)
1c00a3b0:	d64e                	sw	s3,44(sp)
1c00a3b2:	8936                	mv	s2,a3
1c00a3b4:	02858433          	mul	s0,a1,s0
1c00a3b8:	8f448493          	addi	s1,s1,-1804 # 1c00d8f4 <__rt_fc_cluster_device>
  if (mount)
1c00a3bc:	c91d                	beqz	a0,1c00a3f2 <rt_cluster_mount+0x52>
  {
    struct pi_cluster_conf conf;
    pi_cluster_conf_init(&conf);
1c00a3be:	0028                	addi	a0,sp,8
1c00a3c0:	89ae                	mv	s3,a1
1c00a3c2:	d57ff0ef          	jal	ra,1c00a118 <pi_cluster_conf_init>
    pi_open_from_conf(&__rt_fc_cluster_device[cid], &conf);
1c00a3c6:	4088                	lw	a0,0(s1)
1c00a3c8:	002c                	addi	a1,sp,8
1c00a3ca:	9522                	add	a0,a0,s0
1c00a3cc:	f42fe0ef          	jal	ra,1c008b0e <pi_open_from_conf>
    conf.id = cid;
    pi_cluster_open(&__rt_fc_cluster_device[cid]);
1c00a3d0:	4088                	lw	a0,0(s1)
    conf.id = cid;
1c00a3d2:	c64e                	sw	s3,12(sp)
    pi_cluster_open(&__rt_fc_cluster_device[cid]);
1c00a3d4:	9522                	add	a0,a0,s0
1c00a3d6:	d49ff0ef          	jal	ra,1c00a11e <pi_cluster_open>
  else
  {
    pi_cluster_close(&__rt_fc_cluster_device[cid]);
  }

  if (event)
1c00a3da:	00090563          	beqz	s2,1c00a3e4 <rt_cluster_mount+0x44>
    rt_event_push(event);
1c00a3de:	854a                	mv	a0,s2
1c00a3e0:	d8bfe0ef          	jal	ra,1c00916a <rt_event_push>
}
1c00a3e4:	50f2                	lw	ra,60(sp)
1c00a3e6:	5462                	lw	s0,56(sp)
1c00a3e8:	54d2                	lw	s1,52(sp)
1c00a3ea:	5942                	lw	s2,48(sp)
1c00a3ec:	59b2                	lw	s3,44(sp)
1c00a3ee:	6121                	addi	sp,sp,64
1c00a3f0:	8082                	ret
    pi_cluster_close(&__rt_fc_cluster_device[cid]);
1c00a3f2:	4088                	lw	a0,0(s1)
1c00a3f4:	9522                	add	a0,a0,s0
1c00a3f6:	e01ff0ef          	jal	ra,1c00a1f6 <pi_cluster_close>
1c00a3fa:	b7c5                	j	1c00a3da <rt_cluster_mount+0x3a>

1c00a3fc <pi_cluster_send_task_to_cl_async>:
  }
}
#endif

int pi_cluster_send_task_to_cl_async(struct pi_device *device, struct pi_cluster_task *task, pi_task_t *async_task)
{
1c00a3fc:	1101                	addi	sp,sp,-32
1c00a3fe:	ca26                	sw	s1,20(sp)
  rt_fc_cluster_data_t *data = (rt_fc_cluster_data_t *)device->data;
1c00a400:	4504                	lw	s1,8(a0)
{
1c00a402:	cc22                	sw	s0,24(sp)
1c00a404:	c256                	sw	s5,4(sp)
1c00a406:	842e                	mv	s0,a1
1c00a408:	8ab2                	mv	s5,a2
1c00a40a:	ce06                	sw	ra,28(sp)
1c00a40c:	c84a                	sw	s2,16(sp)
1c00a40e:	c64e                	sw	s3,12(sp)
1c00a410:	c452                	sw	s4,8(sp)
  return __builtin_pulp_read_then_spr_bit_clr(reg, val);
1c00a412:	30047a73          	csrrci	s4,mstatus,8

  int lock = __rt_cluster_lock(data);

  __rt_task_init(async_task);
  
  task->implem.pending = 1;
1c00a416:	4785                	li	a5,1
  task->done = 0;
1c00a418:	00060a23          	sb	zero,20(a2)
1c00a41c:	d1dc                	sw	a5,36(a1)

  rt_cluster_call_pool_t *cl_data = data->pool;

  if (task->nb_cores == 0)
1c00a41e:	49dc                	lw	a5,20(a1)
  rt_cluster_call_pool_t *cl_data = data->pool;
1c00a420:	0144a983          	lw	s3,20(s1)
  if (task->nb_cores == 0)
1c00a424:	e399                	bnez	a5,1c00a42a <pi_cluster_send_task_to_cl_async+0x2e>
    task->nb_cores = pi_cl_cluster_nb_cores();
1c00a426:	47a1                	li	a5,8
1c00a428:	c9dc                	sw	a5,20(a1)

  if (task->stacks == NULL)
1c00a42a:	441c                	lw	a5,8(s0)
1c00a42c:	ef85                	bnez	a5,1c00a464 <pi_cluster_send_task_to_cl_async+0x68>
  {
    if (task->stack_size == 0)
1c00a42e:	445c                	lw	a5,12(s0)
1c00a430:	eb81                	bnez	a5,1c00a440 <pi_cluster_send_task_to_cl_async+0x44>
    {
      task->stack_size = 0x800;
1c00a432:	6785                	lui	a5,0x1
1c00a434:	80078793          	addi	a5,a5,-2048 # 800 <__rt_stack_size>
1c00a438:	c45c                	sw	a5,12(s0)
      task->slave_stack_size = 0x400;
1c00a43a:	40000793          	li	a5,1024
1c00a43e:	c81c                	sw	a5,16(s0)
    }

    if (task->slave_stack_size == 0)
1c00a440:	481c                	lw	a5,16(s0)
1c00a442:	00c42903          	lw	s2,12(s0)
1c00a446:	e399                	bnez	a5,1c00a44c <pi_cluster_send_task_to_cl_async+0x50>
      task->slave_stack_size = task->stack_size;
1c00a448:	01242823          	sw	s2,16(s0)

    int stacks_size = task->stack_size + task->slave_stack_size * (task->nb_cores - 1);
1c00a44c:	485c                	lw	a5,20(s0)
1c00a44e:	4818                	lw	a4,16(s0)

    if (data->stacks == NULL || stacks_size != data->stacks_size)
1c00a450:	448c                	lw	a1,8(s1)
    int stacks_size = task->stack_size + task->slave_stack_size * (task->nb_cores - 1);
1c00a452:	17fd                	addi	a5,a5,-1
1c00a454:	42e78933          	p.mac	s2,a5,a4
    if (data->stacks == NULL || stacks_size != data->stacks_size)
1c00a458:	c9b5                	beqz	a1,1c00a4cc <pi_cluster_send_task_to_cl_async+0xd0>
1c00a45a:	44d0                	lw	a2,12(s1)
1c00a45c:	05261f63          	bne	a2,s2,1c00a4ba <pi_cluster_send_task_to_cl_async+0xbe>

      if (data->stacks == NULL)
        goto error;
    }

    task->stacks = data->stacks;
1c00a460:	449c                	lw	a5,8(s1)
1c00a462:	c41c                	sw	a5,8(s0)

  task->completion_callback = async_task;
#ifdef ARCHI_HAS_CC
  task->implem.core_mask = (1<<(task->nb_cores-1)) - 1;
#else
  task->implem.core_mask = (1<<task->nb_cores) - 1;
1c00a464:	4858                	lw	a4,20(s0)
1c00a466:	4785                	li	a5,1
  task->completion_callback = async_task;
1c00a468:	01542c23          	sw	s5,24(s0)
  task->implem.core_mask = (1<<task->nb_cores) - 1;
1c00a46c:	00e797b3          	sll	a5,a5,a4
1c00a470:	17fd                	addi	a5,a5,-1
1c00a472:	d41c                	sw	a5,40(s0)
#endif

  task->next = NULL;
1c00a474:	02042023          	sw	zero,32(s0)

  rt_compiler_barrier();

  if (cl_data->last_call_fc)
1c00a478:	0089a783          	lw	a5,8(s3)
1c00a47c:	cbb5                	beqz	a5,1c00a4f0 <pi_cluster_send_task_to_cl_async+0xf4>
  {
    cl_data->last_call_fc->next = task;
1c00a47e:	d380                	sw	s0,32(a5)
  else
  {
    cl_data->first_call_fc = task;
  }

  cl_data->last_call_fc = task;
1c00a480:	0089a423          	sw	s0,8(s3)

  rt_compiler_barrier();
  
  if (cl_data->first_call_fc_for_cl == NULL)
1c00a484:	0009a783          	lw	a5,0(s3)
1c00a488:	e399                	bnez	a5,1c00a48e <pi_cluster_send_task_to_cl_async+0x92>
    cl_data->first_call_fc_for_cl = task;
1c00a48a:	0089a023          	sw	s0,0(s3)
  return ARCHI_CLUSTER_PERIPHERALS_GLOBAL_ADDR(cluster) + ARCHI_EU_OFFSET + EU_SW_EVENTS_AREA_BASE + EU_CORE_TRIGG_SW_EVENT + (event << 2);
1c00a48e:	509c                	lw	a5,32(s1)
  pulp_write32(evtAddr, coreSet);
1c00a490:	00201737          	lui	a4,0x201
1c00a494:	e0470713          	addi	a4,a4,-508 # 200e04 <__L2+0x180e04>
  return ARCHI_CLUSTER_PERIPHERALS_GLOBAL_ADDR(cluster) + ARCHI_EU_OFFSET + EU_SW_EVENTS_AREA_BASE + EU_CORE_TRIGG_SW_EVENT + (event << 2);
1c00a498:	04078793          	addi	a5,a5,64
1c00a49c:	07da                	slli	a5,a5,0x16
  pulp_write32(evtAddr, coreSet);
1c00a49e:	0007e723          	p.sw	zero,a4(a5)
  __builtin_pulp_spr_write(reg, val);
1c00a4a2:	300a1073          	csrw	mstatus,s4
  rt_compiler_barrier();
  eu_evt_trig(eu_evt_trig_cluster_addr(data->cid, RT_CLUSTER_CALL_EVT), 0);

  __rt_cluster_unlock(data, lock);

  return 0;
1c00a4a6:	4501                	li	a0,0

error:
  __rt_cluster_unlock(data, lock);
  return -1;
}
1c00a4a8:	40f2                	lw	ra,28(sp)
1c00a4aa:	4462                	lw	s0,24(sp)
1c00a4ac:	44d2                	lw	s1,20(sp)
1c00a4ae:	4942                	lw	s2,16(sp)
1c00a4b0:	49b2                	lw	s3,12(sp)
1c00a4b2:	4a22                	lw	s4,8(sp)
1c00a4b4:	4a92                	lw	s5,4(sp)
1c00a4b6:	6105                	addi	sp,sp,32
1c00a4b8:	8082                	ret

#if defined(ARCHI_HAS_L1)

extern rt_alloc_t *__rt_alloc_l1;

static inline rt_alloc_t *rt_alloc_l1(int cid) { return &__rt_alloc_l1[cid]; }
1c00a4ba:	509c                	lw	a5,32(s1)
1c00a4bc:	1c00e737          	lui	a4,0x1c00e
1c00a4c0:	91c72503          	lw	a0,-1764(a4) # 1c00d91c <__rt_alloc_l1>
1c00a4c4:	078a                	slli	a5,a5,0x2
        rt_user_free(rt_alloc_l1(data->cid), data->stacks, data->stacks_size);
1c00a4c6:	953e                	add	a0,a0,a5
1c00a4c8:	df7fe0ef          	jal	ra,1c0092be <rt_user_free>
1c00a4cc:	509c                	lw	a5,32(s1)
1c00a4ce:	1c00e737          	lui	a4,0x1c00e
1c00a4d2:	91c72503          	lw	a0,-1764(a4) # 1c00d91c <__rt_alloc_l1>
1c00a4d6:	078a                	slli	a5,a5,0x2
      data->stacks_size = stacks_size;
1c00a4d8:	0124a623          	sw	s2,12(s1)
      data->stacks = rt_user_alloc(rt_alloc_l1(data->cid), stacks_size);
1c00a4dc:	85ca                	mv	a1,s2
1c00a4de:	953e                	add	a0,a0,a5
1c00a4e0:	d97fe0ef          	jal	ra,1c009276 <rt_user_alloc>
1c00a4e4:	c488                	sw	a0,8(s1)
      if (data->stacks == NULL)
1c00a4e6:	fd2d                	bnez	a0,1c00a460 <pi_cluster_send_task_to_cl_async+0x64>
1c00a4e8:	300a1073          	csrw	mstatus,s4
  return -1;
1c00a4ec:	557d                	li	a0,-1
1c00a4ee:	bf6d                	j	1c00a4a8 <pi_cluster_send_task_to_cl_async+0xac>
    cl_data->first_call_fc = task;
1c00a4f0:	0089a223          	sw	s0,4(s3)
1c00a4f4:	b771                	j	1c00a480 <pi_cluster_send_task_to_cl_async+0x84>

1c00a4f6 <pi_cluster_send_task_to_cl>:



int pi_cluster_send_task_to_cl(struct pi_device *device, struct pi_cluster_task *task)
{
1c00a4f6:	7175                	addi	sp,sp,-144
  task->id = PI_TASK_NONE_ID;
1c00a4f8:	4785                	li	a5,1
  pi_task_t fc_task;

  pi_task_block(&fc_task);

  if (pi_cluster_send_task_to_cl_async(device, task, &fc_task))
1c00a4fa:	860a                	mv	a2,sp
{
1c00a4fc:	c522                	sw	s0,136(sp)
1c00a4fe:	c706                	sw	ra,140(sp)
1c00a500:	c326                	sw	s1,132(sp)
1c00a502:	c14a                	sw	s2,128(sp)
1c00a504:	cc3e                	sw	a5,24(sp)
  task->arg[0] = (uint32_t)0;
1c00a506:	c202                	sw	zero,4(sp)
  task->implem.keep = 1;
1c00a508:	d43e                	sw	a5,40(sp)
1c00a50a:	00010a23          	sb	zero,20(sp)
  if (pi_cluster_send_task_to_cl_async(device, task, &fc_task))
1c00a50e:	eefff0ef          	jal	ra,1c00a3fc <pi_cluster_send_task_to_cl_async>
  {
    return -1;
1c00a512:	547d                	li	s0,-1
  if (pi_cluster_send_task_to_cl_async(device, task, &fc_task))
1c00a514:	e509                	bnez	a0,1c00a51e <pi_cluster_send_task_to_cl+0x28>
1c00a516:	842a                	mv	s0,a0
  while(!task->done)
1c00a518:	01410783          	lb	a5,20(sp)
1c00a51c:	cb81                	beqz	a5,1c00a52c <pi_cluster_send_task_to_cl+0x36>
  }

  pi_task_wait_on(&fc_task);

  return 0;
}
1c00a51e:	8522                	mv	a0,s0
1c00a520:	40ba                	lw	ra,140(sp)
1c00a522:	442a                	lw	s0,136(sp)
1c00a524:	449a                	lw	s1,132(sp)
1c00a526:	490a                	lw	s2,128(sp)
1c00a528:	6149                	addi	sp,sp,144
1c00a52a:	8082                	ret
  return __builtin_pulp_read_then_spr_bit_clr(reg, val);
1c00a52c:	30047973          	csrrci	s2,mstatus,8
  __rt_event_execute(__rt_event_get_current_sched(), wait);
1c00a530:	4585                	li	a1,1
1c00a532:	01c00513          	li	a0,28
1c00a536:	c59fe0ef          	jal	ra,1c00918e <__rt_event_execute>
  __builtin_pulp_spr_write(reg, val);
1c00a53a:	30091073          	csrw	mstatus,s2
1c00a53e:	bfe9                	j	1c00a518 <pi_cluster_send_task_to_cl+0x22>

1c00a540 <pi_pad_set_function>:
  return __builtin_pulp_read_then_spr_bit_clr(reg, val);
1c00a540:	300476f3          	csrrci	a3,mstatus,8
  return pulp_read32(ARCHI_APB_SOC_CTRL_ADDR + APB_SOC_PADFUN_OFFSET(id));
1c00a544:	068417b7          	lui	a5,0x6841
  unsigned int padBit = APB_SOC_PADFUN_BIT(pad);
1c00a548:	00151713          	slli	a4,a0,0x1
  return pulp_read32(ARCHI_APB_SOC_CTRL_ADDR + APB_SOC_PADFUN_OFFSET(id));
1c00a54c:	05078793          	addi	a5,a5,80 # 6841050 <__L2+0x67c1050>
  unsigned int padfunId = APB_SOC_PADFUN_NO(pad);
1c00a550:	8111                	srli	a0,a0,0x4
  return pulp_read32(ARCHI_APB_SOC_CTRL_ADDR + APB_SOC_PADFUN_OFFSET(id));
1c00a552:	953e                	add	a0,a0,a5
1c00a554:	050a                	slli	a0,a0,0x2
  unsigned int padBit = APB_SOC_PADFUN_BIT(pad);
1c00a556:	8b79                	andi	a4,a4,30
  return pulp_read32(ARCHI_APB_SOC_CTRL_ADDR + APB_SOC_PADFUN_OFFSET(id));
1c00a558:	4110                	lw	a2,0(a0)
  unsigned int oldval = hal_apb_soc_padfun_get(padfunId) & ~(((1<<APB_SOC_PADFUN_SIZE)-1) << padBit);
1c00a55a:	478d                	li	a5,3
1c00a55c:	00e797b3          	sll	a5,a5,a4
1c00a560:	fff7c793          	not	a5,a5
1c00a564:	8ff1                	and	a5,a5,a2
  unsigned int newVal = oldval | (func << padBit);
1c00a566:	00e595b3          	sll	a1,a1,a4
1c00a56a:	8ddd                	or	a1,a1,a5
  pulp_write32(ARCHI_APB_SOC_CTRL_ADDR + APB_SOC_PADFUN_OFFSET(id), value);
1c00a56c:	c10c                	sw	a1,0(a0)
  __builtin_pulp_spr_write(reg, val);
1c00a56e:	30069073          	csrw	mstatus,a3
void pi_pad_set_function(pi_pad_e pad, pi_pad_func_e function)
{
  int irq = rt_irq_disable();
  hal_apb_soc_pad_set_function(pad, function);
  rt_irq_restore(irq);
}
1c00a572:	8082                	ret

1c00a574 <pi_pad_init>:

void pi_pad_init(uint32_t pad_values[])
{
  for (int i=0; i<ARCHI_APB_SOC_PADFUN_NB; i++)
  {
    hal_apb_soc_padfun_set(i, pad_values[i]);
1c00a574:	4114                	lw	a3,0(a0)
1c00a576:	1a1047b7          	lui	a5,0x1a104
1c00a57a:	14078713          	addi	a4,a5,320 # 1a104140 <__l1_end+0xa104120>
1c00a57e:	c314                	sw	a3,0(a4)
1c00a580:	4154                	lw	a3,4(a0)
1c00a582:	14478713          	addi	a4,a5,324
1c00a586:	14878793          	addi	a5,a5,328
1c00a58a:	c314                	sw	a3,0(a4)
1c00a58c:	4518                	lw	a4,8(a0)
1c00a58e:	c398                	sw	a4,0(a5)
  }  
}
1c00a590:	8082                	ret

1c00a592 <l2_memcpy>:
  req = __pi_hyper_cluster_reqs_first;
  if (req)
  {
    __pi_hyper_cluster_req_exec(req);
  }
}
1c00a592:	87aa                	mv	a5,a0
1c00a594:	962e                	add	a2,a2,a1
1c00a596:	00c59363          	bne	a1,a2,1c00a59c <l2_memcpy+0xa>
1c00a59a:	8082                	ret
1c00a59c:	0015c70b          	p.lbu	a4,1(a1!)
1c00a5a0:	00e780ab          	p.sb	a4,1(a5!)
1c00a5a4:	bfcd                	j	1c00a596 <l2_memcpy+0x4>

1c00a5a6 <rt_event_enqueue>:
1c00a5a6:	300476f3          	csrrci	a3,mstatus,8
1c00a5aa:	01c02603          	lw	a2,28(zero) # 1c <_l1_preload_size>
1c00a5ae:	00052023          	sw	zero,0(a0)
1c00a5b2:	01c00713          	li	a4,28
1c00a5b6:	c619                	beqz	a2,1c00a5c4 <rt_event_enqueue+0x1e>
1c00a5b8:	435c                	lw	a5,4(a4)
1c00a5ba:	c388                	sw	a0,0(a5)
1c00a5bc:	c348                	sw	a0,4(a4)
1c00a5be:	30069073          	csrw	mstatus,a3
1c00a5c2:	8082                	ret
1c00a5c4:	00a02e23          	sw	a0,28(zero) # 1c <_l1_preload_size>
1c00a5c8:	bfd5                	j	1c00a5bc <rt_event_enqueue+0x16>

1c00a5ca <pi_task_wait_on.isra.4>:
1c00a5ca:	1141                	addi	sp,sp,-16
1c00a5cc:	c422                	sw	s0,8(sp)
1c00a5ce:	c226                	sw	s1,4(sp)
1c00a5d0:	c606                	sw	ra,12(sp)
1c00a5d2:	c04a                	sw	s2,0(sp)
1c00a5d4:	842a                	mv	s0,a0
1c00a5d6:	00040783          	lb	a5,0(s0)
1c00a5da:	c799                	beqz	a5,1c00a5e8 <pi_task_wait_on.isra.4+0x1e>
1c00a5dc:	40b2                	lw	ra,12(sp)
1c00a5de:	4422                	lw	s0,8(sp)
1c00a5e0:	4492                	lw	s1,4(sp)
1c00a5e2:	4902                	lw	s2,0(sp)
1c00a5e4:	0141                	addi	sp,sp,16
1c00a5e6:	8082                	ret
1c00a5e8:	30047973          	csrrci	s2,mstatus,8
1c00a5ec:	4585                	li	a1,1
1c00a5ee:	01c00513          	li	a0,28
1c00a5f2:	b9dfe0ef          	jal	ra,1c00918e <__rt_event_execute>
1c00a5f6:	30091073          	csrw	mstatus,s2
1c00a5fa:	bff1                	j	1c00a5d6 <pi_task_wait_on.isra.4+0xc>

1c00a5fc <__pi_hyper_pin_settings>:
1c00a5fc:	1141                	addi	sp,sp,-16
1c00a5fe:	c422                	sw	s0,8(sp)
1c00a600:	1c00d437          	lui	s0,0x1c00d
1c00a604:	13440413          	addi	s0,s0,308 # 1c00d134 <__hyper_pad>
1c00a608:	c226                	sw	s1,4(sp)
1c00a60a:	c606                	sw	ra,12(sp)
1c00a60c:	03440493          	addi	s1,s0,52
1c00a610:	0044250b          	p.lw	a0,4(s0!)
1c00a614:	458d                	li	a1,3
1c00a616:	f2bff0ef          	jal	ra,1c00a540 <pi_pad_set_function>
1c00a61a:	fe941be3          	bne	s0,s1,1c00a610 <__pi_hyper_pin_settings+0x14>
1c00a61e:	40b2                	lw	ra,12(sp)
1c00a620:	4422                	lw	s0,8(sp)
1c00a622:	4492                	lw	s1,4(sp)
1c00a624:	0141                	addi	sp,sp,16
1c00a626:	8082                	ret

1c00a628 <__pi_hyper_pin_reset_settings>:
1c00a628:	1141                	addi	sp,sp,-16
1c00a62a:	c422                	sw	s0,8(sp)
1c00a62c:	1c00d437          	lui	s0,0x1c00d
1c00a630:	13440413          	addi	s0,s0,308 # 1c00d134 <__hyper_pad>
1c00a634:	c226                	sw	s1,4(sp)
1c00a636:	c606                	sw	ra,12(sp)
1c00a638:	03440493          	addi	s1,s0,52
1c00a63c:	0044250b          	p.lw	a0,4(s0!)
1c00a640:	4581                	li	a1,0
1c00a642:	effff0ef          	jal	ra,1c00a540 <pi_pad_set_function>
1c00a646:	fe941be3          	bne	s0,s1,1c00a63c <__pi_hyper_pin_reset_settings+0x14>
1c00a64a:	40b2                	lw	ra,12(sp)
1c00a64c:	4422                	lw	s0,8(sp)
1c00a64e:	4492                	lw	s1,4(sp)
1c00a650:	0141                	addi	sp,sp,16
1c00a652:	8082                	ret

1c00a654 <pi_hyper_conf_init>:
1c00a654:	57fd                	li	a5,-1
1c00a656:	00f50223          	sb	a5,4(a0)
1c00a65a:	4785                	li	a5,1
1c00a65c:	c55c                	sw	a5,12(a0)
1c00a65e:	00052423          	sw	zero,8(a0)
1c00a662:	8082                	ret

1c00a664 <pi_hyper_open>:
1c00a664:	1141                	addi	sp,sp,-16
1c00a666:	c422                	sw	s0,8(sp)
1c00a668:	c04a                	sw	s2,0(sp)
1c00a66a:	842a                	mv	s0,a0
1c00a66c:	00452903          	lw	s2,4(a0)
1c00a670:	4541                	li	a0,16
1c00a672:	c606                	sw	ra,12(sp)
1c00a674:	c226                	sw	s1,4(sp)
1c00a676:	dc5fe0ef          	jal	ra,1c00943a <pi_l2_malloc>
1c00a67a:	c115                	beqz	a0,1c00a69e <pi_hyper_open+0x3a>
1c00a67c:	00c92783          	lw	a5,12(s2)
1c00a680:	84aa                	mv	s1,a0
1c00a682:	0217b063          	p.bneimm	a5,1,1c00a6a2 <pi_hyper_open+0x3e>
1c00a686:	000f4637          	lui	a2,0xf4
1c00a68a:	24060613          	addi	a2,a2,576 # f4240 <__L2+0x74240>
1c00a68e:	4581                	li	a1,0
1c00a690:	75e000ef          	jal	ra,1c00adee <rt_extern_alloc_init>
1c00a694:	c519                	beqz	a0,1c00a6a2 <pi_hyper_open+0x3e>
1c00a696:	45c1                	li	a1,16
1c00a698:	8526                	mv	a0,s1
1c00a69a:	daffe0ef          	jal	ra,1c009448 <pi_l2_free>
1c00a69e:	557d                	li	a0,-1
1c00a6a0:	a0f1                	j	1c00a76c <pi_hyper_open+0x108>
1c00a6a2:	478d                	li	a5,3
1c00a6a4:	c0dc                	sw	a5,4(s1)
1c00a6a6:	00892783          	lw	a5,8(s2)
1c00a6aa:	c49c                	sw	a5,8(s1)
1c00a6ac:	00c92783          	lw	a5,12(s2)
1c00a6b0:	c4dc                	sw	a5,12(s1)
1c00a6b2:	1c00e7b7          	lui	a5,0x1c00e
1c00a6b6:	8fc78793          	addi	a5,a5,-1796 # 1c00d8fc <__rt_hyper_open_count>
1c00a6ba:	4398                	lw	a4,0(a5)
1c00a6bc:	00170693          	addi	a3,a4,1
1c00a6c0:	c394                	sw	a3,0(a5)
1c00a6c2:	e739                	bnez	a4,1c00a710 <pi_hyper_open+0xac>
1c00a6c4:	1a1067b7          	lui	a5,0x1a106
1c00a6c8:	0087a703          	lw	a4,8(a5) # 1a106008 <__l1_end+0xa105fe8>
1c00a6cc:	c0673733          	p.bclr	a4,a4,0,6
1c00a6d0:	00e7a423          	sw	a4,8(a5)
1c00a6d4:	0087a703          	lw	a4,8(a5)
1c00a6d8:	c0773733          	p.bclr	a4,a4,0,7
1c00a6dc:	00e7a423          	sw	a4,8(a5)
1c00a6e0:	1a1027b7          	lui	a5,0x1a102
1c00a6e4:	78078793          	addi	a5,a5,1920 # 1a102780 <__l1_end+0xa102760>
1c00a6e8:	4398                	lw	a4,0(a5)
1c00a6ea:	c0374733          	p.bset	a4,a4,0,3
1c00a6ee:	c398                	sw	a4,0(a5)
1c00a6f0:	1c0057b7          	lui	a5,0x1c005
1c00a6f4:	32c78793          	addi	a5,a5,812 # 1c00532c <__rt_hyper_handle_copy>
1c00a6f8:	10f02623          	sw	a5,268(zero) # 10c <periph_channels+0xdc>
1c00a6fc:	0e002823          	sw	zero,240(zero) # f0 <periph_channels+0xc0>
1c00a700:	12f02623          	sw	a5,300(zero) # 12c <periph_channels+0xfc>
1c00a704:	10002823          	sw	zero,272(zero) # 110 <periph_channels+0xe0>
1c00a708:	30f02423          	sw	a5,776(zero) # 308 <__rt_hyper_udma_handle>
1c00a70c:	ef1ff0ef          	jal	ra,1c00a5fc <__pi_hyper_pin_settings>
1c00a710:	00c92783          	lw	a5,12(s2)
1c00a714:	00892703          	lw	a4,8(s2)
1c00a718:	17fd                	addi	a5,a5,-1
1c00a71a:	0017b793          	seqz	a5,a5
1c00a71e:	078a                	slli	a5,a5,0x2
1c00a720:	ef21                	bnez	a4,1c00a778 <pi_hyper_open+0x114>
1c00a722:	1a102737          	lui	a4,0x1a102
1c00a726:	1b470613          	addi	a2,a4,436 # 1a1021b4 <__l1_end+0xa102194>
1c00a72a:	4214                	lw	a3,0(a2)
1c00a72c:	6591                	lui	a1,0x4
1c00a72e:	fff58513          	addi	a0,a1,-1 # 3fff <__rt_stack_size+0x37ff>
1c00a732:	73b6f693          	andi	a3,a3,1851
1c00a736:	8fd5                	or	a5,a5,a3
1c00a738:	c21c                	sw	a5,0(a2)
1c00a73a:	1a870793          	addi	a5,a4,424
1c00a73e:	4394                	lw	a3,0(a5)
1c00a740:	f0058593          	addi	a1,a1,-256
1c00a744:	8ee9                	and	a3,a3,a0
1c00a746:	8eed                	and	a3,a3,a1
1c00a748:	1006c6b3          	p.exths	a3,a3
1c00a74c:	c394                	sw	a3,0(a5)
1c00a74e:	4214                	lw	a3,0(a2)
1c00a750:	7376f693          	andi	a3,a3,1847
1c00a754:	c214                	sw	a3,0(a2)
1c00a756:	4398                	lw	a4,0(a5)
1c00a758:	668d                	lui	a3,0x3
1c00a75a:	0ff68693          	addi	a3,a3,255 # 30ff <__rt_stack_size+0x28ff>
1c00a75e:	8f69                	and	a4,a4,a0
1c00a760:	8f75                	and	a4,a4,a3
1c00a762:	c4874733          	p.bset	a4,a4,2,8
1c00a766:	c398                	sw	a4,0(a5)
1c00a768:	c404                	sw	s1,8(s0)
1c00a76a:	4501                	li	a0,0
1c00a76c:	40b2                	lw	ra,12(sp)
1c00a76e:	4422                	lw	s0,8(sp)
1c00a770:	4492                	lw	s1,4(sp)
1c00a772:	4902                	lw	s2,0(sp)
1c00a774:	0141                	addi	sp,sp,16
1c00a776:	8082                	ret
1c00a778:	1a102737          	lui	a4,0x1a102
1c00a77c:	1c470613          	addi	a2,a4,452 # 1a1021c4 <__l1_end+0xa1021a4>
1c00a780:	4214                	lw	a3,0(a2)
1c00a782:	1b870713          	addi	a4,a4,440
1c00a786:	03b6f693          	andi	a3,a3,59
1c00a78a:	8fd5                	or	a5,a5,a3
1c00a78c:	c21c                	sw	a5,0(a2)
1c00a78e:	431c                	lw	a5,0(a4)
1c00a790:	6691                	lui	a3,0x4
1c00a792:	fff68593          	addi	a1,a3,-1 # 3fff <__rt_stack_size+0x37ff>
1c00a796:	8fed                	and	a5,a5,a1
1c00a798:	f0068693          	addi	a3,a3,-256
1c00a79c:	8ff5                	and	a5,a5,a3
1c00a79e:	c007c7b3          	p.bset	a5,a5,0,0
1c00a7a2:	1007c7b3          	p.exths	a5,a5
1c00a7a6:	c31c                	sw	a5,0(a4)
1c00a7a8:	4214                	lw	a3,0(a2)
1c00a7aa:	0376f693          	andi	a3,a3,55
1c00a7ae:	c214                	sw	a3,0(a2)
1c00a7b0:	431c                	lw	a5,0(a4)
1c00a7b2:	668d                	lui	a3,0x3
1c00a7b4:	0ff68693          	addi	a3,a3,255 # 30ff <__rt_stack_size+0x28ff>
1c00a7b8:	8fed                	and	a5,a5,a1
1c00a7ba:	8ff5                	and	a5,a5,a3
1c00a7bc:	c487c7b3          	p.bset	a5,a5,2,8
1c00a7c0:	c31c                	sw	a5,0(a4)
1c00a7c2:	b75d                	j	1c00a768 <pi_hyper_open+0x104>

1c00a7c4 <pi_hyper_close>:
1c00a7c4:	1c00e737          	lui	a4,0x1c00e
1c00a7c8:	8fc70713          	addi	a4,a4,-1796 # 1c00d8fc <__rt_hyper_open_count>
1c00a7cc:	431c                	lw	a5,0(a4)
1c00a7ce:	1141                	addi	sp,sp,-16
1c00a7d0:	c422                	sw	s0,8(sp)
1c00a7d2:	c606                	sw	ra,12(sp)
1c00a7d4:	17fd                	addi	a5,a5,-1
1c00a7d6:	c31c                	sw	a5,0(a4)
1c00a7d8:	4500                	lw	s0,8(a0)
1c00a7da:	e7ad                	bnez	a5,1c00a844 <pi_hyper_close+0x80>
1c00a7dc:	404c                	lw	a1,4(s0)
1c00a7de:	47fd                	li	a5,31
1c00a7e0:	00159693          	slli	a3,a1,0x1
1c00a7e4:	06d7dc63          	ble	a3,a5,1c00a85c <pi_hyper_close+0x98>
1c00a7e8:	fe068513          	addi	a0,a3,-32
1c00a7ec:	4611                	li	a2,4
1c00a7ee:	1a1067b7          	lui	a5,0x1a106
1c00a7f2:	20c7f803          	p.lw	a6,a2(a5)
1c00a7f6:	4705                	li	a4,1
1c00a7f8:	00a71733          	sll	a4,a4,a0
1c00a7fc:	01076733          	or	a4,a4,a6
1c00a800:	00e7e623          	p.sw	a4,a2(a5)
1c00a804:	00168713          	addi	a4,a3,1
1c00a808:	47fd                	li	a5,31
1c00a80a:	4621                	li	a2,8
1c00a80c:	00e7d563          	ble	a4,a5,1c00a816 <pi_hyper_close+0x52>
1c00a810:	fe168713          	addi	a4,a3,-31
1c00a814:	4611                	li	a2,4
1c00a816:	1a1066b7          	lui	a3,0x1a106
1c00a81a:	20c6f503          	p.lw	a0,a2(a3)
1c00a81e:	4785                	li	a5,1
1c00a820:	00e79733          	sll	a4,a5,a4
1c00a824:	8f49                	or	a4,a4,a0
1c00a826:	00e6e623          	p.sw	a4,a2(a3)
1c00a82a:	1a102737          	lui	a4,0x1a102
1c00a82e:	78070713          	addi	a4,a4,1920 # 1a102780 <__l1_end+0xa102760>
1c00a832:	4314                	lw	a3,0(a4)
1c00a834:	00b797b3          	sll	a5,a5,a1
1c00a838:	fff7c793          	not	a5,a5
1c00a83c:	8ff5                	and	a5,a5,a3
1c00a83e:	c31c                	sw	a5,0(a4)
1c00a840:	de9ff0ef          	jal	ra,1c00a628 <__pi_hyper_pin_reset_settings>
1c00a844:	445c                	lw	a5,12(s0)
1c00a846:	0017b463          	p.bneimm	a5,1,1c00a84e <pi_hyper_close+0x8a>
1c00a84a:	8522                	mv	a0,s0
1c00a84c:	2bed                	jal	1c00ae46 <rt_extern_alloc_deinit>
1c00a84e:	8522                	mv	a0,s0
1c00a850:	4422                	lw	s0,8(sp)
1c00a852:	40b2                	lw	ra,12(sp)
1c00a854:	45c1                	li	a1,16
1c00a856:	0141                	addi	sp,sp,16
1c00a858:	bf1fe06f          	j	1c009448 <pi_l2_free>
1c00a85c:	8536                	mv	a0,a3
1c00a85e:	4621                	li	a2,8
1c00a860:	b779                	j	1c00a7ee <pi_hyper_close+0x2a>

1c00a862 <__pi_hyper_copy_aligned>:
1c00a862:	40155793          	srai	a5,a0,0x1
1c00a866:	1a102837          	lui	a6,0x1a102
1c00a86a:	079e                	slli	a5,a5,0x7
1c00a86c:	0512                	slli	a0,a0,0x4
1c00a86e:	97c2                	add	a5,a5,a6
1c00a870:	8941                	andi	a0,a0,16
1c00a872:	953e                	add	a0,a0,a5
1c00a874:	20000813          	li	a6,512
1c00a878:	30800793          	li	a5,776
1c00a87c:	02d87c63          	bleu	a3,a6,1c00a8b4 <__pi_hyper_copy_aligned+0x52>
1c00a880:	cbd4                	sw	a3,20(a5)
1c00a882:	1c0056b7          	lui	a3,0x1c005
1c00a886:	3c468693          	addi	a3,a3,964 # 1c0053c4 <__rt_hyper_handle_burst>
1c00a88a:	c394                	sw	a3,0(a5)
1c00a88c:	c3c8                	sw	a0,4(a5)
1c00a88e:	c790                	sw	a2,8(a5)
1c00a890:	c7cc                	sw	a1,12(a5)
1c00a892:	0107a823          	sw	a6,16(a5) # 1a106010 <__l1_end+0xa105ff0>
1c00a896:	20000693          	li	a3,512
1c00a89a:	cf98                	sw	a4,24(a5)
1c00a89c:	1a1027b7          	lui	a5,0x1a102
1c00a8a0:	1ac7a023          	sw	a2,416(a5) # 1a1021a0 <__l1_end+0xa102180>
1c00a8a4:	00b52023          	sw	a1,0(a0)
1c00a8a8:	00d52223          	sw	a3,4(a0)
1c00a8ac:	47c1                	li	a5,16
1c00a8ae:	00f52423          	sw	a5,8(a0)
1c00a8b2:	8082                	ret
1c00a8b4:	0007a823          	sw	zero,16(a5)
1c00a8b8:	b7cd                	j	1c00a89a <__pi_hyper_copy_aligned+0x38>

1c00a8ba <__pi_hyper_copy_exec>:
1c00a8ba:	30800813          	li	a6,776
1c00a8be:	00e82e23          	sw	a4,28(a6) # 1a10201c <__l1_end+0xa101ffc>
1c00a8c2:	fa25b833          	p.bclr	a6,a1,29,2
1c00a8c6:	30800793          	li	a5,776
1c00a8ca:	00081a63          	bnez	a6,1c00a8de <__pi_hyper_copy_exec+0x24>
1c00a8ce:	fc163833          	p.bclr	a6,a2,30,1
1c00a8d2:	00081663          	bnez	a6,1c00a8de <__pi_hyper_copy_exec+0x24>
1c00a8d6:	fa26b833          	p.bclr	a6,a3,29,2
1c00a8da:	00080863          	beqz	a6,1c00a8ea <__pi_hyper_copy_exec+0x30>
1c00a8de:	fc153833          	p.bclr	a6,a0,30,1
1c00a8e2:	00080663          	beqz	a6,1c00a8ee <__pi_hyper_copy_exec+0x34>
1c00a8e6:	0026b463          	p.bneimm	a3,2,1c00a8ee <__pi_hyper_copy_exec+0x34>
1c00a8ea:	f79ff06f          	j	1c00a862 <__pi_hyper_copy_aligned>
1c00a8ee:	d388                	sw	a0,32(a5)
1c00a8f0:	853a                	mv	a0,a4
1c00a8f2:	d3d0                	sw	a2,36(a5)
1c00a8f4:	d78c                	sw	a1,40(a5)
1c00a8f6:	d7d4                	sw	a3,44(a5)
1c00a8f8:	02078823          	sb	zero,48(a5)
1c00a8fc:	dbd8                	sw	a4,52(a5)
1c00a8fe:	aa31                	j	1c00aa1a <__pi_hyper_copy_misaligned>

1c00a900 <__pi_hyper_copy>:
1c00a900:	1141                	addi	sp,sp,-16
1c00a902:	c606                	sw	ra,12(sp)
1c00a904:	c422                	sw	s0,8(sp)
1c00a906:	30047473          	csrrci	s0,mstatus,8
1c00a90a:	c781                	beqz	a5,1c00a912 <__pi_hyper_copy+0x12>
1c00a90c:	010007b7          	lui	a5,0x1000
1c00a910:	963e                	add	a2,a2,a5
1c00a912:	30800813          	li	a6,776
1c00a916:	01c82803          	lw	a6,28(a6)
1c00a91a:	30800793          	li	a5,776
1c00a91e:	02080963          	beqz	a6,1c00a950 <__pi_hyper_copy+0x50>
1c00a922:	0387a803          	lw	a6,56(a5) # 1000038 <__L2+0xf80038>
1c00a926:	02080363          	beqz	a6,1c00a94c <__pi_hyper_copy+0x4c>
1c00a92a:	03c7a803          	lw	a6,60(a5)
1c00a92e:	00e82e23          	sw	a4,28(a6)
1c00a932:	dfd8                	sw	a4,60(a5)
1c00a934:	00072e23          	sw	zero,28(a4)
1c00a938:	df08                	sw	a0,56(a4)
1c00a93a:	df4c                	sw	a1,60(a4)
1c00a93c:	c330                	sw	a2,64(a4)
1c00a93e:	c374                	sw	a3,68(a4)
1c00a940:	30041073          	csrw	mstatus,s0
1c00a944:	40b2                	lw	ra,12(sp)
1c00a946:	4422                	lw	s0,8(sp)
1c00a948:	0141                	addi	sp,sp,16
1c00a94a:	8082                	ret
1c00a94c:	df98                	sw	a4,56(a5)
1c00a94e:	b7d5                	j	1c00a932 <__pi_hyper_copy+0x32>
1c00a950:	f6bff0ef          	jal	ra,1c00a8ba <__pi_hyper_copy_exec>
1c00a954:	b7f5                	j	1c00a940 <__pi_hyper_copy+0x40>

1c00a956 <pi_hyper_read_async>:
1c00a956:	451c                	lw	a5,8(a0)
1c00a958:	00070a23          	sb	zero,20(a4)
1c00a95c:	8832                	mv	a6,a2
1c00a95e:	43c8                	lw	a0,4(a5)
1c00a960:	479c                	lw	a5,8(a5)
1c00a962:	862e                	mv	a2,a1
1c00a964:	0506                	slli	a0,a0,0x1
1c00a966:	85c2                	mv	a1,a6
1c00a968:	f99ff06f          	j	1c00a900 <__pi_hyper_copy>

1c00a96c <pi_hyper_read>:
1c00a96c:	7175                	addi	sp,sp,-144
1c00a96e:	4785                	li	a5,1
1c00a970:	870a                	mv	a4,sp
1c00a972:	c706                	sw	ra,140(sp)
1c00a974:	cc3e                	sw	a5,24(sp)
1c00a976:	d43e                	sw	a5,40(sp)
1c00a978:	c202                	sw	zero,4(sp)
1c00a97a:	00010a23          	sb	zero,20(sp)
1c00a97e:	fd9ff0ef          	jal	ra,1c00a956 <pi_hyper_read_async>
1c00a982:	0848                	addi	a0,sp,20
1c00a984:	c47ff0ef          	jal	ra,1c00a5ca <pi_task_wait_on.isra.4>
1c00a988:	40ba                	lw	ra,140(sp)
1c00a98a:	6149                	addi	sp,sp,144
1c00a98c:	8082                	ret

1c00a98e <pi_hyper_write_async>:
1c00a98e:	451c                	lw	a5,8(a0)
1c00a990:	00070a23          	sb	zero,20(a4)
1c00a994:	8832                	mv	a6,a2
1c00a996:	43c8                	lw	a0,4(a5)
1c00a998:	479c                	lw	a5,8(a5)
1c00a99a:	862e                	mv	a2,a1
1c00a99c:	0506                	slli	a0,a0,0x1
1c00a99e:	85c2                	mv	a1,a6
1c00a9a0:	0505                	addi	a0,a0,1
1c00a9a2:	f5fff06f          	j	1c00a900 <__pi_hyper_copy>

1c00a9a6 <pi_hyper_write>:
1c00a9a6:	7175                	addi	sp,sp,-144
1c00a9a8:	4785                	li	a5,1
1c00a9aa:	870a                	mv	a4,sp
1c00a9ac:	c706                	sw	ra,140(sp)
1c00a9ae:	cc3e                	sw	a5,24(sp)
1c00a9b0:	d43e                	sw	a5,40(sp)
1c00a9b2:	c202                	sw	zero,4(sp)
1c00a9b4:	00010a23          	sb	zero,20(sp)
1c00a9b8:	fd7ff0ef          	jal	ra,1c00a98e <pi_hyper_write_async>
1c00a9bc:	0848                	addi	a0,sp,20
1c00a9be:	c0dff0ef          	jal	ra,1c00a5ca <pi_task_wait_on.isra.4>
1c00a9c2:	40ba                	lw	ra,140(sp)
1c00a9c4:	6149                	addi	sp,sp,144
1c00a9c6:	8082                	ret

1c00a9c8 <exec_pending_task>:
1c00a9c8:	30800793          	li	a5,776
1c00a9cc:	5f98                	lw	a4,56(a5)
1c00a9ce:	c729                	beqz	a4,1c00aa18 <exec_pending_task+0x50>
1c00a9d0:	4f54                	lw	a3,28(a4)
1c00a9d2:	03872803          	lw	a6,56(a4)
1c00a9d6:	5f4c                	lw	a1,60(a4)
1c00a9d8:	df94                	sw	a3,56(a5)
1c00a9da:	ee883533          	p.bclr	a0,a6,23,8
1c00a9de:	ce881833          	p.extractu	a6,a6,7,8
1c00a9e2:	4330                	lw	a2,64(a4)
1c00a9e4:	4374                	lw	a3,68(a4)
1c00a9e6:	00081463          	bnez	a6,1c00a9ee <exec_pending_task+0x26>
1c00a9ea:	ed1ff06f          	j	1c00a8ba <__pi_hyper_copy_exec>
1c00a9ee:	04c72803          	lw	a6,76(a4)
1c00a9f2:	04872883          	lw	a7,72(a4)
1c00a9f6:	d388                	sw	a0,32(a5)
1c00a9f8:	d3d0                	sw	a2,36(a5)
1c00a9fa:	853a                	mv	a0,a4
1c00a9fc:	0506d633          	p.minu	a2,a3,a6
1c00aa00:	cfd8                	sw	a4,28(a5)
1c00aa02:	d78c                	sw	a1,40(a5)
1c00aa04:	d7d0                	sw	a2,44(a5)
1c00aa06:	02078823          	sb	zero,48(a5)
1c00aa0a:	dbd8                	sw	a4,52(a5)
1c00aa0c:	c3b4                	sw	a3,64(a5)
1c00aa0e:	0507a223          	sw	a6,68(a5)
1c00aa12:	0517a423          	sw	a7,72(a5)
1c00aa16:	a011                	j	1c00aa1a <__pi_hyper_copy_misaligned>
1c00aa18:	8082                	ret

1c00aa1a <__pi_hyper_copy_misaligned>:
1c00aa1a:	7179                	addi	sp,sp,-48
1c00aa1c:	d422                	sw	s0,40(sp)
1c00aa1e:	30800793          	li	a5,776
1c00aa22:	ce4e                	sw	s3,28(sp)
1c00aa24:	89aa                	mv	s3,a0
1c00aa26:	5388                	lw	a0,32(a5)
1c00aa28:	d606                	sw	ra,44(sp)
1c00aa2a:	d226                	sw	s1,36(sp)
1c00aa2c:	d04a                	sw	s2,32(sp)
1c00aa2e:	cc52                	sw	s4,24(sp)
1c00aa30:	ca56                	sw	s5,20(sp)
1c00aa32:	c85a                	sw	s6,16(sp)
1c00aa34:	c65e                	sw	s7,12(sp)
1c00aa36:	c462                	sw	s8,8(sp)
1c00aa38:	fc1537b3          	p.bclr	a5,a0,30,1
1c00aa3c:	30800413          	li	s0,776
1c00aa40:	e7a1                	bnez	a5,1c00aa88 <__pi_hyper_copy_misaligned+0x6e>
1c00aa42:	1c00dc37          	lui	s8,0x1c00d
1c00aa46:	718c0913          	addi	s2,s8,1816 # 1c00d718 <__pi_hyper_temp_buffer>
1c00aa4a:	4a0d                	li	s4,3
1c00aa4c:	07c00a93          	li	s5,124
1c00aa50:	00190b13          	addi	s6,s2,1
1c00aa54:	5408                	lw	a0,40(s0)
1c00aa56:	5444                	lw	s1,44(s0)
1c00aa58:	5050                	lw	a2,36(s0)
1c00aa5a:	00350793          	addi	a5,a0,3
1c00aa5e:	c207b7b3          	p.bclr	a5,a5,1,0
1c00aa62:	8f89                	sub	a5,a5,a0
1c00aa64:	8bbe                	mv	s7,a5
1c00aa66:	009a6363          	bltu	s4,s1,1c00aa6c <__pi_hyper_copy_misaligned+0x52>
1c00aa6a:	8ba6                	mv	s7,s1
1c00aa6c:	1c0b8663          	beqz	s7,1c00ac38 <__pi_hyper_copy_misaligned+0x21e>
1c00aa70:	03044783          	lbu	a5,48(s0)
1c00aa74:	16079f63          	bnez	a5,1c00abf2 <__pi_hyper_copy_misaligned+0x1d8>
1c00aa78:	4701                	li	a4,0
1c00aa7a:	4691                	li	a3,4
1c00aa7c:	c0063633          	p.bclr	a2,a2,0,0
1c00aa80:	718c0593          	addi	a1,s8,1816
1c00aa84:	5008                	lw	a0,32(s0)
1c00aa86:	a889                	j	1c00aad8 <__pi_hyper_copy_misaligned+0xbe>
1c00aa88:	540c                	lw	a1,40(s0)
1c00aa8a:	04442883          	lw	a7,68(s0)
1c00aa8e:	04842303          	lw	t1,72(s0)
1c00aa92:	00358793          	addi	a5,a1,3
1c00aa96:	5050                	lw	a2,36(s0)
1c00aa98:	5454                	lw	a3,44(s0)
1c00aa9a:	4038                	lw	a4,64(s0)
1c00aa9c:	c207b7b3          	p.bclr	a5,a5,1,0
1c00aaa0:	8f8d                	sub	a5,a5,a1
1c00aaa2:	41130333          	sub	t1,t1,a7
1c00aaa6:	4801                	li	a6,0
1c00aaa8:	4e0d                	li	t3,3
1c00aaaa:	84be                	mv	s1,a5
1c00aaac:	00de6363          	bltu	t3,a3,1c00aab2 <__pi_hyper_copy_misaligned+0x98>
1c00aab0:	84b6                	mv	s1,a3
1c00aab2:	c4b5                	beqz	s1,1c00ab1e <__pi_hyper_copy_misaligned+0x104>
1c00aab4:	00080563          	beqz	a6,1c00aabe <__pi_hyper_copy_misaligned+0xa4>
1c00aab8:	d050                	sw	a2,36(s0)
1c00aaba:	d454                	sw	a3,44(s0)
1c00aabc:	c038                	sw	a4,64(s0)
1c00aabe:	03044703          	lbu	a4,48(s0)
1c00aac2:	1c00d937          	lui	s2,0x1c00d
1c00aac6:	71890793          	addi	a5,s2,1816 # 1c00d718 <__pi_hyper_temp_buffer>
1c00aaca:	ef09                	bnez	a4,1c00aae4 <__pi_hyper_copy_misaligned+0xca>
1c00aacc:	4691                	li	a3,4
1c00aace:	c0063633          	p.bclr	a2,a2,0,0
1c00aad2:	71890593          	addi	a1,s2,1816
1c00aad6:	157d                	addi	a0,a0,-1
1c00aad8:	d8bff0ef          	jal	ra,1c00a862 <__pi_hyper_copy_aligned>
1c00aadc:	4785                	li	a5,1
1c00aade:	02f40823          	sb	a5,48(s0)
1c00aae2:	aa3d                	j	1c00ac20 <__pi_hyper_copy_misaligned+0x206>
1c00aae4:	fc163533          	p.bclr	a0,a2,30,1
1c00aae8:	953e                	add	a0,a0,a5
1c00aaea:	8626                	mv	a2,s1
1c00aaec:	02040823          	sb	zero,48(s0)
1c00aaf0:	aa3ff0ef          	jal	ra,1c00a592 <l2_memcpy>
1c00aaf4:	5050                	lw	a2,36(s0)
1c00aaf6:	5008                	lw	a0,32(s0)
1c00aaf8:	4701                	li	a4,0
1c00aafa:	4691                	li	a3,4
1c00aafc:	c0063633          	p.bclr	a2,a2,0,0
1c00ab00:	71890593          	addi	a1,s2,1816
1c00ab04:	d5fff0ef          	jal	ra,1c00a862 <__pi_hyper_copy_aligned>
1c00ab08:	505c                	lw	a5,36(s0)
1c00ab0a:	97a6                	add	a5,a5,s1
1c00ab0c:	d05c                	sw	a5,36(s0)
1c00ab0e:	541c                	lw	a5,40(s0)
1c00ab10:	97a6                	add	a5,a5,s1
1c00ab12:	d41c                	sw	a5,40(s0)
1c00ab14:	545c                	lw	a5,44(s0)
1c00ab16:	409784b3          	sub	s1,a5,s1
1c00ab1a:	d444                	sw	s1,44(s0)
1c00ab1c:	a211                	j	1c00ac20 <__pi_hyper_copy_misaligned+0x206>
1c00ab1e:	c2d1                	beqz	a3,1c00aba2 <__pi_hyper_copy_misaligned+0x188>
1c00ab20:	00080563          	beqz	a6,1c00ab2a <__pi_hyper_copy_misaligned+0x110>
1c00ab24:	d050                	sw	a2,36(s0)
1c00ab26:	d454                	sw	a3,44(s0)
1c00ab28:	c038                	sw	a4,64(s0)
1c00ab2a:	97b2                	add	a5,a5,a2
1c00ab2c:	fc17b7b3          	p.bclr	a5,a5,30,1
1c00ab30:	c206b4b3          	p.bclr	s1,a3,1,0
1c00ab34:	ef89                	bnez	a5,1c00ab4e <__pi_hyper_copy_misaligned+0x134>
1c00ab36:	4701                	li	a4,0
1c00ab38:	86a6                	mv	a3,s1
1c00ab3a:	d29ff0ef          	jal	ra,1c00a862 <__pi_hyper_copy_aligned>
1c00ab3e:	505c                	lw	a5,36(s0)
1c00ab40:	5454                	lw	a3,44(s0)
1c00ab42:	97a6                	add	a5,a5,s1
1c00ab44:	d05c                	sw	a5,36(s0)
1c00ab46:	541c                	lw	a5,40(s0)
1c00ab48:	97a6                	add	a5,a5,s1
1c00ab4a:	d41c                	sw	a5,40(s0)
1c00ab4c:	a881                	j	1c00ab9c <__pi_hyper_copy_misaligned+0x182>
1c00ab4e:	03044703          	lbu	a4,48(s0)
1c00ab52:	1c00d937          	lui	s2,0x1c00d
1c00ab56:	71890793          	addi	a5,s2,1816 # 1c00d718 <__pi_hyper_temp_buffer>
1c00ab5a:	db2d                	beqz	a4,1c00aacc <__pi_hyper_copy_misaligned+0xb2>
1c00ab5c:	07c00693          	li	a3,124
1c00ab60:	04d4d4b3          	p.minu	s1,s1,a3
1c00ab64:	00178513          	addi	a0,a5,1
1c00ab68:	fff48613          	addi	a2,s1,-1
1c00ab6c:	02040823          	sb	zero,48(s0)
1c00ab70:	a23ff0ef          	jal	ra,1c00a592 <l2_memcpy>
1c00ab74:	5050                	lw	a2,36(s0)
1c00ab76:	5008                	lw	a0,32(s0)
1c00ab78:	86a6                	mv	a3,s1
1c00ab7a:	4701                	li	a4,0
1c00ab7c:	c0063633          	p.bclr	a2,a2,0,0
1c00ab80:	71890593          	addi	a1,s2,1816
1c00ab84:	cdfff0ef          	jal	ra,1c00a862 <__pi_hyper_copy_aligned>
1c00ab88:	505c                	lw	a5,36(s0)
1c00ab8a:	5454                	lw	a3,44(s0)
1c00ab8c:	17fd                	addi	a5,a5,-1
1c00ab8e:	97a6                	add	a5,a5,s1
1c00ab90:	d05c                	sw	a5,36(s0)
1c00ab92:	541c                	lw	a5,40(s0)
1c00ab94:	0685                	addi	a3,a3,1
1c00ab96:	17fd                	addi	a5,a5,-1
1c00ab98:	97a6                	add	a5,a5,s1
1c00ab9a:	d41c                	sw	a5,40(s0)
1c00ab9c:	409684b3          	sub	s1,a3,s1
1c00aba0:	bfad                	j	1c00ab1a <__pi_hyper_copy_misaligned+0x100>
1c00aba2:	e719                	bnez	a4,1c00abb0 <__pi_hyper_copy_misaligned+0x196>
1c00aba4:	00080c63          	beqz	a6,1c00abbc <__pi_hyper_copy_misaligned+0x1a2>
1c00aba8:	d050                	sw	a2,36(s0)
1c00abaa:	02042623          	sw	zero,44(s0)
1c00abae:	a029                	j	1c00abb8 <__pi_hyper_copy_misaligned+0x19e>
1c00abb0:	02e8ea63          	bltu	a7,a4,1c00abe4 <__pi_hyper_copy_misaligned+0x1ca>
1c00abb4:	fe081ae3          	bnez	a6,1c00aba8 <__pi_hyper_copy_misaligned+0x18e>
1c00abb8:	04042023          	sw	zero,64(s0)
1c00abbc:	854e                	mv	a0,s3
1c00abbe:	02042a23          	sw	zero,52(s0)
1c00abc2:	00042e23          	sw	zero,28(s0)
1c00abc6:	9e1ff0ef          	jal	ra,1c00a5a6 <rt_event_enqueue>
1c00abca:	5422                	lw	s0,40(sp)
1c00abcc:	50b2                	lw	ra,44(sp)
1c00abce:	5492                	lw	s1,36(sp)
1c00abd0:	5902                	lw	s2,32(sp)
1c00abd2:	49f2                	lw	s3,28(sp)
1c00abd4:	4a62                	lw	s4,24(sp)
1c00abd6:	4ad2                	lw	s5,20(sp)
1c00abd8:	4b42                	lw	s6,16(sp)
1c00abda:	4bb2                	lw	s7,12(sp)
1c00abdc:	4c22                	lw	s8,8(sp)
1c00abde:	6145                	addi	sp,sp,48
1c00abe0:	de9ff06f          	j	1c00a9c8 <exec_pending_task>
1c00abe4:	41170733          	sub	a4,a4,a7
1c00abe8:	961a                	add	a2,a2,t1
1c00abea:	4805                	li	a6,1
1c00abec:	04e8d6b3          	p.minu	a3,a7,a4
1c00abf0:	bd6d                	j	1c00aaaa <__pi_hyper_copy_misaligned+0x90>
1c00abf2:	fc1635b3          	p.bclr	a1,a2,30,1
1c00abf6:	95ca                	add	a1,a1,s2
1c00abf8:	865e                	mv	a2,s7
1c00abfa:	02040823          	sb	zero,48(s0)
1c00abfe:	995ff0ef          	jal	ra,1c00a592 <l2_memcpy>
1c00ac02:	505c                	lw	a5,36(s0)
1c00ac04:	97de                	add	a5,a5,s7
1c00ac06:	d05c                	sw	a5,36(s0)
1c00ac08:	541c                	lw	a5,40(s0)
1c00ac0a:	97de                	add	a5,a5,s7
1c00ac0c:	d41c                	sw	a5,40(s0)
1c00ac0e:	545c                	lw	a5,44(s0)
1c00ac10:	41778bb3          	sub	s7,a5,s7
1c00ac14:	03742623          	sw	s7,44(s0)
1c00ac18:	e20b9ee3          	bnez	s7,1c00aa54 <__pi_hyper_copy_misaligned+0x3a>
1c00ac1c:	545c                	lw	a5,44(s0)
1c00ac1e:	c7a5                	beqz	a5,1c00ac86 <__pi_hyper_copy_misaligned+0x26c>
1c00ac20:	50b2                	lw	ra,44(sp)
1c00ac22:	5422                	lw	s0,40(sp)
1c00ac24:	5492                	lw	s1,36(sp)
1c00ac26:	5902                	lw	s2,32(sp)
1c00ac28:	49f2                	lw	s3,28(sp)
1c00ac2a:	4a62                	lw	s4,24(sp)
1c00ac2c:	4ad2                	lw	s5,20(sp)
1c00ac2e:	4b42                	lw	s6,16(sp)
1c00ac30:	4bb2                	lw	s7,12(sp)
1c00ac32:	4c22                	lw	s8,8(sp)
1c00ac34:	6145                	addi	sp,sp,48
1c00ac36:	8082                	ret
1c00ac38:	d0f5                	beqz	s1,1c00ac1c <__pi_hyper_copy_misaligned+0x202>
1c00ac3a:	97b2                	add	a5,a5,a2
1c00ac3c:	fc17b7b3          	p.bclr	a5,a5,30,1
1c00ac40:	c204b4b3          	p.bclr	s1,s1,1,0
1c00ac44:	e791                	bnez	a5,1c00ac50 <__pi_hyper_copy_misaligned+0x236>
1c00ac46:	85aa                	mv	a1,a0
1c00ac48:	4701                	li	a4,0
1c00ac4a:	86a6                	mv	a3,s1
1c00ac4c:	5008                	lw	a0,32(s0)
1c00ac4e:	b5f5                	j	1c00ab3a <__pi_hyper_copy_misaligned+0x120>
1c00ac50:	03044783          	lbu	a5,48(s0)
1c00ac54:	0554d4b3          	p.minu	s1,s1,s5
1c00ac58:	e789                	bnez	a5,1c00ac62 <__pi_hyper_copy_misaligned+0x248>
1c00ac5a:	4701                	li	a4,0
1c00ac5c:	00448693          	addi	a3,s1,4
1c00ac60:	bd31                	j	1c00aa7c <__pi_hyper_copy_misaligned+0x62>
1c00ac62:	8626                	mv	a2,s1
1c00ac64:	85da                	mv	a1,s6
1c00ac66:	02040823          	sb	zero,48(s0)
1c00ac6a:	929ff0ef          	jal	ra,1c00a592 <l2_memcpy>
1c00ac6e:	505c                	lw	a5,36(s0)
1c00ac70:	5454                	lw	a3,44(s0)
1c00ac72:	97a6                	add	a5,a5,s1
1c00ac74:	d05c                	sw	a5,36(s0)
1c00ac76:	541c                	lw	a5,40(s0)
1c00ac78:	97a6                	add	a5,a5,s1
1c00ac7a:	409684b3          	sub	s1,a3,s1
1c00ac7e:	d41c                	sw	a5,40(s0)
1c00ac80:	d444                	sw	s1,44(s0)
1c00ac82:	dcc9                	beqz	s1,1c00ac1c <__pi_hyper_copy_misaligned+0x202>
1c00ac84:	bbc1                	j	1c00aa54 <__pi_hyper_copy_misaligned+0x3a>
1c00ac86:	4038                	lw	a4,64(s0)
1c00ac88:	db15                	beqz	a4,1c00abbc <__pi_hyper_copy_misaligned+0x1a2>
1c00ac8a:	407c                	lw	a5,68(s0)
1c00ac8c:	00e7ff63          	bleu	a4,a5,1c00acaa <__pi_hyper_copy_misaligned+0x290>
1c00ac90:	8f1d                	sub	a4,a4,a5
1c00ac92:	c038                	sw	a4,64(s0)
1c00ac94:	4034                	lw	a3,64(s0)
1c00ac96:	d29d                	beqz	a3,1c00abbc <__pi_hyper_copy_misaligned+0x1a2>
1c00ac98:	5058                	lw	a4,36(s0)
1c00ac9a:	4430                	lw	a2,72(s0)
1c00ac9c:	9732                	add	a4,a4,a2
1c00ac9e:	8f1d                	sub	a4,a4,a5
1c00aca0:	04d7d7b3          	p.minu	a5,a5,a3
1c00aca4:	d058                	sw	a4,36(s0)
1c00aca6:	d45c                	sw	a5,44(s0)
1c00aca8:	b375                	j	1c00aa54 <__pi_hyper_copy_misaligned+0x3a>
1c00acaa:	04042023          	sw	zero,64(s0)
1c00acae:	b7dd                	j	1c00ac94 <__pi_hyper_copy_misaligned+0x27a>

1c00acb0 <__pi_hyper_copy_2d>:
1c00acb0:	1141                	addi	sp,sp,-16
1c00acb2:	c606                	sw	ra,12(sp)
1c00acb4:	c422                	sw	s0,8(sp)
1c00acb6:	30047473          	csrrci	s0,mstatus,8
1c00acba:	00088563          	beqz	a7,1c00acc4 <__pi_hyper_copy_2d+0x14>
1c00acbe:	010008b7          	lui	a7,0x1000
1c00acc2:	9646                	add	a2,a2,a7
1c00acc4:	30800893          	li	a7,776
1c00acc8:	01c8ae03          	lw	t3,28(a7) # 100001c <__L2+0xf8001c>
1c00accc:	30800313          	li	t1,776
1c00acd0:	040e0563          	beqz	t3,1c00ad1a <__pi_hyper_copy_2d+0x6a>
1c00acd4:	03832883          	lw	a7,56(t1) # 80000038 <pulp__FC+0x80000039>
1c00acd8:	02088e63          	beqz	a7,1c00ad14 <__pi_hyper_copy_2d+0x64>
1c00acdc:	03c32883          	lw	a7,60(t1)
1c00ace0:	0108ae23          	sw	a6,28(a7)
1c00ace4:	c0854533          	p.bset	a0,a0,0,8
1c00ace8:	03032e23          	sw	a6,60(t1)
1c00acec:	00082e23          	sw	zero,28(a6)
1c00acf0:	02a82c23          	sw	a0,56(a6)
1c00acf4:	02b82e23          	sw	a1,60(a6)
1c00acf8:	04c82023          	sw	a2,64(a6)
1c00acfc:	04d82223          	sw	a3,68(a6)
1c00ad00:	04e82423          	sw	a4,72(a6)
1c00ad04:	04f82623          	sw	a5,76(a6)
1c00ad08:	30041073          	csrw	mstatus,s0
1c00ad0c:	40b2                	lw	ra,12(sp)
1c00ad0e:	4422                	lw	s0,8(sp)
1c00ad10:	0141                	addi	sp,sp,16
1c00ad12:	8082                	ret
1c00ad14:	03032c23          	sw	a6,56(t1)
1c00ad18:	b7f1                	j	1c00ace4 <__pi_hyper_copy_2d+0x34>
1c00ad1a:	02a8a023          	sw	a0,32(a7)
1c00ad1e:	02c8a223          	sw	a2,36(a7)
1c00ad22:	8542                	mv	a0,a6
1c00ad24:	04f6d633          	p.minu	a2,a3,a5
1c00ad28:	0108ae23          	sw	a6,28(a7)
1c00ad2c:	02b8a423          	sw	a1,40(a7)
1c00ad30:	02c8a623          	sw	a2,44(a7)
1c00ad34:	02088823          	sb	zero,48(a7)
1c00ad38:	0308aa23          	sw	a6,52(a7)
1c00ad3c:	04d8a023          	sw	a3,64(a7)
1c00ad40:	04f8a223          	sw	a5,68(a7)
1c00ad44:	04e8a423          	sw	a4,72(a7)
1c00ad48:	cd3ff0ef          	jal	ra,1c00aa1a <__pi_hyper_copy_misaligned>
1c00ad4c:	bf75                	j	1c00ad08 <__pi_hyper_copy_2d+0x58>

1c00ad4e <pi_hyper_read_2d_async>:
1c00ad4e:	8332                	mv	t1,a2
1c00ad50:	4510                	lw	a2,8(a0)
1c00ad52:	00080a23          	sb	zero,20(a6)
1c00ad56:	4248                	lw	a0,4(a2)
1c00ad58:	00862883          	lw	a7,8(a2)
1c00ad5c:	862e                	mv	a2,a1
1c00ad5e:	0506                	slli	a0,a0,0x1
1c00ad60:	859a                	mv	a1,t1
1c00ad62:	f4fff06f          	j	1c00acb0 <__pi_hyper_copy_2d>

1c00ad66 <pi_hyper_write_2d_async>:
1c00ad66:	8332                	mv	t1,a2
1c00ad68:	4510                	lw	a2,8(a0)
1c00ad6a:	00080a23          	sb	zero,20(a6)
1c00ad6e:	4248                	lw	a0,4(a2)
1c00ad70:	00862883          	lw	a7,8(a2)
1c00ad74:	862e                	mv	a2,a1
1c00ad76:	0506                	slli	a0,a0,0x1
1c00ad78:	859a                	mv	a1,t1
1c00ad7a:	0505                	addi	a0,a0,1
1c00ad7c:	f35ff06f          	j	1c00acb0 <__pi_hyper_copy_2d>

1c00ad80 <__rt_hyper_resume_emu_task>:
  __pi_hyper_copy_misaligned(__rt_hyper_pending_emu_task);
1c00ad80:	33c02503          	lw	a0,828(zero) # 33c <__rt_hyper_pending_emu_task>
1c00ad84:	c97ff06f          	j	1c00aa1a <__pi_hyper_copy_misaligned>

1c00ad88 <__rt_hyper_resume_copy>:
  exec_pending_task();
1c00ad88:	c41ff06f          	j	1c00a9c8 <exec_pending_task>

1c00ad8c <__rt_hyper_init>:
  __pi_hyper_cluster_reqs_first = NULL;
1c00ad8c:	1c00e737          	lui	a4,0x1c00e
  __rt_hyper_end_task = NULL;
1c00ad90:	30800793          	li	a5,776
  __pi_hyper_cluster_reqs_first = NULL;
1c00ad94:	8e072c23          	sw	zero,-1800(a4) # 1c00d8f8 <__pi_hyper_cluster_reqs_first>
  __rt_hyper_pending_emu_channel = -1;
1c00ad98:	577d                	li	a4,-1
1c00ad9a:	d398                	sw	a4,32(a5)
  __rt_hyper_open_count = 0;
1c00ad9c:	1c00e737          	lui	a4,0x1c00e
  __rt_hyper_end_task = NULL;
1c00ada0:	0007ac23          	sw	zero,24(a5)
  __rt_hyper_current_task = NULL;
1c00ada4:	0007ae23          	sw	zero,28(a5)
  __rt_hyper_pending_tasks = NULL;
1c00ada8:	0207ac23          	sw	zero,56(a5)
  __rt_hyper_open_count = 0;
1c00adac:	8e072e23          	sw	zero,-1796(a4) # 1c00d8fc <__rt_hyper_open_count>
  __rt_hyper_pending_emu_size = 0;
1c00adb0:	0207a623          	sw	zero,44(a5)
  __rt_hyper_pending_emu_size_2d = 0;
1c00adb4:	0407a023          	sw	zero,64(a5)
}
1c00adb8:	8082                	ret

1c00adba <rt_padframe_set>:
  return __builtin_pulp_read_then_spr_bit_clr(reg, val);
1c00adba:	300476f3          	csrrci	a3,mstatus,8

void rt_padframe_set(rt_padframe_profile_t *profile)
{
  int irq = rt_irq_disable();

  unsigned int *config = profile->config;
1c00adbe:	4158                	lw	a4,4(a0)
1c00adc0:	1a1047b7          	lui	a5,0x1a104
1c00adc4:	14078613          	addi	a2,a5,320 # 1a104140 <__l1_end+0xa104120>

  for (int i=0; i<ARCHI_APB_SOC_PADFUN_NB; i++)
  {
    hal_apb_soc_padfun_set(i, config[i]);
1c00adc8:	430c                	lw	a1,0(a4)
1c00adca:	c20c                	sw	a1,0(a2)
1c00adcc:	434c                	lw	a1,4(a4)
1c00adce:	14478613          	addi	a2,a5,324
1c00add2:	14878793          	addi	a5,a5,328
1c00add6:	c20c                	sw	a1,0(a2)
1c00add8:	4718                	lw	a4,8(a4)
1c00adda:	c398                	sw	a4,0(a5)
  __builtin_pulp_spr_write(reg, val);
1c00addc:	30069073          	csrw	mstatus,a3
  }

  rt_irq_restore(irq);
}
1c00ade0:	8082                	ret

1c00ade2 <__rt_padframe_init>:
  rt_padframe_set(&__rt_padframe_profiles[0]);
1c00ade2:	1c00d537          	lui	a0,0x1c00d
1c00ade6:	36050513          	addi	a0,a0,864 # 1c00d360 <__rt_padframe_profiles>
1c00adea:	fd1ff06f          	j	1c00adba <rt_padframe_set>

1c00adee <rt_extern_alloc_init>:
  }
  printf("=============================================\n");
}

int rt_extern_alloc_init(rt_extern_alloc_t *a, void *addr, int size)
{
1c00adee:	1101                	addi	sp,sp,-32
1c00adf0:	c84a                	sw	s2,16(sp)
1c00adf2:	ce06                	sw	ra,28(sp)
1c00adf4:	cc22                	sw	s0,24(sp)
1c00adf6:	ca26                	sw	s1,20(sp)
1c00adf8:	892a                	mv	s2,a0
  if (size)
1c00adfa:	c229                	beqz	a2,1c00ae3c <rt_extern_alloc_init+0x4e>
  {
    unsigned int start_addr = ALIGN_UP((int)addr, MIN_CHUNK_SIZE);
1c00adfc:	00758493          	addi	s1,a1,7
1c00ae00:	842e                	mv	s0,a1
  return (rt_alloc_chunk_extern_t *)rt_alloc(RT_ALLOC_FC_DATA, sizeof(rt_alloc_chunk_extern_t));
1c00ae02:	4505                	li	a0,1
1c00ae04:	45b1                	li	a1,12
1c00ae06:	c632                	sw	a2,12(sp)
1c00ae08:	d02fe0ef          	jal	ra,1c00930a <rt_alloc>
    unsigned int start_addr = ALIGN_UP((int)addr, MIN_CHUNK_SIZE);
1c00ae0c:	c404b4b3          	p.bclr	s1,s1,2,0
    rt_alloc_chunk_extern_t *chunk = __rt_alloc_chunk();
    if (chunk == NULL) return -1;
1c00ae10:	4632                	lw	a2,12(sp)
1c00ae12:	c905                	beqz	a0,1c00ae42 <rt_extern_alloc_init+0x54>
    size = size - (start_addr - (unsigned int)addr);
1c00ae14:	9432                	add	s0,s0,a2
1c00ae16:	8c05                	sub	s0,s0,s1
  }
  else
  {
    a->first_free = NULL;
  }
  return 0;
1c00ae18:	4601                	li	a2,0
    if (size > 0) {
1c00ae1a:	00805a63          	blez	s0,1c00ae2e <rt_extern_alloc_init+0x40>
      a->first_free = chunk;
1c00ae1e:	00a92023          	sw	a0,0(s2)
      chunk->size = ALIGN_DOWN(size, MIN_CHUNK_SIZE);
1c00ae22:	c4043433          	p.bclr	s0,s0,2,0
1c00ae26:	c100                	sw	s0,0(a0)
      chunk->next = NULL;
1c00ae28:	00052223          	sw	zero,4(a0)
      chunk->addr = start_addr;
1c00ae2c:	c504                	sw	s1,8(a0)
}
1c00ae2e:	40f2                	lw	ra,28(sp)
1c00ae30:	4462                	lw	s0,24(sp)
1c00ae32:	44d2                	lw	s1,20(sp)
1c00ae34:	4942                	lw	s2,16(sp)
1c00ae36:	8532                	mv	a0,a2
1c00ae38:	6105                	addi	sp,sp,32
1c00ae3a:	8082                	ret
    a->first_free = NULL;
1c00ae3c:	00052023          	sw	zero,0(a0)
1c00ae40:	b7fd                	j	1c00ae2e <rt_extern_alloc_init+0x40>
    if (chunk == NULL) return -1;
1c00ae42:	567d                	li	a2,-1
1c00ae44:	b7ed                	j	1c00ae2e <rt_extern_alloc_init+0x40>

1c00ae46 <rt_extern_alloc_deinit>:
  rt_free(RT_ALLOC_FC_DATA, (void *)pt, sizeof(rt_alloc_chunk_extern_t));
1c00ae46:	410c                	lw	a1,0(a0)
1c00ae48:	4631                	li	a2,12
1c00ae4a:	4505                	li	a0,1
1c00ae4c:	ceefe06f          	j	1c00933a <rt_free>

1c00ae50 <__pi_gpio_handler>:
  }
}


void __pi_gpio_handler(void *arg)
{
1c00ae50:	1141                	addi	sp,sp,-16
  return pulp_read32(ARCHI_GPIO_ADDR + ARCHI_GPIO_INTTYPE(id));
}

static inline unsigned int hal_gpio_intstatus_get()
{
  return pulp_read32(ARCHI_GPIO_ADDR + ARCHI_GPIO_INTSTATUS);
1c00ae52:	1a1017b7          	lui	a5,0x1a101
  (void) arg;

  /* Retrieve IRQ status from GPIO. Handle task if needed. */
  pi_gpio_t *gpio = &__rt_gpio[0];
  gpio->irq_status = hal_gpio_intstatus_get();
1c00ae56:	1c00d6b7          	lui	a3,0x1c00d
{
1c00ae5a:	c422                	sw	s0,8(sp)
1c00ae5c:	4f80                	lw	s0,24(a5)
  gpio->irq_status = hal_gpio_intstatus_get();
1c00ae5e:	79868793          	addi	a5,a3,1944 # 1c00d798 <__rt_gpio>
{
1c00ae62:	c226                	sw	s1,4(sp)

  if (gpio->cb != NULL)
1c00ae64:	4bc4                	lw	s1,20(a5)
{
1c00ae66:	c606                	sw	ra,12(sp)
  gpio->irq_status = hal_gpio_intstatus_get();
1c00ae68:	c780                	sw	s0,8(a5)
  if (gpio->cb != NULL)
1c00ae6a:	cc91                	beqz	s1,1c00ae86 <__pi_gpio_handler+0x36>
    if (irq_mask & tmp_cb->pin_mask)
1c00ae6c:	409c                	lw	a5,0(s1)
1c00ae6e:	8fe1                	and	a5,a5,s0
1c00ae70:	c781                	beqz	a5,1c00ae78 <__pi_gpio_handler+0x28>
      tmp_cb->handler(tmp_cb->args);
1c00ae72:	40dc                	lw	a5,4(s1)
1c00ae74:	4488                	lw	a0,8(s1)
1c00ae76:	9782                	jalr	a5
    tmp_cb = tmp_cb->next;
1c00ae78:	44c4                	lw	s1,12(s1)
  while (tmp_cb != NULL)
1c00ae7a:	f8ed                	bnez	s1,1c00ae6c <__pi_gpio_handler+0x1c>
      }
      irq_mask = irq_mask >> 1;
      pin++;
    }
  }
}
1c00ae7c:	40b2                	lw	ra,12(sp)
1c00ae7e:	4422                	lw	s0,8(sp)
1c00ae80:	4492                	lw	s1,4(sp)
1c00ae82:	0141                	addi	sp,sp,16
1c00ae84:	8082                	ret
1c00ae86:	79868693          	addi	a3,a3,1944
    irq_mask = (gpio->irq_status & gpio->input_mask);
1c00ae8a:	46dc                	lw	a5,12(a3)
    uint8_t pin = 0;
1c00ae8c:	4701                	li	a4,0
    irq_mask = (gpio->irq_status & gpio->input_mask);
1c00ae8e:	8fe1                	and	a5,a5,s0
1c00ae90:	01c00513          	li	a0,28
    while (irq_mask)
1c00ae94:	d7e5                	beqz	a5,1c00ae7c <__pi_gpio_handler+0x2c>
      if (irq_mask & 0x1)
1c00ae96:	fc17b633          	p.bclr	a2,a5,30,1
1c00ae9a:	c615                	beqz	a2,1c00aec6 <__pi_gpio_handler+0x76>
        task = gpio->event_task[pin];
1c00ae9c:	00470613          	addi	a2,a4,4
1c00aea0:	060a                	slli	a2,a2,0x2
1c00aea2:	9636                	add	a2,a2,a3
1c00aea4:	4610                	lw	a2,8(a2)
        if (task != NULL)
1c00aea6:	c205                	beqz	a2,1c00aec6 <__pi_gpio_handler+0x76>
  return __builtin_pulp_read_then_spr_bit_clr(reg, val);
1c00aea8:	30047873          	csrrci	a6,mstatus,8
  if (sched->first) {
1c00aeac:	01c02883          	lw	a7,28(zero) # 1c <_l1_preload_size>
  event->next = NULL;
1c00aeb0:	00062023          	sw	zero,0(a2)
  if (sched->first) {
1c00aeb4:	00088e63          	beqz	a7,1c00aed0 <__pi_gpio_handler+0x80>
    sched->last->next = event;
1c00aeb8:	00452883          	lw	a7,4(a0)
1c00aebc:	00c8a023          	sw	a2,0(a7)
  sched->last = event;
1c00aec0:	c150                	sw	a2,4(a0)
  __builtin_pulp_spr_write(reg, val);
1c00aec2:	30081073          	csrw	mstatus,a6
      pin++;
1c00aec6:	0705                	addi	a4,a4,1
      irq_mask = irq_mask >> 1;
1c00aec8:	8385                	srli	a5,a5,0x1
      pin++;
1c00aeca:	0ff77713          	andi	a4,a4,255
1c00aece:	b7d9                	j	1c00ae94 <__pi_gpio_handler+0x44>
    sched->first = event;
1c00aed0:	00c02e23          	sw	a2,28(zero) # 1c <_l1_preload_size>
1c00aed4:	b7f5                	j	1c00aec0 <__pi_gpio_handler+0x70>

1c00aed6 <__rt_i2s_resume>:
  conf->pdm = 1;
  conf->dual = 0;
  conf->width = 16;
  conf->id = -1;
  conf->flags = 0;
}
1c00aed6:	1c00e7b7          	lui	a5,0x1c00e
1c00aeda:	4d18                	lw	a4,24(a0)
1c00aedc:	92c7a783          	lw	a5,-1748(a5) # 1c00d92c <__rt_freq_domains>
1c00aee0:	068416b7          	lui	a3,0x6841
1c00aee4:	90968693          	addi	a3,a3,-1783 # 6840909 <__L2+0x67c0909>
1c00aee8:	02e7c7b3          	div	a5,a5,a4
1c00aeec:	02954703          	lbu	a4,41(a0)
1c00aef0:	177d                	addi	a4,a4,-1
1c00aef2:	c0874733          	p.bset	a4,a4,0,8
1c00aef6:	17fd                	addi	a5,a5,-1
1c00aef8:	8785                	srai	a5,a5,0x1
1c00aefa:	07c2                	slli	a5,a5,0x10
1c00aefc:	8fd9                	or	a5,a5,a4
1c00aefe:	02554703          	lbu	a4,37(a0)
1c00af02:	9736                	add	a4,a4,a3
1c00af04:	070a                	slli	a4,a4,0x2
1c00af06:	c31c                	sw	a5,0(a4)
1c00af08:	8082                	ret

1c00af0a <__rt_i2s_setfreq_after>:
1c00af0a:	1141                	addi	sp,sp,-16
1c00af0c:	1c00e7b7          	lui	a5,0x1c00e
1c00af10:	c422                	sw	s0,8(sp)
1c00af12:	9007a403          	lw	s0,-1792(a5) # 1c00d900 <__rt_i2s_first>
1c00af16:	c606                	sw	ra,12(sp)
1c00af18:	e411                	bnez	s0,1c00af24 <__rt_i2s_setfreq_after+0x1a>
1c00af1a:	40b2                	lw	ra,12(sp)
1c00af1c:	4422                	lw	s0,8(sp)
1c00af1e:	4501                	li	a0,0
1c00af20:	0141                	addi	sp,sp,16
1c00af22:	8082                	ret
1c00af24:	02844783          	lbu	a5,40(s0)
1c00af28:	c781                	beqz	a5,1c00af30 <__rt_i2s_setfreq_after+0x26>
1c00af2a:	8522                	mv	a0,s0
1c00af2c:	fabff0ef          	jal	ra,1c00aed6 <__rt_i2s_resume>
1c00af30:	4c40                	lw	s0,28(s0)
1c00af32:	b7dd                	j	1c00af18 <__rt_i2s_setfreq_after+0xe>

1c00af34 <__rt_i2s_setfreq_before>:
1c00af34:	1c00e7b7          	lui	a5,0x1c00e
1c00af38:	9007a783          	lw	a5,-1792(a5) # 1c00d900 <__rt_i2s_first>
1c00af3c:	068416b7          	lui	a3,0x6841
1c00af40:	90968693          	addi	a3,a3,-1783 # 6840909 <__L2+0x67c0909>
1c00af44:	e399                	bnez	a5,1c00af4a <__rt_i2s_setfreq_before+0x16>
1c00af46:	4501                	li	a0,0
1c00af48:	8082                	ret
1c00af4a:	0287c703          	lbu	a4,40(a5)
1c00af4e:	c719                	beqz	a4,1c00af5c <__rt_i2s_setfreq_before+0x28>
1c00af50:	0257c703          	lbu	a4,37(a5)
1c00af54:	9736                	add	a4,a4,a3
1c00af56:	070a                	slli	a4,a4,0x2
1c00af58:	00072023          	sw	zero,0(a4)
1c00af5c:	4fdc                	lw	a5,28(a5)
1c00af5e:	b7dd                	j	1c00af44 <__rt_i2s_setfreq_before+0x10>

1c00af60 <__rt_i2s_init>:
{
  // In case the peripheral clock can dynamically change, we need to be notified
  // when this happens so that the I2S channels are stopped and resumed
  int err = 0;

  err |= __rt_cbsys_add(RT_CBSYS_PERIPH_SETFREQ_BEFORE, __rt_i2s_setfreq_before, NULL);
1c00af60:	1c00b5b7          	lui	a1,0x1c00b
{
1c00af64:	1141                	addi	sp,sp,-16
  err |= __rt_cbsys_add(RT_CBSYS_PERIPH_SETFREQ_BEFORE, __rt_i2s_setfreq_before, NULL);
1c00af66:	4601                	li	a2,0
1c00af68:	f3458593          	addi	a1,a1,-204 # 1c00af34 <__rt_i2s_setfreq_before>
1c00af6c:	4511                	li	a0,4
{
1c00af6e:	c606                	sw	ra,12(sp)
1c00af70:	c422                	sw	s0,8(sp)
  err |= __rt_cbsys_add(RT_CBSYS_PERIPH_SETFREQ_BEFORE, __rt_i2s_setfreq_before, NULL);
1c00af72:	d0dfd0ef          	jal	ra,1c008c7e <__rt_cbsys_add>

  err |= __rt_cbsys_add(RT_CBSYS_PERIPH_SETFREQ_AFTER, __rt_i2s_setfreq_after, NULL);
1c00af76:	1c00b5b7          	lui	a1,0x1c00b
  err |= __rt_cbsys_add(RT_CBSYS_PERIPH_SETFREQ_BEFORE, __rt_i2s_setfreq_before, NULL);
1c00af7a:	842a                	mv	s0,a0
  err |= __rt_cbsys_add(RT_CBSYS_PERIPH_SETFREQ_AFTER, __rt_i2s_setfreq_after, NULL);
1c00af7c:	4601                	li	a2,0
1c00af7e:	f0a58593          	addi	a1,a1,-246 # 1c00af0a <__rt_i2s_setfreq_after>
1c00af82:	4515                	li	a0,5
1c00af84:	cfbfd0ef          	jal	ra,1c008c7e <__rt_cbsys_add>
1c00af88:	8d41                	or	a0,a0,s0

  if (err) rt_fatal("Unable to initialize i2s driver\n");
1c00af8a:	c105                	beqz	a0,1c00afaa <__rt_i2s_init+0x4a>
  asm("csrr %0, 0x014" : "=r" (hart_id) : );
1c00af8c:	01402673          	csrr	a2,uhartid
1c00af90:	1c00d537          	lui	a0,0x1c00d
  return (hart_id >> 5) & 0x3f;
1c00af94:	40565593          	srai	a1,a2,0x5
1c00af98:	f265b5b3          	p.bclr	a1,a1,25,6
1c00af9c:	f4563633          	p.bclr	a2,a2,26,5
1c00afa0:	18450513          	addi	a0,a0,388 # 1c00d184 <__hyper_pad+0x50>
1c00afa4:	784000ef          	jal	ra,1c00b728 <printf>
1c00afa8:	2711                	jal	1c00b6ac <abort>
}
1c00afaa:	40b2                	lw	ra,12(sp)
1c00afac:	4422                	lw	s0,8(sp)
1c00afae:	0141                	addi	sp,sp,16
1c00afb0:	8082                	ret

1c00afb2 <__rt_himax_init>:
    .capture   = &__rt_himax_capture
};

RT_FC_BOOT_CODE void __attribute__((constructor)) __rt_himax_init()
{
  camera_isAwaked = 0;
1c00afb2:	1b0017b7          	lui	a5,0x1b001
1c00afb6:	ba078c23          	sb	zero,-1096(a5) # 1b000bb8 <camera_isAwaked>
}
1c00afba:	8082                	ret

1c00afbc <__rt_rtc_init>:
}


RT_FC_BOOT_CODE void __attribute__((constructor)) __rt_rtc_init()
{
  __rtc_handler = NULL;
1c00afbc:	35800793          	li	a5,856
1c00afc0:	0207ac23          	sw	zero,56(a5)
  dev_rtc.open_count = 0;
1c00afc4:	02078823          	sb	zero,48(a5)
  __rt_rtc_init_done = 0;
1c00afc8:	0207aa23          	sw	zero,52(a5)
}
1c00afcc:	8082                	ret

1c00afce <__rt_spim_init>:

RT_FC_BOOT_CODE void __attribute__((constructor)) __rt_spim_init()
{
  for (int i=0; i<ARCHI_UDMA_NB_SPIM; i++)
  {
    __rt_spim_open_count[i] = 0;
1c00afce:	1c00e7b7          	lui	a5,0x1c00e
1c00afd2:	90478793          	addi	a5,a5,-1788 # 1c00d904 <__rt_spim_open_count>
1c00afd6:	0007a023          	sw	zero,0(a5)
1c00afda:	0007a223          	sw	zero,4(a5)
  }
}
1c00afde:	8082                	ret

1c00afe0 <__rt_io_end_of_flush>:
  if (rt_iodev() == RT_IODEV_UART)
  {
    __rt_io_start(NULL);
    __rt_cbsys_add(RT_CBSYS_STOP, __rt_io_stop, NULL);
    __rt_io_pending_flush = 0;
    rt_event_alloc(NULL, 1);
1c00afe0:	1c00e7b7          	lui	a5,0x1c00e
1c00afe4:	9007a823          	sw	zero,-1776(a5) # 1c00d910 <__rt_io_pending_flush>
1c00afe8:	00052c23          	sw	zero,24(a0)
1c00afec:	8082                	ret

1c00afee <__rt_io_uart_wait_req>:
1c00afee:	1141                	addi	sp,sp,-16
1c00aff0:	c226                	sw	s1,4(sp)
1c00aff2:	84aa                	mv	s1,a0
1c00aff4:	c606                	sw	ra,12(sp)
1c00aff6:	c422                	sw	s0,8(sp)
1c00aff8:	c04a                	sw	s2,0(sp)
1c00affa:	30047973          	csrrci	s2,mstatus,8
1c00affe:	1c00e437          	lui	s0,0x1c00e
1c00b002:	90c40413          	addi	s0,s0,-1780 # 1c00d90c <__rt_io_event_current>
1c00b006:	4008                	lw	a0,0(s0)
1c00b008:	c509                	beqz	a0,1c00b012 <__rt_io_uart_wait_req+0x24>
1c00b00a:	a14fe0ef          	jal	ra,1c00921e <rt_event_wait>
1c00b00e:	00042023          	sw	zero,0(s0)
1c00b012:	4785                	li	a5,1
1c00b014:	08f48023          	sb	a5,128(s1)
1c00b018:	0814c783          	lbu	a5,129(s1)
1c00b01c:	00201737          	lui	a4,0x201
1c00b020:	e0470713          	addi	a4,a4,-508 # 200e04 <__L2+0x180e04>
1c00b024:	04078793          	addi	a5,a5,64
1c00b028:	07da                	slli	a5,a5,0x16
1c00b02a:	0007e723          	p.sw	zero,a4(a5)
1c00b02e:	30091073          	csrw	mstatus,s2
1c00b032:	40b2                	lw	ra,12(sp)
1c00b034:	4422                	lw	s0,8(sp)
1c00b036:	4492                	lw	s1,4(sp)
1c00b038:	4902                	lw	s2,0(sp)
1c00b03a:	0141                	addi	sp,sp,16
1c00b03c:	8082                	ret

1c00b03e <__rt_do_putc_host>:
1c00b03e:	1c00e737          	lui	a4,0x1c00e
1c00b042:	91470793          	addi	a5,a4,-1772 # 1c00d914 <__rt_putc_host_buffer_index>
1c00b046:	4390                	lw	a2,0(a5)
1c00b048:	91470713          	addi	a4,a4,-1772
1c00b04c:	00160693          	addi	a3,a2,1
1c00b050:	c394                	sw	a3,0(a5)
1c00b052:	1c00d7b7          	lui	a5,0x1c00d
1c00b056:	47478593          	addi	a1,a5,1140 # 1c00d474 <__rt_putc_host_buffer>
1c00b05a:	00a5c623          	p.sb	a0,a2(a1)
1c00b05e:	07f00593          	li	a1,127
1c00b062:	47478613          	addi	a2,a5,1140
1c00b066:	00b68463          	beq	a3,a1,1c00b06e <__rt_do_putc_host+0x30>
1c00b06a:	00a53a63          	p.bneimm	a0,10,1c00b07e <__rt_do_putc_host+0x40>
1c00b06e:	47478513          	addi	a0,a5,1140
1c00b072:	000646a3          	p.sb	zero,a3(a2)
1c00b076:	00072023          	sw	zero,0(a4)
1c00b07a:	fdcfd06f          	j	1c008856 <semihost_write0>
1c00b07e:	8082                	ret

1c00b080 <__rt_io_start>:
1c00b080:	1101                	addi	sp,sp,-32
1c00b082:	0028                	addi	a0,sp,8
1c00b084:	ce06                	sw	ra,28(sp)
1c00b086:	cc22                	sw	s0,24(sp)
1c00b088:	3ee010ef          	jal	ra,1c00c476 <rt_uart_conf_init>
1c00b08c:	4585                	li	a1,1
1c00b08e:	4501                	li	a0,0
1c00b090:	828fe0ef          	jal	ra,1c0090b8 <rt_event_alloc>
1c00b094:	547d                	li	s0,-1
1c00b096:	ed0d                	bnez	a0,1c00b0d0 <__rt_io_start+0x50>
1c00b098:	1c00d7b7          	lui	a5,0x1c00d
1c00b09c:	4407a783          	lw	a5,1088(a5) # 1c00d440 <__rt_iodev_uart_baudrate>
1c00b0a0:	842a                	mv	s0,a0
1c00b0a2:	1c00e537          	lui	a0,0x1c00e
1c00b0a6:	01c00593          	li	a1,28
1c00b0aa:	83050513          	addi	a0,a0,-2000 # 1c00d830 <__rt_io_event>
1c00b0ae:	c43e                	sw	a5,8(sp)
1c00b0b0:	fc9fd0ef          	jal	ra,1c009078 <__rt_event_init>
1c00b0b4:	1c00e7b7          	lui	a5,0x1c00e
1c00b0b8:	8c07a503          	lw	a0,-1856(a5) # 1c00d8c0 <__rt_iodev_uart_channel>
1c00b0bc:	4681                	li	a3,0
1c00b0be:	4601                	li	a2,0
1c00b0c0:	002c                	addi	a1,sp,8
1c00b0c2:	0511                	addi	a0,a0,4
1c00b0c4:	3c2010ef          	jal	ra,1c00c486 <__rt_uart_open>
1c00b0c8:	1c00e7b7          	lui	a5,0x1c00e
1c00b0cc:	90a7ac23          	sw	a0,-1768(a5) # 1c00d918 <_rt_io_uart>
1c00b0d0:	8522                	mv	a0,s0
1c00b0d2:	40f2                	lw	ra,28(sp)
1c00b0d4:	4462                	lw	s0,24(sp)
1c00b0d6:	6105                	addi	sp,sp,32
1c00b0d8:	8082                	ret

1c00b0da <rt_event_execute.isra.4.constprop.12>:
1c00b0da:	1141                	addi	sp,sp,-16
1c00b0dc:	c606                	sw	ra,12(sp)
1c00b0de:	c422                	sw	s0,8(sp)
1c00b0e0:	30047473          	csrrci	s0,mstatus,8
1c00b0e4:	4585                	li	a1,1
1c00b0e6:	01c00513          	li	a0,28
1c00b0ea:	8a4fe0ef          	jal	ra,1c00918e <__rt_event_execute>
1c00b0ee:	30041073          	csrw	mstatus,s0
1c00b0f2:	40b2                	lw	ra,12(sp)
1c00b0f4:	4422                	lw	s0,8(sp)
1c00b0f6:	0141                	addi	sp,sp,16
1c00b0f8:	8082                	ret

1c00b0fa <__rt_io_lock>:
1c00b0fa:	1c00d7b7          	lui	a5,0x1c00d
1c00b0fe:	3887a783          	lw	a5,904(a5) # 1c00d388 <__hal_debug_struct+0x10>
1c00b102:	cf81                	beqz	a5,1c00b11a <__rt_io_lock+0x20>
1c00b104:	1c00e7b7          	lui	a5,0x1c00e
1c00b108:	9187a783          	lw	a5,-1768(a5) # 1c00d918 <_rt_io_uart>
1c00b10c:	e799                	bnez	a5,1c00b11a <__rt_io_lock+0x20>
1c00b10e:	1c00d7b7          	lui	a5,0x1c00d
1c00b112:	43c7a783          	lw	a5,1084(a5) # 1c00d43c <__rt_iodev>
1c00b116:	0427b963          	p.bneimm	a5,2,1c00b168 <__rt_io_lock+0x6e>
1c00b11a:	7135                	addi	sp,sp,-160
1c00b11c:	014027f3          	csrr	a5,uhartid
1c00b120:	cf06                	sw	ra,156(sp)
1c00b122:	ca5797b3          	p.extractu	a5,a5,5,5
1c00b126:	02000713          	li	a4,32
1c00b12a:	1b001537          	lui	a0,0x1b001
1c00b12e:	00e79963          	bne	a5,a4,1c00b140 <__rt_io_lock+0x46>
1c00b132:	bbc50513          	addi	a0,a0,-1092 # 1b000bbc <__rt_io_fc_lock>
1c00b136:	bd9fd0ef          	jal	ra,1c008d0e <__rt_fc_lock>
1c00b13a:	40fa                	lw	ra,156(sp)
1c00b13c:	610d                	addi	sp,sp,160
1c00b13e:	8082                	ret
1c00b140:	004c                	addi	a1,sp,4
1c00b142:	bbc50513          	addi	a0,a0,-1092
1c00b146:	c2ffd0ef          	jal	ra,1c008d74 <__rt_fc_cluster_lock>
1c00b14a:	4689                	li	a3,2
1c00b14c:	00204737          	lui	a4,0x204
1c00b150:	08c14783          	lbu	a5,140(sp)
1c00b154:	0ff7f793          	andi	a5,a5,255
1c00b158:	f3ed                	bnez	a5,1c00b13a <__rt_io_lock+0x40>
1c00b15a:	00d72423          	sw	a3,8(a4) # 204008 <__L2+0x184008>
1c00b15e:	03c76783          	p.elw	a5,60(a4)
1c00b162:	00d72223          	sw	a3,4(a4)
1c00b166:	b7ed                	j	1c00b150 <__rt_io_lock+0x56>
1c00b168:	8082                	ret

1c00b16a <__rt_putc_host_cluster_req>:
1c00b16a:	1141                	addi	sp,sp,-16
1c00b16c:	c422                	sw	s0,8(sp)
1c00b16e:	c606                	sw	ra,12(sp)
1c00b170:	842a                	mv	s0,a0
1c00b172:	08954503          	lbu	a0,137(a0)
1c00b176:	ec9ff0ef          	jal	ra,1c00b03e <__rt_do_putc_host>
1c00b17a:	08844783          	lbu	a5,136(s0)
1c00b17e:	4705                	li	a4,1
1c00b180:	08e42223          	sw	a4,132(s0)
1c00b184:	00201737          	lui	a4,0x201
1c00b188:	40b2                	lw	ra,12(sp)
1c00b18a:	4422                	lw	s0,8(sp)
1c00b18c:	04078793          	addi	a5,a5,64
1c00b190:	07da                	slli	a5,a5,0x16
1c00b192:	e0470713          	addi	a4,a4,-508 # 200e04 <__L2+0x180e04>
1c00b196:	0007e723          	p.sw	zero,a4(a5)
1c00b19a:	0141                	addi	sp,sp,16
1c00b19c:	8082                	ret

1c00b19e <__rt_io_unlock>:
1c00b19e:	1c00d7b7          	lui	a5,0x1c00d
1c00b1a2:	3887a783          	lw	a5,904(a5) # 1c00d388 <__hal_debug_struct+0x10>
1c00b1a6:	cf81                	beqz	a5,1c00b1be <__rt_io_unlock+0x20>
1c00b1a8:	1c00e7b7          	lui	a5,0x1c00e
1c00b1ac:	9187a783          	lw	a5,-1768(a5) # 1c00d918 <_rt_io_uart>
1c00b1b0:	e799                	bnez	a5,1c00b1be <__rt_io_unlock+0x20>
1c00b1b2:	1c00d7b7          	lui	a5,0x1c00d
1c00b1b6:	43c7a783          	lw	a5,1084(a5) # 1c00d43c <__rt_iodev>
1c00b1ba:	0427b963          	p.bneimm	a5,2,1c00b20c <__rt_io_unlock+0x6e>
1c00b1be:	7135                	addi	sp,sp,-160
1c00b1c0:	014027f3          	csrr	a5,uhartid
1c00b1c4:	cf06                	sw	ra,156(sp)
1c00b1c6:	ca5797b3          	p.extractu	a5,a5,5,5
1c00b1ca:	02000713          	li	a4,32
1c00b1ce:	1b001537          	lui	a0,0x1b001
1c00b1d2:	00e79963          	bne	a5,a4,1c00b1e4 <__rt_io_unlock+0x46>
1c00b1d6:	bbc50513          	addi	a0,a0,-1092 # 1b000bbc <__rt_io_fc_lock>
1c00b1da:	b67fd0ef          	jal	ra,1c008d40 <__rt_fc_unlock>
1c00b1de:	40fa                	lw	ra,156(sp)
1c00b1e0:	610d                	addi	sp,sp,160
1c00b1e2:	8082                	ret
1c00b1e4:	004c                	addi	a1,sp,4
1c00b1e6:	bbc50513          	addi	a0,a0,-1092
1c00b1ea:	bc3fd0ef          	jal	ra,1c008dac <__rt_fc_cluster_unlock>
1c00b1ee:	4689                	li	a3,2
1c00b1f0:	00204737          	lui	a4,0x204
1c00b1f4:	08c14783          	lbu	a5,140(sp)
1c00b1f8:	0ff7f793          	andi	a5,a5,255
1c00b1fc:	f3ed                	bnez	a5,1c00b1de <__rt_io_unlock+0x40>
1c00b1fe:	00d72423          	sw	a3,8(a4) # 204008 <__L2+0x184008>
1c00b202:	03c76783          	p.elw	a5,60(a4)
1c00b206:	00d72223          	sw	a3,4(a4)
1c00b20a:	b7ed                	j	1c00b1f4 <__rt_io_unlock+0x56>
1c00b20c:	8082                	ret

1c00b20e <__rt_io_uart_flush.constprop.11>:
1c00b20e:	7171                	addi	sp,sp,-176
1c00b210:	d522                	sw	s0,168(sp)
1c00b212:	d706                	sw	ra,172(sp)
1c00b214:	d326                	sw	s1,164(sp)
1c00b216:	d14a                	sw	s2,160(sp)
1c00b218:	cf4e                	sw	s3,156(sp)
1c00b21a:	cd52                	sw	s4,152(sp)
1c00b21c:	1c00e437          	lui	s0,0x1c00e
1c00b220:	91042783          	lw	a5,-1776(s0) # 1c00d910 <__rt_io_pending_flush>
1c00b224:	91040993          	addi	s3,s0,-1776
1c00b228:	efad                	bnez	a5,1c00b2a2 <__rt_io_uart_flush.constprop.11+0x94>
1c00b22a:	1c00d637          	lui	a2,0x1c00d
1c00b22e:	37860793          	addi	a5,a2,888 # 1c00d378 <__hal_debug_struct>
1c00b232:	4f80                	lw	s0,24(a5)
1c00b234:	37860a13          	addi	s4,a2,888
1c00b238:	cc29                	beqz	s0,1c00b292 <__rt_io_uart_flush.constprop.11+0x84>
1c00b23a:	1c00e737          	lui	a4,0x1c00e
1c00b23e:	014027f3          	csrr	a5,uhartid
1c00b242:	91872483          	lw	s1,-1768(a4) # 1c00d918 <_rt_io_uart>
1c00b246:	ca5797b3          	p.extractu	a5,a5,5,5
1c00b24a:	02000713          	li	a4,32
1c00b24e:	1c00d937          	lui	s2,0x1c00d
1c00b252:	06e79263          	bne	a5,a4,1c00b2b6 <__rt_io_uart_flush.constprop.11+0xa8>
1c00b256:	1c00b5b7          	lui	a1,0x1c00b
1c00b25a:	4785                	li	a5,1
1c00b25c:	37860613          	addi	a2,a2,888
1c00b260:	fe058593          	addi	a1,a1,-32 # 1c00afe0 <__rt_io_end_of_flush>
1c00b264:	4501                	li	a0,0
1c00b266:	00f9a023          	sw	a5,0(s3)
1c00b26a:	ec5fd0ef          	jal	ra,1c00912e <rt_event_get>
1c00b26e:	40cc                	lw	a1,4(s1)
1c00b270:	87aa                	mv	a5,a0
1c00b272:	4701                	li	a4,0
1c00b274:	0586                	slli	a1,a1,0x1
1c00b276:	86a2                	mv	a3,s0
1c00b278:	39490613          	addi	a2,s2,916 # 1c00d394 <__hal_debug_struct+0x1c>
1c00b27c:	0585                	addi	a1,a1,1
1c00b27e:	4501                	li	a0,0
1c00b280:	c28fe0ef          	jal	ra,1c0096a8 <rt_periph_copy>
1c00b284:	f1bff0ef          	jal	ra,1c00b19e <__rt_io_unlock>
1c00b288:	0009a783          	lw	a5,0(s3)
1c00b28c:	e395                	bnez	a5,1c00b2b0 <__rt_io_uart_flush.constprop.11+0xa2>
1c00b28e:	e6dff0ef          	jal	ra,1c00b0fa <__rt_io_lock>
1c00b292:	50ba                	lw	ra,172(sp)
1c00b294:	542a                	lw	s0,168(sp)
1c00b296:	549a                	lw	s1,164(sp)
1c00b298:	590a                	lw	s2,160(sp)
1c00b29a:	49fa                	lw	s3,156(sp)
1c00b29c:	4a6a                	lw	s4,152(sp)
1c00b29e:	614d                	addi	sp,sp,176
1c00b2a0:	8082                	ret
1c00b2a2:	efdff0ef          	jal	ra,1c00b19e <__rt_io_unlock>
1c00b2a6:	e35ff0ef          	jal	ra,1c00b0da <rt_event_execute.isra.4.constprop.12>
1c00b2aa:	e51ff0ef          	jal	ra,1c00b0fa <__rt_io_lock>
1c00b2ae:	bf8d                	j	1c00b220 <__rt_io_uart_flush.constprop.11+0x12>
1c00b2b0:	e2bff0ef          	jal	ra,1c00b0da <rt_event_execute.isra.4.constprop.12>
1c00b2b4:	bfd1                	j	1c00b288 <__rt_io_uart_flush.constprop.11+0x7a>
1c00b2b6:	868a                	mv	a3,sp
1c00b2b8:	8622                	mv	a2,s0
1c00b2ba:	39490593          	addi	a1,s2,916
1c00b2be:	8526                	mv	a0,s1
1c00b2c0:	2a2010ef          	jal	ra,1c00c562 <rt_uart_cluster_write>
1c00b2c4:	4689                	li	a3,2
1c00b2c6:	00204737          	lui	a4,0x204
1c00b2ca:	08c14783          	lbu	a5,140(sp)
1c00b2ce:	0ff7f793          	andi	a5,a5,255
1c00b2d2:	c781                	beqz	a5,1c00b2da <__rt_io_uart_flush.constprop.11+0xcc>
1c00b2d4:	000a2c23          	sw	zero,24(s4)
1c00b2d8:	bf6d                	j	1c00b292 <__rt_io_uart_flush.constprop.11+0x84>
1c00b2da:	00d72423          	sw	a3,8(a4) # 204008 <__L2+0x184008>
1c00b2de:	03c76783          	p.elw	a5,60(a4)
1c00b2e2:	00d72223          	sw	a3,4(a4)
1c00b2e6:	b7d5                	j	1c00b2ca <__rt_io_uart_flush.constprop.11+0xbc>

1c00b2e8 <__rt_io_uart_wait_pending>:
1c00b2e8:	7135                	addi	sp,sp,-160
1c00b2ea:	cd22                	sw	s0,152(sp)
1c00b2ec:	cf06                	sw	ra,156(sp)
1c00b2ee:	1c00e437          	lui	s0,0x1c00e
1c00b2f2:	91042783          	lw	a5,-1776(s0) # 1c00d910 <__rt_io_pending_flush>
1c00b2f6:	eb85                	bnez	a5,1c00b326 <__rt_io_uart_wait_pending+0x3e>
1c00b2f8:	1c00e437          	lui	s0,0x1c00e
1c00b2fc:	90c40413          	addi	s0,s0,-1780 # 1c00d90c <__rt_io_event_current>
1c00b300:	4008                	lw	a0,0(s0)
1c00b302:	cd11                	beqz	a0,1c00b31e <__rt_io_uart_wait_pending+0x36>
1c00b304:	014027f3          	csrr	a5,uhartid
1c00b308:	8795                	srai	a5,a5,0x5
1c00b30a:	f267b7b3          	p.bclr	a5,a5,25,6
1c00b30e:	02000713          	li	a4,32
1c00b312:	02e79163          	bne	a5,a4,1c00b334 <__rt_io_uart_wait_pending+0x4c>
1c00b316:	f09fd0ef          	jal	ra,1c00921e <rt_event_wait>
1c00b31a:	00042023          	sw	zero,0(s0)
1c00b31e:	40fa                	lw	ra,156(sp)
1c00b320:	446a                	lw	s0,152(sp)
1c00b322:	610d                	addi	sp,sp,160
1c00b324:	8082                	ret
1c00b326:	e79ff0ef          	jal	ra,1c00b19e <__rt_io_unlock>
1c00b32a:	db1ff0ef          	jal	ra,1c00b0da <rt_event_execute.isra.4.constprop.12>
1c00b32e:	dcdff0ef          	jal	ra,1c00b0fa <__rt_io_lock>
1c00b332:	b7c1                	j	1c00b2f2 <__rt_io_uart_wait_pending+0xa>
1c00b334:	08f106a3          	sb	a5,141(sp)
1c00b338:	1c00b7b7          	lui	a5,0x1c00b
1c00b33c:	fee78793          	addi	a5,a5,-18 # 1c00afee <__rt_io_uart_wait_req>
1c00b340:	4705                	li	a4,1
1c00b342:	c83e                	sw	a5,16(sp)
1c00b344:	0068                	addi	a0,sp,12
1c00b346:	1c00e7b7          	lui	a5,0x1c00e
1c00b34a:	84e7aa23          	sw	a4,-1964(a5) # 1c00d854 <__rt_io_event+0x24>
1c00b34e:	08010623          	sb	zero,140(sp)
1c00b352:	d802                	sw	zero,48(sp)
1c00b354:	da02                	sw	zero,52(sp)
1c00b356:	ca2a                	sw	a0,20(sp)
1c00b358:	ed1fe0ef          	jal	ra,1c00a228 <__rt_cluster_push_fc_event>
1c00b35c:	4689                	li	a3,2
1c00b35e:	00204737          	lui	a4,0x204
1c00b362:	08c14783          	lbu	a5,140(sp)
1c00b366:	0ff7f793          	andi	a5,a5,255
1c00b36a:	fbd5                	bnez	a5,1c00b31e <__rt_io_uart_wait_pending+0x36>
1c00b36c:	00d72423          	sw	a3,8(a4) # 204008 <__L2+0x184008>
1c00b370:	03c76783          	p.elw	a5,60(a4)
1c00b374:	00d72223          	sw	a3,4(a4)
1c00b378:	b7ed                	j	1c00b362 <__rt_io_uart_wait_pending+0x7a>

1c00b37a <__rt_io_stop>:
1c00b37a:	1141                	addi	sp,sp,-16
1c00b37c:	c422                	sw	s0,8(sp)
1c00b37e:	1c00e437          	lui	s0,0x1c00e
1c00b382:	c606                	sw	ra,12(sp)
1c00b384:	91840413          	addi	s0,s0,-1768 # 1c00d918 <_rt_io_uart>
1c00b388:	f61ff0ef          	jal	ra,1c00b2e8 <__rt_io_uart_wait_pending>
1c00b38c:	4008                	lw	a0,0(s0)
1c00b38e:	4581                	li	a1,0
1c00b390:	184010ef          	jal	ra,1c00c514 <rt_uart_close>
1c00b394:	40b2                	lw	ra,12(sp)
1c00b396:	00042023          	sw	zero,0(s0)
1c00b39a:	4422                	lw	s0,8(sp)
1c00b39c:	4501                	li	a0,0
1c00b39e:	0141                	addi	sp,sp,16
1c00b3a0:	8082                	ret

1c00b3a2 <strcmp>:
1c00b3a2:	0015478b          	p.lbu	a5,1(a0!)
1c00b3a6:	0015c70b          	p.lbu	a4,1(a1!)
1c00b3aa:	c399                	beqz	a5,1c00b3b0 <strcmp+0xe>
1c00b3ac:	fee78be3          	beq	a5,a4,1c00b3a2 <strcmp>
1c00b3b0:	40e78533          	sub	a0,a5,a4
1c00b3b4:	8082                	ret

1c00b3b6 <strncmp>:
1c00b3b6:	ce11                	beqz	a2,1c00b3d2 <strncmp+0x1c>
1c00b3b8:	962a                	add	a2,a2,a0
1c00b3ba:	0015478b          	p.lbu	a5,1(a0!)
1c00b3be:	0015c70b          	p.lbu	a4,1(a1!)
1c00b3c2:	00e79563          	bne	a5,a4,1c00b3cc <strncmp+0x16>
1c00b3c6:	00c50363          	beq	a0,a2,1c00b3cc <strncmp+0x16>
1c00b3ca:	fbe5                	bnez	a5,1c00b3ba <strncmp+0x4>
1c00b3cc:	40e78533          	sub	a0,a5,a4
1c00b3d0:	8082                	ret
1c00b3d2:	4501                	li	a0,0
1c00b3d4:	8082                	ret

1c00b3d6 <strlen>:
1c00b3d6:	87aa                	mv	a5,a0
1c00b3d8:	0007c703          	lbu	a4,0(a5)
1c00b3dc:	00178693          	addi	a3,a5,1
1c00b3e0:	e701                	bnez	a4,1c00b3e8 <strlen+0x12>
1c00b3e2:	40a78533          	sub	a0,a5,a0
1c00b3e6:	8082                	ret
1c00b3e8:	87b6                	mv	a5,a3
1c00b3ea:	b7fd                	j	1c00b3d8 <strlen+0x2>

1c00b3ec <memset>:
1c00b3ec:	962a                	add	a2,a2,a0
1c00b3ee:	87aa                	mv	a5,a0
1c00b3f0:	00c79363          	bne	a5,a2,1c00b3f6 <memset+0xa>
1c00b3f4:	8082                	ret
1c00b3f6:	00b780ab          	p.sb	a1,1(a5!)
1c00b3fa:	bfdd                	j	1c00b3f0 <memset+0x4>

1c00b3fc <memcpy>:
1c00b3fc:	00a5e733          	or	a4,a1,a0
1c00b400:	fa273733          	p.bclr	a4,a4,29,2
1c00b404:	87aa                	mv	a5,a0
1c00b406:	c709                	beqz	a4,1c00b410 <memcpy+0x14>
1c00b408:	962e                	add	a2,a2,a1
1c00b40a:	00c59f63          	bne	a1,a2,1c00b428 <memcpy+0x2c>
1c00b40e:	8082                	ret
1c00b410:	fa263733          	p.bclr	a4,a2,29,2
1c00b414:	fb75                	bnez	a4,1c00b408 <memcpy+0xc>
1c00b416:	962e                	add	a2,a2,a1
1c00b418:	00c59363          	bne	a1,a2,1c00b41e <memcpy+0x22>
1c00b41c:	8082                	ret
1c00b41e:	0045a70b          	p.lw	a4,4(a1!)
1c00b422:	00e7a22b          	p.sw	a4,4(a5!)
1c00b426:	bfcd                	j	1c00b418 <memcpy+0x1c>
1c00b428:	0015c70b          	p.lbu	a4,1(a1!)
1c00b42c:	00e780ab          	p.sb	a4,1(a5!)
1c00b430:	bfe9                	j	1c00b40a <memcpy+0xe>

1c00b432 <strchr>:
1c00b432:	0ff5f593          	andi	a1,a1,255
1c00b436:	00054703          	lbu	a4,0(a0)
1c00b43a:	87aa                	mv	a5,a0
1c00b43c:	0505                	addi	a0,a0,1
1c00b43e:	00b70563          	beq	a4,a1,1c00b448 <strchr+0x16>
1c00b442:	fb75                	bnez	a4,1c00b436 <strchr+0x4>
1c00b444:	c191                	beqz	a1,1c00b448 <strchr+0x16>
1c00b446:	4781                	li	a5,0
1c00b448:	853e                	mv	a0,a5
1c00b44a:	8082                	ret

1c00b44c <__rt_putc_debug_bridge>:
1c00b44c:	1141                	addi	sp,sp,-16
1c00b44e:	c422                	sw	s0,8(sp)
1c00b450:	1c00d437          	lui	s0,0x1c00d
1c00b454:	c226                	sw	s1,4(sp)
1c00b456:	c606                	sw	ra,12(sp)
1c00b458:	84aa                	mv	s1,a0
1c00b45a:	37840413          	addi	s0,s0,888 # 1c00d378 <__hal_debug_struct>
1c00b45e:	485c                	lw	a5,20(s0)
1c00b460:	c791                	beqz	a5,1c00b46c <__rt_putc_debug_bridge+0x20>
1c00b462:	06400513          	li	a0,100
1c00b466:	89cfe0ef          	jal	ra,1c009502 <rt_time_wait_us>
1c00b46a:	bfd5                	j	1c00b45e <__rt_putc_debug_bridge+0x12>
1c00b46c:	4c1c                	lw	a5,24(s0)
1c00b46e:	00178713          	addi	a4,a5,1
1c00b472:	97a2                	add	a5,a5,s0
1c00b474:	00978e23          	sb	s1,28(a5)
1c00b478:	cc18                	sw	a4,24(s0)
1c00b47a:	4c14                	lw	a3,24(s0)
1c00b47c:	08000793          	li	a5,128
1c00b480:	00f68463          	beq	a3,a5,1c00b488 <__rt_putc_debug_bridge+0x3c>
1c00b484:	00a4b663          	p.bneimm	s1,10,1c00b490 <__rt_putc_debug_bridge+0x44>
1c00b488:	c701                	beqz	a4,1c00b490 <__rt_putc_debug_bridge+0x44>
1c00b48a:	c858                	sw	a4,20(s0)
1c00b48c:	00042c23          	sw	zero,24(s0)
1c00b490:	4c1c                	lw	a5,24(s0)
1c00b492:	e799                	bnez	a5,1c00b4a0 <__rt_putc_debug_bridge+0x54>
1c00b494:	4422                	lw	s0,8(sp)
1c00b496:	40b2                	lw	ra,12(sp)
1c00b498:	4492                	lw	s1,4(sp)
1c00b49a:	0141                	addi	sp,sp,16
1c00b49c:	aeffd06f          	j	1c008f8a <__rt_bridge_printf_flush>
1c00b4a0:	40b2                	lw	ra,12(sp)
1c00b4a2:	4422                	lw	s0,8(sp)
1c00b4a4:	4492                	lw	s1,4(sp)
1c00b4a6:	0141                	addi	sp,sp,16
1c00b4a8:	8082                	ret

1c00b4aa <__rt_putc_uart>:
1c00b4aa:	1101                	addi	sp,sp,-32
1c00b4ac:	c62a                	sw	a0,12(sp)
1c00b4ae:	ce06                	sw	ra,28(sp)
1c00b4b0:	e39ff0ef          	jal	ra,1c00b2e8 <__rt_io_uart_wait_pending>
1c00b4b4:	1c00d7b7          	lui	a5,0x1c00d
1c00b4b8:	37878793          	addi	a5,a5,888 # 1c00d378 <__hal_debug_struct>
1c00b4bc:	4f94                	lw	a3,24(a5)
1c00b4be:	4532                	lw	a0,12(sp)
1c00b4c0:	00168713          	addi	a4,a3,1
1c00b4c4:	cf98                	sw	a4,24(a5)
1c00b4c6:	97b6                	add	a5,a5,a3
1c00b4c8:	00a78e23          	sb	a0,28(a5)
1c00b4cc:	08000793          	li	a5,128
1c00b4d0:	00f70463          	beq	a4,a5,1c00b4d8 <__rt_putc_uart+0x2e>
1c00b4d4:	00a53663          	p.bneimm	a0,10,1c00b4e0 <__rt_putc_uart+0x36>
1c00b4d8:	40f2                	lw	ra,28(sp)
1c00b4da:	6105                	addi	sp,sp,32
1c00b4dc:	d33ff06f          	j	1c00b20e <__rt_io_uart_flush.constprop.11>
1c00b4e0:	40f2                	lw	ra,28(sp)
1c00b4e2:	6105                	addi	sp,sp,32
1c00b4e4:	8082                	ret

1c00b4e6 <tfp_putc.isra.9>:
1c00b4e6:	1c00d7b7          	lui	a5,0x1c00d
1c00b4ea:	43c7a783          	lw	a5,1084(a5) # 1c00d43c <__rt_iodev>
1c00b4ee:	7135                	addi	sp,sp,-160
1c00b4f0:	cf06                	sw	ra,156(sp)
1c00b4f2:	0427bf63          	p.bneimm	a5,2,1c00b550 <tfp_putc.isra.9+0x6a>
1c00b4f6:	014027f3          	csrr	a5,uhartid
1c00b4fa:	8795                	srai	a5,a5,0x5
1c00b4fc:	f267b7b3          	p.bclr	a5,a5,25,6
1c00b500:	02000713          	li	a4,32
1c00b504:	00e79763          	bne	a5,a4,1c00b512 <tfp_putc.isra.9+0x2c>
1c00b508:	b37ff0ef          	jal	ra,1c00b03e <__rt_do_putc_host>
1c00b50c:	40fa                	lw	ra,156(sp)
1c00b50e:	610d                	addi	sp,sp,160
1c00b510:	8082                	ret
1c00b512:	08f10623          	sb	a5,140(sp)
1c00b516:	1c00b7b7          	lui	a5,0x1c00b
1c00b51a:	4705                	li	a4,1
1c00b51c:	16a78793          	addi	a5,a5,362 # 1c00b16a <__rt_putc_host_cluster_req>
1c00b520:	08a106a3          	sb	a0,141(sp)
1c00b524:	0048                	addi	a0,sp,4
1c00b526:	d63a                	sw	a4,44(sp)
1c00b528:	c43e                	sw	a5,8(sp)
1c00b52a:	c502                	sw	zero,136(sp)
1c00b52c:	ce02                	sw	zero,28(sp)
1c00b52e:	c62a                	sw	a0,12(sp)
1c00b530:	00010c23          	sb	zero,24(sp)
1c00b534:	cf5fe0ef          	jal	ra,1c00a228 <__rt_cluster_push_fc_event>
1c00b538:	4709                	li	a4,2
1c00b53a:	002047b7          	lui	a5,0x204
1c00b53e:	46aa                	lw	a3,136(sp)
1c00b540:	f6f1                	bnez	a3,1c00b50c <tfp_putc.isra.9+0x26>
1c00b542:	00e7a423          	sw	a4,8(a5) # 204008 <__L2+0x184008>
1c00b546:	03c7e683          	p.elw	a3,60(a5)
1c00b54a:	00e7a223          	sw	a4,4(a5)
1c00b54e:	bfc5                	j	1c00b53e <tfp_putc.isra.9+0x58>
1c00b550:	1c00e7b7          	lui	a5,0x1c00e
1c00b554:	9187a783          	lw	a5,-1768(a5) # 1c00d918 <_rt_io_uart>
1c00b558:	c781                	beqz	a5,1c00b560 <tfp_putc.isra.9+0x7a>
1c00b55a:	f51ff0ef          	jal	ra,1c00b4aa <__rt_putc_uart>
1c00b55e:	b77d                	j	1c00b50c <tfp_putc.isra.9+0x26>
1c00b560:	1c00d7b7          	lui	a5,0x1c00d
1c00b564:	3887a783          	lw	a5,904(a5) # 1c00d388 <__hal_debug_struct+0x10>
1c00b568:	c395                	beqz	a5,1c00b58c <tfp_putc.isra.9+0xa6>
1c00b56a:	014027f3          	csrr	a5,uhartid
1c00b56e:	00379713          	slli	a4,a5,0x3
1c00b572:	1a1106b7          	lui	a3,0x1a110
1c00b576:	ee873733          	p.bclr	a4,a4,23,8
1c00b57a:	9736                	add	a4,a4,a3
1c00b57c:	6689                	lui	a3,0x2
1c00b57e:	078a                	slli	a5,a5,0x2
1c00b580:	f8068693          	addi	a3,a3,-128 # 1f80 <__rt_stack_size+0x1780>
1c00b584:	8ff5                	and	a5,a5,a3
1c00b586:	00a767a3          	p.sw	a0,a5(a4)
1c00b58a:	b749                	j	1c00b50c <tfp_putc.isra.9+0x26>
1c00b58c:	ec1ff0ef          	jal	ra,1c00b44c <__rt_putc_debug_bridge>
1c00b590:	bfb5                	j	1c00b50c <tfp_putc.isra.9+0x26>

1c00b592 <puts>:
1c00b592:	1141                	addi	sp,sp,-16
1c00b594:	c422                	sw	s0,8(sp)
1c00b596:	c606                	sw	ra,12(sp)
1c00b598:	842a                	mv	s0,a0
1c00b59a:	b61ff0ef          	jal	ra,1c00b0fa <__rt_io_lock>
1c00b59e:	0014450b          	p.lbu	a0,1(s0!)
1c00b5a2:	c501                	beqz	a0,1c00b5aa <puts+0x18>
1c00b5a4:	f43ff0ef          	jal	ra,1c00b4e6 <tfp_putc.isra.9>
1c00b5a8:	bfdd                	j	1c00b59e <puts+0xc>
1c00b5aa:	4529                	li	a0,10
1c00b5ac:	f3bff0ef          	jal	ra,1c00b4e6 <tfp_putc.isra.9>
1c00b5b0:	befff0ef          	jal	ra,1c00b19e <__rt_io_unlock>
1c00b5b4:	40b2                	lw	ra,12(sp)
1c00b5b6:	4422                	lw	s0,8(sp)
1c00b5b8:	4501                	li	a0,0
1c00b5ba:	0141                	addi	sp,sp,16
1c00b5bc:	8082                	ret

1c00b5be <fputc_locked>:
1c00b5be:	1141                	addi	sp,sp,-16
1c00b5c0:	c422                	sw	s0,8(sp)
1c00b5c2:	842a                	mv	s0,a0
1c00b5c4:	0ff57513          	andi	a0,a0,255
1c00b5c8:	c606                	sw	ra,12(sp)
1c00b5ca:	f1dff0ef          	jal	ra,1c00b4e6 <tfp_putc.isra.9>
1c00b5ce:	8522                	mv	a0,s0
1c00b5d0:	40b2                	lw	ra,12(sp)
1c00b5d2:	4422                	lw	s0,8(sp)
1c00b5d4:	0141                	addi	sp,sp,16
1c00b5d6:	8082                	ret

1c00b5d8 <fputc>:
1c00b5d8:	1141                	addi	sp,sp,-16
1c00b5da:	c606                	sw	ra,12(sp)
1c00b5dc:	c422                	sw	s0,8(sp)
1c00b5de:	842a                	mv	s0,a0
1c00b5e0:	b1bff0ef          	jal	ra,1c00b0fa <__rt_io_lock>
1c00b5e4:	0ff47513          	andi	a0,s0,255
1c00b5e8:	effff0ef          	jal	ra,1c00b4e6 <tfp_putc.isra.9>
1c00b5ec:	1c00d7b7          	lui	a5,0x1c00d
1c00b5f0:	3887a783          	lw	a5,904(a5) # 1c00d388 <__hal_debug_struct+0x10>
1c00b5f4:	e399                	bnez	a5,1c00b5fa <fputc+0x22>
1c00b5f6:	995fd0ef          	jal	ra,1c008f8a <__rt_bridge_printf_flush>
1c00b5fa:	ba5ff0ef          	jal	ra,1c00b19e <__rt_io_unlock>
1c00b5fe:	8522                	mv	a0,s0
1c00b600:	40b2                	lw	ra,12(sp)
1c00b602:	4422                	lw	s0,8(sp)
1c00b604:	0141                	addi	sp,sp,16
1c00b606:	8082                	ret

1c00b608 <putchar>:
1c00b608:	4589                	li	a1,2
1c00b60a:	fcfff06f          	j	1c00b5d8 <fputc>

1c00b60e <_prf_locked>:
1c00b60e:	1101                	addi	sp,sp,-32
1c00b610:	ce06                	sw	ra,28(sp)
1c00b612:	c02a                	sw	a0,0(sp)
1c00b614:	c62e                	sw	a1,12(sp)
1c00b616:	c432                	sw	a2,8(sp)
1c00b618:	c236                	sw	a3,4(sp)
1c00b61a:	ae1ff0ef          	jal	ra,1c00b0fa <__rt_io_lock>
1c00b61e:	4692                	lw	a3,4(sp)
1c00b620:	4622                	lw	a2,8(sp)
1c00b622:	45b2                	lw	a1,12(sp)
1c00b624:	4502                	lw	a0,0(sp)
1c00b626:	2ca1                	jal	1c00b87e <_prf>
1c00b628:	c02a                	sw	a0,0(sp)
1c00b62a:	b75ff0ef          	jal	ra,1c00b19e <__rt_io_unlock>
1c00b62e:	40f2                	lw	ra,28(sp)
1c00b630:	4502                	lw	a0,0(sp)
1c00b632:	6105                	addi	sp,sp,32
1c00b634:	8082                	ret

1c00b636 <exit>:
1c00b636:	1101                	addi	sp,sp,-32
1c00b638:	cc22                	sw	s0,24(sp)
1c00b63a:	c84a                	sw	s2,16(sp)
1c00b63c:	c62a                	sw	a0,12(sp)
1c00b63e:	ce06                	sw	ra,28(sp)
1c00b640:	ca26                	sw	s1,20(sp)
1c00b642:	ca4fd0ef          	jal	ra,1c008ae6 <__rt_deinit>
1c00b646:	4532                	lw	a0,12(sp)
1c00b648:	1a104437          	lui	s0,0x1a104
1c00b64c:	0a040793          	addi	a5,s0,160 # 1a1040a0 <__l1_end+0xa104080>
1c00b650:	c1f54933          	p.bset	s2,a0,0,31
1c00b654:	0127a023          	sw	s2,0(a5)
1c00b658:	1c00d7b7          	lui	a5,0x1c00d
1c00b65c:	43c7a783          	lw	a5,1084(a5) # 1c00d43c <__rt_iodev>
1c00b660:	0027bf63          	p.bneimm	a5,2,1c00b67e <exit+0x48>
1c00b664:	c901                	beqz	a0,1c00b674 <exit+0x3e>
1c00b666:	00020537          	lui	a0,0x20
1c00b66a:	02350513          	addi	a0,a0,35 # 20023 <__L1Cl+0x10023>
1c00b66e:	a6afd0ef          	jal	ra,1c0088d8 <semihost_exit>
1c00b672:	a001                	j	1c00b672 <exit+0x3c>
1c00b674:	00020537          	lui	a0,0x20
1c00b678:	02650513          	addi	a0,a0,38 # 20026 <__L1Cl+0x10026>
1c00b67c:	bfcd                	j	1c00b66e <exit+0x38>
1c00b67e:	1c00d4b7          	lui	s1,0x1c00d
1c00b682:	37848493          	addi	s1,s1,888 # 1c00d378 <__hal_debug_struct>
1c00b686:	905fd0ef          	jal	ra,1c008f8a <__rt_bridge_printf_flush>
1c00b68a:	0124a623          	sw	s2,12(s1)
1c00b68e:	8b9fd0ef          	jal	ra,1c008f46 <__rt_bridge_send_notif>
1c00b692:	449c                	lw	a5,8(s1)
1c00b694:	dff9                	beqz	a5,1c00b672 <exit+0x3c>
1c00b696:	07440413          	addi	s0,s0,116
1c00b69a:	401c                	lw	a5,0(s0)
1c00b69c:	83a5                	srli	a5,a5,0x9
1c00b69e:	f837b7b3          	p.bclr	a5,a5,28,3
1c00b6a2:	fe77bce3          	p.bneimm	a5,7,1c00b69a <exit+0x64>
1c00b6a6:	8c3fd0ef          	jal	ra,1c008f68 <__rt_bridge_clear_notif>
1c00b6aa:	b7e1                	j	1c00b672 <exit+0x3c>

1c00b6ac <abort>:
1c00b6ac:	1141                	addi	sp,sp,-16
1c00b6ae:	557d                	li	a0,-1
1c00b6b0:	c606                	sw	ra,12(sp)
1c00b6b2:	f85ff0ef          	jal	ra,1c00b636 <exit>

1c00b6b6 <__rt_io_init>:
#endif
}

RT_FC_BOOT_CODE void __attribute__((constructor)) __rt_io_init()
{
  __rt_putc_host_buffer_index = 0;
1c00b6b6:	1c00e7b7          	lui	a5,0x1c00e
1c00b6ba:	9007aa23          	sw	zero,-1772(a5) # 1c00d914 <__rt_putc_host_buffer_index>
void __rt_fc_cluster_unlock(rt_fc_lock_t *lock, rt_fc_lock_req_t *req);

static inline void __rt_fc_lock_init(rt_fc_lock_t *lock)
{
#if defined(ARCHI_HAS_FC)
  lock->waiting = NULL;
1c00b6be:	1b0017b7          	lui	a5,0x1b001
1c00b6c2:	bbc78793          	addi	a5,a5,-1092 # 1b000bbc <__rt_io_fc_lock>
1c00b6c6:	0007a223          	sw	zero,4(a5)
  lock->locked = 0;
1c00b6ca:	0007a023          	sw	zero,0(a5)
  lock->fc_wait = NULL;
1c00b6ce:	0007a623          	sw	zero,12(a5)
  __rt_fc_lock_init(&__rt_io_fc_lock);

#if defined(__RT_USE_UART)
  _rt_io_uart = NULL;
1c00b6d2:	1c00e7b7          	lui	a5,0x1c00e
1c00b6d6:	9007ac23          	sw	zero,-1768(a5) # 1c00d918 <_rt_io_uart>
  __rt_io_event_current = NULL;
1c00b6da:	1c00e7b7          	lui	a5,0x1c00e
1c00b6de:	9007a623          	sw	zero,-1780(a5) # 1c00d90c <__rt_io_event_current>
  return __rt_iodev;
1c00b6e2:	1c00d7b7          	lui	a5,0x1c00d

  if (rt_iodev() == RT_IODEV_UART)
1c00b6e6:	43c7a783          	lw	a5,1084(a5) # 1c00d43c <__rt_iodev>
1c00b6ea:	0217be63          	p.bneimm	a5,1,1c00b726 <__rt_io_init+0x70>
  {
    __rt_cbsys_add(RT_CBSYS_START, __rt_io_start, NULL);
1c00b6ee:	1c00b5b7          	lui	a1,0x1c00b
{
1c00b6f2:	1141                	addi	sp,sp,-16
    __rt_cbsys_add(RT_CBSYS_START, __rt_io_start, NULL);
1c00b6f4:	4601                	li	a2,0
1c00b6f6:	08058593          	addi	a1,a1,128 # 1c00b080 <__rt_io_start>
1c00b6fa:	4501                	li	a0,0
{
1c00b6fc:	c606                	sw	ra,12(sp)
    __rt_cbsys_add(RT_CBSYS_START, __rt_io_start, NULL);
1c00b6fe:	d80fd0ef          	jal	ra,1c008c7e <__rt_cbsys_add>
    __rt_cbsys_add(RT_CBSYS_STOP, __rt_io_stop, NULL);
1c00b702:	1c00b5b7          	lui	a1,0x1c00b
1c00b706:	37a58593          	addi	a1,a1,890 # 1c00b37a <__rt_io_stop>
1c00b70a:	4601                	li	a2,0
1c00b70c:	4505                	li	a0,1
1c00b70e:	d70fd0ef          	jal	ra,1c008c7e <__rt_cbsys_add>
    __rt_io_pending_flush = 0;
    rt_event_alloc(NULL, 1);
  }
#endif

}
1c00b712:	40b2                	lw	ra,12(sp)
    __rt_io_pending_flush = 0;
1c00b714:	1c00e7b7          	lui	a5,0x1c00e
1c00b718:	9007a823          	sw	zero,-1776(a5) # 1c00d910 <__rt_io_pending_flush>
    rt_event_alloc(NULL, 1);
1c00b71c:	4585                	li	a1,1
1c00b71e:	4501                	li	a0,0
}
1c00b720:	0141                	addi	sp,sp,16
    rt_event_alloc(NULL, 1);
1c00b722:	997fd06f          	j	1c0090b8 <rt_event_alloc>
1c00b726:	8082                	ret

1c00b728 <printf>:

	return r;
}

int printf(const char *format, ...)
{
1c00b728:	7139                	addi	sp,sp,-64
1c00b72a:	d432                	sw	a2,40(sp)
	va_list vargs;
	int     r;

	va_start(vargs, format);
	r = _prf_locked(fputc_locked, DESC(stdout), format, vargs);
1c00b72c:	862a                	mv	a2,a0
1c00b72e:	1c00b537          	lui	a0,0x1c00b
{
1c00b732:	d22e                	sw	a1,36(sp)
1c00b734:	d636                	sw	a3,44(sp)
	r = _prf_locked(fputc_locked, DESC(stdout), format, vargs);
1c00b736:	4589                	li	a1,2
	va_start(vargs, format);
1c00b738:	1054                	addi	a3,sp,36
	r = _prf_locked(fputc_locked, DESC(stdout), format, vargs);
1c00b73a:	5be50513          	addi	a0,a0,1470 # 1c00b5be <fputc_locked>
{
1c00b73e:	ce06                	sw	ra,28(sp)
1c00b740:	d83a                	sw	a4,48(sp)
1c00b742:	da3e                	sw	a5,52(sp)
1c00b744:	dc42                	sw	a6,56(sp)
1c00b746:	de46                	sw	a7,60(sp)
	va_start(vargs, format);
1c00b748:	c636                	sw	a3,12(sp)
	r = _prf_locked(fputc_locked, DESC(stdout), format, vargs);
1c00b74a:	ec5ff0ef          	jal	ra,1c00b60e <_prf_locked>
	va_end(vargs);

	return r;
}
1c00b74e:	40f2                	lw	ra,28(sp)
1c00b750:	6121                	addi	sp,sp,64
1c00b752:	8082                	ret

1c00b754 <_to_x>:
 * Writes the specified number into the buffer in the given base,
 * using the digit characters 0-9a-z (i.e. base>36 will start writing
 * odd bytes).
 */
static int _to_x(char *buf, unsigned VALTYPE n, unsigned int base)
{
1c00b754:	7179                	addi	sp,sp,-48
1c00b756:	d422                	sw	s0,40(sp)
1c00b758:	d226                	sw	s1,36(sp)
1c00b75a:	ce4e                	sw	s3,28(sp)
1c00b75c:	cc52                	sw	s4,24(sp)
1c00b75e:	ca56                	sw	s5,20(sp)
1c00b760:	c85a                	sw	s6,16(sp)
1c00b762:	d606                	sw	ra,44(sp)
1c00b764:	d04a                	sw	s2,32(sp)
1c00b766:	c65e                	sw	s7,12(sp)
1c00b768:	84aa                	mv	s1,a0
1c00b76a:	89ae                	mv	s3,a1
1c00b76c:	8a32                	mv	s4,a2
1c00b76e:	8ab6                	mv	s5,a3
1c00b770:	842a                	mv	s0,a0

	do {
		unsigned int d = n % base;

		n /= base;
		*buf++ = '0' + d + (d > 9 ? ('a' - '0' - 10) : 0);
1c00b772:	4b25                	li	s6,9
		unsigned int d = n % base;
1c00b774:	8656                	mv	a2,s5
1c00b776:	4681                	li	a3,0
1c00b778:	854e                	mv	a0,s3
1c00b77a:	85d2                	mv	a1,s4
1c00b77c:	818fa0ef          	jal	ra,1c005794 <__umoddi3>
		n /= base;
1c00b780:	85d2                	mv	a1,s4
		unsigned int d = n % base;
1c00b782:	892a                	mv	s2,a0
		n /= base;
1c00b784:	8656                	mv	a2,s5
1c00b786:	854e                	mv	a0,s3
1c00b788:	4681                	li	a3,0
1c00b78a:	ccff90ef          	jal	ra,1c005458 <__udivdi3>
1c00b78e:	89aa                	mv	s3,a0
1c00b790:	8a2e                	mv	s4,a1
		*buf++ = '0' + d + (d > 9 ? ('a' - '0' - 10) : 0);
1c00b792:	02700713          	li	a4,39
1c00b796:	012b6363          	bltu	s6,s2,1c00b79c <_to_x+0x48>
1c00b79a:	4701                	li	a4,0
1c00b79c:	03090913          	addi	s2,s2,48
1c00b7a0:	974a                	add	a4,a4,s2
1c00b7a2:	00e40023          	sb	a4,0(s0)
	} while (n);
1c00b7a6:	8dc9                	or	a1,a1,a0
		*buf++ = '0' + d + (d > 9 ? ('a' - '0' - 10) : 0);
1c00b7a8:	00140793          	addi	a5,s0,1
	} while (n);
1c00b7ac:	e195                	bnez	a1,1c00b7d0 <_to_x+0x7c>

	*buf = 0;
1c00b7ae:	00078023          	sb	zero,0(a5)
	len = buf - start;
1c00b7b2:	40978533          	sub	a0,a5,s1

	for (buf--; buf > start; buf--, start++) {
1c00b7b6:	0084ef63          	bltu	s1,s0,1c00b7d4 <_to_x+0x80>
		*buf = *start;
		*start = tmp;
	}

	return len;
}
1c00b7ba:	50b2                	lw	ra,44(sp)
1c00b7bc:	5422                	lw	s0,40(sp)
1c00b7be:	5492                	lw	s1,36(sp)
1c00b7c0:	5902                	lw	s2,32(sp)
1c00b7c2:	49f2                	lw	s3,28(sp)
1c00b7c4:	4a62                	lw	s4,24(sp)
1c00b7c6:	4ad2                	lw	s5,20(sp)
1c00b7c8:	4b42                	lw	s6,16(sp)
1c00b7ca:	4bb2                	lw	s7,12(sp)
1c00b7cc:	6145                	addi	sp,sp,48
1c00b7ce:	8082                	ret
1c00b7d0:	843e                	mv	s0,a5
1c00b7d2:	b74d                	j	1c00b774 <_to_x+0x20>
		*buf = *start;
1c00b7d4:	0004c703          	lbu	a4,0(s1)
		char tmp = *buf;
1c00b7d8:	00044783          	lbu	a5,0(s0)
		*buf = *start;
1c00b7dc:	fee40fab          	p.sb	a4,-1(s0!)
		*start = tmp;
1c00b7e0:	00f480ab          	p.sb	a5,1(s1!)
1c00b7e4:	bfc9                	j	1c00b7b6 <_to_x+0x62>

1c00b7e6 <_rlrshift>:
	return (buf + _to_udec(buf, value)) - start;
}

static	void _rlrshift(uint64_t *v)
{
	*v = (*v & 1) + (*v >> 1);
1c00b7e6:	411c                	lw	a5,0(a0)
1c00b7e8:	4154                	lw	a3,4(a0)
1c00b7ea:	fc17b733          	p.bclr	a4,a5,30,1
1c00b7ee:	01f69613          	slli	a2,a3,0x1f
1c00b7f2:	8385                	srli	a5,a5,0x1
1c00b7f4:	8fd1                	or	a5,a5,a2
1c00b7f6:	97ba                	add	a5,a5,a4
1c00b7f8:	8285                	srli	a3,a3,0x1
1c00b7fa:	00e7b733          	sltu	a4,a5,a4
1c00b7fe:	9736                	add	a4,a4,a3
1c00b800:	c11c                	sw	a5,0(a0)
1c00b802:	c158                	sw	a4,4(a0)
}
1c00b804:	8082                	ret

1c00b806 <_ldiv5>:
 * taken from the full 64 bit space.
 */
static void _ldiv5(uint64_t *v)
{
	uint32_t hi;
	uint64_t rem = *v, quot = 0U, q;
1c00b806:	4118                	lw	a4,0(a0)
1c00b808:	4154                	lw	a3,4(a0)
	 */
	rem += 2U;

	for (i = 0; i < 3; i++) {
		hi = rem >> shifts[i];
		q = (uint64_t)(hi / 5U) << shifts[i];
1c00b80a:	4615                	li	a2,5
	rem += 2U;
1c00b80c:	00270793          	addi	a5,a4,2
1c00b810:	00e7b733          	sltu	a4,a5,a4
1c00b814:	9736                	add	a4,a4,a3
		q = (uint64_t)(hi / 5U) << shifts[i];
1c00b816:	02c755b3          	divu	a1,a4,a2
		rem -= q * 5U;
1c00b81a:	42b61733          	p.msu	a4,a2,a1
		hi = rem >> shifts[i];
1c00b81e:	01d71693          	slli	a3,a4,0x1d
1c00b822:	0037d713          	srli	a4,a5,0x3
1c00b826:	8f55                	or	a4,a4,a3
		q = (uint64_t)(hi / 5U) << shifts[i];
1c00b828:	02c75733          	divu	a4,a4,a2
1c00b82c:	01d75693          	srli	a3,a4,0x1d
1c00b830:	070e                	slli	a4,a4,0x3
		rem -= q * 5U;
1c00b832:	42e617b3          	p.msu	a5,a2,a4
		quot += q;
1c00b836:	95b6                	add	a1,a1,a3
		q = (uint64_t)(hi / 5U) << shifts[i];
1c00b838:	02c7d7b3          	divu	a5,a5,a2
		quot += q;
1c00b83c:	973e                	add	a4,a4,a5
1c00b83e:	00f737b3          	sltu	a5,a4,a5
1c00b842:	97ae                	add	a5,a5,a1
	}

	*v = quot;
1c00b844:	c118                	sw	a4,0(a0)
1c00b846:	c15c                	sw	a5,4(a0)
}
1c00b848:	8082                	ret

1c00b84a <_get_digit>:

static	char _get_digit(uint64_t *fr, int *digit_count)
{
	char rval;

	if (*digit_count > 0) {
1c00b84a:	419c                	lw	a5,0(a1)
		*digit_count -= 1;
		*fr = *fr * 10U;
		rval = ((*fr >> 60) & 0xF) + '0';
		*fr &= 0x0FFFFFFFFFFFFFFFull;
	} else {
		rval = '0';
1c00b84c:	03000713          	li	a4,48
	if (*digit_count > 0) {
1c00b850:	02f05563          	blez	a5,1c00b87a <_get_digit+0x30>
		*digit_count -= 1;
1c00b854:	17fd                	addi	a5,a5,-1
1c00b856:	c19c                	sw	a5,0(a1)
		*fr = *fr * 10U;
1c00b858:	411c                	lw	a5,0(a0)
1c00b85a:	4729                	li	a4,10
1c00b85c:	4150                	lw	a2,4(a0)
1c00b85e:	02f706b3          	mul	a3,a4,a5
1c00b862:	02f737b3          	mulhu	a5,a4,a5
		*fr &= 0x0FFFFFFFFFFFFFFFull;
1c00b866:	c114                	sw	a3,0(a0)
		*fr = *fr * 10U;
1c00b868:	42c707b3          	p.mac	a5,a4,a2
		rval = ((*fr >> 60) & 0xF) + '0';
1c00b86c:	01c7d713          	srli	a4,a5,0x1c
		*fr &= 0x0FFFFFFFFFFFFFFFull;
1c00b870:	c7c7b7b3          	p.bclr	a5,a5,3,28
		rval = ((*fr >> 60) & 0xF) + '0';
1c00b874:	03070713          	addi	a4,a4,48
		*fr &= 0x0FFFFFFFFFFFFFFFull;
1c00b878:	c15c                	sw	a5,4(a0)
	}

	return rval;
}
1c00b87a:	853a                	mv	a0,a4
1c00b87c:	8082                	ret

1c00b87e <_prf>:
	*sptr = p;
	return i;
}

int _prf(int (*func)(), void *dest, const char *format, va_list vargs)
{
1c00b87e:	7135                	addi	sp,sp,-160
1c00b880:	c94a                	sw	s2,144(sp)
1c00b882:	c74e                	sw	s3,140(sp)
1c00b884:	c15a                	sw	s6,128(sp)
1c00b886:	dede                	sw	s7,124(sp)
1c00b888:	cf06                	sw	ra,156(sp)
1c00b88a:	cd22                	sw	s0,152(sp)
1c00b88c:	cb26                	sw	s1,148(sp)
1c00b88e:	c552                	sw	s4,136(sp)
1c00b890:	c356                	sw	s5,132(sp)
1c00b892:	dce2                	sw	s8,120(sp)
1c00b894:	dae6                	sw	s9,116(sp)
1c00b896:	d8ea                	sw	s10,112(sp)
1c00b898:	d6ee                	sw	s11,108(sp)
1c00b89a:	8b2a                	mv	s6,a0
1c00b89c:	8bae                	mv	s7,a1
1c00b89e:	8936                	mv	s2,a3
	struct zero_padding zero;
	VALTYPE val;

#define PUTC(c)	do { if ((*func)(c, dest) == EOF) return EOF; } while (false)

	count = 0;
1c00b8a0:	4981                	li	s3,0

	while ((c = *format++)) {
1c00b8a2:	00064503          	lbu	a0,0(a2)
1c00b8a6:	00160c13          	addi	s8,a2,1
1c00b8aa:	c911                	beqz	a0,1c00b8be <_prf+0x40>
		if (c != '%') {
1c00b8ac:	02500793          	li	a5,37
1c00b8b0:	14f50563          	beq	a0,a5,1c00b9fa <_prf+0x17c>
			PUTC(c);
1c00b8b4:	85de                	mv	a1,s7
1c00b8b6:	9b02                	jalr	s6
1c00b8b8:	13f53fe3          	p.bneimm	a0,-1,1c00c1f6 <_prf+0x978>
1c00b8bc:	59fd                	li	s3,-1
		}
	}
	return count;

#undef PUTC
}
1c00b8be:	40fa                	lw	ra,156(sp)
1c00b8c0:	446a                	lw	s0,152(sp)
1c00b8c2:	854e                	mv	a0,s3
1c00b8c4:	44da                	lw	s1,148(sp)
1c00b8c6:	494a                	lw	s2,144(sp)
1c00b8c8:	49ba                	lw	s3,140(sp)
1c00b8ca:	4a2a                	lw	s4,136(sp)
1c00b8cc:	4a9a                	lw	s5,132(sp)
1c00b8ce:	4b0a                	lw	s6,128(sp)
1c00b8d0:	5bf6                	lw	s7,124(sp)
1c00b8d2:	5c66                	lw	s8,120(sp)
1c00b8d4:	5cd6                	lw	s9,116(sp)
1c00b8d6:	5d46                	lw	s10,112(sp)
1c00b8d8:	5db6                	lw	s11,108(sp)
1c00b8da:	610d                	addi	sp,sp,160
1c00b8dc:	8082                	ret
				switch (c) {
1c00b8de:	108d8663          	beq	s11,s0,1c00b9ea <_prf+0x16c>
1c00b8e2:	0fb46863          	bltu	s0,s11,1c00b9d2 <_prf+0x154>
1c00b8e6:	fc0d8ce3          	beqz	s11,1c00b8be <_prf+0x40>
1c00b8ea:	0ecd8d63          	beq	s11,a2,1c00b9e4 <_prf+0x166>
					fplus = true;
1c00b8ee:	8c52                	mv	s8,s4
			while (strchr("-+ #0", (c = *format++)) != NULL) {
1c00b8f0:	000c4d83          	lbu	s11,0(s8)
1c00b8f4:	1c00d737          	lui	a4,0x1c00d
1c00b8f8:	1cc70513          	addi	a0,a4,460 # 1c00d1cc <__hyper_pad+0x98>
1c00b8fc:	85ee                	mv	a1,s11
1c00b8fe:	c232                	sw	a2,4(sp)
1c00b900:	b33ff0ef          	jal	ra,1c00b432 <strchr>
1c00b904:	001c0a13          	addi	s4,s8,1
1c00b908:	4612                	lw	a2,4(sp)
1c00b90a:	f971                	bnez	a0,1c00b8de <_prf+0x60>
			if (c == '*') {
1c00b90c:	02a00713          	li	a4,42
1c00b910:	10ed9563          	bne	s11,a4,1c00ba1a <_prf+0x19c>
				width = va_arg(vargs, int);
1c00b914:	00092c83          	lw	s9,0(s2)
1c00b918:	00490713          	addi	a4,s2,4
				if (width < 0) {
1c00b91c:	000cd663          	bgez	s9,1c00b928 <_prf+0xaa>
					fminus = true;
1c00b920:	4785                	li	a5,1
					width = -width;
1c00b922:	41900cb3          	neg	s9,s9
					fminus = true;
1c00b926:	cc3e                	sw	a5,24(sp)
				c = *format++;
1c00b928:	000a4d83          	lbu	s11,0(s4)
				width = va_arg(vargs, int);
1c00b92c:	893a                	mv	s2,a4
				c = *format++;
1c00b92e:	002c0a13          	addi	s4,s8,2
			if (c == '.') {
1c00b932:	02e00713          	li	a4,46
			precision = -1;
1c00b936:	547d                	li	s0,-1
			if (c == '.') {
1c00b938:	00ed9f63          	bne	s11,a4,1c00b956 <_prf+0xd8>
				if (c == '*') {
1c00b93c:	000a4703          	lbu	a4,0(s4)
1c00b940:	02a00793          	li	a5,42
1c00b944:	10f71e63          	bne	a4,a5,1c00ba60 <_prf+0x1e2>
					precision = va_arg(vargs, int);
1c00b948:	00092403          	lw	s0,0(s2)
				c = *format++;
1c00b94c:	0a05                	addi	s4,s4,1
					precision = va_arg(vargs, int);
1c00b94e:	0911                	addi	s2,s2,4
				c = *format++;
1c00b950:	000a4d83          	lbu	s11,0(s4)
1c00b954:	0a05                	addi	s4,s4,1
			if (strchr("hlz", c) != NULL) {
1c00b956:	1c00d737          	lui	a4,0x1c00d
1c00b95a:	85ee                	mv	a1,s11
1c00b95c:	1d470513          	addi	a0,a4,468 # 1c00d1d4 <__hyper_pad+0xa0>
1c00b960:	84ee                	mv	s1,s11
1c00b962:	ad1ff0ef          	jal	ra,1c00b432 <strchr>
1c00b966:	10050e63          	beqz	a0,1c00ba82 <_prf+0x204>
				if (i == 'l' && c == 'l') {
1c00b96a:	06c00693          	li	a3,108
				c = *format++;
1c00b96e:	001a0c13          	addi	s8,s4,1
1c00b972:	000a4d83          	lbu	s11,0(s4)
				if (i == 'l' && c == 'l') {
1c00b976:	0ed49963          	bne	s1,a3,1c00ba68 <_prf+0x1ea>
1c00b97a:	009d9863          	bne	s11,s1,1c00b98a <_prf+0x10c>
					c = *format++;
1c00b97e:	001a4d83          	lbu	s11,1(s4)
1c00b982:	002a0c13          	addi	s8,s4,2
					i = 'L';
1c00b986:	04c00493          	li	s1,76
			switch (c) {
1c00b98a:	06700693          	li	a3,103
1c00b98e:	17b6e263          	bltu	a3,s11,1c00baf2 <_prf+0x274>
1c00b992:	06500693          	li	a3,101
1c00b996:	32ddfc63          	bleu	a3,s11,1c00bcce <_prf+0x450>
1c00b99a:	04700693          	li	a3,71
1c00b99e:	0fb6e563          	bltu	a3,s11,1c00ba88 <_prf+0x20a>
1c00b9a2:	04500713          	li	a4,69
1c00b9a6:	32edf463          	bleu	a4,s11,1c00bcce <_prf+0x450>
1c00b9aa:	f00d8ae3          	beqz	s11,1c00b8be <_prf+0x40>
1c00b9ae:	02500713          	li	a4,37
1c00b9b2:	02ed8de3          	beq	s11,a4,1c00c1ec <_prf+0x96e>
				PUTC('%');
1c00b9b6:	85de                	mv	a1,s7
1c00b9b8:	02500513          	li	a0,37
1c00b9bc:	9b02                	jalr	s6
1c00b9be:	eff52fe3          	p.beqimm	a0,-1,1c00b8bc <_prf+0x3e>
				PUTC(c);
1c00b9c2:	85de                	mv	a1,s7
1c00b9c4:	856e                	mv	a0,s11
1c00b9c6:	9b02                	jalr	s6
1c00b9c8:	eff52ae3          	p.beqimm	a0,-1,1c00b8bc <_prf+0x3e>
				count += 2;
1c00b9cc:	0989                	addi	s3,s3,2
1c00b9ce:	02b0006f          	j	1c00c1f8 <_prf+0x97a>
				switch (c) {
1c00b9d2:	039d8163          	beq	s11,s9,1c00b9f4 <_prf+0x176>
1c00b9d6:	009d8c63          	beq	s11,s1,1c00b9ee <_prf+0x170>
1c00b9da:	f1ad9ae3          	bne	s11,s10,1c00b8ee <_prf+0x70>
					fplus = true;
1c00b9de:	4705                	li	a4,1
1c00b9e0:	c63a                	sw	a4,12(sp)
					break;
1c00b9e2:	b731                	j	1c00b8ee <_prf+0x70>
					fspace = true;
1c00b9e4:	4785                	li	a5,1
1c00b9e6:	c83e                	sw	a5,16(sp)
					break;
1c00b9e8:	b719                	j	1c00b8ee <_prf+0x70>
					falt = true;
1c00b9ea:	4a85                	li	s5,1
					break;
1c00b9ec:	b709                	j	1c00b8ee <_prf+0x70>
					fzero = true;
1c00b9ee:	4705                	li	a4,1
1c00b9f0:	ce3a                	sw	a4,28(sp)
					break;
1c00b9f2:	bdf5                	j	1c00b8ee <_prf+0x70>
					fminus = true;
1c00b9f4:	4785                	li	a5,1
1c00b9f6:	cc3e                	sw	a5,24(sp)
1c00b9f8:	bddd                	j	1c00b8ee <_prf+0x70>
			fminus = fplus = fspace = falt = fzero = false;
1c00b9fa:	ce02                	sw	zero,28(sp)
1c00b9fc:	c802                	sw	zero,16(sp)
1c00b9fe:	c602                	sw	zero,12(sp)
1c00ba00:	cc02                	sw	zero,24(sp)
1c00ba02:	4a81                	li	s5,0
				switch (c) {
1c00ba04:	02300413          	li	s0,35
1c00ba08:	02d00c93          	li	s9,45
1c00ba0c:	03000493          	li	s1,48
1c00ba10:	02b00d13          	li	s10,43
1c00ba14:	02000613          	li	a2,32
1c00ba18:	bde1                	j	1c00b8f0 <_prf+0x72>
	return ((((unsigned)c) >= ' ') && (((unsigned)c) <= '~'));
}

static inline int isdigit(int a)
{
	return (((unsigned)(a)-'0') < 10);
1c00ba1a:	fd0d8713          	addi	a4,s11,-48
			} else if (!isdigit(c)) {
1c00ba1e:	46a5                	li	a3,9
				width = 0;
1c00ba20:	4c81                	li	s9,0
			} else if (!isdigit(c)) {
1c00ba22:	f0e6e8e3          	bltu	a3,a4,1c00b932 <_prf+0xb4>
	while (isdigit(*p)) {
1c00ba26:	4725                	li	a4,9
		i = 10 * i + *p++ - '0';
1c00ba28:	4629                	li	a2,10
	while (isdigit(*p)) {
1c00ba2a:	8a62                	mv	s4,s8
1c00ba2c:	001a4d8b          	p.lbu	s11,1(s4!)
1c00ba30:	fd0d8693          	addi	a3,s11,-48
1c00ba34:	eed76fe3          	bltu	a4,a3,1c00b932 <_prf+0xb4>
		i = 10 * i + *p++ - '0';
1c00ba38:	87ee                	mv	a5,s11
1c00ba3a:	42cc87b3          	p.mac	a5,s9,a2
1c00ba3e:	8c52                	mv	s8,s4
1c00ba40:	fd078c93          	addi	s9,a5,-48
1c00ba44:	b7dd                	j	1c00ba2a <_prf+0x1ac>
1c00ba46:	42b407b3          	p.mac	a5,s0,a1
1c00ba4a:	8a3a                	mv	s4,a4
1c00ba4c:	fd078413          	addi	s0,a5,-48
	while (isdigit(*p)) {
1c00ba50:	8752                	mv	a4,s4
1c00ba52:	0017478b          	p.lbu	a5,1(a4!)
1c00ba56:	fd078613          	addi	a2,a5,-48
1c00ba5a:	fec6f6e3          	bleu	a2,a3,1c00ba46 <_prf+0x1c8>
1c00ba5e:	bdcd                	j	1c00b950 <_prf+0xd2>
	int i = 0;
1c00ba60:	4401                	li	s0,0
	while (isdigit(*p)) {
1c00ba62:	46a5                	li	a3,9
		i = 10 * i + *p++ - '0';
1c00ba64:	45a9                	li	a1,10
1c00ba66:	b7ed                	j	1c00ba50 <_prf+0x1d2>
				} else if (i == 'h' && c == 'h') {
1c00ba68:	06800693          	li	a3,104
1c00ba6c:	f0d49fe3          	bne	s1,a3,1c00b98a <_prf+0x10c>
1c00ba70:	f09d9de3          	bne	s11,s1,1c00b98a <_prf+0x10c>
					c = *format++;
1c00ba74:	002a0c13          	addi	s8,s4,2
1c00ba78:	001a4d83          	lbu	s11,1(s4)
					i = 'H';
1c00ba7c:	04800493          	li	s1,72
1c00ba80:	b729                	j	1c00b98a <_prf+0x10c>
1c00ba82:	8c52                	mv	s8,s4
			i = 0;
1c00ba84:	4481                	li	s1,0
1c00ba86:	b711                	j	1c00b98a <_prf+0x10c>
			switch (c) {
1c00ba88:	06300693          	li	a3,99
1c00ba8c:	12dd8a63          	beq	s11,a3,1c00bbc0 <_prf+0x342>
1c00ba90:	09b6e163          	bltu	a3,s11,1c00bb12 <_prf+0x294>
1c00ba94:	05800693          	li	a3,88
1c00ba98:	f0dd9fe3          	bne	s11,a3,1c00b9b6 <_prf+0x138>
				switch (i) {
1c00ba9c:	06c00693          	li	a3,108
1c00baa0:	6cd48363          	beq	s1,a3,1c00c166 <_prf+0x8e8>
1c00baa4:	07a00693          	li	a3,122
1c00baa8:	6ad48f63          	beq	s1,a3,1c00c166 <_prf+0x8e8>
1c00baac:	04c00693          	li	a3,76
1c00bab0:	6ad49b63          	bne	s1,a3,1c00c166 <_prf+0x8e8>
					val = va_arg(vargs, unsigned long long);
1c00bab4:	091d                	addi	s2,s2,7
1c00bab6:	c4093933          	p.bclr	s2,s2,2,0
1c00baba:	00092583          	lw	a1,0(s2)
1c00babe:	00492603          	lw	a2,4(s2)
1c00bac2:	00890a13          	addi	s4,s2,8
				if (c == 'o') {
1c00bac6:	06f00713          	li	a4,111
1c00baca:	00c4                	addi	s1,sp,68
1c00bacc:	6aed9d63          	bne	s11,a4,1c00c186 <_prf+0x908>
	if (alt_form) {
1c00bad0:	6a0a8163          	beqz	s5,1c00c172 <_prf+0x8f4>
		*buf++ = '0';
1c00bad4:	03000793          	li	a5,48
1c00bad8:	04f10223          	sb	a5,68(sp)
		if (!value) {
1c00badc:	00c5e7b3          	or	a5,a1,a2
		*buf++ = '0';
1c00bae0:	04510513          	addi	a0,sp,69
		if (!value) {
1c00bae4:	68079863          	bnez	a5,1c00c174 <_prf+0x8f6>
			*buf++ = 0;
1c00bae8:	040102a3          	sb	zero,69(sp)
			prefix = 0;
1c00baec:	4901                	li	s2,0
			return 1;
1c00baee:	4d85                	li	s11,1
1c00baf0:	a069                	j	1c00bb7a <_prf+0x2fc>
			switch (c) {
1c00baf2:	07000693          	li	a3,112
1c00baf6:	62dd8f63          	beq	s11,a3,1c00c134 <_prf+0x8b6>
1c00bafa:	09b6e663          	bltu	a3,s11,1c00bb86 <_prf+0x308>
1c00bafe:	06e00693          	li	a3,110
1c00bb02:	5edd8463          	beq	s11,a3,1c00c0ea <_prf+0x86c>
1c00bb06:	f9b6ebe3          	bltu	a3,s11,1c00ba9c <_prf+0x21e>
1c00bb0a:	06900693          	li	a3,105
1c00bb0e:	eadd94e3          	bne	s11,a3,1c00b9b6 <_prf+0x138>
				switch (i) {
1c00bb12:	06c00793          	li	a5,108
1c00bb16:	18f48563          	beq	s1,a5,1c00bca0 <_prf+0x422>
1c00bb1a:	07a00793          	li	a5,122
1c00bb1e:	18f48163          	beq	s1,a5,1c00bca0 <_prf+0x422>
1c00bb22:	04c00793          	li	a5,76
1c00bb26:	16f49d63          	bne	s1,a5,1c00bca0 <_prf+0x422>
					val = va_arg(vargs, long long);
1c00bb2a:	091d                	addi	s2,s2,7
1c00bb2c:	c4093933          	p.bclr	s2,s2,2,0
1c00bb30:	00092583          	lw	a1,0(s2)
1c00bb34:	00492a83          	lw	s5,4(s2)
1c00bb38:	00890a13          	addi	s4,s2,8
1c00bb3c:	04410d93          	addi	s11,sp,68
	if (value < 0) {
1c00bb40:	160ad763          	bgez	s5,1c00bcae <_prf+0x430>
		*buf++ = '-';
1c00bb44:	02d00793          	li	a5,45
		value = -value;
1c00bb48:	40b005b3          	neg	a1,a1
		*buf++ = '-';
1c00bb4c:	04f10223          	sb	a5,68(sp)
		value = -value;
1c00bb50:	41500633          	neg	a2,s5
1c00bb54:	00b037b3          	snez	a5,a1
1c00bb58:	8e1d                	sub	a2,a2,a5
		*buf++ = ' ';
1c00bb5a:	04510913          	addi	s2,sp,69
	return _to_x(buf, value, 10);
1c00bb5e:	854a                	mv	a0,s2
1c00bb60:	46a9                	li	a3,10
1c00bb62:	bf3ff0ef          	jal	ra,1c00b754 <_to_x>
				if (fplus || fspace || val < 0) {
1c00bb66:	47b2                	lw	a5,12(sp)
	return (buf + _to_udec(buf, value)) - start;
1c00bb68:	954a                	add	a0,a0,s2
1c00bb6a:	41b50db3          	sub	s11,a0,s11
					prefix = 1;
1c00bb6e:	4905                	li	s2,1
				if (fplus || fspace || val < 0) {
1c00bb70:	e789                	bnez	a5,1c00bb7a <_prf+0x2fc>
1c00bb72:	4742                	lw	a4,16(sp)
1c00bb74:	e319                	bnez	a4,1c00bb7a <_prf+0x2fc>
1c00bb76:	01fad913          	srli	s2,s5,0x1f
			if (precision >= 0) {
1c00bb7a:	04045c63          	bgez	s0,1c00bbd2 <_prf+0x354>
			zero.predot = zero.postdot = zero.trail = 0;
1c00bb7e:	4401                	li	s0,0
1c00bb80:	4a81                	li	s5,0
1c00bb82:	4681                	li	a3,0
1c00bb84:	a401                	j	1c00bd84 <_prf+0x506>
			switch (c) {
1c00bb86:	07500693          	li	a3,117
1c00bb8a:	f0dd89e3          	beq	s11,a3,1c00ba9c <_prf+0x21e>
1c00bb8e:	07800693          	li	a3,120
1c00bb92:	f0dd85e3          	beq	s11,a3,1c00ba9c <_prf+0x21e>
1c00bb96:	07300713          	li	a4,115
1c00bb9a:	e0ed9ee3          	bne	s11,a4,1c00b9b6 <_prf+0x138>
				cptr = va_arg(vargs, char *);
1c00bb9e:	00490a13          	addi	s4,s2,4
1c00bba2:	00092783          	lw	a5,0(s2)
				if (precision < 0) {
1c00bba6:	00045663          	bgez	s0,1c00bbb2 <_prf+0x334>
					precision = INT_MAX;
1c00bbaa:	80000737          	lui	a4,0x80000
1c00bbae:	fff74413          	not	s0,a4
1c00bbb2:	86be                	mv	a3,a5
				for (clen = 0; clen < precision; clen++) {
1c00bbb4:	4d81                	li	s11,0
1c00bbb6:	5bb41263          	bne	s0,s11,1c00c15a <_prf+0x8dc>
1c00bbba:	4901                	li	s2,0
1c00bbbc:	4401                	li	s0,0
1c00bbbe:	a819                	j	1c00bbd4 <_prf+0x356>
				buf[0] = va_arg(vargs, int);
1c00bbc0:	00092783          	lw	a5,0(s2)
1c00bbc4:	00490a13          	addi	s4,s2,4
				clen = 1;
1c00bbc8:	4d85                	li	s11,1
				buf[0] = va_arg(vargs, int);
1c00bbca:	04f10223          	sb	a5,68(sp)
				break;
1c00bbce:	4901                	li	s2,0
1c00bbd0:	4401                	li	s0,0
1c00bbd2:	00dc                	addi	a5,sp,68
				zero_head = precision - clen + prefix;
1c00bbd4:	41b40d33          	sub	s10,s0,s11
1c00bbd8:	9d4a                	add	s10,s10,s2
			zero.predot = zero.postdot = zero.trail = 0;
1c00bbda:	4401                	li	s0,0
1c00bbdc:	4a81                	li	s5,0
1c00bbde:	4681                	li	a3,0
1c00bbe0:	040d6d33          	p.max	s10,s10,zero
			if (!fminus && width > 0) {
1c00bbe4:	4762                	lw	a4,24(sp)
			width -= clen + zero_head;
1c00bbe6:	01bd0633          	add	a2,s10,s11
1c00bbea:	40cc8cb3          	sub	s9,s9,a2
			if (!fminus && width > 0) {
1c00bbee:	e701                	bnez	a4,1c00bbf6 <_prf+0x378>
1c00bbf0:	84e6                	mv	s1,s9
1c00bbf2:	63904263          	bgtz	s9,1c00c216 <_prf+0x998>
1c00bbf6:	012784b3          	add	s1,a5,s2
			while (prefix-- > 0) {
1c00bbfa:	62979463          	bne	a5,s1,1c00c222 <_prf+0x9a4>
1c00bbfe:	84ea                	mv	s1,s10
			while (zero_head-- > 0) {
1c00bc00:	14fd                	addi	s1,s1,-1
1c00bc02:	63f4bc63          	p.bneimm	s1,-1,1c00c23a <_prf+0x9bc>
			clen -= prefix;
1c00bc06:	412d84b3          	sub	s1,s11,s2
1c00bc0a:	8726                	mv	a4,s1
			if (zero.predot) {
1c00bc0c:	c295                	beqz	a3,1c00bc30 <_prf+0x3b2>
				c = *cptr;
1c00bc0e:	0007c503          	lbu	a0,0(a5)
				while (isdigit(c)) {
1c00bc12:	8dbe                	mv	s11,a5
1c00bc14:	00978833          	add	a6,a5,s1
1c00bc18:	4625                	li	a2,9
1c00bc1a:	fd050593          	addi	a1,a0,-48
1c00bc1e:	41b80733          	sub	a4,a6,s11
1c00bc22:	62b67863          	bleu	a1,a2,1c00c252 <_prf+0x9d4>
1c00bc26:	8636                	mv	a2,a3
				while (zero.predot-- > 0) {
1c00bc28:	64061363          	bnez	a2,1c00c26e <_prf+0x9f0>
				clen -= zero.predot;
1c00bc2c:	8f15                	sub	a4,a4,a3
1c00bc2e:	87ee                	mv	a5,s11
			if (zero.postdot) {
1c00bc30:	020a8e63          	beqz	s5,1c00bc6c <_prf+0x3ee>
1c00bc34:	8dbe                	mv	s11,a5
1c00bc36:	00e78833          	add	a6,a5,a4
				} while (c != '.');
1c00bc3a:	02e00613          	li	a2,46
					c = *cptr++;
1c00bc3e:	001dc68b          	p.lbu	a3,1(s11!)
					PUTC(c);
1c00bc42:	85de                	mv	a1,s7
1c00bc44:	c232                	sw	a2,4(sp)
1c00bc46:	8536                	mv	a0,a3
1c00bc48:	c036                	sw	a3,0(sp)
1c00bc4a:	c442                	sw	a6,8(sp)
1c00bc4c:	9b02                	jalr	s6
1c00bc4e:	4612                	lw	a2,4(sp)
1c00bc50:	4682                	lw	a3,0(sp)
1c00bc52:	4822                	lw	a6,8(sp)
1c00bc54:	c7f524e3          	p.beqimm	a0,-1,1c00b8bc <_prf+0x3e>
1c00bc58:	41b80733          	sub	a4,a6,s11
				} while (c != '.');
1c00bc5c:	fec691e3          	bne	a3,a2,1c00bc3e <_prf+0x3c0>
1c00bc60:	86d6                	mv	a3,s5
				while (zero.postdot-- > 0) {
1c00bc62:	62d04563          	bgtz	a3,1c00c28c <_prf+0xa0e>
				clen -= zero.postdot;
1c00bc66:	41570733          	sub	a4,a4,s5
					c = *cptr++;
1c00bc6a:	87ee                	mv	a5,s11
			if (zero.trail) {
1c00bc6c:	c415                	beqz	s0,1c00bc98 <_prf+0x41a>
				c = *cptr;
1c00bc6e:	0007c503          	lbu	a0,0(a5)
				while (isdigit(c) || c == '.') {
1c00bc72:	8dbe                	mv	s11,a5
1c00bc74:	973e                	add	a4,a4,a5
1c00bc76:	4625                	li	a2,9
1c00bc78:	02e00693          	li	a3,46
1c00bc7c:	fd050593          	addi	a1,a0,-48
1c00bc80:	41b70ab3          	sub	s5,a4,s11
1c00bc84:	62b67163          	bleu	a1,a2,1c00c2a6 <_prf+0xa28>
1c00bc88:	60d50f63          	beq	a0,a3,1c00c2a6 <_prf+0xa28>
1c00bc8c:	8722                	mv	a4,s0
				while (zero.trail-- > 0) {
1c00bc8e:	62e04a63          	bgtz	a4,1c00c2c2 <_prf+0xa44>
				clen -= zero.trail;
1c00bc92:	408a8733          	sub	a4,s5,s0
1c00bc96:	87ee                	mv	a5,s11
1c00bc98:	843e                	mv	s0,a5
1c00bc9a:	00e78ab3          	add	s5,a5,a4
1c00bc9e:	a599                	j	1c00c2e4 <_prf+0xa66>
					val = va_arg(vargs, int);
1c00bca0:	00092583          	lw	a1,0(s2)
1c00bca4:	00490a13          	addi	s4,s2,4
1c00bca8:	41f5da93          	srai	s5,a1,0x1f
					break;
1c00bcac:	bd41                	j	1c00bb3c <_prf+0x2be>
	} else if (fplus) {
1c00bcae:	47b2                	lw	a5,12(sp)
1c00bcb0:	c799                	beqz	a5,1c00bcbe <_prf+0x440>
		*buf++ = '+';
1c00bcb2:	02b00793          	li	a5,43
		*buf++ = ' ';
1c00bcb6:	04f10223          	sb	a5,68(sp)
1c00bcba:	8656                	mv	a2,s5
1c00bcbc:	bd79                	j	1c00bb5a <_prf+0x2dc>
	} else if (fspace) {
1c00bcbe:	4742                	lw	a4,16(sp)
1c00bcc0:	c701                	beqz	a4,1c00bcc8 <_prf+0x44a>
		*buf++ = ' ';
1c00bcc2:	02000793          	li	a5,32
1c00bcc6:	bfc5                	j	1c00bcb6 <_prf+0x438>
	} else if (fspace) {
1c00bcc8:	8656                	mv	a2,s5
1c00bcca:	896e                	mv	s2,s11
1c00bccc:	bd49                	j	1c00bb5e <_prf+0x2e0>
				u.d = va_arg(vargs, double);
1c00bcce:	091d                	addi	s2,s2,7
1c00bcd0:	c4093933          	p.bclr	s2,s2,2,0
				double_val = u.i;
1c00bcd4:	00092583          	lw	a1,0(s2)
1c00bcd8:	00492683          	lw	a3,4(s2)
	fract = (double_temp << 11) & ~HIGHBIT64;
1c00bcdc:	800007b7          	lui	a5,0x80000
1c00bce0:	0155d613          	srli	a2,a1,0x15
1c00bce4:	00b69713          	slli	a4,a3,0xb
1c00bce8:	8f51                	or	a4,a4,a2
1c00bcea:	fff7c793          	not	a5,a5
1c00bcee:	05ae                	slli	a1,a1,0xb
1c00bcf0:	8f7d                	and	a4,a4,a5
				u.d = va_arg(vargs, double);
1c00bcf2:	00890a13          	addi	s4,s2,8
	fract = (double_temp << 11) & ~HIGHBIT64;
1c00bcf6:	d82e                	sw	a1,48(sp)
	exp = double_temp >> 52 & 0x7ff;
1c00bcf8:	0146d913          	srli	s2,a3,0x14
	fract = (double_temp << 11) & ~HIGHBIT64;
1c00bcfc:	da3a                	sw	a4,52(sp)
	exp = double_temp >> 52 & 0x7ff;
1c00bcfe:	e8b93933          	p.bclr	s2,s2,20,11
	if (sign) {
1c00bd02:	0806d863          	bgez	a3,1c00bd92 <_prf+0x514>
		*buf++ = '-';
1c00bd06:	02d00693          	li	a3,45
		*buf++ = ' ';
1c00bd0a:	04d10223          	sb	a3,68(sp)
1c00bd0e:	04510493          	addi	s1,sp,69
	if (exp == 0x7ff) {
1c00bd12:	7ff00693          	li	a3,2047
1c00bd16:	0cd91363          	bne	s2,a3,1c00bddc <_prf+0x55e>
		if (!fract) {
1c00bd1a:	8f4d                	or	a4,a4,a1
1c00bd1c:	fbfd8793          	addi	a5,s11,-65
1c00bd20:	00348513          	addi	a0,s1,3
1c00bd24:	eb49                	bnez	a4,1c00bdb6 <_prf+0x538>
			if (isupper(c)) {
1c00bd26:	4765                	li	a4,25
1c00bd28:	06f76f63          	bltu	a4,a5,1c00bda6 <_prf+0x528>
				*buf++ = 'I';
1c00bd2c:	6795                	lui	a5,0x5
1c00bd2e:	e4978793          	addi	a5,a5,-439 # 4e49 <__rt_stack_size+0x4649>
1c00bd32:	00f49023          	sh	a5,0(s1)
				*buf++ = 'N';
1c00bd36:	04600793          	li	a5,70
		return buf - start;
1c00bd3a:	04410913          	addi	s2,sp,68
				*buf++ = 'a';
1c00bd3e:	00f48123          	sb	a5,2(s1)
		*buf = 0;
1c00bd42:	000481a3          	sb	zero,3(s1)
		return buf - start;
1c00bd46:	41250533          	sub	a0,a0,s2
			zero.predot = zero.postdot = zero.trail = 0;
1c00bd4a:	4401                	li	s0,0
1c00bd4c:	4a81                	li	s5,0
1c00bd4e:	4681                	li	a3,0
				if (fplus || fspace || (buf[0] == '-')) {
1c00bd50:	4732                	lw	a4,12(sp)
					prefix = 1;
1c00bd52:	4905                	li	s2,1
				if (fplus || fspace || (buf[0] == '-')) {
1c00bd54:	eb09                	bnez	a4,1c00bd66 <_prf+0x4e8>
1c00bd56:	47c2                	lw	a5,16(sp)
1c00bd58:	e799                	bnez	a5,1c00bd66 <_prf+0x4e8>
1c00bd5a:	04414903          	lbu	s2,68(sp)
1c00bd5e:	fd390913          	addi	s2,s2,-45
1c00bd62:	00193913          	seqz	s2,s2
				if (!isdigit(buf[prefix])) {
1c00bd66:	1098                	addi	a4,sp,96
1c00bd68:	012707b3          	add	a5,a4,s2
1c00bd6c:	fe47c783          	lbu	a5,-28(a5)
				clen += zero.predot + zero.postdot + zero.trail;
1c00bd70:	015684b3          	add	s1,a3,s5
1c00bd74:	94a2                	add	s1,s1,s0
1c00bd76:	fd078793          	addi	a5,a5,-48
				if (!isdigit(buf[prefix])) {
1c00bd7a:	4625                	li	a2,9
				clen += zero.predot + zero.postdot + zero.trail;
1c00bd7c:	00a48db3          	add	s11,s1,a0
				if (!isdigit(buf[prefix])) {
1c00bd80:	46f66e63          	bltu	a2,a5,1c00c1fc <_prf+0x97e>
			} else if (fzero) {
1c00bd84:	47f2                	lw	a5,28(sp)
1c00bd86:	46078b63          	beqz	a5,1c00c1fc <_prf+0x97e>
				zero_head = width - clen;
1c00bd8a:	41bc8d33          	sub	s10,s9,s11
1c00bd8e:	00dc                	addi	a5,sp,68
1c00bd90:	bd81                	j	1c00bbe0 <_prf+0x362>
	} else if (fplus) {
1c00bd92:	47b2                	lw	a5,12(sp)
		*buf++ = '+';
1c00bd94:	02b00693          	li	a3,43
	} else if (fplus) {
1c00bd98:	fbad                	bnez	a5,1c00bd0a <_prf+0x48c>
	} else if (fspace) {
1c00bd9a:	47c2                	lw	a5,16(sp)
1c00bd9c:	00c4                	addi	s1,sp,68
1c00bd9e:	dbb5                	beqz	a5,1c00bd12 <_prf+0x494>
		*buf++ = ' ';
1c00bda0:	02000693          	li	a3,32
1c00bda4:	b79d                	j	1c00bd0a <_prf+0x48c>
				*buf++ = 'i';
1c00bda6:	679d                	lui	a5,0x7
1c00bda8:	e6978793          	addi	a5,a5,-407 # 6e69 <__rt_stack_size+0x6669>
1c00bdac:	00f49023          	sh	a5,0(s1)
				*buf++ = 'n';
1c00bdb0:	06600793          	li	a5,102
1c00bdb4:	b759                	j	1c00bd3a <_prf+0x4bc>
			if (isupper(c)) {
1c00bdb6:	4765                	li	a4,25
1c00bdb8:	00f76a63          	bltu	a4,a5,1c00bdcc <_prf+0x54e>
				*buf++ = 'N';
1c00bdbc:	6791                	lui	a5,0x4
1c00bdbe:	14e78793          	addi	a5,a5,334 # 414e <__rt_stack_size+0x394e>
1c00bdc2:	00f49023          	sh	a5,0(s1)
				*buf++ = 'A';
1c00bdc6:	04e00793          	li	a5,78
1c00bdca:	bf85                	j	1c00bd3a <_prf+0x4bc>
				*buf++ = 'n';
1c00bdcc:	6799                	lui	a5,0x6
1c00bdce:	16e78793          	addi	a5,a5,366 # 616e <__rt_stack_size+0x596e>
1c00bdd2:	00f49023          	sh	a5,0(s1)
				*buf++ = 'a';
1c00bdd6:	06e00793          	li	a5,110
1c00bdda:	b785                	j	1c00bd3a <_prf+0x4bc>
	if (c == 'F') {
1c00bddc:	04600693          	li	a3,70
1c00bde0:	00dd9463          	bne	s11,a3,1c00bde8 <_prf+0x56a>
		c = 'f';
1c00bde4:	06600d93          	li	s11,102
	if ((exp | fract) != 0) {
1c00bde8:	41f95613          	srai	a2,s2,0x1f
1c00bdec:	00b966b3          	or	a3,s2,a1
1c00bdf0:	8e59                	or	a2,a2,a4
1c00bdf2:	8ed1                	or	a3,a3,a2
1c00bdf4:	1c068263          	beqz	a3,1c00bfb8 <_prf+0x73a>
		if (exp == 0) {
1c00bdf8:	10090d63          	beqz	s2,1c00bf12 <_prf+0x694>
		fract |= HIGHBIT64;
1c00bdfc:	5752                	lw	a4,52(sp)
1c00bdfe:	800007b7          	lui	a5,0x80000
		exp -= (1023 - 1);	/* +1 since .1 vs 1. */
1c00be02:	c0290913          	addi	s2,s2,-1022
		fract |= HIGHBIT64;
1c00be06:	8f5d                	or	a4,a4,a5
1c00be08:	da3a                	sw	a4,52(sp)
1c00be0a:	4d01                	li	s10,0
	while (exp <= -3) {
1c00be0c:	5779                	li	a4,-2
1c00be0e:	10e94f63          	blt	s2,a4,1c00bf2c <_prf+0x6ae>
	while (exp > 0) {
1c00be12:	17204663          	bgtz	s2,1c00bf7e <_prf+0x700>
		_rlrshift(&fract);
1c00be16:	1808                	addi	a0,sp,48
		exp++;
1c00be18:	0905                	addi	s2,s2,1
		_rlrshift(&fract);
1c00be1a:	9cdff0ef          	jal	ra,1c00b7e6 <_rlrshift>
	while (exp < (0 + 4)) {
1c00be1e:	fe493ce3          	p.bneimm	s2,4,1c00be16 <_prf+0x598>
	if (precision < 0) {
1c00be22:	00045363          	bgez	s0,1c00be28 <_prf+0x5aa>
		precision = 6;		/* Default precision if none given */
1c00be26:	4419                	li	s0,6
	if ((c == 'g') || (c == 'G')) {
1c00be28:	0dfdf713          	andi	a4,s11,223
1c00be2c:	04700693          	li	a3,71
	prune_zero = false;		/* Assume trailing 0's allowed     */
1c00be30:	ca02                	sw	zero,20(sp)
	if ((c == 'g') || (c == 'G')) {
1c00be32:	02d71563          	bne	a4,a3,1c00be5c <_prf+0x5de>
		if (decexp < (-4 + 1) || decexp > precision) {
1c00be36:	5775                	li	a4,-3
1c00be38:	00ed4463          	blt	s10,a4,1c00be40 <_prf+0x5c2>
1c00be3c:	19a45163          	ble	s10,s0,1c00bfbe <_prf+0x740>
			c += 'e' - 'g';
1c00be40:	ffed8793          	addi	a5,s11,-2
1c00be44:	0ff7fd93          	andi	s11,a5,255
			if (precision > 0) {
1c00be48:	4c040e63          	beqz	s0,1c00c324 <_prf+0xaa6>
				precision--;
1c00be4c:	147d                	addi	s0,s0,-1
		if (!falt && (precision > 0)) {
1c00be4e:	4c0a9b63          	bnez	s5,1c00c324 <_prf+0xaa6>
1c00be52:	00802933          	sgtz	s2,s0
1c00be56:	0ff97913          	andi	s2,s2,255
1c00be5a:	ca4a                	sw	s2,20(sp)
	if (c == 'f') {
1c00be5c:	06600713          	li	a4,102
1c00be60:	4ced9363          	bne	s11,a4,1c00c326 <_prf+0xaa8>
		exp = precision + decexp;
1c00be64:	008d0733          	add	a4,s10,s0
		if (exp < 0) {
1c00be68:	06600d93          	li	s11,102
1c00be6c:	4a075f63          	bgez	a4,1c00c32a <_prf+0xaac>
	digit_count = 16;
1c00be70:	4741                	li	a4,16
1c00be72:	d63a                	sw	a4,44(sp)
			exp = 0;
1c00be74:	4901                	li	s2,0
	ltemp = 0x0800000000000000;
1c00be76:	4601                	li	a2,0
1c00be78:	080006b7          	lui	a3,0x8000
1c00be7c:	dc32                	sw	a2,56(sp)
1c00be7e:	de36                	sw	a3,60(sp)
	while (exp--) {
1c00be80:	197d                	addi	s2,s2,-1
1c00be82:	15f93563          	p.bneimm	s2,-1,1c00bfcc <_prf+0x74e>
	fract += ltemp;
1c00be86:	5742                	lw	a4,48(sp)
1c00be88:	56e2                	lw	a3,56(sp)
1c00be8a:	5652                	lw	a2,52(sp)
1c00be8c:	55f2                	lw	a1,60(sp)
1c00be8e:	96ba                	add	a3,a3,a4
1c00be90:	00e6b733          	sltu	a4,a3,a4
1c00be94:	962e                	add	a2,a2,a1
1c00be96:	9732                	add	a4,a4,a2
1c00be98:	da3a                	sw	a4,52(sp)
1c00be9a:	d836                	sw	a3,48(sp)
	if ((fract >> 32) & 0xF0000000) {
1c00be9c:	f6073733          	p.bclr	a4,a4,27,0
1c00bea0:	cb01                	beqz	a4,1c00beb0 <_prf+0x632>
		_ldiv5(&fract);
1c00bea2:	1808                	addi	a0,sp,48
1c00bea4:	963ff0ef          	jal	ra,1c00b806 <_ldiv5>
		_rlrshift(&fract);
1c00bea8:	1808                	addi	a0,sp,48
1c00beaa:	93dff0ef          	jal	ra,1c00b7e6 <_rlrshift>
		decexp++;
1c00beae:	0d05                	addi	s10,s10,1
	if (c == 'f') {
1c00beb0:	06600713          	li	a4,102
1c00beb4:	16ed9163          	bne	s11,a4,1c00c016 <_prf+0x798>
		if (decexp > 0) {
1c00beb8:	8926                	mv	s2,s1
1c00beba:	13a04963          	bgtz	s10,1c00bfec <_prf+0x76e>
			*buf++ = '0';
1c00bebe:	03000713          	li	a4,48
1c00bec2:	00e48023          	sb	a4,0(s1)
1c00bec6:	00148913          	addi	s2,s1,1
			zero.predot = zero.postdot = zero.trail = 0;
1c00beca:	4681                	li	a3,0
		if (falt || (precision > 0)) {
1c00becc:	120a8763          	beqz	s5,1c00bffa <_prf+0x77c>
			*buf++ = '.';
1c00bed0:	02e00593          	li	a1,46
1c00bed4:	00b90023          	sb	a1,0(s2)
1c00bed8:	00190713          	addi	a4,s2,1
		if (decexp < 0 && precision > 0) {
1c00bedc:	440d0263          	beqz	s10,1c00c320 <_prf+0xaa2>
1c00bee0:	12805863          	blez	s0,1c00c010 <_prf+0x792>
			zp->postdot = -decexp;
1c00bee4:	41a00ab3          	neg	s5,s10
1c00bee8:	048acab3          	p.min	s5,s5,s0
			precision -= zp->postdot;
1c00beec:	41540433          	sub	s0,s0,s5
			zero.predot = zero.postdot = zero.trail = 0;
1c00bef0:	893a                	mv	s2,a4
		while (precision > 0 && digit_count > 0) {
1c00bef2:	10805763          	blez	s0,1c00c000 <_prf+0x782>
1c00bef6:	5732                	lw	a4,44(sp)
1c00bef8:	10e05463          	blez	a4,1c00c000 <_prf+0x782>
			*buf++ = _get_digit(&fract, &digit_count);
1c00befc:	106c                	addi	a1,sp,44
1c00befe:	1808                	addi	a0,sp,48
1c00bf00:	c036                	sw	a3,0(sp)
1c00bf02:	949ff0ef          	jal	ra,1c00b84a <_get_digit>
1c00bf06:	00a900ab          	p.sb	a0,1(s2!)
			precision--;
1c00bf0a:	147d                	addi	s0,s0,-1
1c00bf0c:	4682                	lw	a3,0(sp)
1c00bf0e:	b7d5                	j	1c00bef2 <_prf+0x674>
				exp--;
1c00bf10:	197d                	addi	s2,s2,-1
			while (((fract <<= 1) & HIGHBIT64) == 0) {
1c00bf12:	01f5d693          	srli	a3,a1,0x1f
1c00bf16:	0706                	slli	a4,a4,0x1
1c00bf18:	8f55                	or	a4,a4,a3
1c00bf1a:	0586                	slli	a1,a1,0x1
1c00bf1c:	fe075ae3          	bgez	a4,1c00bf10 <_prf+0x692>
1c00bf20:	d82e                	sw	a1,48(sp)
1c00bf22:	da3a                	sw	a4,52(sp)
1c00bf24:	bde1                	j	1c00bdfc <_prf+0x57e>
			_rlrshift(&fract);
1c00bf26:	1808                	addi	a0,sp,48
1c00bf28:	8bfff0ef          	jal	ra,1c00b7e6 <_rlrshift>
		while ((fract >> 32) >= (MAXFP1 / 5)) {
1c00bf2c:	55d2                	lw	a1,52(sp)
1c00bf2e:	33333737          	lui	a4,0x33333
1c00bf32:	33270713          	addi	a4,a4,818 # 33333332 <__l2_end+0x173259b2>
1c00bf36:	5642                	lw	a2,48(sp)
1c00bf38:	0905                	addi	s2,s2,1
1c00bf3a:	feb766e3          	bltu	a4,a1,1c00bf26 <_prf+0x6a8>
		fract *= 5U;
1c00bf3e:	4695                	li	a3,5
1c00bf40:	02c6b733          	mulhu	a4,a3,a2
		decexp--;
1c00bf44:	1d7d                	addi	s10,s10,-1
		fract *= 5U;
1c00bf46:	02c68633          	mul	a2,a3,a2
1c00bf4a:	42b68733          	p.mac	a4,a3,a1
1c00bf4e:	d832                	sw	a2,48(sp)
		decexp--;
1c00bf50:	4681                	li	a3,0
		fract *= 5U;
1c00bf52:	da3a                	sw	a4,52(sp)
		while ((fract >> 32) <= (MAXFP1 / 2)) {
1c00bf54:	800007b7          	lui	a5,0x80000
1c00bf58:	fff7c793          	not	a5,a5
1c00bf5c:	00e7f763          	bleu	a4,a5,1c00bf6a <_prf+0x6ec>
1c00bf60:	ea0686e3          	beqz	a3,1c00be0c <_prf+0x58e>
1c00bf64:	d832                	sw	a2,48(sp)
1c00bf66:	da3a                	sw	a4,52(sp)
1c00bf68:	b555                	j	1c00be0c <_prf+0x58e>
			fract <<= 1;
1c00bf6a:	01f65593          	srli	a1,a2,0x1f
1c00bf6e:	00171693          	slli	a3,a4,0x1
1c00bf72:	00d5e733          	or	a4,a1,a3
1c00bf76:	0606                	slli	a2,a2,0x1
			exp--;
1c00bf78:	197d                	addi	s2,s2,-1
1c00bf7a:	4685                	li	a3,1
1c00bf7c:	bfe1                	j	1c00bf54 <_prf+0x6d6>
		_ldiv5(&fract);
1c00bf7e:	1808                	addi	a0,sp,48
1c00bf80:	887ff0ef          	jal	ra,1c00b806 <_ldiv5>
1c00bf84:	5642                	lw	a2,48(sp)
1c00bf86:	5752                	lw	a4,52(sp)
		exp--;
1c00bf88:	197d                	addi	s2,s2,-1
		decexp++;
1c00bf8a:	0d05                	addi	s10,s10,1
1c00bf8c:	4681                	li	a3,0
		while ((fract >> 32) <= (MAXFP1 / 2)) {
1c00bf8e:	800007b7          	lui	a5,0x80000
1c00bf92:	fff7c793          	not	a5,a5
1c00bf96:	00e7f763          	bleu	a4,a5,1c00bfa4 <_prf+0x726>
1c00bf9a:	e6068ce3          	beqz	a3,1c00be12 <_prf+0x594>
1c00bf9e:	d832                	sw	a2,48(sp)
1c00bfa0:	da3a                	sw	a4,52(sp)
1c00bfa2:	bd85                	j	1c00be12 <_prf+0x594>
			fract <<= 1;
1c00bfa4:	01f65593          	srli	a1,a2,0x1f
1c00bfa8:	00171693          	slli	a3,a4,0x1
1c00bfac:	00d5e733          	or	a4,a1,a3
1c00bfb0:	0606                	slli	a2,a2,0x1
			exp--;
1c00bfb2:	197d                	addi	s2,s2,-1
1c00bfb4:	4685                	li	a3,1
1c00bfb6:	bfe1                	j	1c00bf8e <_prf+0x710>
	if ((exp | fract) != 0) {
1c00bfb8:	4d01                	li	s10,0
1c00bfba:	4901                	li	s2,0
1c00bfbc:	bda9                	j	1c00be16 <_prf+0x598>
			precision -= decexp;
1c00bfbe:	41a40433          	sub	s0,s0,s10
		if (!falt && (precision > 0)) {
1c00bfc2:	ea0a91e3          	bnez	s5,1c00be64 <_prf+0x5e6>
			c = 'f';
1c00bfc6:	06600d93          	li	s11,102
1c00bfca:	b561                	j	1c00be52 <_prf+0x5d4>
		_ldiv5(&ltemp);
1c00bfcc:	1828                	addi	a0,sp,56
1c00bfce:	839ff0ef          	jal	ra,1c00b806 <_ldiv5>
		_rlrshift(&ltemp);
1c00bfd2:	1828                	addi	a0,sp,56
1c00bfd4:	813ff0ef          	jal	ra,1c00b7e6 <_rlrshift>
1c00bfd8:	b565                	j	1c00be80 <_prf+0x602>
				*buf++ = _get_digit(&fract, &digit_count);
1c00bfda:	106c                	addi	a1,sp,44
1c00bfdc:	1808                	addi	a0,sp,48
1c00bfde:	86dff0ef          	jal	ra,1c00b84a <_get_digit>
1c00bfe2:	00a900ab          	p.sb	a0,1(s2!)
				decexp--;
1c00bfe6:	1d7d                	addi	s10,s10,-1
			while (decexp > 0 && digit_count > 0) {
1c00bfe8:	000d0563          	beqz	s10,1c00bff2 <_prf+0x774>
1c00bfec:	5732                	lw	a4,44(sp)
1c00bfee:	fee046e3          	bgtz	a4,1c00bfda <_prf+0x75c>
		if (falt || (precision > 0)) {
1c00bff2:	300a9f63          	bnez	s5,1c00c310 <_prf+0xa92>
			zp->predot = decexp;
1c00bff6:	86ea                	mv	a3,s10
			decexp = 0;
1c00bff8:	4d01                	li	s10,0
			zero.predot = zero.postdot = zero.trail = 0;
1c00bffa:	4a81                	li	s5,0
		if (falt || (precision > 0)) {
1c00bffc:	ec804ae3          	bgtz	s0,1c00bed0 <_prf+0x652>
	if (prune_zero) {
1c00c000:	4752                	lw	a4,20(sp)
1c00c002:	eb31                	bnez	a4,1c00c056 <_prf+0x7d8>
	return buf - start;
1c00c004:	00c8                	addi	a0,sp,68
	*buf = 0;
1c00c006:	00090023          	sb	zero,0(s2)
	return buf - start;
1c00c00a:	40a90533          	sub	a0,s2,a0
1c00c00e:	b389                	j	1c00bd50 <_prf+0x4d2>
			*buf++ = '.';
1c00c010:	893a                	mv	s2,a4
			zero.predot = zero.postdot = zero.trail = 0;
1c00c012:	4a81                	li	s5,0
1c00c014:	b7f5                	j	1c00c000 <_prf+0x782>
		*buf = _get_digit(&fract, &digit_count);
1c00c016:	106c                	addi	a1,sp,44
1c00c018:	1808                	addi	a0,sp,48
1c00c01a:	831ff0ef          	jal	ra,1c00b84a <_get_digit>
1c00c01e:	00a48023          	sb	a0,0(s1)
		if (*buf++ != '0') {
1c00c022:	03000713          	li	a4,48
1c00c026:	00e50363          	beq	a0,a4,1c00c02c <_prf+0x7ae>
			decexp--;
1c00c02a:	1d7d                	addi	s10,s10,-1
		if (falt || (precision > 0)) {
1c00c02c:	000a9663          	bnez	s5,1c00c038 <_prf+0x7ba>
		if (*buf++ != '0') {
1c00c030:	00148913          	addi	s2,s1,1
		if (falt || (precision > 0)) {
1c00c034:	00805d63          	blez	s0,1c00c04e <_prf+0x7d0>
			*buf++ = '.';
1c00c038:	02e00713          	li	a4,46
1c00c03c:	00248913          	addi	s2,s1,2
1c00c040:	00e480a3          	sb	a4,1(s1)
		while (precision > 0 && digit_count > 0) {
1c00c044:	00805563          	blez	s0,1c00c04e <_prf+0x7d0>
1c00c048:	5732                	lw	a4,44(sp)
1c00c04a:	08e04663          	bgtz	a4,1c00c0d6 <_prf+0x858>
	if (prune_zero) {
1c00c04e:	47d2                	lw	a5,20(sp)
			zero.predot = zero.postdot = zero.trail = 0;
1c00c050:	4a81                	li	s5,0
1c00c052:	4681                	li	a3,0
	if (prune_zero) {
1c00c054:	cf99                	beqz	a5,1c00c072 <_prf+0x7f4>
		while (*--buf == '0')
1c00c056:	03000513          	li	a0,48
1c00c05a:	fff90713          	addi	a4,s2,-1
1c00c05e:	00074583          	lbu	a1,0(a4)
1c00c062:	08a58263          	beq	a1,a0,1c00c0e6 <_prf+0x868>
		if (*buf != '.') {
1c00c066:	02e00513          	li	a0,46
		zp->trail = 0;
1c00c06a:	4401                	li	s0,0
		if (*buf != '.') {
1c00c06c:	00a59363          	bne	a1,a0,1c00c072 <_prf+0x7f4>
		while (*--buf == '0')
1c00c070:	893a                	mv	s2,a4
	if ((c == 'e') || (c == 'E')) {
1c00c072:	0dfdf713          	andi	a4,s11,223
1c00c076:	04500593          	li	a1,69
1c00c07a:	f8b715e3          	bne	a4,a1,1c00c004 <_prf+0x786>
		*buf++ = c;
1c00c07e:	85ca                	mv	a1,s2
1c00c080:	01b5812b          	p.sb	s11,2(a1!)
			*buf++ = '+';
1c00c084:	02b00793          	li	a5,43
		if (decexp < 0) {
1c00c088:	000d5663          	bgez	s10,1c00c094 <_prf+0x816>
			decexp = -decexp;
1c00c08c:	41a00d33          	neg	s10,s10
			*buf++ = '-';
1c00c090:	02d00793          	li	a5,45
			*buf++ = '+';
1c00c094:	00f900a3          	sb	a5,1(s2)
		if (decexp >= 100) {
1c00c098:	06300793          	li	a5,99
1c00c09c:	01a7de63          	ble	s10,a5,1c00c0b8 <_prf+0x83a>
			*buf++ = (decexp / 100) + '0';
1c00c0a0:	06400713          	li	a4,100
1c00c0a4:	02ed47b3          	div	a5,s10,a4
1c00c0a8:	00390593          	addi	a1,s2,3
			decexp %= 100;
1c00c0ac:	02ed6d33          	rem	s10,s10,a4
			*buf++ = (decexp / 100) + '0';
1c00c0b0:	03078793          	addi	a5,a5,48 # 80000030 <pulp__FC+0x80000031>
1c00c0b4:	00f90123          	sb	a5,2(s2)
		*buf++ = (decexp / 10) + '0';
1c00c0b8:	47a9                	li	a5,10
1c00c0ba:	892e                	mv	s2,a1
1c00c0bc:	02fd4733          	div	a4,s10,a5
		decexp %= 10;
1c00c0c0:	02fd68b3          	rem	a7,s10,a5
		*buf++ = (decexp / 10) + '0';
1c00c0c4:	03070713          	addi	a4,a4,48
1c00c0c8:	00e9012b          	p.sb	a4,2(s2!)
		*buf++ = decexp + '0';
1c00c0cc:	03088893          	addi	a7,a7,48
1c00c0d0:	011580a3          	sb	a7,1(a1)
1c00c0d4:	bf05                	j	1c00c004 <_prf+0x786>
			*buf++ = _get_digit(&fract, &digit_count);
1c00c0d6:	106c                	addi	a1,sp,44
1c00c0d8:	1808                	addi	a0,sp,48
1c00c0da:	f70ff0ef          	jal	ra,1c00b84a <_get_digit>
1c00c0de:	00a900ab          	p.sb	a0,1(s2!)
			precision--;
1c00c0e2:	147d                	addi	s0,s0,-1
1c00c0e4:	b785                	j	1c00c044 <_prf+0x7c6>
		while (*--buf == '0')
1c00c0e6:	893a                	mv	s2,a4
1c00c0e8:	bf8d                	j	1c00c05a <_prf+0x7dc>
1c00c0ea:	8a4a                	mv	s4,s2
				switch (i) {
1c00c0ec:	04c00693          	li	a3,76
1c00c0f0:	004a278b          	p.lw	a5,4(s4!)
1c00c0f4:	02d48a63          	beq	s1,a3,1c00c128 <_prf+0x8aa>
1c00c0f8:	0096c963          	blt	a3,s1,1c00c10a <_prf+0x88c>
1c00c0fc:	04800693          	li	a3,72
1c00c100:	02d48063          	beq	s1,a3,1c00c120 <_prf+0x8a2>
					*va_arg(vargs, int *) = count;
1c00c104:	0137a023          	sw	s3,0(a5)
					break;
1c00c108:	a801                	j	1c00c118 <_prf+0x89a>
				switch (i) {
1c00c10a:	06800693          	li	a3,104
1c00c10e:	fed49be3          	bne	s1,a3,1c00c104 <_prf+0x886>
					*va_arg(vargs, short *) = count;
1c00c112:	874e                	mv	a4,s3
1c00c114:	00e79023          	sh	a4,0(a5)
				continue;
1c00c118:	8952                	mv	s2,s4
1c00c11a:	8662                	mv	a2,s8
1c00c11c:	f86ff06f          	j	1c00b8a2 <_prf+0x24>
					*va_arg(vargs, char *) = count;
1c00c120:	874e                	mv	a4,s3
1c00c122:	00e78023          	sb	a4,0(a5)
					break;
1c00c126:	bfcd                	j	1c00c118 <_prf+0x89a>
					*va_arg(vargs, long long *) = count;
1c00c128:	41f9d713          	srai	a4,s3,0x1f
1c00c12c:	0137a023          	sw	s3,0(a5)
1c00c130:	c3d8                	sw	a4,4(a5)
					break;
1c00c132:	b7dd                	j	1c00c118 <_prf+0x89a>
				clen = _to_hex(buf, val, true, 'x');
1c00c134:	00092583          	lw	a1,0(s2)
		*buf++ = '0';
1c00c138:	77e1                	lui	a5,0xffff8
1c00c13a:	8307c793          	xori	a5,a5,-2000
	len = _to_x(buf, value, 16);
1c00c13e:	46c1                	li	a3,16
1c00c140:	4601                	li	a2,0
1c00c142:	04610513          	addi	a0,sp,70
		*buf++ = '0';
1c00c146:	04f11223          	sh	a5,68(sp)
	len = _to_x(buf, value, 16);
1c00c14a:	e0aff0ef          	jal	ra,1c00b754 <_to_x>
				val = (uintptr_t) va_arg(vargs, void *);
1c00c14e:	00490a13          	addi	s4,s2,4
	return len + (buf - buf0);
1c00c152:	00250d93          	addi	s11,a0,2
				prefix = 2;
1c00c156:	4909                	li	s2,2
				break;
1c00c158:	b40d                	j	1c00bb7a <_prf+0x2fc>
					if (cptr[clen] == '\0') {
1c00c15a:	0016c60b          	p.lbu	a2,1(a3!) # 8000001 <__L2+0x7f80001>
1c00c15e:	a4060ee3          	beqz	a2,1c00bbba <_prf+0x33c>
				for (clen = 0; clen < precision; clen++) {
1c00c162:	0d85                	addi	s11,s11,1
1c00c164:	bc89                	j	1c00bbb6 <_prf+0x338>
					val = va_arg(vargs, unsigned int);
1c00c166:	00490a13          	addi	s4,s2,4
1c00c16a:	00092583          	lw	a1,0(s2)
1c00c16e:	4601                	li	a2,0
					break;
1c00c170:	ba99                	j	1c00bac6 <_prf+0x248>
	if (alt_form) {
1c00c172:	8526                	mv	a0,s1
	return (buf - buf0) + _to_x(buf, value, 8);
1c00c174:	46a1                	li	a3,8
1c00c176:	409504b3          	sub	s1,a0,s1
1c00c17a:	ddaff0ef          	jal	ra,1c00b754 <_to_x>
1c00c17e:	00a48db3          	add	s11,s1,a0
			prefix = 0;
1c00c182:	4901                	li	s2,0
1c00c184:	badd                	j	1c00bb7a <_prf+0x2fc>
				} else if (c == 'u') {
1c00c186:	07500713          	li	a4,117
1c00c18a:	00ed9863          	bne	s11,a4,1c00c19a <_prf+0x91c>
	return _to_x(buf, value, 10);
1c00c18e:	46a9                	li	a3,10
1c00c190:	8526                	mv	a0,s1
1c00c192:	dc2ff0ef          	jal	ra,1c00b754 <_to_x>
1c00c196:	8daa                	mv	s11,a0
1c00c198:	b7ed                	j	1c00c182 <_prf+0x904>
	if (alt_form) {
1c00c19a:	8d26                	mv	s10,s1
1c00c19c:	000a8963          	beqz	s5,1c00c1ae <_prf+0x930>
		*buf++ = '0';
1c00c1a0:	7761                	lui	a4,0xffff8
1c00c1a2:	83074713          	xori	a4,a4,-2000
1c00c1a6:	04e11223          	sh	a4,68(sp)
		*buf++ = 'x';
1c00c1aa:	04610d13          	addi	s10,sp,70
	len = _to_x(buf, value, 16);
1c00c1ae:	46c1                	li	a3,16
1c00c1b0:	856a                	mv	a0,s10
1c00c1b2:	da2ff0ef          	jal	ra,1c00b754 <_to_x>
	if (prefix == 'X') {
1c00c1b6:	05800713          	li	a4,88
1c00c1ba:	02ed9263          	bne	s11,a4,1c00c1de <_prf+0x960>
1c00c1be:	87a6                	mv	a5,s1
		if (*buf >= 'a' && *buf <= 'z') {
1c00c1c0:	45e5                	li	a1,25
1c00c1c2:	0017c68b          	p.lbu	a3,1(a5!) # ffff8001 <pulp__FC+0xffff8002>
1c00c1c6:	f9f68613          	addi	a2,a3,-97
1c00c1ca:	0ff67613          	andi	a2,a2,255
1c00c1ce:	00c5e563          	bltu	a1,a2,1c00c1d8 <_prf+0x95a>
			*buf += 'A' - 'a';
1c00c1d2:	1681                	addi	a3,a3,-32
1c00c1d4:	fed78fa3          	sb	a3,-1(a5)
	} while (*buf++);
1c00c1d8:	fff7c703          	lbu	a4,-1(a5)
1c00c1dc:	f37d                	bnez	a4,1c00c1c2 <_prf+0x944>
	return len + (buf - buf0);
1c00c1de:	409d0733          	sub	a4,s10,s1
1c00c1e2:	00a70db3          	add	s11,a4,a0
			prefix = 0;
1c00c1e6:	001a9913          	slli	s2,s5,0x1
1c00c1ea:	ba41                	j	1c00bb7a <_prf+0x2fc>
				PUTC('%');
1c00c1ec:	85de                	mv	a1,s7
1c00c1ee:	02500513          	li	a0,37
1c00c1f2:	ec4ff06f          	j	1c00b8b6 <_prf+0x38>
				count++;
1c00c1f6:	0985                	addi	s3,s3,1
				continue;
1c00c1f8:	8a4a                	mv	s4,s2
1c00c1fa:	bf39                	j	1c00c118 <_prf+0x89a>
1c00c1fc:	00dc                	addi	a5,sp,68
				zero_head = 0;
1c00c1fe:	4d01                	li	s10,0
1c00c200:	b2d5                	j	1c00bbe4 <_prf+0x366>
					PUTC(' ');
1c00c202:	85de                	mv	a1,s7
1c00c204:	02000513          	li	a0,32
1c00c208:	c036                	sw	a3,0(sp)
1c00c20a:	c43e                	sw	a5,8(sp)
1c00c20c:	9b02                	jalr	s6
1c00c20e:	4682                	lw	a3,0(sp)
1c00c210:	47a2                	lw	a5,8(sp)
1c00c212:	ebf52563          	p.beqimm	a0,-1,1c00b8bc <_prf+0x3e>
				while (width-- > 0) {
1c00c216:	14fd                	addi	s1,s1,-1
1c00c218:	fff4b5e3          	p.bneimm	s1,-1,1c00c202 <_prf+0x984>
				count += width;
1c00c21c:	99e6                	add	s3,s3,s9
				while (width-- > 0) {
1c00c21e:	5cfd                	li	s9,-1
1c00c220:	bad9                	j	1c00bbf6 <_prf+0x378>
				PUTC(*cptr++);
1c00c222:	0017c50b          	p.lbu	a0,1(a5!)
1c00c226:	85de                	mv	a1,s7
1c00c228:	c036                	sw	a3,0(sp)
1c00c22a:	c43e                	sw	a5,8(sp)
1c00c22c:	9b02                	jalr	s6
1c00c22e:	4682                	lw	a3,0(sp)
1c00c230:	47a2                	lw	a5,8(sp)
1c00c232:	9df534e3          	p.bneimm	a0,-1,1c00bbfa <_prf+0x37c>
1c00c236:	e86ff06f          	j	1c00b8bc <_prf+0x3e>
				PUTC('0');
1c00c23a:	85de                	mv	a1,s7
1c00c23c:	03000513          	li	a0,48
1c00c240:	c036                	sw	a3,0(sp)
1c00c242:	c43e                	sw	a5,8(sp)
1c00c244:	9b02                	jalr	s6
1c00c246:	4682                	lw	a3,0(sp)
1c00c248:	47a2                	lw	a5,8(sp)
1c00c24a:	9bf53be3          	p.bneimm	a0,-1,1c00bc00 <_prf+0x382>
1c00c24e:	e6eff06f          	j	1c00b8bc <_prf+0x3e>
					PUTC(c);
1c00c252:	85de                	mv	a1,s7
1c00c254:	c232                	sw	a2,4(sp)
1c00c256:	c036                	sw	a3,0(sp)
1c00c258:	c442                	sw	a6,8(sp)
1c00c25a:	9b02                	jalr	s6
1c00c25c:	4612                	lw	a2,4(sp)
1c00c25e:	4682                	lw	a3,0(sp)
1c00c260:	4822                	lw	a6,8(sp)
1c00c262:	e5f52d63          	p.beqimm	a0,-1,1c00b8bc <_prf+0x3e>
					c = *++cptr;
1c00c266:	0d85                	addi	s11,s11,1
1c00c268:	000dc503          	lbu	a0,0(s11)
1c00c26c:	b27d                	j	1c00bc1a <_prf+0x39c>
					PUTC('0');
1c00c26e:	85de                	mv	a1,s7
1c00c270:	03000513          	li	a0,48
1c00c274:	c232                	sw	a2,4(sp)
1c00c276:	c036                	sw	a3,0(sp)
1c00c278:	c43a                	sw	a4,8(sp)
1c00c27a:	9b02                	jalr	s6
1c00c27c:	4612                	lw	a2,4(sp)
1c00c27e:	4682                	lw	a3,0(sp)
1c00c280:	4722                	lw	a4,8(sp)
1c00c282:	167d                	addi	a2,a2,-1
1c00c284:	9bf532e3          	p.bneimm	a0,-1,1c00bc28 <_prf+0x3aa>
1c00c288:	e34ff06f          	j	1c00b8bc <_prf+0x3e>
					PUTC('0');
1c00c28c:	85de                	mv	a1,s7
1c00c28e:	03000513          	li	a0,48
1c00c292:	c036                	sw	a3,0(sp)
1c00c294:	c43a                	sw	a4,8(sp)
1c00c296:	9b02                	jalr	s6
1c00c298:	4682                	lw	a3,0(sp)
1c00c29a:	4722                	lw	a4,8(sp)
1c00c29c:	16fd                	addi	a3,a3,-1
1c00c29e:	9df532e3          	p.bneimm	a0,-1,1c00bc62 <_prf+0x3e4>
1c00c2a2:	e1aff06f          	j	1c00b8bc <_prf+0x3e>
					PUTC(c);
1c00c2a6:	85de                	mv	a1,s7
1c00c2a8:	c232                	sw	a2,4(sp)
1c00c2aa:	c036                	sw	a3,0(sp)
1c00c2ac:	c43a                	sw	a4,8(sp)
1c00c2ae:	9b02                	jalr	s6
1c00c2b0:	4612                	lw	a2,4(sp)
1c00c2b2:	4682                	lw	a3,0(sp)
1c00c2b4:	4722                	lw	a4,8(sp)
1c00c2b6:	e1f52363          	p.beqimm	a0,-1,1c00b8bc <_prf+0x3e>
					c = *++cptr;
1c00c2ba:	0d85                	addi	s11,s11,1
1c00c2bc:	000dc503          	lbu	a0,0(s11)
1c00c2c0:	ba75                	j	1c00bc7c <_prf+0x3fe>
					PUTC('0');
1c00c2c2:	85de                	mv	a1,s7
1c00c2c4:	03000513          	li	a0,48
1c00c2c8:	c43a                	sw	a4,8(sp)
1c00c2ca:	9b02                	jalr	s6
1c00c2cc:	4722                	lw	a4,8(sp)
1c00c2ce:	177d                	addi	a4,a4,-1
1c00c2d0:	9bf53fe3          	p.bneimm	a0,-1,1c00bc8e <_prf+0x410>
1c00c2d4:	de8ff06f          	j	1c00b8bc <_prf+0x3e>
				PUTC(*cptr++);
1c00c2d8:	0014450b          	p.lbu	a0,1(s0!)
1c00c2dc:	85de                	mv	a1,s7
1c00c2de:	9b02                	jalr	s6
1c00c2e0:	ddf52e63          	p.beqimm	a0,-1,1c00b8bc <_prf+0x3e>
1c00c2e4:	408a87b3          	sub	a5,s5,s0
			while (clen-- > 0) {
1c00c2e8:	fef048e3          	bgtz	a5,1c00c2d8 <_prf+0xa5a>
			count += prefix;
1c00c2ec:	994e                	add	s2,s2,s3
			count += zero_head;
1c00c2ee:	012d09b3          	add	s3,s10,s2
			count += clen;
1c00c2f2:	99a6                	add	s3,s3,s1
			if (width > 0) {
1c00c2f4:	e39052e3          	blez	s9,1c00c118 <_prf+0x89a>
				count += width;
1c00c2f8:	99e6                	add	s3,s3,s9
				while (width-- > 0) {
1c00c2fa:	1cfd                	addi	s9,s9,-1
1c00c2fc:	e1fcaee3          	p.beqimm	s9,-1,1c00c118 <_prf+0x89a>
					PUTC(' ');
1c00c300:	85de                	mv	a1,s7
1c00c302:	02000513          	li	a0,32
1c00c306:	9b02                	jalr	s6
1c00c308:	fff539e3          	p.bneimm	a0,-1,1c00c2fa <_prf+0xa7c>
1c00c30c:	db0ff06f          	j	1c00b8bc <_prf+0x3e>
			*buf++ = '.';
1c00c310:	02e00693          	li	a3,46
1c00c314:	00d90023          	sb	a3,0(s2)
1c00c318:	00190713          	addi	a4,s2,1
			zp->predot = decexp;
1c00c31c:	86ea                	mv	a3,s10
			decexp = 0;
1c00c31e:	4d01                	li	s10,0
			zero.predot = zero.postdot = zero.trail = 0;
1c00c320:	4a81                	li	s5,0
1c00c322:	b6f9                	j	1c00bef0 <_prf+0x672>
	prune_zero = false;		/* Assume trailing 0's allowed     */
1c00c324:	ca02                	sw	zero,20(sp)
		exp = precision + 1;
1c00c326:	00140713          	addi	a4,s0,1
	digit_count = 16;
1c00c32a:	46c1                	li	a3,16
1c00c32c:	d636                	sw	a3,44(sp)
1c00c32e:	04d74933          	p.min	s2,a4,a3
1c00c332:	b691                	j	1c00be76 <_prf+0x5f8>

1c00c334 <__rt_uart_cluster_req_done>:
  }

  return __rt_uart_open(channel, conf, event, dev_name);
  
error:
  rt_warning("[UART] Failed to open uart device\n");
1c00c334:	300476f3          	csrrci	a3,mstatus,8
1c00c338:	4785                	li	a5,1
1c00c33a:	08f50623          	sb	a5,140(a0)
1c00c33e:	08d54783          	lbu	a5,141(a0)
1c00c342:	00201737          	lui	a4,0x201
1c00c346:	e0470713          	addi	a4,a4,-508 # 200e04 <__L2+0x180e04>
1c00c34a:	04078793          	addi	a5,a5,64
1c00c34e:	07da                	slli	a5,a5,0x16
1c00c350:	0007e723          	p.sw	zero,a4(a5)
1c00c354:	30069073          	csrw	mstatus,a3
1c00c358:	8082                	ret

1c00c35a <__rt_uart_setup.isra.5>:
1c00c35a:	1c00e737          	lui	a4,0x1c00e
1c00c35e:	92c72703          	lw	a4,-1748(a4) # 1c00d92c <__rt_freq_domains>
1c00c362:	00155793          	srli	a5,a0,0x1
1c00c366:	97ba                	add	a5,a5,a4
1c00c368:	02a7d7b3          	divu	a5,a5,a0
1c00c36c:	1a102737          	lui	a4,0x1a102
1c00c370:	17fd                	addi	a5,a5,-1
1c00c372:	07c2                	slli	a5,a5,0x10
1c00c374:	3067e793          	ori	a5,a5,774
1c00c378:	22f72223          	sw	a5,548(a4) # 1a102224 <__l1_end+0xa102204>
1c00c37c:	8082                	ret

1c00c37e <__rt_uart_setfreq_after>:
1c00c37e:	1c00e7b7          	lui	a5,0x1c00e
1c00c382:	8b078793          	addi	a5,a5,-1872 # 1c00d8b0 <__rt_uart>
1c00c386:	4398                	lw	a4,0(a5)
1c00c388:	cb11                	beqz	a4,1c00c39c <__rt_uart_setfreq_after+0x1e>
1c00c38a:	4788                	lw	a0,8(a5)
1c00c38c:	1141                	addi	sp,sp,-16
1c00c38e:	c606                	sw	ra,12(sp)
1c00c390:	fcbff0ef          	jal	ra,1c00c35a <__rt_uart_setup.isra.5>
1c00c394:	40b2                	lw	ra,12(sp)
1c00c396:	4501                	li	a0,0
1c00c398:	0141                	addi	sp,sp,16
1c00c39a:	8082                	ret
1c00c39c:	4501                	li	a0,0
1c00c39e:	8082                	ret

1c00c3a0 <__rt_uart_wait_tx_done.isra.6>:
1c00c3a0:	1a102737          	lui	a4,0x1a102
1c00c3a4:	1141                	addi	sp,sp,-16
1c00c3a6:	21870713          	addi	a4,a4,536 # 1a102218 <__l1_end+0xa1021f8>
1c00c3aa:	002046b7          	lui	a3,0x204
1c00c3ae:	431c                	lw	a5,0(a4)
1c00c3b0:	8bc1                	andi	a5,a5,16
1c00c3b2:	e38d                	bnez	a5,1c00c3d4 <__rt_uart_wait_tx_done.isra.6+0x34>
1c00c3b4:	1a102737          	lui	a4,0x1a102
1c00c3b8:	22070713          	addi	a4,a4,544 # 1a102220 <__l1_end+0xa102200>
1c00c3bc:	431c                	lw	a5,0(a4)
1c00c3be:	fc17b7b3          	p.bclr	a5,a5,30,1
1c00c3c2:	ffed                	bnez	a5,1c00c3bc <__rt_uart_wait_tx_done.isra.6+0x1c>
1c00c3c4:	c602                	sw	zero,12(sp)
1c00c3c6:	7cf00713          	li	a4,1999
1c00c3ca:	47b2                	lw	a5,12(sp)
1c00c3cc:	00f75763          	ble	a5,a4,1c00c3da <__rt_uart_wait_tx_done.isra.6+0x3a>
1c00c3d0:	0141                	addi	sp,sp,16
1c00c3d2:	8082                	ret
1c00c3d4:	0386e783          	p.elw	a5,56(a3) # 204038 <__L2+0x184038>
1c00c3d8:	bfd9                	j	1c00c3ae <__rt_uart_wait_tx_done.isra.6+0xe>
1c00c3da:	47b2                	lw	a5,12(sp)
1c00c3dc:	0785                	addi	a5,a5,1
1c00c3de:	c63e                	sw	a5,12(sp)
1c00c3e0:	b7ed                	j	1c00c3ca <__rt_uart_wait_tx_done.isra.6+0x2a>

1c00c3e2 <__rt_uart_setfreq_before>:
1c00c3e2:	1c00e7b7          	lui	a5,0x1c00e
1c00c3e6:	8b07a783          	lw	a5,-1872(a5) # 1c00d8b0 <__rt_uart>
1c00c3ea:	c385                	beqz	a5,1c00c40a <__rt_uart_setfreq_before+0x28>
1c00c3ec:	1141                	addi	sp,sp,-16
1c00c3ee:	c606                	sw	ra,12(sp)
1c00c3f0:	fb1ff0ef          	jal	ra,1c00c3a0 <__rt_uart_wait_tx_done.isra.6>
1c00c3f4:	40b2                	lw	ra,12(sp)
1c00c3f6:	005007b7          	lui	a5,0x500
1c00c3fa:	1a102737          	lui	a4,0x1a102
1c00c3fe:	0799                	addi	a5,a5,6
1c00c400:	22f72223          	sw	a5,548(a4) # 1a102224 <__l1_end+0xa102204>
1c00c404:	4501                	li	a0,0
1c00c406:	0141                	addi	sp,sp,16
1c00c408:	8082                	ret
1c00c40a:	4501                	li	a0,0
1c00c40c:	8082                	ret

1c00c40e <__rt_uart_cluster_req>:
1c00c40e:	1141                	addi	sp,sp,-16
1c00c410:	c606                	sw	ra,12(sp)
1c00c412:	c422                	sw	s0,8(sp)
1c00c414:	30047473          	csrrci	s0,mstatus,8
1c00c418:	1c00c7b7          	lui	a5,0x1c00c
1c00c41c:	33478793          	addi	a5,a5,820 # 1c00c334 <__rt_uart_cluster_req_done>
1c00c420:	c91c                	sw	a5,16(a0)
1c00c422:	4785                	li	a5,1
1c00c424:	d91c                	sw	a5,48(a0)
1c00c426:	411c                	lw	a5,0(a0)
1c00c428:	02052a23          	sw	zero,52(a0)
1c00c42c:	c948                	sw	a0,20(a0)
1c00c42e:	43cc                	lw	a1,4(a5)
1c00c430:	4514                	lw	a3,8(a0)
1c00c432:	4150                	lw	a2,4(a0)
1c00c434:	0586                	slli	a1,a1,0x1
1c00c436:	00c50793          	addi	a5,a0,12
1c00c43a:	4701                	li	a4,0
1c00c43c:	0585                	addi	a1,a1,1
1c00c43e:	4501                	li	a0,0
1c00c440:	a68fd0ef          	jal	ra,1c0096a8 <rt_periph_copy>
1c00c444:	30041073          	csrw	mstatus,s0
1c00c448:	40b2                	lw	ra,12(sp)
1c00c44a:	4422                	lw	s0,8(sp)
1c00c44c:	0141                	addi	sp,sp,16
1c00c44e:	8082                	ret

1c00c450 <soc_eu_fcEventMask_setEvent>:
1c00c450:	47fd                	li	a5,31
1c00c452:	4721                	li	a4,8
1c00c454:	00a7d463          	ble	a0,a5,1c00c45c <soc_eu_fcEventMask_setEvent+0xc>
1c00c458:	1501                	addi	a0,a0,-32
1c00c45a:	4711                	li	a4,4
1c00c45c:	1a1066b7          	lui	a3,0x1a106
1c00c460:	20e6f603          	p.lw	a2,a4(a3)
1c00c464:	4785                	li	a5,1
1c00c466:	00a79533          	sll	a0,a5,a0
1c00c46a:	fff54513          	not	a0,a0
1c00c46e:	8d71                	and	a0,a0,a2
1c00c470:	00a6e723          	p.sw	a0,a4(a3)
1c00c474:	8082                	ret

1c00c476 <rt_uart_conf_init>:
1c00c476:	000997b7          	lui	a5,0x99
1c00c47a:	96878793          	addi	a5,a5,-1688 # 98968 <__L2+0x18968>
1c00c47e:	c11c                	sw	a5,0(a0)
1c00c480:	57fd                	li	a5,-1
1c00c482:	c15c                	sw	a5,4(a0)
1c00c484:	8082                	ret

1c00c486 <__rt_uart_open>:
1c00c486:	1141                	addi	sp,sp,-16
1c00c488:	c606                	sw	ra,12(sp)
1c00c48a:	c422                	sw	s0,8(sp)
1c00c48c:	c226                	sw	s1,4(sp)
1c00c48e:	c04a                	sw	s2,0(sp)
1c00c490:	30047973          	csrrci	s2,mstatus,8
1c00c494:	cd8d                	beqz	a1,1c00c4ce <__rt_uart_open+0x48>
1c00c496:	4198                	lw	a4,0(a1)
1c00c498:	1c00e6b7          	lui	a3,0x1c00e
1c00c49c:	ffc50793          	addi	a5,a0,-4
1c00c4a0:	8b068413          	addi	s0,a3,-1872 # 1c00d8b0 <__rt_uart>
1c00c4a4:	0792                	slli	a5,a5,0x4
1c00c4a6:	943e                	add	s0,s0,a5
1c00c4a8:	4010                	lw	a2,0(s0)
1c00c4aa:	8b068693          	addi	a3,a3,-1872
1c00c4ae:	c60d                	beqz	a2,1c00c4d8 <__rt_uart_open+0x52>
1c00c4b0:	c589                	beqz	a1,1c00c4ba <__rt_uart_open+0x34>
1c00c4b2:	418c                	lw	a1,0(a1)
1c00c4b4:	4418                	lw	a4,8(s0)
1c00c4b6:	04e59d63          	bne	a1,a4,1c00c510 <__rt_uart_open+0x8a>
1c00c4ba:	0605                	addi	a2,a2,1
1c00c4bc:	00c6e7a3          	p.sw	a2,a5(a3)
1c00c4c0:	8522                	mv	a0,s0
1c00c4c2:	40b2                	lw	ra,12(sp)
1c00c4c4:	4422                	lw	s0,8(sp)
1c00c4c6:	4492                	lw	s1,4(sp)
1c00c4c8:	4902                	lw	s2,0(sp)
1c00c4ca:	0141                	addi	sp,sp,16
1c00c4cc:	8082                	ret
1c00c4ce:	00099737          	lui	a4,0x99
1c00c4d2:	96870713          	addi	a4,a4,-1688 # 98968 <__L2+0x18968>
1c00c4d6:	b7c9                	j	1c00c498 <__rt_uart_open+0x12>
1c00c4d8:	c418                	sw	a4,8(s0)
1c00c4da:	4785                	li	a5,1
1c00c4dc:	1a102737          	lui	a4,0x1a102
1c00c4e0:	78070713          	addi	a4,a4,1920 # 1a102780 <__l1_end+0xa102760>
1c00c4e4:	c01c                	sw	a5,0(s0)
1c00c4e6:	c048                	sw	a0,4(s0)
1c00c4e8:	4314                	lw	a3,0(a4)
1c00c4ea:	00a797b3          	sll	a5,a5,a0
1c00c4ee:	00151493          	slli	s1,a0,0x1
1c00c4f2:	8fd5                	or	a5,a5,a3
1c00c4f4:	c31c                	sw	a5,0(a4)
1c00c4f6:	8526                	mv	a0,s1
1c00c4f8:	f59ff0ef          	jal	ra,1c00c450 <soc_eu_fcEventMask_setEvent>
1c00c4fc:	00148513          	addi	a0,s1,1
1c00c500:	f51ff0ef          	jal	ra,1c00c450 <soc_eu_fcEventMask_setEvent>
1c00c504:	4408                	lw	a0,8(s0)
1c00c506:	e55ff0ef          	jal	ra,1c00c35a <__rt_uart_setup.isra.5>
1c00c50a:	30091073          	csrw	mstatus,s2
1c00c50e:	bf4d                	j	1c00c4c0 <__rt_uart_open+0x3a>
1c00c510:	4401                	li	s0,0
1c00c512:	b77d                	j	1c00c4c0 <__rt_uart_open+0x3a>

1c00c514 <rt_uart_close>:
}



void rt_uart_close(rt_uart_t *uart, rt_event_t *event)
{
1c00c514:	1141                	addi	sp,sp,-16
1c00c516:	c606                	sw	ra,12(sp)
1c00c518:	c422                	sw	s0,8(sp)
1c00c51a:	c226                	sw	s1,4(sp)
  return __builtin_pulp_read_then_spr_bit_clr(reg, val);
1c00c51c:	300474f3          	csrrci	s1,mstatus,8
  int irq = rt_irq_disable();

  rt_trace(RT_TRACE_DEV_CTRL, "[UART] Closing uart device (handle: %p)\n", uart);

  uart->open_count--;
1c00c520:	411c                	lw	a5,0(a0)
1c00c522:	17fd                	addi	a5,a5,-1
1c00c524:	c11c                	sw	a5,0(a0)

  if (uart->open_count == 0)
1c00c526:	e79d                	bnez	a5,1c00c554 <rt_uart_close+0x40>
1c00c528:	842a                	mv	s0,a0
  {
      // First wait for pending transfers to finish before stoppping uart in case
      // some printf are still pending
      __rt_uart_wait_tx_done(uart);
1c00c52a:	e77ff0ef          	jal	ra,1c00c3a0 <__rt_uart_wait_tx_done.isra.6>

  pulp_write32(ARCHI_UDMA_ADDR + UDMA_UART_OFFSET(channel) + UDMA_CHANNEL_CUSTOM_OFFSET + UART_SETUP_OFFSET, val);
}

static inline void plp_uart_disable(int channel) {
  pulp_write32(ARCHI_UDMA_ADDR + UDMA_UART_OFFSET(channel) + UDMA_CHANNEL_CUSTOM_OFFSET + UART_SETUP_OFFSET, 0x00500006);
1c00c52e:	1a102737          	lui	a4,0x1a102
1c00c532:	005007b7          	lui	a5,0x500
1c00c536:	22470693          	addi	a3,a4,548 # 1a102224 <__l1_end+0xa102204>
1c00c53a:	0799                	addi	a5,a5,6
1c00c53c:	c29c                	sw	a5,0(a3)
      // Set enable bits for uart channel back to 0 
      // This is needed to be able to propagate new configs when re-opening
      plp_uart_disable(uart->channel - ARCHI_UDMA_UART_ID(0));      

      // Then stop the uart
      plp_udma_cg_set(plp_udma_cg_get() & ~(1<<uart->channel));
1c00c53e:	4050                	lw	a2,4(s0)
  return pulp_read32(ARCHI_SOC_PERIPHERALS_ADDR + ARCHI_UDMA_OFFSET + UDMA_CONF_OFFSET + UDMA_CONF_CG_OFFSET);
1c00c540:	78070713          	addi	a4,a4,1920
1c00c544:	4314                	lw	a3,0(a4)
1c00c546:	4785                	li	a5,1
1c00c548:	00c797b3          	sll	a5,a5,a2
1c00c54c:	fff7c793          	not	a5,a5
1c00c550:	8ff5                	and	a5,a5,a3
  pulp_write32(ARCHI_SOC_PERIPHERALS_ADDR + ARCHI_UDMA_OFFSET + UDMA_CONF_OFFSET + UDMA_CONF_CG_OFFSET, value);
1c00c552:	c31c                	sw	a5,0(a4)
  __builtin_pulp_spr_write(reg, val);
1c00c554:	30049073          	csrw	mstatus,s1
  }

  rt_irq_restore(irq);
}
1c00c558:	40b2                	lw	ra,12(sp)
1c00c55a:	4422                	lw	s0,8(sp)
1c00c55c:	4492                	lw	s1,4(sp)
1c00c55e:	0141                	addi	sp,sp,16
1c00c560:	8082                	ret

1c00c562 <rt_uart_cluster_write>:
  asm("csrr %0, 0x014" : "=r" (hart_id) : );
1c00c562:	014027f3          	csrr	a5,uhartid
  return (hart_id >> 5) & 0x3f;
1c00c566:	8795                	srai	a5,a5,0x5
1c00c568:	f267b7b3          	p.bclr	a5,a5,25,6
void rt_uart_cluster_write(rt_uart_t *handle, void *buffer, size_t size, rt_uart_req_t *req)
{
  req->uart = handle;
  req->buffer = buffer;
  req->size = size;
  req->cid = rt_cluster_id();
1c00c56c:	08f686a3          	sb	a5,141(a3)
  event->arg[0] = (uintptr_t)callback;
1c00c570:	1c00c7b7          	lui	a5,0x1c00c
1c00c574:	40e78793          	addi	a5,a5,1038 # 1c00c40e <__rt_uart_cluster_req>
1c00c578:	ca9c                	sw	a5,16(a3)
  event->implem.pending = 1;  
1c00c57a:	4785                	li	a5,1
  req->uart = handle;
1c00c57c:	c288                	sw	a0,0(a3)
  req->buffer = buffer;
1c00c57e:	c2cc                	sw	a1,4(a3)
  req->size = size;
1c00c580:	c690                	sw	a2,8(a3)
  req->done = 0;
1c00c582:	08068623          	sb	zero,140(a3)
  event->implem.keep = 0;
1c00c586:	0206aa23          	sw	zero,52(a3)
  event->arg[1] = (uintptr_t)arg;
1c00c58a:	cad4                	sw	a3,20(a3)
  event->implem.pending = 1;  
1c00c58c:	da9c                	sw	a5,48(a3)
  __rt_init_event(&req->event, __rt_cluster_sched_get(), __rt_uart_cluster_req, (void *)req);
  __rt_event_set_pending(&req->event);
  __rt_cluster_push_fc_event(&req->event);
1c00c58e:	00c68513          	addi	a0,a3,12
1c00c592:	c97fd06f          	j	1c00a228 <__rt_cluster_push_fc_event>

1c00c596 <__rt_uart_init>:
{
  // In case the peripheral clock can dynamically change, we need to be notified
  // when this happens so that we flush pending transfers before updating the frequency
  int err = 0;

  err |= __rt_cbsys_add(RT_CBSYS_PERIPH_SETFREQ_BEFORE, __rt_uart_setfreq_before, NULL);
1c00c596:	1c00c5b7          	lui	a1,0x1c00c
{
1c00c59a:	1141                	addi	sp,sp,-16
  err |= __rt_cbsys_add(RT_CBSYS_PERIPH_SETFREQ_BEFORE, __rt_uart_setfreq_before, NULL);
1c00c59c:	4601                	li	a2,0
1c00c59e:	3e258593          	addi	a1,a1,994 # 1c00c3e2 <__rt_uart_setfreq_before>
1c00c5a2:	4511                	li	a0,4
{
1c00c5a4:	c606                	sw	ra,12(sp)
1c00c5a6:	c422                	sw	s0,8(sp)
  err |= __rt_cbsys_add(RT_CBSYS_PERIPH_SETFREQ_BEFORE, __rt_uart_setfreq_before, NULL);
1c00c5a8:	ed6fc0ef          	jal	ra,1c008c7e <__rt_cbsys_add>

  err |= __rt_cbsys_add(RT_CBSYS_PERIPH_SETFREQ_AFTER, __rt_uart_setfreq_after, NULL);
1c00c5ac:	1c00c5b7          	lui	a1,0x1c00c
  err |= __rt_cbsys_add(RT_CBSYS_PERIPH_SETFREQ_BEFORE, __rt_uart_setfreq_before, NULL);
1c00c5b0:	842a                	mv	s0,a0
  err |= __rt_cbsys_add(RT_CBSYS_PERIPH_SETFREQ_AFTER, __rt_uart_setfreq_after, NULL);
1c00c5b2:	4601                	li	a2,0
1c00c5b4:	37e58593          	addi	a1,a1,894 # 1c00c37e <__rt_uart_setfreq_after>
1c00c5b8:	4515                	li	a0,5
1c00c5ba:	ec4fc0ef          	jal	ra,1c008c7e <__rt_cbsys_add>


  for (int i=0; i<ARCHI_UDMA_NB_UART; i++)
  {
    __rt_uart[i].open_count = 0;
1c00c5be:	1c00e7b7          	lui	a5,0x1c00e
1c00c5c2:	8a07a823          	sw	zero,-1872(a5) # 1c00d8b0 <__rt_uart>
  err |= __rt_cbsys_add(RT_CBSYS_PERIPH_SETFREQ_AFTER, __rt_uart_setfreq_after, NULL);
1c00c5c6:	8d41                	or	a0,a0,s0
  }

  if (err) rt_fatal("Unable to initialize uart driver\n");
1c00c5c8:	c10d                	beqz	a0,1c00c5ea <__rt_uart_init+0x54>
  asm("csrr %0, 0x014" : "=r" (hart_id) : );
1c00c5ca:	01402673          	csrr	a2,uhartid
1c00c5ce:	1c00d537          	lui	a0,0x1c00d
  return (hart_id >> 5) & 0x3f;
1c00c5d2:	40565593          	srai	a1,a2,0x5
1c00c5d6:	f265b5b3          	p.bclr	a1,a1,25,6
1c00c5da:	f4563633          	p.bclr	a2,a2,26,5
1c00c5de:	1d850513          	addi	a0,a0,472 # 1c00d1d8 <__hyper_pad+0xa4>
1c00c5e2:	946ff0ef          	jal	ra,1c00b728 <printf>
1c00c5e6:	8c6ff0ef          	jal	ra,1c00b6ac <abort>
}
1c00c5ea:	40b2                	lw	ra,12(sp)
1c00c5ec:	4422                	lw	s0,8(sp)
1c00c5ee:	0141                	addi	sp,sp,16
1c00c5f0:	8082                	ret
	...

1c00c5f4 <__cluster_text_start>:
  .global __rt_pe_start
__rt_pe_start:

#endif

    csrr    a0, 0xF14
1c00c5f4:	f1402573          	csrr	a0,mhartid
    andi    a1, a0, 0x1f
1c00c5f8:	01f57593          	andi	a1,a0,31
    srli    a0, a0, 5
1c00c5fc:	8115                	srli	a0,a0,0x5
    
    // Activate a few events
    li      t0, (1<<PULP_DISPATCH_EVENT) | (1<<PULP_HW_BAR_EVENT) | (1<<PULP_MUTEX_EVENT)
1c00c5fe:	000702b7          	lui	t0,0x70
    li      t1, ARCHI_EU_DEMUX_ADDR
1c00c602:	00204337          	lui	t1,0x204
    sw      t0, EU_CORE_MASK(t1)
1c00c606:	00532023          	sw	t0,0(t1) # 204000 <__L2+0x184000>

#ifndef ARCHI_NO_L1_TINY
    sw      x0, %tiny(__rt_dma_first_pending)(x0)
1c00c60a:	00002a23          	sw	zero,20(zero) # 14 <__rt_bridge_eeprom_handle>

#ifdef ARCHI_HAS_CC
    li      t2, ARCHI_CC_CORE_ID
    bne     a1, t2, __rt_slave_start
#else
    bne     a1, x0, __rt_slave_start
1c00c60e:	10059063          	bnez	a1,1c00c70e <__rt_slave_start>
#endif

    li      t0, (1<<ARCHI_CL_EVT_DMA1)
1c00c612:	20000293          	li	t0,512
    li      t1, ARCHI_EU_DEMUX_ADDR
1c00c616:	00204337          	lui	t1,0x204
    sw      t0, EU_CORE_MASK_IRQ_OR(t1)
1c00c61a:	00532a23          	sw	t0,20(t1) # 204014 <__L2+0x184014>



    // Prepare few values that will be kept in saved registers to optimize the loop
    la      s0, __rt_cluster_pool
1c00c61e:	e3ff4417          	auipc	s0,0xe3ff4
1c00c622:	9e640413          	addi	s0,s0,-1562 # 4 <__rt_bridge_flash_handle>
    li      s3, ARCHI_EU_DEMUX_ADDR
1c00c626:	002049b7          	lui	s3,0x204
    li      s4, 1<<RT_CLUSTER_CALL_EVT
1c00c62a:	4a09                	li	s4,2
    la      s5, __rt_master_event
1c00c62c:	00000a97          	auipc	s5,0x0
1c00c630:	038a8a93          	addi	s5,s5,56 # 1c00c664 <__rt_master_event>
    la      s7, __rt_fc_cluster_data
1c00c634:	00001b97          	auipc	s7,0x1
1c00c638:	308b8b93          	addi	s7,s7,776 # 1c00d93c <__rt_fc_cluster_data>
    li      t2, RT_FC_CLUSTER_DATA_T_SIZEOF
1c00c63c:	02800393          	li	t2,40
    mul     t2, t2, a0
1c00c640:	02a383b3          	mul	t2,t2,a0
    add     s7, s7, t2
1c00c644:	9b9e                	add	s7,s7,t2
    addi    s7, s7, RT_FC_CLUSTER_DATA_T_EVENTS
1c00c646:	0b91                	addi	s7,s7,4
#if defined(ARCHI_HAS_FC)
#if defined(ITC_VERSION)
    li      s9, ARCHI_FC_ITC_ADDR + ITC_STATUS_SET_OFFSET
    li      s8, 1<<RT_FC_ENQUEUE_EVENT
#else
    li      s9, ARCHI_FC_GLOBAL_ADDR + ARCHI_FC_PERIPHERALS_OFFSET + ARCHI_FC_EU_OFFSET + EU_SW_EVENTS_AREA_BASE + EU_CORE_TRIGG_SW_EVENT + (RT_FC_ENQUEUE_EVENT << 2)
1c00c648:	1b201cb7          	lui	s9,0x1b201
1c00c64c:	e04c8c93          	addi	s9,s9,-508 # 1b200e04 <__fc_tcdm_end+0x1ffa34>
    li      s8, 1
1c00c650:	4c05                	li	s8,1
    // In case there is no FC, the event must be sent to cluster 0 event unit
    li      s9, ARCHI_CLUSTER_PERIPHERALS_GLOBAL_ADDR(0) + ARCHI_EU_OFFSET + EU_SW_EVENTS_AREA_BASE + EU_CORE_TRIGG_SW_EVENT + (RT_FC_ENQUEUE_EVENT << 2)
    li      s8, 1    
#endif
#ifndef ARCHI_HAS_NO_DISPATCH
    la      s10, __rt_set_slave_stack
1c00c652:	00000d17          	auipc	s10,0x0
1c00c656:	0fad0d13          	addi	s10,s10,250 # 1c00c74c <__rt_set_slave_stack>
    ori     s10, s10, 1
1c00c65a:	001d6d13          	ori	s10,s10,1
#endif

    csrwi   0x300, 0x8
1c00c65e:	30045073          	csrwi	mstatus,8

    j       __rt_master_loop
1c00c662:	a819                	j	1c00c678 <__rt_master_loop>

1c00c664 <__rt_master_event>:



__rt_master_event:
    beq     s6, x0, __rt_master_loop
1c00c664:	000b0a63          	beqz	s6,1c00c678 <__rt_master_loop>

1c00c668 <__rt_push_event_to_fc_retry>:

__rt_push_event_to_fc_retry:
    // Now we have to push the termination event to FC side
    // First wait until the slot for posting events is free
    lw      t0, 0(s7)
1c00c668:	000ba283          	lw	t0,0(s7)
    bne     t0, x0, __rt_push_event_to_fc_wait
1c00c66c:	08029a63          	bnez	t0,1c00c700 <__rt_push_event_to_fc_wait>

    // Push it
    sw      s6, 0(s7)
1c00c670:	016ba023          	sw	s6,0(s7)

    // And notify the FC side with a HW event in case it is sleeping
    sw      s8, 0(s9)
1c00c674:	018ca023          	sw	s8,0(s9)

1c00c678 <__rt_master_loop>:


__rt_master_loop:
    // Check if a task is ready in the pool
    lw      t3, 0(s0)
1c00c678:	00042e03          	lw	t3,0(s0)
    // Check if a call is ready, e.g. if nb_pe is not zero
    // otherwise go to sleep
    beq     t3, x0, __rt_master_sleep
1c00c67c:	060e0b63          	beqz	t3,1c00c6f2 <__rt_master_sleep>

1c00c680 <__rt_master_loop_update_next>:

__rt_master_loop_update_next:
    lw      t4, RT_CLUSTER_TASK_NEXT(t3)
1c00c680:	020e2e83          	lw	t4,32(t3)
    sw      x0, RT_CLUSTER_TASK_PENDING(t3)
1c00c684:	020e2223          	sw	zero,36(t3)
    sw      t4, 0(s0)
1c00c688:	01d42023          	sw	t4,0(s0)

    // Check again next pointer in case it was updated by the FC.
    // If so, do it it again as this will ensure that either we see the new
    // value or the FC sees our write
    lw      t5, RT_CLUSTER_TASK_NEXT(t3)
1c00c68c:	020e2f03          	lw	t5,32(t3)
    bne     t4, t5, __rt_master_loop_update_next
1c00c690:	ffee98e3          	bne	t4,t5,1c00c680 <__rt_master_loop_update_next>
    li      a4, 0
    ebreak
#endif

#ifdef __RT_USE_ASSERT
    csrwi   0x7D0, 0
1c00c694:	7d005073          	csrwi	0x7d0,0
#endif

    // Reads entry point information
    lw      a0, RT_CLUSTER_TASK_ARG(t3)
1c00c698:	004e2503          	lw	a0,4(t3)
    lw      t0, RT_CLUSTER_TASK_ENTRY(t3)
1c00c69c:	000e2283          	lw	t0,0(t3)
    lw      sp, RT_CLUSTER_TASK_STACKS(t3)
1c00c6a0:	008e2103          	lw	sp,8(t3)
    lw      t1, RT_CLUSTER_TASK_STACK_SIZE(t3)
1c00c6a4:	00ce2303          	lw	t1,12(t3)
    lw      t2, RT_CLUSTER_TASK_SLAVE_STACK_SIZE(t3)
1c00c6a8:	010e2383          	lw	t2,16(t3)
    lw      t5, RT_CLUSTER_TASK_CORE_MASK(t3)
1c00c6ac:	028e2f03          	lw	t5,40(t3)
    lw      s6, RT_CLUSTER_TASK_COMPLETION_CALLBACK(t3)
1c00c6b0:	018e2b03          	lw	s6,24(t3)
    lw      t6, RT_CLUSTER_TASK_NB_CORES(t3)
1c00c6b4:	014e2f83          	lw	t6,20(t3)
    mv      ra, s5
1c00c6b8:	80d6                	mv	ra,s5

    add     sp, sp, t1
1c00c6ba:	911a                	add	sp,sp,t1

#ifdef ARCHI_NO_L1_TINY
    la      t4, __rt_cluster_nb_active_pe
    sw      t6, 0(t4)
#else
    sw      t6, %tiny(__rt_cluster_nb_active_pe)(x0)
1c00c6bc:	01f02c23          	sw	t6,24(zero) # 18 <__rt_first_free>
#endif

#ifdef __RT_USE_ASSERT
    // Update stack checking information
    beqz    t1, __rt_no_stack_check
1c00c6c0:	00030a63          	beqz	t1,1c00c6d4 <__rt_no_stack_check>
    sub     t4, sp, t1
1c00c6c4:	40610eb3          	sub	t4,sp,t1
    csrw    0x7D1, t4
1c00c6c8:	7d1e9073          	csrw	0x7d1,t4
    csrw    0x7D2, sp
1c00c6cc:	7d211073          	csrw	0x7d2,sp
    csrwi   0x7D0, 1
1c00c6d0:	7d00d073          	csrwi	0x7d0,1

1c00c6d4 <__rt_no_stack_check>:
#endif

__rt_no_stack_check:
    // Whatever the number of cores, we need to setup the barrier as the master code is compiled to use it
    sw      t5, EU_DISPATCH_DEMUX_OFFSET + EU_DISPATCH_TEAM_CONFIG(s3)
1c00c6d4:	09e9a223          	sw	t5,132(s3) # 204084 <__L2+0x184084>
#ifdef ARCHI_HAS_CC
    // When we have a cluster controller, don't configure the slave barrier
    // if we don't have have any slave
    beqz    t5, __rt_master_no_slave_barrier
#endif
    sw      t5, EU_BARRIER_DEMUX_OFFSET + EU_HW_BARR_TRIGGER_MASK(s3)
1c00c6d8:	21e9a023          	sw	t5,512(s3)
    sw      t5, EU_BARRIER_DEMUX_OFFSET + EU_HW_BARR_TARGET_MASK(s3)
1c00c6dc:	21e9a623          	sw	t5,524(s3)

1c00c6e0 <__rt_master_no_slave_barrier>:
    sw      t6, EU_BARRIER_DEMUX_OFFSET + EU_HW_BARR_TARGET_MASK + EU_BARRIER_SIZE(s3)
#endif

    // Set stack on slaves
    // For that we push first the function for setting stack, then the stack size and the base
    p.beqimm t5, 0, __rt_master_loop_no_slave
1c00c6e0:	000f2863          	p.beqimm	t5,0,1c00c6f0 <__rt_master_loop_no_slave>
    sw      s10, EU_DISPATCH_DEMUX_OFFSET + EU_DISPATCH_FIFO_ACCESS(s3)
1c00c6e4:	09a9a023          	sw	s10,128(s3)
    sw      t2, EU_DISPATCH_DEMUX_OFFSET + EU_DISPATCH_FIFO_ACCESS(s3)
1c00c6e8:	0879a023          	sw	t2,128(s3)
    sw      sp, EU_DISPATCH_DEMUX_OFFSET + EU_DISPATCH_FIFO_ACCESS(s3)
1c00c6ec:	0829a023          	sw	sp,128(s3)

1c00c6f0 <__rt_master_loop_no_slave>:

__rt_master_loop_no_slave:

    // Call the entry point, this will directly come back to the master loop
    jr      t0
1c00c6f0:	8282                	jr	t0

1c00c6f2 <__rt_master_sleep>:
    lw      a1, %tiny(__rt_pe_trace)(x0)
    li      a2, 1
    ebreak
#endif

    sw      s4, EU_CORE_MASK_OR(s3)
1c00c6f2:	0149a423          	sw	s4,8(s3)
    p.elw   x0, EU_CORE_EVENT_WAIT_CLEAR(s3)
1c00c6f6:	03c9e003          	p.elw	zero,60(s3)
    sw      s4, EU_CORE_MASK_AND(s3)
1c00c6fa:	0149a223          	sw	s4,4(s3)
    j       __rt_master_loop
1c00c6fe:	bfad                	j	1c00c678 <__rt_master_loop>

1c00c700 <__rt_push_event_to_fc_wait>:




__rt_push_event_to_fc_wait:
    sw      s4, EU_CORE_MASK_OR(s3)
1c00c700:	0149a423          	sw	s4,8(s3)
    p.elw   x0, EU_CORE_EVENT_WAIT_CLEAR(s3)
1c00c704:	03c9e003          	p.elw	zero,60(s3)
    sw      s4, EU_CORE_MASK_AND(s3)
1c00c708:	0149a223          	sw	s4,4(s3)
    j       __rt_push_event_to_fc_retry
1c00c70c:	bfb1                	j	1c00c668 <__rt_push_event_to_fc_retry>

1c00c70e <__rt_slave_start>:
__rt_slave_start:


#ifndef ARCHI_HAS_NO_DISPATCH

    li      s2, ARCHI_EU_DEMUX_ADDR
1c00c70e:	00204937          	lui	s2,0x204
    csrr    s3, 0xF14
1c00c712:	f14029f3          	csrr	s3,mhartid
    and     s3, s3, 0x1f
1c00c716:	01f9f993          	andi	s3,s3,31
    la      s4, __rt_fork_return
1c00c71a:	00000a17          	auipc	s4,0x0
1c00c71e:	012a0a13          	addi	s4,s4,18 # 1c00c72c <__rt_fork_return>
    la      s5, __rt_wait_for_dispatch
1c00c722:	00000a97          	auipc	s5,0x0
1c00c726:	00ea8a93          	addi	s5,s5,14 # 1c00c730 <__rt_wait_for_dispatch>
    j       __rt_wait_for_dispatch
1c00c72a:	a019                	j	1c00c730 <__rt_wait_for_dispatch>

1c00c72c <__rt_fork_return>:
    // When the cluster has a controller barrier 0 is used for normal team barrier
    // and barrier 1 is used for end of offload
    p.elw   t0, EU_BARRIER_DEMUX_OFFSET + EU_HW_BARR_TRIGGER_WAIT_CLEAR + EU_BARRIER_SIZE(s2)
#else
#ifndef ARCHI_HAS_NO_BARRIER
    p.elw   t0, EU_BARRIER_DEMUX_OFFSET + EU_HW_BARR_TRIGGER_WAIT_CLEAR(s2)
1c00c72c:	21c96283          	p.elw	t0,540(s2) # 20421c <__L2+0x18421c>

1c00c730 <__rt_wait_for_dispatch>:
    li      a2, 1
    ebreak
#endif

    // Wait for PC + arg information from dispatcher
    p.elw   t0, EU_DISPATCH_DEMUX_OFFSET + EU_DISPATCH_FIFO_ACCESS(s2)
1c00c730:	08096283          	p.elw	t0,128(s2)
    p.elw   a0, EU_DISPATCH_DEMUX_OFFSET + EU_DISPATCH_FIFO_ACCESS(s2)
1c00c734:	08096503          	p.elw	a0,128(s2)
    ebreak
    mv      a0, t1
#endif

    // Check if this is an entry with a barrier at the end (fork entry)
    andi    t1, t0, 1
1c00c738:	0012f313          	andi	t1,t0,1
    bne     t1, zero, __rt_other_entry
1c00c73c:	00031563          	bnez	t1,1c00c746 <__rt_other_entry>

1c00c740 <__rt_fork_entry>:

__rt_fork_entry:

    // Jump to the handler and prepare r9 to jump back just before the main loop
    add     ra, s4, x0
1c00c740:	000a00b3          	add	ra,s4,zero
    jr      t0
1c00c744:	8282                	jr	t0

1c00c746 <__rt_other_entry>:

__rt_other_entry:

  // Jump to the handler and prepare r9 to jump back directly to the main loop
    add     ra, s5, x0
1c00c746:	000a80b3          	add	ra,s5,zero
    jr      t0
1c00c74a:	8282                	jr	t0

1c00c74c <__rt_set_slave_stack>:

  .global __rt_set_slave_stack
__rt_set_slave_stack:

#ifdef __RT_USE_ASSERT
    csrwi   0x7D0, 0
1c00c74c:	7d005073          	csrwi	0x7d0,0
#endif

    // Multiply the stack size by the core ID and add the stack base to get our stack
    p.elw   t0, EU_DISPATCH_DEMUX_OFFSET + EU_DISPATCH_FIFO_ACCESS(s2)
1c00c750:	08096283          	p.elw	t0,128(s2)
    // If the cluster has a cluster controller, the first slave has core ID 0
    // and thus we need to take the next stack
    addi     t5, s3, 1
    p.mul   t4, t5, a0
#else
    p.mul   t4, s3, a0
1c00c754:	02a98eb3          	mul	t4,s3,a0
#endif
    add     sp, t4, t0
1c00c758:	005e8133          	add	sp,t4,t0

#ifdef __RT_USE_ASSERT
    beqz    a0, __rt_no_stack_check_end
1c00c75c:	c909                	beqz	a0,1c00c76e <__rt_no_stack_check_end>
    sub     t4, sp, a0
1c00c75e:	40a10eb3          	sub	t4,sp,a0
    csrw    0x7D1, t4
1c00c762:	7d1e9073          	csrw	0x7d1,t4
    csrw    0x7D2, sp
1c00c766:	7d211073          	csrw	0x7d2,sp
    csrwi   0x7D0, 1
1c00c76a:	7d00d073          	csrwi	0x7d0,1

1c00c76e <__rt_no_stack_check_end>:
#endif
__rt_no_stack_check_end:
    ret
1c00c76e:	8082                	ret

1c00c770 <__rt_dma_2d>:
#if defined(ARCHI_HAS_CLUSTER)
#ifndef ARCHI_NO_L1_TINY
    .global __rt_dma_2d
__rt_dma_2d:

    sw  x8, -4(sp)
1c00c770:	fe812e23          	sw	s0,-4(sp)
    sw  x9, -8(sp)
1c00c774:	fe912c23          	sw	s1,-8(sp)
    sw  a0, -12(sp)
1c00c778:	fea12a23          	sw	a0,-12(sp)
    sw  a1, -16(sp)
1c00c77c:	feb12823          	sw	a1,-16(sp)
    sw  a2, -20(sp)
1c00c780:	fec12623          	sw	a2,-20(sp)

    li  a2, ARCHI_MCHAN_DEMUX_ADDR
1c00c784:	00204637          	lui	a2,0x204
1c00c788:	40060613          	addi	a2,a2,1024 # 204400 <__L2+0x184400>

    lw  x8, %tiny(__rt_dma_first_pending)(x0)
1c00c78c:	01402403          	lw	s0,20(zero) # 14 <__rt_bridge_eeprom_handle>

    lw  a1, CL_DMA_CMD_T_ID(x8)
1c00c790:	400c                	lw	a1,0(s0)
    lw  a0, CL_DMA_CMD_T_SIZE(x8)
1c00c792:	4408                	lw	a0,8(s0)
    p.bsetr a1, x0, a1
1c00c794:	80b045b3          	p.bsetr	a1,zero,a1
    sw  a1, MCHAN_STATUS_OFFSET(a2)
1c00c798:	c24c                	sw	a1,4(a2)
    lw  a1, CL_DMA_CMD_T_LENGTH(x8)
1c00c79a:	480c                	lw	a1,16(s0)

    beqz a0, __rt_dma_2d_done
1c00c79c:	c131                	beqz	a0,1c00c7e0 <__rt_dma_2d_done>

1c00c79e <__rt_dma_2d_redo>:

__rt_dma_2d_redo:
    lw  x9, CL_DMA_CMD_T_CMD(x8)
1c00c79e:	4044                	lw	s1,4(s0)
    
    bgt a0, a1, __rt_dma_2d_not_last
1c00c7a0:	00a5c363          	blt	a1,a0,1c00c7a6 <__rt_dma_2d_not_last>
    mv  a1, a0
1c00c7a4:	85aa                	mv	a1,a0

1c00c7a6 <__rt_dma_2d_not_last>:

__rt_dma_2d_not_last:
    lw  a0, MCHAN_CMD_OFFSET(a2)
1c00c7a6:	4208                	lw	a0,0(a2)
    sw  a0, CL_DMA_CMD_T_ID(x8)
1c00c7a8:	c008                	sw	a0,0(s0)

    lw  a0, CL_DMA_CMD_T_SIZE(x8)
1c00c7aa:	4408                	lw	a0,8(s0)

    p.inserti x9, a1, MCHAN_CMD_CMD_LEN_WIDTH-1, MCHAN_CMD_CMD_LEN_BIT
1c00c7ac:	de05a4b3          	p.insert	s1,a1,15,0

    sw  x9, MCHAN_CMD_OFFSET(a2)   // cmd
1c00c7b0:	c204                	sw	s1,0(a2)

    sub a0, a0, a1
1c00c7b2:	8d0d                	sub	a0,a0,a1
    sw  a0, CL_DMA_CMD_T_SIZE(x8)
1c00c7b4:	c408                	sw	a0,8(s0)

    lw  a0, CL_DMA_CMD_T_LOC_ADDR(x8)
1c00c7b6:	4848                	lw	a0,20(s0)

    sw  a0, MCHAN_CMD_OFFSET(a2)   // local address
1c00c7b8:	c208                	sw	a0,0(a2)
    add a0, a0, a1
1c00c7ba:	952e                	add	a0,a0,a1
    sw  a0, CL_DMA_CMD_T_LOC_ADDR(x8)
1c00c7bc:	c848                	sw	a0,20(s0)


    lw  a0, CL_DMA_CMD_T_EXT_ADDR(x8)
1c00c7be:	4c08                	lw	a0,24(s0)
    lw  a1, CL_DMA_CMD_T_STRIDE(x8)
1c00c7c0:	444c                	lw	a1,12(s0)

    sw  a0, MCHAN_CMD_OFFSET(a2)   // external address
1c00c7c2:	c208                	sw	a0,0(a2)
    add a0, a0, a1
1c00c7c4:	952e                	add	a0,a0,a1
    sw  a0, CL_DMA_CMD_T_EXT_ADDR(x8)
1c00c7c6:	cc08                	sw	a0,24(s0)

1c00c7c8 <__rt_dma_2d_exit>:

__rt_dma_2d_exit:
    lw  x8, -4(sp)
1c00c7c8:	ffc12403          	lw	s0,-4(sp)
    lw  x9, -8(sp)
1c00c7cc:	ff812483          	lw	s1,-8(sp)
    lw  a0, -12(sp)
1c00c7d0:	ff412503          	lw	a0,-12(sp)
    lw  a1, -16(sp)
1c00c7d4:	ff012583          	lw	a1,-16(sp)
    lw  a2, -20(sp)
1c00c7d8:	fec12603          	lw	a2,-20(sp)

    mret
1c00c7dc:	30200073          	mret

1c00c7e0 <__rt_dma_2d_done>:

__rt_dma_2d_done:
    sw  x0, CL_DMA_CMD_T_EXT_ADDR(x8)
1c00c7e0:	00042c23          	sw	zero,24(s0)

    lw  x9, CL_DMA_CMD_T_NEXT(x8)
1c00c7e4:	4c44                	lw	s1,28(s0)
    sw  x9, %tiny(__rt_dma_first_pending)(x0)
1c00c7e6:	00902a23          	sw	s1,20(zero) # 14 <__rt_bridge_eeprom_handle>

    li  x8, ARCHI_EU_DEMUX_ADDR + EU_SW_EVENTS_DEMUX_OFFSET + (RT_DMA_EVENT<<2)
1c00c7ea:	00204437          	lui	s0,0x204
1c00c7ee:	11440413          	addi	s0,s0,276 # 204114 <__L2+0x184114>
    sw  x0, EU_CORE_TRIGG_SW_EVENT(x8)
1c00c7f2:	00042023          	sw	zero,0(s0)

    beqz x9, __rt_dma_2d_exit
1c00c7f6:	d8e9                	beqz	s1,1c00c7c8 <__rt_dma_2d_exit>

    mv  x8, x9
1c00c7f8:	8426                	mv	s0,s1

    lw  a0, CL_DMA_CMD_T_SIZE(x8)
1c00c7fa:	4408                	lw	a0,8(s0)
    lw  a1, CL_DMA_CMD_T_LENGTH(x8)
1c00c7fc:	480c                	lw	a1,16(s0)

    j   __rt_dma_2d_redo
1c00c7fe:	b745                	j	1c00c79e <__rt_dma_2d_redo>
